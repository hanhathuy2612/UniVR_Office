// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: server-main-message.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from server-main-message.proto</summary>
public static partial class ServerMainMessageReflection {

  #region Descriptor
  /// <summary>File descriptor for server-main-message.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ServerMainMessageReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChlzZXJ2ZXItbWFpbi1tZXNzYWdlLnByb3RvGhRzZXJ2ZXItbWVzc2FnZS5w",
          "cm90bxoUY2xpZW50LW1lc3NhZ2UucHJvdG8aEm1lc2gtbWVzc2FnZS5wcm90",
          "byJ+CgtNYWluTWVzc2FnZRIlCg1zZXJ2ZXJNZXNzYWdlGAEgASgLMg4uU2Vy",
          "dmVyTWVzc2FnZRIlCg1jbGllbnRNZXNzYWdlGAIgASgLMg4uQ2xpZW50TWVz",
          "c2FnZRIhCgttZXNoTWVzc2FnZRgDIAEoCzIMLk1lc2hNZXNzYWdlIloKDU1l",
          "c3NhZ2VIZWFkZXISEwoLYWNjZXNzVG9rZW4YASABKAkSDgoGdXNlcklkGAIg",
          "ASgJEhAKCGRldmljZUlkGAMgASgJEhIKCmhhcmR3YXJlSWQYBCABKAkiYAoU",
          "TWFpbk1lc3NhZ2VDb250YWluZXISJQoNbWVzc2FnZUhlYWRlchgBIAEoCzIO",
          "Lk1lc3NhZ2VIZWFkZXISIQoLbWFpbk1lc3NhZ2UYAiABKAsyDC5NYWluTWVz",
          "c2FnZUI5Ci5jb20uc3Vuc2hpbmUuc21hcnRob21lLnNlcnZlci5tZXNzYWdl",
          "LnByb3RvYnVmQgdNYWluQnVmYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::ServerMessageReflection.Descriptor, global::ClientMessageReflection.Descriptor, global::MeshMessageReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::MainMessage), global::MainMessage.Parser, new[]{ "ServerMessage", "ClientMessage", "MeshMessage" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MessageHeader), global::MessageHeader.Parser, new[]{ "AccessToken", "UserId", "DeviceId", "HardwareId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MainMessageContainer), global::MainMessageContainer.Parser, new[]{ "MessageHeader", "MainMessage" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class MainMessage : pb::IMessage<MainMessage> {
  private static readonly pb::MessageParser<MainMessage> _parser = new pb::MessageParser<MainMessage>(() => new MainMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MainMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMainMessageReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MainMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MainMessage(MainMessage other) : this() {
    serverMessage_ = other.serverMessage_ != null ? other.serverMessage_.Clone() : null;
    clientMessage_ = other.clientMessage_ != null ? other.clientMessage_.Clone() : null;
    meshMessage_ = other.meshMessage_ != null ? other.meshMessage_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MainMessage Clone() {
    return new MainMessage(this);
  }

  /// <summary>Field number for the "serverMessage" field.</summary>
  public const int ServerMessageFieldNumber = 1;
  private global::ServerMessage serverMessage_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ServerMessage ServerMessage {
    get { return serverMessage_; }
    set {
      serverMessage_ = value;
    }
  }

  /// <summary>Field number for the "clientMessage" field.</summary>
  public const int ClientMessageFieldNumber = 2;
  private global::ClientMessage clientMessage_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ClientMessage ClientMessage {
    get { return clientMessage_; }
    set {
      clientMessage_ = value;
    }
  }

  /// <summary>Field number for the "meshMessage" field.</summary>
  public const int MeshMessageFieldNumber = 3;
  private global::MeshMessage meshMessage_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MeshMessage MeshMessage {
    get { return meshMessage_; }
    set {
      meshMessage_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MainMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MainMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(ServerMessage, other.ServerMessage)) return false;
    if (!object.Equals(ClientMessage, other.ClientMessage)) return false;
    if (!object.Equals(MeshMessage, other.MeshMessage)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (serverMessage_ != null) hash ^= ServerMessage.GetHashCode();
    if (clientMessage_ != null) hash ^= ClientMessage.GetHashCode();
    if (meshMessage_ != null) hash ^= MeshMessage.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (serverMessage_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(ServerMessage);
    }
    if (clientMessage_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(ClientMessage);
    }
    if (meshMessage_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(MeshMessage);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (serverMessage_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ServerMessage);
    }
    if (clientMessage_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientMessage);
    }
    if (meshMessage_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(MeshMessage);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MainMessage other) {
    if (other == null) {
      return;
    }
    if (other.serverMessage_ != null) {
      if (serverMessage_ == null) {
        ServerMessage = new global::ServerMessage();
      }
      ServerMessage.MergeFrom(other.ServerMessage);
    }
    if (other.clientMessage_ != null) {
      if (clientMessage_ == null) {
        ClientMessage = new global::ClientMessage();
      }
      ClientMessage.MergeFrom(other.ClientMessage);
    }
    if (other.meshMessage_ != null) {
      if (meshMessage_ == null) {
        MeshMessage = new global::MeshMessage();
      }
      MeshMessage.MergeFrom(other.MeshMessage);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (serverMessage_ == null) {
            ServerMessage = new global::ServerMessage();
          }
          input.ReadMessage(ServerMessage);
          break;
        }
        case 18: {
          if (clientMessage_ == null) {
            ClientMessage = new global::ClientMessage();
          }
          input.ReadMessage(ClientMessage);
          break;
        }
        case 26: {
          if (meshMessage_ == null) {
            MeshMessage = new global::MeshMessage();
          }
          input.ReadMessage(MeshMessage);
          break;
        }
      }
    }
  }

}

public sealed partial class MessageHeader : pb::IMessage<MessageHeader> {
  private static readonly pb::MessageParser<MessageHeader> _parser = new pb::MessageParser<MessageHeader>(() => new MessageHeader());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MessageHeader> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMainMessageReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MessageHeader() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MessageHeader(MessageHeader other) : this() {
    accessToken_ = other.accessToken_;
    userId_ = other.userId_;
    deviceId_ = other.deviceId_;
    hardwareId_ = other.hardwareId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MessageHeader Clone() {
    return new MessageHeader(this);
  }

  /// <summary>Field number for the "accessToken" field.</summary>
  public const int AccessTokenFieldNumber = 1;
  private string accessToken_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AccessToken {
    get { return accessToken_; }
    set {
      accessToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "userId" field.</summary>
  public const int UserIdFieldNumber = 2;
  private string userId_ = "";
  /// <summary>
  /// user info
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 3;
  private string deviceId_ = "";
  /// <summary>
  /// device info
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "hardwareId" field.</summary>
  public const int HardwareIdFieldNumber = 4;
  private string hardwareId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string HardwareId {
    get { return hardwareId_; }
    set {
      hardwareId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MessageHeader);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MessageHeader other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AccessToken != other.AccessToken) return false;
    if (UserId != other.UserId) return false;
    if (DeviceId != other.DeviceId) return false;
    if (HardwareId != other.HardwareId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AccessToken.Length != 0) hash ^= AccessToken.GetHashCode();
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (HardwareId.Length != 0) hash ^= HardwareId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AccessToken.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(AccessToken);
    }
    if (UserId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(UserId);
    }
    if (DeviceId.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(DeviceId);
    }
    if (HardwareId.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(HardwareId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AccessToken.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessToken);
    }
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (HardwareId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HardwareId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MessageHeader other) {
    if (other == null) {
      return;
    }
    if (other.AccessToken.Length != 0) {
      AccessToken = other.AccessToken;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.HardwareId.Length != 0) {
      HardwareId = other.HardwareId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          AccessToken = input.ReadString();
          break;
        }
        case 18: {
          UserId = input.ReadString();
          break;
        }
        case 26: {
          DeviceId = input.ReadString();
          break;
        }
        case 34: {
          HardwareId = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class MainMessageContainer : pb::IMessage<MainMessageContainer> {
  private static readonly pb::MessageParser<MainMessageContainer> _parser = new pb::MessageParser<MainMessageContainer>(() => new MainMessageContainer());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MainMessageContainer> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMainMessageReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MainMessageContainer() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MainMessageContainer(MainMessageContainer other) : this() {
    messageHeader_ = other.messageHeader_ != null ? other.messageHeader_.Clone() : null;
    mainMessage_ = other.mainMessage_ != null ? other.mainMessage_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MainMessageContainer Clone() {
    return new MainMessageContainer(this);
  }

  /// <summary>Field number for the "messageHeader" field.</summary>
  public const int MessageHeaderFieldNumber = 1;
  private global::MessageHeader messageHeader_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MessageHeader MessageHeader {
    get { return messageHeader_; }
    set {
      messageHeader_ = value;
    }
  }

  /// <summary>Field number for the "mainMessage" field.</summary>
  public const int MainMessageFieldNumber = 2;
  private global::MainMessage mainMessage_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MainMessage MainMessage {
    get { return mainMessage_; }
    set {
      mainMessage_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MainMessageContainer);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MainMessageContainer other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(MessageHeader, other.MessageHeader)) return false;
    if (!object.Equals(MainMessage, other.MainMessage)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (messageHeader_ != null) hash ^= MessageHeader.GetHashCode();
    if (mainMessage_ != null) hash ^= MainMessage.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (messageHeader_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(MessageHeader);
    }
    if (mainMessage_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(MainMessage);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (messageHeader_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(MessageHeader);
    }
    if (mainMessage_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(MainMessage);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MainMessageContainer other) {
    if (other == null) {
      return;
    }
    if (other.messageHeader_ != null) {
      if (messageHeader_ == null) {
        MessageHeader = new global::MessageHeader();
      }
      MessageHeader.MergeFrom(other.MessageHeader);
    }
    if (other.mainMessage_ != null) {
      if (mainMessage_ == null) {
        MainMessage = new global::MainMessage();
      }
      MainMessage.MergeFrom(other.MainMessage);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (messageHeader_ == null) {
            MessageHeader = new global::MessageHeader();
          }
          input.ReadMessage(MessageHeader);
          break;
        }
        case 18: {
          if (mainMessage_ == null) {
            MainMessage = new global::MainMessage();
          }
          input.ReadMessage(MainMessage);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
