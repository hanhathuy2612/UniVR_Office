// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: mesh-message.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from mesh-message.proto</summary>
public static partial class MeshMessageReflection {

  #region Descriptor
  /// <summary>File descriptor for mesh-message.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static MeshMessageReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChJtZXNoLW1lc3NhZ2UucHJvdG8aFGNvbW1vbi1tZXNzYWdlLnByb3RvIpcB",
          "ChNNZXNoUmVnaXN0ZXJSZXF1ZXN0EhIKCmhhcmR3YXJlSWQYASABKAkSDQoF",
          "bW9kZWwYAiABKAkSEQoJaHdWZXJzaW9uGAMgASgJEhAKCHJlZ1Rva2VuGAQg",
          "ASgJEhMKC2RldmljZVRva2VuGAUgASgJEhAKCGRldmljZUlkGAYgASgJEhEK",
          "CWZ3VmVyc2lvbhgHIAEoCSKRAQoUTWVzaFJlZ2lzdGVyUmVzcG9uc2USEgoK",
          "aGFyZHdhcmVJZBgBIAEoCRITCgtkZXZpY2VUb2tlbhgCIAEoCRIRCgl3c0Vu",
          "cG9pbnQYAyABKAkSGwoIZGF0YVR5cGUYBCABKA4yCS5EYXRhVHlwZRIgCgpz",
          "dGF0dXNDb2RlGOgHIAEoCzILLlN0YXR1c0NvZGUiQwoUTWVzaE9uQ2hhbmdl",
          "ZE1lc3NhZ2USEgoKaGFyZHdhcmVJZBgBIAEoCRIXCg9zZXJ2ZXJDb25uZWN0",
          "ZWQYAiABKA0iLAoVTWVzaERpc2Nvbm5lY3RNZXNzYWdlEhMKC3Jvb3RDaGFu",
          "bmVsGAEgASgNIuEBCgtNZXNoTWVzc2FnZRIxChNtZXNoUmVnaXN0ZXJSZXF1",
          "ZXN0GAEgASgLMhQuTWVzaFJlZ2lzdGVyUmVxdWVzdBIzChRtZXNoUmVnaXN0",
          "ZXJSZXNwb25zZRgCIAEoCzIVLk1lc2hSZWdpc3RlclJlc3BvbnNlEjMKFG1l",
          "c2hPbkNoYW5nZWRNZXNzYWdlGAMgASgLMhUuTWVzaE9uQ2hhbmdlZE1lc3Nh",
          "Z2USNQoVbWVzaERpc2Nvbm5lY3RNZXNzYWdlGAQgASgLMhYuTWVzaERpc2Nv",
          "bm5lY3RNZXNzYWdlQjkKLmNvbS5zdW5zaGluZS5zbWFydGhvbWUuc2VydmVy",
          "Lm1lc3NhZ2UucHJvdG9idWZCB01lc2hCdWZiBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::CommonMessageReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::MeshRegisterRequest), global::MeshRegisterRequest.Parser, new[]{ "HardwareId", "Model", "HwVersion", "RegToken", "DeviceToken", "DeviceId", "FwVersion" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MeshRegisterResponse), global::MeshRegisterResponse.Parser, new[]{ "HardwareId", "DeviceToken", "WsEnpoint", "DataType", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MeshOnChangedMessage), global::MeshOnChangedMessage.Parser, new[]{ "HardwareId", "ServerConnected" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MeshDisconnectMessage), global::MeshDisconnectMessage.Parser, new[]{ "RootChannel" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MeshMessage), global::MeshMessage.Parser, new[]{ "MeshRegisterRequest", "MeshRegisterResponse", "MeshOnChangedMessage", "MeshDisconnectMessage" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class MeshRegisterRequest : pb::IMessage<MeshRegisterRequest> {
  private static readonly pb::MessageParser<MeshRegisterRequest> _parser = new pb::MessageParser<MeshRegisterRequest>(() => new MeshRegisterRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MeshRegisterRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MeshMessageReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MeshRegisterRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MeshRegisterRequest(MeshRegisterRequest other) : this() {
    hardwareId_ = other.hardwareId_;
    model_ = other.model_;
    hwVersion_ = other.hwVersion_;
    regToken_ = other.regToken_;
    deviceToken_ = other.deviceToken_;
    deviceId_ = other.deviceId_;
    fwVersion_ = other.fwVersion_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MeshRegisterRequest Clone() {
    return new MeshRegisterRequest(this);
  }

  /// <summary>Field number for the "hardwareId" field.</summary>
  public const int HardwareIdFieldNumber = 1;
  private string hardwareId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string HardwareId {
    get { return hardwareId_; }
    set {
      hardwareId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "model" field.</summary>
  public const int ModelFieldNumber = 2;
  private string model_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Model {
    get { return model_; }
    set {
      model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "hwVersion" field.</summary>
  public const int HwVersionFieldNumber = 3;
  private string hwVersion_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string HwVersion {
    get { return hwVersion_; }
    set {
      hwVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "regToken" field.</summary>
  public const int RegTokenFieldNumber = 4;
  private string regToken_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RegToken {
    get { return regToken_; }
    set {
      regToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "deviceToken" field.</summary>
  public const int DeviceTokenFieldNumber = 5;
  private string deviceToken_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceToken {
    get { return deviceToken_; }
    set {
      deviceToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 6;
  private string deviceId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "fwVersion" field.</summary>
  public const int FwVersionFieldNumber = 7;
  private string fwVersion_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string FwVersion {
    get { return fwVersion_; }
    set {
      fwVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MeshRegisterRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MeshRegisterRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (HardwareId != other.HardwareId) return false;
    if (Model != other.Model) return false;
    if (HwVersion != other.HwVersion) return false;
    if (RegToken != other.RegToken) return false;
    if (DeviceToken != other.DeviceToken) return false;
    if (DeviceId != other.DeviceId) return false;
    if (FwVersion != other.FwVersion) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HardwareId.Length != 0) hash ^= HardwareId.GetHashCode();
    if (Model.Length != 0) hash ^= Model.GetHashCode();
    if (HwVersion.Length != 0) hash ^= HwVersion.GetHashCode();
    if (RegToken.Length != 0) hash ^= RegToken.GetHashCode();
    if (DeviceToken.Length != 0) hash ^= DeviceToken.GetHashCode();
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (FwVersion.Length != 0) hash ^= FwVersion.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (HardwareId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(HardwareId);
    }
    if (Model.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Model);
    }
    if (HwVersion.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(HwVersion);
    }
    if (RegToken.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(RegToken);
    }
    if (DeviceToken.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(DeviceToken);
    }
    if (DeviceId.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(DeviceId);
    }
    if (FwVersion.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(FwVersion);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HardwareId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HardwareId);
    }
    if (Model.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
    }
    if (HwVersion.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HwVersion);
    }
    if (RegToken.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RegToken);
    }
    if (DeviceToken.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceToken);
    }
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (FwVersion.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(FwVersion);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MeshRegisterRequest other) {
    if (other == null) {
      return;
    }
    if (other.HardwareId.Length != 0) {
      HardwareId = other.HardwareId;
    }
    if (other.Model.Length != 0) {
      Model = other.Model;
    }
    if (other.HwVersion.Length != 0) {
      HwVersion = other.HwVersion;
    }
    if (other.RegToken.Length != 0) {
      RegToken = other.RegToken;
    }
    if (other.DeviceToken.Length != 0) {
      DeviceToken = other.DeviceToken;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.FwVersion.Length != 0) {
      FwVersion = other.FwVersion;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          HardwareId = input.ReadString();
          break;
        }
        case 18: {
          Model = input.ReadString();
          break;
        }
        case 26: {
          HwVersion = input.ReadString();
          break;
        }
        case 34: {
          RegToken = input.ReadString();
          break;
        }
        case 42: {
          DeviceToken = input.ReadString();
          break;
        }
        case 50: {
          DeviceId = input.ReadString();
          break;
        }
        case 58: {
          FwVersion = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class MeshRegisterResponse : pb::IMessage<MeshRegisterResponse> {
  private static readonly pb::MessageParser<MeshRegisterResponse> _parser = new pb::MessageParser<MeshRegisterResponse>(() => new MeshRegisterResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MeshRegisterResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MeshMessageReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MeshRegisterResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MeshRegisterResponse(MeshRegisterResponse other) : this() {
    hardwareId_ = other.hardwareId_;
    deviceToken_ = other.deviceToken_;
    wsEnpoint_ = other.wsEnpoint_;
    dataType_ = other.dataType_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MeshRegisterResponse Clone() {
    return new MeshRegisterResponse(this);
  }

  /// <summary>Field number for the "hardwareId" field.</summary>
  public const int HardwareIdFieldNumber = 1;
  private string hardwareId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string HardwareId {
    get { return hardwareId_; }
    set {
      hardwareId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "deviceToken" field.</summary>
  public const int DeviceTokenFieldNumber = 2;
  private string deviceToken_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceToken {
    get { return deviceToken_; }
    set {
      deviceToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "wsEnpoint" field.</summary>
  public const int WsEnpointFieldNumber = 3;
  private string wsEnpoint_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string WsEnpoint {
    get { return wsEnpoint_; }
    set {
      wsEnpoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "dataType" field.</summary>
  public const int DataTypeFieldNumber = 4;
  private global::DataType dataType_ = global::DataType.Binaries;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DataType DataType {
    get { return dataType_; }
    set {
      dataType_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MeshRegisterResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MeshRegisterResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (HardwareId != other.HardwareId) return false;
    if (DeviceToken != other.DeviceToken) return false;
    if (WsEnpoint != other.WsEnpoint) return false;
    if (DataType != other.DataType) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HardwareId.Length != 0) hash ^= HardwareId.GetHashCode();
    if (DeviceToken.Length != 0) hash ^= DeviceToken.GetHashCode();
    if (WsEnpoint.Length != 0) hash ^= WsEnpoint.GetHashCode();
    if (DataType != global::DataType.Binaries) hash ^= DataType.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (HardwareId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(HardwareId);
    }
    if (DeviceToken.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(DeviceToken);
    }
    if (WsEnpoint.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(WsEnpoint);
    }
    if (DataType != global::DataType.Binaries) {
      output.WriteRawTag(32);
      output.WriteEnum((int) DataType);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HardwareId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HardwareId);
    }
    if (DeviceToken.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceToken);
    }
    if (WsEnpoint.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(WsEnpoint);
    }
    if (DataType != global::DataType.Binaries) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DataType);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MeshRegisterResponse other) {
    if (other == null) {
      return;
    }
    if (other.HardwareId.Length != 0) {
      HardwareId = other.HardwareId;
    }
    if (other.DeviceToken.Length != 0) {
      DeviceToken = other.DeviceToken;
    }
    if (other.WsEnpoint.Length != 0) {
      WsEnpoint = other.WsEnpoint;
    }
    if (other.DataType != global::DataType.Binaries) {
      DataType = other.DataType;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          HardwareId = input.ReadString();
          break;
        }
        case 18: {
          DeviceToken = input.ReadString();
          break;
        }
        case 26: {
          WsEnpoint = input.ReadString();
          break;
        }
        case 32: {
          DataType = (global::DataType) input.ReadEnum();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

public sealed partial class MeshOnChangedMessage : pb::IMessage<MeshOnChangedMessage> {
  private static readonly pb::MessageParser<MeshOnChangedMessage> _parser = new pb::MessageParser<MeshOnChangedMessage>(() => new MeshOnChangedMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MeshOnChangedMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MeshMessageReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MeshOnChangedMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MeshOnChangedMessage(MeshOnChangedMessage other) : this() {
    hardwareId_ = other.hardwareId_;
    serverConnected_ = other.serverConnected_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MeshOnChangedMessage Clone() {
    return new MeshOnChangedMessage(this);
  }

  /// <summary>Field number for the "hardwareId" field.</summary>
  public const int HardwareIdFieldNumber = 1;
  private string hardwareId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string HardwareId {
    get { return hardwareId_; }
    set {
      hardwareId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "serverConnected" field.</summary>
  public const int ServerConnectedFieldNumber = 2;
  private uint serverConnected_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ServerConnected {
    get { return serverConnected_; }
    set {
      serverConnected_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MeshOnChangedMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MeshOnChangedMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (HardwareId != other.HardwareId) return false;
    if (ServerConnected != other.ServerConnected) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HardwareId.Length != 0) hash ^= HardwareId.GetHashCode();
    if (ServerConnected != 0) hash ^= ServerConnected.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (HardwareId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(HardwareId);
    }
    if (ServerConnected != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(ServerConnected);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HardwareId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HardwareId);
    }
    if (ServerConnected != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ServerConnected);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MeshOnChangedMessage other) {
    if (other == null) {
      return;
    }
    if (other.HardwareId.Length != 0) {
      HardwareId = other.HardwareId;
    }
    if (other.ServerConnected != 0) {
      ServerConnected = other.ServerConnected;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          HardwareId = input.ReadString();
          break;
        }
        case 16: {
          ServerConnected = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class MeshDisconnectMessage : pb::IMessage<MeshDisconnectMessage> {
  private static readonly pb::MessageParser<MeshDisconnectMessage> _parser = new pb::MessageParser<MeshDisconnectMessage>(() => new MeshDisconnectMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MeshDisconnectMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MeshMessageReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MeshDisconnectMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MeshDisconnectMessage(MeshDisconnectMessage other) : this() {
    rootChannel_ = other.rootChannel_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MeshDisconnectMessage Clone() {
    return new MeshDisconnectMessage(this);
  }

  /// <summary>Field number for the "rootChannel" field.</summary>
  public const int RootChannelFieldNumber = 1;
  private uint rootChannel_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint RootChannel {
    get { return rootChannel_; }
    set {
      rootChannel_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MeshDisconnectMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MeshDisconnectMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RootChannel != other.RootChannel) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RootChannel != 0) hash ^= RootChannel.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (RootChannel != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(RootChannel);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RootChannel != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RootChannel);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MeshDisconnectMessage other) {
    if (other == null) {
      return;
    }
    if (other.RootChannel != 0) {
      RootChannel = other.RootChannel;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          RootChannel = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class MeshMessage : pb::IMessage<MeshMessage> {
  private static readonly pb::MessageParser<MeshMessage> _parser = new pb::MessageParser<MeshMessage>(() => new MeshMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MeshMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MeshMessageReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MeshMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MeshMessage(MeshMessage other) : this() {
    meshRegisterRequest_ = other.meshRegisterRequest_ != null ? other.meshRegisterRequest_.Clone() : null;
    meshRegisterResponse_ = other.meshRegisterResponse_ != null ? other.meshRegisterResponse_.Clone() : null;
    meshOnChangedMessage_ = other.meshOnChangedMessage_ != null ? other.meshOnChangedMessage_.Clone() : null;
    meshDisconnectMessage_ = other.meshDisconnectMessage_ != null ? other.meshDisconnectMessage_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MeshMessage Clone() {
    return new MeshMessage(this);
  }

  /// <summary>Field number for the "meshRegisterRequest" field.</summary>
  public const int MeshRegisterRequestFieldNumber = 1;
  private global::MeshRegisterRequest meshRegisterRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MeshRegisterRequest MeshRegisterRequest {
    get { return meshRegisterRequest_; }
    set {
      meshRegisterRequest_ = value;
    }
  }

  /// <summary>Field number for the "meshRegisterResponse" field.</summary>
  public const int MeshRegisterResponseFieldNumber = 2;
  private global::MeshRegisterResponse meshRegisterResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MeshRegisterResponse MeshRegisterResponse {
    get { return meshRegisterResponse_; }
    set {
      meshRegisterResponse_ = value;
    }
  }

  /// <summary>Field number for the "meshOnChangedMessage" field.</summary>
  public const int MeshOnChangedMessageFieldNumber = 3;
  private global::MeshOnChangedMessage meshOnChangedMessage_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MeshOnChangedMessage MeshOnChangedMessage {
    get { return meshOnChangedMessage_; }
    set {
      meshOnChangedMessage_ = value;
    }
  }

  /// <summary>Field number for the "meshDisconnectMessage" field.</summary>
  public const int MeshDisconnectMessageFieldNumber = 4;
  private global::MeshDisconnectMessage meshDisconnectMessage_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MeshDisconnectMessage MeshDisconnectMessage {
    get { return meshDisconnectMessage_; }
    set {
      meshDisconnectMessage_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MeshMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MeshMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(MeshRegisterRequest, other.MeshRegisterRequest)) return false;
    if (!object.Equals(MeshRegisterResponse, other.MeshRegisterResponse)) return false;
    if (!object.Equals(MeshOnChangedMessage, other.MeshOnChangedMessage)) return false;
    if (!object.Equals(MeshDisconnectMessage, other.MeshDisconnectMessage)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (meshRegisterRequest_ != null) hash ^= MeshRegisterRequest.GetHashCode();
    if (meshRegisterResponse_ != null) hash ^= MeshRegisterResponse.GetHashCode();
    if (meshOnChangedMessage_ != null) hash ^= MeshOnChangedMessage.GetHashCode();
    if (meshDisconnectMessage_ != null) hash ^= MeshDisconnectMessage.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (meshRegisterRequest_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(MeshRegisterRequest);
    }
    if (meshRegisterResponse_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(MeshRegisterResponse);
    }
    if (meshOnChangedMessage_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(MeshOnChangedMessage);
    }
    if (meshDisconnectMessage_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(MeshDisconnectMessage);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (meshRegisterRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(MeshRegisterRequest);
    }
    if (meshRegisterResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(MeshRegisterResponse);
    }
    if (meshOnChangedMessage_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(MeshOnChangedMessage);
    }
    if (meshDisconnectMessage_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(MeshDisconnectMessage);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MeshMessage other) {
    if (other == null) {
      return;
    }
    if (other.meshRegisterRequest_ != null) {
      if (meshRegisterRequest_ == null) {
        MeshRegisterRequest = new global::MeshRegisterRequest();
      }
      MeshRegisterRequest.MergeFrom(other.MeshRegisterRequest);
    }
    if (other.meshRegisterResponse_ != null) {
      if (meshRegisterResponse_ == null) {
        MeshRegisterResponse = new global::MeshRegisterResponse();
      }
      MeshRegisterResponse.MergeFrom(other.MeshRegisterResponse);
    }
    if (other.meshOnChangedMessage_ != null) {
      if (meshOnChangedMessage_ == null) {
        MeshOnChangedMessage = new global::MeshOnChangedMessage();
      }
      MeshOnChangedMessage.MergeFrom(other.MeshOnChangedMessage);
    }
    if (other.meshDisconnectMessage_ != null) {
      if (meshDisconnectMessage_ == null) {
        MeshDisconnectMessage = new global::MeshDisconnectMessage();
      }
      MeshDisconnectMessage.MergeFrom(other.MeshDisconnectMessage);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (meshRegisterRequest_ == null) {
            MeshRegisterRequest = new global::MeshRegisterRequest();
          }
          input.ReadMessage(MeshRegisterRequest);
          break;
        }
        case 18: {
          if (meshRegisterResponse_ == null) {
            MeshRegisterResponse = new global::MeshRegisterResponse();
          }
          input.ReadMessage(MeshRegisterResponse);
          break;
        }
        case 26: {
          if (meshOnChangedMessage_ == null) {
            MeshOnChangedMessage = new global::MeshOnChangedMessage();
          }
          input.ReadMessage(MeshOnChangedMessage);
          break;
        }
        case 34: {
          if (meshDisconnectMessage_ == null) {
            MeshDisconnectMessage = new global::MeshDisconnectMessage();
          }
          input.ReadMessage(MeshDisconnectMessage);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
