// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: server-message.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from server-message.proto</summary>
public static partial class ServerMessageReflection {

  #region Descriptor
  /// <summary>File descriptor for server-message.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ServerMessageReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChRzZXJ2ZXItbWVzc2FnZS5wcm90bxoUY29tbW9uLW1lc3NhZ2UucHJvdG8a",
          "FGNsaWVudC1tZXNzYWdlLnByb3RvIrAEChJMb2dpblNlcnZlclJlcXVlc3QS",
          "EwoLYWNjZXNzVG9rZW4YASABKAkSFQoNZmFjZWJvb2tUb2tlbhgCIAEoCRIT",
          "Cgtnb29nbGVUb2tlbhgDIAEoCRIRCglhY2Nlc3NLZXkYBCABKAkSEAoIZGV2",
          "aWNlSWQYBSABKAkSEAoIbG9nZ2VkT1MYBiABKAkSEQoJdmVyc2lvbk9TGAcg",
          "ASgJEhAKCGxvZ2dlZElQGAggASgJEgwKBG1kbnMYCSABKAkSEQoJYnJhbmRO",
          "YW1lGAogASgJEg0KBW1vZGVsGAsgASgJEg4KBnNpZ25hbBgMIAEoBRIQCghm",
          "aXJtd2FyZRgNIAEoCRIQCghoYXJkd2FyZRgOIAEoCRIbCgVncm91cBgPIAEo",
          "DjIMLkdyb3VwRGV2aWNlEhIKCmhhcmR3YXJlSWQYECABKAkSEwoLZGV2aWNl",
          "VG9rZW4YESABKAkSEQoJZ2F0ZXdheUlkGBIgASgJEhIKCnVwZGF0ZU1vZGUY",
          "EyABKA0SEgoKcmVhY3Rpdml0eRgUIAEoDRISCgpicmlnaHRuZXNzGBUgASgN",
          "EhEKCXRpbWVEZWxheRgWIAEoDRIQCghsYXRpdHVkZRgXIAEoAhIRCglsb25n",
          "aXR1ZGUYGCABKAISFgoOc2NlbmVBY3RpdmVNYXAYGSABKA0SGwoTc3VwcG9y",
          "dEdyb3VwQ29udHJvbBgaIAEoDRIXCg9nYXRld2F5RGV2aWNlSWQYGyABKAki",
          "lAIKE0xvZ2luU2VydmVyUmVzcG9uc2USDgoGdXNlcklkGAEgASgJEhAKCGRl",
          "dmljZUlkGAIgASgJEhMKC2FjY2Vzc1Rva2VuGAMgASgJEhQKDHJlZnJlc2hU",
          "b2tlbhgEIAEoCRIRCglhY2Nlc3NLZXkYBSABKAkSFAoMc2VydmVyRG9tYWlu",
          "GAYgASgJEhMKBGhvbWUYByABKAsyBS5Ib21lEhEKCWtlZXBBbGl2ZRgIIAEo",
          "DRIVCg1zZXJpYWxOdW1iZXJzGAkgAygJEhIKCmhhcmR3YXJlSWQYCiABKAkS",
          "EgoKbG9nZ2VkRGF0ZRgLIAEoBBIgCgpzdGF0dXNDb2RlGOgHIAEoCzILLlN0",
          "YXR1c0NvZGUiRgoZUmVmcmVzaFRva2VuU2VydmVyUmVxdWVzdBITCgthY2Nl",
          "c3NUb2tlbhgBIAEoCRIUCgxyZWZyZXNoVG9rZW4YAiABKAkiaQoaUmVmcmVz",
          "aFRva2VuU2VydmVyUmVzcG9uc2USEwoLYWNjZXNzVG9rZW4YASABKAkSFAoM",
          "cmVmcmVzaFRva2VuGAIgASgJEiAKCnN0YXR1c0NvZGUY6AcgASgLMgsuU3Rh",
          "dHVzQ29kZSIsChVTZW5kQ29kZVNlcnZlclJlcXVlc3QSEwoLcGhvbmVOdW1i",
          "ZXIYASABKAkiPAoXVmVyaWZ5Q29kZVNlcnZlclJlcXVlc3QSEwoLcGhvbmVO",
          "dW1iZXIYASABKAkSDAoEY29kZRgCIAEoCSJIChZTZW5kQ29kZVNlcnZlclJl",
          "c3BvbnNlEgwKBGNvZGUYAiABKAkSIAoKc3RhdHVzQ29kZRjoByABKAsyCy5T",
          "dGF0dXNDb2RlIlEKGFZlcmlmeUNvZGVTZXJ2ZXJSZXNwb25zZRITCgthY2Nl",
          "c3NUb2tlbhgBIAEoCRIgCgpzdGF0dXNDb2RlGOgHIAEoCzILLlN0YXR1c0Nv",
          "ZGUiSAoVR2V0VXNlcnNTZXJ2ZXJSZXF1ZXN0Eg4KBnNlYXJjaBgBIAEoCRIN",
          "CgVvcmRlchgCIAEoBBIQCghwYWdlU2l6ZRgDIAEoDSJQChZHZXRVc2Vyc1Nl",
          "cnZlclJlc3BvbnNlEhQKBXVzZXJzGAEgAygLMgUuVXNlchIgCgpzdGF0dXND",
          "b2RlGOgHIAEoCzILLlN0YXR1c0NvZGUiKQoXU2VhcmNoVXNlclNlcnZlclJl",
          "cXVlc3QSDgoGc2VhcmNoGAEgASgJIlEKGFNlYXJjaFVzZXJTZXJ2ZXJSZXNw",
          "b25zZRITCgR1c2VyGAEgASgLMgUuVXNlchIgCgpzdGF0dXNDb2RlGOgHIAEo",
          "CzILLlN0YXR1c0NvZGUiRAoZQXZhdGFyVXBsb2FkU2VydmVyUmVxdWVzdBIn",
          "Cg5maWxlVXBsb2FkRm9ybRgBIAEoCzIPLkZpbGVVcGxvYWRGb3JtIlAKGkF2",
          "YXRhclVwbG9hZFNlcnZlclJlc3BvbnNlEhAKCGltYWdlVXJsGAEgASgJEiAK",
          "CnN0YXR1c0NvZGUY6AcgASgLMgsuU3RhdHVzQ29kZSIaChhHZXRVc2VySW5m",
          "b1NlcnZlclJlcXVlc3QikgIKGUdldFVzZXJJbmZvU2VydmVyUmVzcG9uc2US",
          "DgoGdXNlcklkGAEgASgJEg4KBmF2YXRhchgCIAEoDBIQCghmdWxsTmFtZRgD",
          "IAEoCRINCgVlbWFpbBgEIAEoCRITCgtwaG9uZU51bWJlchgFIAEoCRIQCghs",
          "YW5ndWFnZRgGIAEoCRIVCg1hdXRvU3dpdGNoR3BzGAcgASgIEhQKBWhvbWVz",
          "GAggAygLMgUuSG9tZRIbCgh1c2VyUm9sZRgJIAEoDjIJLlVzZXJSb2xlEiEK",
          "C3VzZXJTZXR0aW5nGAogASgLMgwuVXNlclNldHRpbmcSIAoKc3RhdHVzQ29k",
          "ZRjoByABKAsyCy5TdGF0dXNDb2RlIqgBChtVcGRhdGVVc2VySW5mb1NlcnZl",
          "clJlcXVlc3QSDgoGYXZhdGFyGAEgASgMEhAKCGZ1bGxOYW1lGAIgASgJEg0K",
          "BWVtYWlsGAMgASgJEhMKC3Bob25lTnVtYmVyGAQgASgJEhoKEm1hcmtlZERl",
          "bGV0ZUF2YXRhchgFIAEoCBIQCghsYW5ndWFnZRgGIAEoCRIVCg1hdXRvU3dp",
          "dGNoR3BzGAcgASgIIkAKHFVwZGF0ZVVzZXJJbmZvU2VydmVyUmVzcG9uc2US",
          "IAoKc3RhdHVzQ29kZRjoByABKAsyCy5TdGF0dXNDb2RlIjEKH0NoYW5nZWRI",
          "b21lRm9yVXNlclNlcnZlclJlcXVlc3QSDgoGaG9tZUlkGAEgASgJIlQKIENo",
          "YW5nZWRIb21lRm9yVXNlclNlcnZlclJlc3BvbnNlEg4KBmhvbWVJZBgBIAEo",
          "CRIgCgpzdGF0dXNDb2RlGOgHIAEoCzILLlN0YXR1c0NvZGUiNwogU2V0T25l",
          "c2lnbmFsRm9yVXNlclNlcnZlclJlcXVlc3QSEwoLb25lc2lnbmFsSWQYASAB",
          "KAkiRQohU2V0T25lc2lnbmFsRm9yVXNlclNlcnZlclJlc3BvbnNlEiAKCnN0",
          "YXR1c0NvZGUY6AcgASgLMgsuU3RhdHVzQ29kZSIXChVHZXRIb21lc1NlcnZl",
          "clJlcXVlc3QiZwoWR2V0SG9tZXNTZXJ2ZXJSZXNwb25zZRIUCgVob21lcxgB",
          "IAMoCzIFLkhvbWUSFQoNZGVmYXVsdEhvbWVJZBgCIAEoCRIgCgpzdGF0dXND",
          "b2RlGOgHIAEoCzILLlN0YXR1c0NvZGUiLQocR2V0SG9tZXNCeVBob25lU2Vy",
          "dmVyUmVxdWVzdBINCgVwaG9uZRgBIAEoCSJWCh1HZXRIb21lc0J5UGhvbmVT",
          "ZXJ2ZXJSZXNwb25zZRITCgRob21lGAEgAygLMgUuSG9tZRIgCgpzdGF0dXND",
          "b2RlGOgHIAEoCzILLlN0YXR1c0NvZGUiXAohVXBsb2FkSG9tZUJhY2tncm91",
          "bmRTZXJ2ZXJSZXF1ZXN0Eg4KBmhvbWVJZBgBIAEoCRInCg5maWxlVXBsb2Fk",
          "Rm9ybRgCIAEoCzIPLkZpbGVVcGxvYWRGb3JtIlgKIlVwbG9hZEhvbWVCYWNr",
          "Z3JvdW5kU2VydmVyUmVzcG9uc2USEAoIaW1hZ2VVcmwYASABKAkSIAoKc3Rh",
          "dHVzQ29kZRjoByABKAsyCy5TdGF0dXNDb2RlIioKGEdldEhvbWVJbmZvU2Vy",
          "dmVyUmVxdWVzdBIOCgZob21lSWQYASABKAkiUgoZR2V0SG9tZUluZm9TZXJ2",
          "ZXJSZXNwb25zZRITCgRob21lGAEgASgLMgUuSG9tZRIgCgpzdGF0dXNDb2Rl",
          "GOgHIAEoCzILLlN0YXR1c0NvZGUiVAoUQWRkSG9tZVNlcnZlclJlcXVlc3QS",
          "EAoIaG9tZU5hbWUYASABKAkSEgoKaG9tZU5hbWVFbhgCIAEoCRIWCg5iYWNr",
          "Z3JvdW5kTmFtZRgDIAEoCSJOChVBZGRIb21lU2VydmVyUmVzcG9uc2USEwoE",
          "aG9tZRgBIAEoCzIFLkhvbWUSIAoKc3RhdHVzQ29kZRjoByABKAsyCy5TdGF0",
          "dXNDb2RlIi4KF1VwZGF0ZUhvbWVTZXJ2ZXJSZXF1ZXN0EhMKBGhvbWUYASAB",
          "KAsyBS5Ib21lIlEKGFVwZGF0ZUhvbWVTZXJ2ZXJSZXNwb25zZRITCgRob21l",
          "GAEgASgLMgUuSG9tZRIgCgpzdGF0dXNDb2RlGOgHIAEoCzILLlN0YXR1c0Nv",
          "ZGUiTQoaU2V0R3BzRm9ySG9tZVNlcnZlclJlcXVlc3QSCgoCaWQYASABKAkS",
          "EQoJbG9uZ2l0dWRlGAIgASgCEhAKCGxhdGl0dWRlGAMgASgCIj8KG1NldEdw",
          "c0ZvckhvbWVTZXJ2ZXJSZXNwb25zZRIgCgpzdGF0dXNDb2RlGOgHIAEoCzIL",
          "LlN0YXR1c0NvZGUiKQoXRGVsZXRlSG9tZVNlcnZlclJlcXVlc3QSDgoGaG9t",
          "ZUlkGAEgASgJIjwKGERlbGV0ZUhvbWVTZXJ2ZXJSZXNwb25zZRIgCgpzdGF0",
          "dXNDb2RlGOgHIAEoCzILLlN0YXR1c0NvZGUiJwoVR2V0Um9vbXNTZXJ2ZXJS",
          "ZXF1ZXN0Eg4KBmhvbWVJZBgBIAEoCSJkChRBZGRSb29tU2VydmVyUmVxdWVz",
          "dBIOCgZob21lSWQYASABKAkSEAoIcm9vbU5hbWUYAiABKAkSEgoKcm9vbU5h",
          "bWVFbhgDIAEoCRIWCg5iYWNrZ3JvdW5kTmFtZRgEIAEoCSIpChdEZWxldGVS",
          "b29tU2VydmVyUmVxdWVzdBIOCgZyb29tSWQYASABKAkiUAoWR2V0Um9vbXNT",
          "ZXJ2ZXJSZXNwb25zZRIUCgVyb29tcxgBIAMoCzIFLlJvb20SIAoKc3RhdHVz",
          "Q29kZRjoByABKAsyCy5TdGF0dXNDb2RlIk4KFUFkZFJvb21TZXJ2ZXJSZXNw",
          "b25zZRITCgRyb29tGAEgASgLMgUuUm9vbRIgCgpzdGF0dXNDb2RlGOgHIAEo",
          "CzILLlN0YXR1c0NvZGUiPAoYRGVsZXRlUm9vbVNlcnZlclJlc3BvbnNlEiAK",
          "CnN0YXR1c0NvZGUY6AcgASgLMgsuU3RhdHVzQ29kZSIuChdVcGRhdGVSb29t",
          "U2VydmVyUmVxdWVzdBITCgRyb29tGAEgASgLMgUuUm9vbSJRChhVcGRhdGVS",
          "b29tU2VydmVyUmVzcG9uc2USEwoEcm9vbRgBIAEoCzIFLlJvb20SIAoKc3Rh",
          "dHVzQ29kZRjoByABKAsyCy5TdGF0dXNDb2RlImEKIVVwbG9hZFJvb21CYWNr",
          "Z3JvdW5kU2VydmVyUmVxdWVzdBITCgRyb29tGAEgASgLMgUuUm9vbRInCg5m",
          "aWxlVXBsb2FkRm9ybRgCIAEoCzIPLkZpbGVVcGxvYWRGb3JtIlgKIlVwbG9h",
          "ZFJvb21CYWNrZ3JvdW5kU2VydmVyUmVzcG9uc2USEAoIaW1hZ2VVcmwYASAB",
          "KAkSIAoKc3RhdHVzQ29kZRjoByABKAsyCy5TdGF0dXNDb2RlIi0KGEdldFBy",
          "b2plY3RzU2VydmVyUmVxdWVzdBIRCglrZXlTZWFyY2gYASABKAkiWQoZR2V0",
          "UHJvamVjdHNTZXJ2ZXJSZXNwb25zZRIaCghwcm9qZWN0cxgBIAMoCzIILlBy",
          "b2plY3QSIAoKc3RhdHVzQ29kZRjoByABKAsyCy5TdGF0dXNDb2RlIkEKGUdl",
          "dEJ1aWxkaW5nc1NlcnZlclJlcXVlc3QSEQoJcHJvamVjdElkGAEgASgJEhEK",
          "CWtleVNlYXJjaBgCIAEoCSJcChpHZXRCdWlsZGluZ3NTZXJ2ZXJSZXNwb25z",
          "ZRIcCglidWlsZGluZ3MYASADKAsyCS5CdWlsZGluZxIgCgpzdGF0dXNDb2Rl",
          "GOgHIAEoCzILLlN0YXR1c0NvZGUiPwoWR2V0Rmxvb3JzU2VydmVyUmVxdWVz",
          "dBISCgpidWlsZGluZ0lkGAEgASgJEhEKCWtleVNlYXJjaBgCIAEoCSJTChdH",
          "ZXRGbG9vcnNTZXJ2ZXJSZXNwb25zZRIWCgZmbG9vcnMYASADKAsyBi5GbG9v",
          "chIgCgpzdGF0dXNDb2RlGOgHIAEoCzILLlN0YXR1c0NvZGUiQAoaR2V0QXBh",
          "cnRtZW50c1NlcnZlclJlcXVlc3QSDwoHZmxvb3JJZBgBIAEoCRIRCglrZXlT",
          "ZWFyY2gYAiABKAkiXwobR2V0QXBhcnRtZW50c1NlcnZlclJlc3BvbnNlEh4K",
          "CmFwYXJ0bWVudHMYASADKAsyCi5BcGFydG1lbnQSIAoKc3RhdHVzQ29kZRjo",
          "ByABKAsyCy5TdGF0dXNDb2RlIi0KG0dldENpdGl6ZW5JbmZvU2VydmVyUmVx",
          "dWVzdBIOCgZob21lSWQYASABKAkiWwocR2V0Q2l0aXplbkluZm9TZXJ2ZXJS",
          "ZXNwb25zZRIZCgdjaXRpemVuGAEgASgLMgguQ2l0aXplbhIgCgpzdGF0dXND",
          "b2RlGOgHIAEoCzILLlN0YXR1c0NvZGUiNAoXU2V0Q2l0aXplblNlcnZlclJl",
          "cXVlc3QSGQoHY2l0aXplbhgBIAEoCzIILkNpdGl6ZW4iPAoYU2V0Q2l0aXpl",
          "blNlcnZlclJlc3BvbnNlEiAKCnN0YXR1c0NvZGUY6AcgASgLMgsuU3RhdHVz",
          "Q29kZSI3ChhBZGRVc2VySG9tZVNlcnZlclJlcXVlc3QSGwoIdXNlckhvbWUY",
          "ASABKAsyCS5Vc2VySG9tZSJaChlBZGRVc2VySG9tZVNlcnZlclJlc3BvbnNl",
          "EhsKCHVzZXJIb21lGAEgASgLMgkuVXNlckhvbWUSIAoKc3RhdHVzQ29kZRjo",
          "ByABKAsyCy5TdGF0dXNDb2RlIikKG0RlbGV0ZVVzZXJIb21lU2VydmVyUmVx",
          "dWVzdBIKCgJpZBgBIAEoCSJAChxEZWxldGVVc2VySG9tZVNlcnZlclJlc3Bv",
          "bnNlEiAKCnN0YXR1c0NvZGUY6AcgASgLMgsuU3RhdHVzQ29kZSIYChZHZXRV",
          "bnJlYWRTZXJ2ZXJSZXF1ZXN0IksKF0dldFVucmVhZFNlcnZlclJlc3BvbnNl",
          "Eg4KBnVucmVhZBgBIAEoBBIgCgpzdGF0dXNDb2RlGOgHIAEoCzILLlN0YXR1",
          "c0NvZGUiFgoUU2V0UmVhZFNlcnZlclJlcXVlc3QiRQoVU2V0UmVhZFNlcnZl",
          "clJlc3BvbnNlEgoKAmlkGAEgASgJEiAKCnN0YXR1c0NvZGUY6AcgASgLMgsu",
          "U3RhdHVzQ29kZSIdChtHZXRCYWNrZ3JvdW5kc1NlcnZlclJlcXVlc3QiZAoc",
          "R2V0QmFja2dyb3VuZHNTZXJ2ZXJSZXNwb25zZRIiCgtiYWNrZ3JvdW5kcxgB",
          "IAMoCzINLkltYWdlTmV0d29yaxIgCgpzdGF0dXNDb2RlGOgHIAEoCzILLlN0",
          "YXR1c0NvZGUiGgoYR2V0QXV0b09mZnNTZXJ2ZXJSZXF1ZXN0Ik8KGUdldEF1",
          "dG9PZmZzU2VydmVyUmVzcG9uc2USEAoIYXV0b09mZnMYASADKA0SIAoKc3Rh",
          "dHVzQ29kZRjoByABKAsyCy5TdGF0dXNDb2RlIjoKG0dldFR5cGVEZXZpY2Vz",
          "U2VydmVyUmVxdWVzdBIbCgVncm91cBgBIAEoDjIMLkdyb3VwRGV2aWNlImIK",
          "HEdldFR5cGVEZXZpY2VzU2VydmVyUmVzcG9uc2USIAoLdHlwZURldmljZXMY",
          "ASADKA4yCy5UeXBlRGV2aWNlEiAKCnN0YXR1c0NvZGUY6AcgASgLMgsuU3Rh",
          "dHVzQ29kZSJGChdHZXREZXZpY2VzU2VydmVyUmVxdWVzdBIOCgZob21lSWQY",
          "ASABKAkSGwoFZ3JvdXAYAiABKA4yDC5Hcm91cERldmljZSIqChZHZXREZXZp",
          "Y2VTZXJ2ZXJSZXF1ZXN0EhAKCGRldmljZUlkGAEgASgJIjMKF0FkZERldmlj",
          "ZXNTZXJ2ZXJSZXF1ZXN0EhgKB2RldmljZXMYASADKAsyBy5EZXZpY2UiNAoZ",
          "VXBkYXRlRGV2aWNlU2VydmVyUmVxdWVzdBIXCgZkZXZpY2UYASABKAsyBy5E",
          "ZXZpY2UiQQoZRGVsZXRlRGV2aWNlU2VydmVyUmVxdWVzdBIQCghkZXZpY2VJ",
          "ZBgBIAEoCRISCgpoYXJkd2FyZUlkGAIgASgJIm4KJEdldEZpcm13YXJlTGF0",
          "ZXN0RGV2aWNlU2VydmVyUmVxdWVzdBINCgVtb2RlbBgBIAEoCRIQCghmaXJt",
          "d2FyZRgCIAEoCRITCgtkZXZpY2VUb2tlbhgDIAEoCRIQCghkZXZpY2VJZBgE",
          "IAEoCSJaCiNEb3dubG9hZEZpcm13YXJlRGV2aWNlU2VydmVyUmVxdWVzdBIQ",
          "CghkZXZpY2VJZBgBIAEoCRINCgVtb2RlbBgCIAEoCRISCgpmaXJtd2FyZUlk",
          "GAMgASgJIjoKJkZvcmNlVXBkYXRlRmlybXdhcmVEZXZpY2VTZXJ2ZXJSZXF1",
          "ZXN0EhAKCGRldmljZUlkGAEgASgJIloKMUZvcmNlVXBkYXRlRmlybXdhcmVB",
          "bGxEZXZpY2VzQnlQaG9uZVNlcnZlclJlcXVlc3QSFQoNY3VzdG9tZXJQaG9u",
          "ZRgBIAEoCRIOCgZob21lSWQYAiABKAkiVgoyRm9yY2VVcGRhdGVGaXJtd2Fy",
          "ZUFsbERldmljZXNCeVBob25lU2VydmVyUmVzcG9uc2USIAoKc3RhdHVzQ29k",
          "ZRjoByABKAsyCy5TdGF0dXNDb2RlImwKGEdldERldmljZXNTZXJ2ZXJSZXNw",
          "b25zZRIUCgVyb29tcxgBIAMoCzIFLlJvb20SGAoHZGV2aWNlcxgCIAMoCzIH",
          "LkRldmljZRIgCgpzdGF0dXNDb2RlGOgHIAEoCzILLlN0YXR1c0NvZGUiVAoX",
          "R2V0RGV2aWNlU2VydmVyUmVzcG9uc2USFwoGZGV2aWNlGAEgASgLMgcuRGV2",
          "aWNlEiAKCnN0YXR1c0NvZGUY6AcgASgLMgsuU3RhdHVzQ29kZSJWChhBZGRE",
          "ZXZpY2VzU2VydmVyUmVzcG9uc2USGAoHZGV2aWNlcxgBIAMoCzIHLkRldmlj",
          "ZRIgCgpzdGF0dXNDb2RlGOgHIAEoCzILLlN0YXR1c0NvZGUiPgoaVXBkYXRl",
          "RGV2aWNlU2VydmVyUmVzcG9uc2USIAoKc3RhdHVzQ29kZRjoByABKAsyCy5T",
          "dGF0dXNDb2RlIj4KGkRlbGV0ZURldmljZVNlcnZlclJlc3BvbnNlEiAKCnN0",
          "YXR1c0NvZGUY6AcgASgLMgsuU3RhdHVzQ29kZSKNAQolR2V0RmlybXdhcmVM",
          "YXRlc3REZXZpY2VTZXJ2ZXJSZXNwb25zZRIXCg9maXJtd2FyZVZlcnNpb24Y",
          "ASABKAkSEgoKZmlybXdhcmVJZBgCIAEoCRIVCg1pc0Rvd25sb2FkaW5nGAMg",
          "ASgIEiAKCnN0YXR1c0NvZGUY6AcgASgLMgsuU3RhdHVzQ29kZSJICiREb3du",
          "bG9hZEZpcm13YXJlRGV2aWNlU2VydmVyUmVzcG9uc2USIAoKc3RhdHVzQ29k",
          "ZRjoByABKAsyCy5TdGF0dXNDb2RlIksKJ0ZvcmNlVXBkYXRlRmlybXdhcmVE",
          "ZXZpY2VTZXJ2ZXJSZXNwb25zZRIgCgpzdGF0dXNDb2RlGOgHIAEoCzILLlN0",
          "YXR1c0NvZGUiZAobUmVnaXN0ZXJEZXZpY2VTZXJ2ZXJSZXF1ZXN0EhAKCG1h",
          "blRva2VuGAEgASgJEhIKCmhhcmR3YXJlSWQYAiABKAkSDQoFbW9kZWwYAyAB",
          "KAkSEAoIZmlybXdhcmUYBCABKAkimQEKHFJlZ2lzdGVyRGV2aWNlU2VydmVy",
          "UmVzcG9uc2USEgoKaGFyZHdhcmVJZBgBIAEoCRITCgtkZXZpY2VUb2tlbhgC",
          "IAEoCRIRCgl3c0VucG9pbnQYAyABKAkSGwoIZGF0YVR5cGUYBCABKA4yCS5E",
          "YXRhVHlwZRIgCgpzdGF0dXNDb2RlGOgHIAEoCzILLlN0YXR1c0NvZGUiSgoj",
          "VXBkYXRlV1NFbmRwb2ludERldmljZVNlcnZlclJlcXVlc3QSEAoIZGV2aWNl",
          "SWQYASABKAkSEQoJd3NFbnBvaW50GAIgASgJIkgKJFVwZGF0ZVdTRW5kcG9p",
          "bnREZXZpY2VTZXJ2ZXJSZXNwb25zZRIgCgpzdGF0dXNDb2RlGOgHIAEoCzIL",
          "LlN0YXR1c0NvZGUiegozUHJvZ3Jlc3NVcGRhdGVGaXJtd2FyZU9uQ2hhbmdl",
          "ZERldmljZVNlcnZlclJlc3BvbnNlEhAKCGRldmljZUlkGAEgASgJEg8KB3Bl",
          "cmNlbnQYAiABKA0SIAoKc3RhdHVzQ29kZRjoByABKAsyCy5TdGF0dXNDb2Rl",
          "IuEBCi1Eb3dubG9hZEZpcm13YXJlT25DaGFuZ2VkRGV2aWNlU2VydmVyUmVz",
          "cG9uc2USEAoIZGV2aWNlSWQYASABKAkSEgoKaGFyZHdhcmVJZBgCIAEoCRIM",
          "CgRkYXRhGAMgASgMEhAKCGRhdGFTaXplGAQgASgNEhEKCXBhZ2VJbmRleBgF",
          "IAEoDRIRCgl0b3RhbFBhZ2UYBiABKA0SEAoIcGFnZVNpemUYByABKA0SEAoI",
          "ZmlsZVNpemUYCCABKA0SIAoKc3RhdHVzQ29kZRjoByABKAsyCy5TdGF0dXND",
          "b2RlIoICCiNEZXZpY2VPbkNoYW5nZWREZXZpY2VTZXJ2ZXJSZXNwb25zZRIQ",
          "CghkZXZpY2VJZBgBIAEoCRIpCg9jb25uZWN0aW9uU3RhdGUYAiABKA4yEC5D",
          "b25uZWN0aW9uU3RhdGUSGAoQdG90YWxUaW1lT25PcmdpbhgDIAEoDRIXCg90",
          "b3RhbFRpbWVPblllYXIYBCABKA0SGAoQdG90YWxUaW1lT25Nb250aBgFIAEo",
          "DRIWCg50aW1lT25MYXN0RGF0ZRgGIAEoDRIXCg90aW1lT2ZmTGFzdERhdGUY",
          "ByABKA0SIAoKc3RhdHVzQ29kZRjoByABKAsyCy5TdGF0dXNDb2RlIi0KGUdl",
          "dFN3aXRjaGVyc1NlcnZlclJlcXVlc3QSEAoIZGV2aWNlSWQYASABKAkiLgoY",
          "R2V0U3dpdGNoZXJTZXJ2ZXJSZXF1ZXN0EhIKCnN3aXRjaGVySWQYASABKAki",
          "HwodR2V0SWNvblN3aXRjaGVyc1NlcnZlclJlcXVlc3QiQQobR2V0TG9nU3dp",
          "dGNoZXJTZXJ2ZXJSZXF1ZXN0EhAKCGRldmljZUlkGAEgASgJEhAKCHN3aXRj",
          "aGVyGAIgASgNIjoKG1VwZGF0ZVN3aXRjaGVyU2VydmVyUmVxdWVzdBIbCghz",
          "d2l0Y2hlchgBIAEoCzIJLlN3aXRjaGVyIlwKFVN3aXRjaGVyU2VydmVyUmVx",
          "dWVzdBIQCghkZXZpY2VJZBgBIAEoCRIQCghzd2l0Y2hlchgCIAEoDRIfCgpw",
          "b3dlclN0YXRlGAMgASgOMgsuUG93ZXJTdGF0ZSI3CiFHZXRTd2l0Y2hlclNj",
          "aGVkdWxlc1NlcnZlclJlcXVlc3QSEgoKc3dpdGNoZXJJZBgBIAEoCSI+CiBH",
          "ZXRTd2l0Y2hlclNjaGVkdWxlU2VydmVyUmVxdWVzdBIaChJzd2l0Y2hlclNj",
          "aGVkdWxlSWQYASABKAkiOwolR2V0Q291bnRTd2l0Y2hlclNjaGVkdWxlU2Vy",
          "dmVyUmVxdWVzdBISCgpzd2l0Y2hlcklkGAEgASgJIlkKIEFkZFN3aXRjaGVy",
          "U2NoZWR1bGVTZXJ2ZXJSZXF1ZXN0EhAKCGRldmljZUlkGAEgASgJEiMKCHNj",
          "aGVkdWxlGAIgASgLMhEuU3dpdGNoZXJTY2hlZHVsZSJcCiNVcGRhdGVTd2l0",
          "Y2hlclNjaGVkdWxlU2VydmVyUmVxdWVzdBIQCghkZXZpY2VJZBgBIAEoCRIj",
          "CghzY2hlZHVsZRgCIAEoCzIRLlN3aXRjaGVyU2NoZWR1bGUiUwojRGVsZXRl",
          "U3dpdGNoZXJTY2hlZHVsZVNlcnZlclJlcXVlc3QSEAoIZGV2aWNlSWQYASAB",
          "KAkSGgoSc3dpdGNoZXJTY2hlZHVsZUlkGAIgASgJImYKJlNldEFjdGl2ZVN3",
          "aXRjaGVyU2NoZWR1bGVTZXJ2ZXJSZXF1ZXN0EhAKCGRldmljZUlkGAEgASgJ",
          "EhoKEnN3aXRjaGVyU2NoZWR1bGVJZBgCIAEoCRIOCgZhY3RpdmUYAyABKAgi",
          "XAoaR2V0U3dpdGNoZXJzU2VydmVyUmVzcG9uc2USHAoJc3dpdGNoZXJzGAEg",
          "AygLMgkuU3dpdGNoZXISIAoKc3RhdHVzQ29kZRjoByABKAsyCy5TdGF0dXND",
          "b2RlIloKGUdldFN3aXRjaGVyU2VydmVyUmVzcG9uc2USGwoIc3dpdGNoZXIY",
          "ASABKAsyCS5Td2l0Y2hlchIgCgpzdGF0dXNDb2RlGOgHIAEoCzILLlN0YXR1",
          "c0NvZGUiQAocR2V0TG9nU3dpdGNoZXJTZXJ2ZXJSZXNwb25zZRIgCgpzdGF0",
          "dXNDb2RlGOgHIAEoCzILLlN0YXR1c0NvZGUiUQoeR2V0SWNvblN3aXRjaGVy",
          "c1NlcnZlclJlc3BvbnNlEg0KBWljb25zGAEgAygJEiAKCnN0YXR1c0NvZGUY",
          "6AcgASgLMgsuU3RhdHVzQ29kZSJdChxVcGRhdGVTd2l0Y2hlclNlcnZlclJl",
          "c3BvbnNlEhsKCHN3aXRjaGVyGAEgASgLMgkuU3dpdGNoZXISIAoKc3RhdHVz",
          "Q29kZRjoByABKAsyCy5TdGF0dXNDb2RlIjoKFlN3aXRjaGVyU2VydmVyUmVz",
          "cG9uc2USIAoKc3RhdHVzQ29kZRjoByABKAsyCy5TdGF0dXNDb2RlIoYCCh9T",
          "d2l0Y2hlck9uQ2hhbmdlZFNlcnZlclJlc3BvbnNlEhAKCGRldmljZUlkGAEg",
          "ASgJEhAKCHN3aXRjaGVyGAIgASgNEh8KCnBvd2VyU3RhdGUYAyABKA4yCy5Q",
          "b3dlclN0YXRlEhgKEHRvdGFsVGltZU9uT3JnaW4YBCABKA0SFwoPdG90YWxU",
          "aW1lT25ZZWFyGAUgASgNEhgKEHRvdGFsVGltZU9uTW9udGgYBiABKA0SFgoO",
          "dGltZU9uTGFzdERhdGUYByABKA0SFwoPdGltZU9mZkxhc3REYXRlGAggASgN",
          "EiAKCnN0YXR1c0NvZGUY6AcgASgLMgsuU3RhdHVzQ29kZSJsCiJHZXRTd2l0",
          "Y2hlclNjaGVkdWxlc1NlcnZlclJlc3BvbnNlEiQKCXNjaGVkdWxlcxgBIAMo",
          "CzIRLlN3aXRjaGVyU2NoZWR1bGUSIAoKc3RhdHVzQ29kZRjoByABKAsyCy5T",
          "dGF0dXNDb2RlImoKIUdldFN3aXRjaGVyU2NoZWR1bGVTZXJ2ZXJSZXNwb25z",
          "ZRIjCghzY2hlZHVsZRgBIAEoCzIRLlN3aXRjaGVyU2NoZWR1bGUSIAoKc3Rh",
          "dHVzQ29kZRjoByABKAsyCy5TdGF0dXNDb2RlIlkKJkdldENvdW50U3dpdGNo",
          "ZXJTY2hlZHVsZVNlcnZlclJlc3BvbnNlEg0KBWNvdW50GAEgASgNEiAKCnN0",
          "YXR1c0NvZGUY6AcgASgLMgsuU3RhdHVzQ29kZSJhCiFBZGRTd2l0Y2hlclNj",
          "aGVkdWxlU2VydmVyUmVzcG9uc2USGgoSc3dpdGNoZXJTY2hlZHVsZUlkGAEg",
          "ASgJEiAKCnN0YXR1c0NvZGUY6AcgASgLMgsuU3RhdHVzQ29kZSJICiRVcGRh",
          "dGVTd2l0Y2hlclNjaGVkdWxlU2VydmVyUmVzcG9uc2USIAoKc3RhdHVzQ29k",
          "ZRjoByABKAsyCy5TdGF0dXNDb2RlIkgKJERlbGV0ZVN3aXRjaGVyU2NoZWR1",
          "bGVTZXJ2ZXJSZXNwb25zZRIgCgpzdGF0dXNDb2RlGOgHIAEoCzILLlN0YXR1",
          "c0NvZGUiiQEKJ1NldEFjdGl2ZVN3aXRjaGVyU2NoZWR1bGVTZXJ2ZXJSZXNw",
          "b25zZRIQCghkZXZpY2VJZBgBIAEoCRIaChJzd2l0Y2hlclNjaGVkdWxlSWQY",
          "AiABKAkSDgoGYWN0aXZlGAMgASgIEiAKCnN0YXR1c0NvZGUY6AcgASgLMgsu",
          "U3RhdHVzQ29kZSI8Ch9HZXRDdXJ0YWluU3dpdGNoZXJTZXJ2ZXJSZXF1ZXN0",
          "EhkKEWN1cnRhaW5Td2l0Y2hlcklkGAEgASgJIk8KIlVwZGF0ZUN1cnRhaW5T",
          "d2l0Y2hlclNlcnZlclJlcXVlc3QSKQoPY3VydGFpblN3aXRjaGVyGAEgASgL",
          "MhAuQ3VydGFpblN3aXRjaGVyIjgKJEdldEN1cnRhaW5Td2l0Y2hlclN0YXRl",
          "U2VydmVyUmVxdWVzdBIQCghkZXZpY2VJZBgBIAEoCSJXChxDdXJ0YWluU3dp",
          "dGNoZXJTZXJ2ZXJSZXF1ZXN0EhAKCGRldmljZUlkGAEgASgJEhEKCXBlcmNl",
          "bnRJbhgCIAEoDRISCgpwZXJjZW50T3V0GAMgASgNIkUKKEdldEN1cnRhaW5T",
          "d2l0Y2hlclNjaGVkdWxlc1NlcnZlclJlcXVlc3QSGQoRY3VydGFpblN3aXRj",
          "aGVySWQYASABKAkiTAonR2V0Q3VydGFpblN3aXRjaGVyU2NoZWR1bGVTZXJ2",
          "ZXJSZXF1ZXN0EiEKGWN1cnRhaW5Td2l0Y2hlclNjaGVkdWxlSWQYASABKAki",
          "SQosR2V0Q291bnRDdXJ0YWluU3dpdGNoZXJTY2hlZHVsZVNlcnZlclJlcXVl",
          "c3QSGQoRY3VydGFpblN3aXRjaGVySWQYASABKAkiZwonQWRkQ3VydGFpblN3",
          "aXRjaGVyU2NoZWR1bGVTZXJ2ZXJSZXF1ZXN0EhAKCGRldmljZUlkGAEgASgJ",
          "EioKCHNjaGVkdWxlGAIgASgLMhguQ3VydGFpblN3aXRjaGVyU2NoZWR1bGUi",
          "agoqVXBkYXRlQ3VydGFpblN3aXRjaGVyU2NoZWR1bGVTZXJ2ZXJSZXF1ZXN0",
          "EhAKCGRldmljZUlkGAEgASgJEioKCHNjaGVkdWxlGAIgASgLMhguQ3VydGFp",
          "blN3aXRjaGVyU2NoZWR1bGUiYQoqRGVsZXRlQ3VydGFpblN3aXRjaGVyU2No",
          "ZWR1bGVTZXJ2ZXJSZXF1ZXN0EhAKCGRldmljZUlkGAEgASgJEiEKGWN1cnRh",
          "aW5Td2l0Y2hlclNjaGVkdWxlSWQYAiABKAkidAotU2V0QWN0aXZlQ3VydGFp",
          "blN3aXRjaGVyU2NoZWR1bGVTZXJ2ZXJSZXF1ZXN0EhAKCGRldmljZUlkGAEg",
          "ASgJEiEKGWN1cnRhaW5Td2l0Y2hlclNjaGVkdWxlSWQYAiABKAkSDgoGYWN0",
          "aXZlGAMgASgIIm8KIEdldEN1cnRhaW5Td2l0Y2hlclNlcnZlclJlc3BvbnNl",
          "EikKD2N1cnRhaW5Td2l0Y2hlchgBIAEoCzIQLkN1cnRhaW5Td2l0Y2hlchIg",
          "CgpzdGF0dXNDb2RlGOgHIAEoCzILLlN0YXR1c0NvZGUiRwojVXBkYXRlQ3Vy",
          "dGFpblN3aXRjaGVyU2VydmVyUmVzcG9uc2USIAoKc3RhdHVzQ29kZRjoByAB",
          "KAsyCy5TdGF0dXNDb2RlInAKJUdldEN1cnRhaW5Td2l0Y2hlclN0YXRlU2Vy",
          "dmVyUmVzcG9uc2USEQoJcGVyY2VudEluGAEgASgNEhIKCnBlcmNlbnRPdXQY",
          "AiABKA0SIAoKc3RhdHVzQ29kZRjoByABKAsyCy5TdGF0dXNDb2RlIkEKHUN1",
          "cnRhaW5Td2l0Y2hlclNlcnZlclJlc3BvbnNlEiAKCnN0YXR1c0NvZGUY6Acg",
          "ASgLMgsuU3RhdHVzQ29kZSKDAQomQ3VydGFpblN3aXRjaGVyT25DaGFuZ2Vk",
          "U2VydmVyUmVzcG9uc2USEAoIZGV2aWNlSWQYASABKAkSEQoJcGVyY2VudElu",
          "GAIgASgNEhIKCnBlcmNlbnRPdXQYAyABKA0SIAoKc3RhdHVzQ29kZRjoByAB",
          "KAsyCy5TdGF0dXNDb2RlInoKKUdldEN1cnRhaW5Td2l0Y2hlclNjaGVkdWxl",
          "c1NlcnZlclJlc3BvbnNlEisKCXNjaGVkdWxlcxgBIAMoCzIYLkN1cnRhaW5T",
          "d2l0Y2hlclNjaGVkdWxlEiAKCnN0YXR1c0NvZGUY6AcgASgLMgsuU3RhdHVz",
          "Q29kZSJgCi1HZXRDb3VudEN1cnRhaW5Td2l0Y2hlclNjaGVkdWxlU2VydmVy",
          "UmVzcG9uc2USDQoFY291bnQYASABKA0SIAoKc3RhdHVzQ29kZRjoByABKAsy",
          "Cy5TdGF0dXNDb2RlIngKKEdldEN1cnRhaW5Td2l0Y2hlclNjaGVkdWxlU2Vy",
          "dmVyUmVzcG9uc2USKgoIc2NoZWR1bGUYASABKAsyGC5DdXJ0YWluU3dpdGNo",
          "ZXJTY2hlZHVsZRIgCgpzdGF0dXNDb2RlGOgHIAEoCzILLlN0YXR1c0NvZGUi",
          "bwooQWRkQ3VydGFpblN3aXRjaGVyU2NoZWR1bGVTZXJ2ZXJSZXNwb25zZRIh",
          "ChljdXJ0YWluU3dpdGNoZXJTY2hlZHVsZUlkGAEgASgJEiAKCnN0YXR1c0Nv",
          "ZGUY6AcgASgLMgsuU3RhdHVzQ29kZSJPCitVcGRhdGVDdXJ0YWluU3dpdGNo",
          "ZXJTY2hlZHVsZVNlcnZlclJlc3BvbnNlEiAKCnN0YXR1c0NvZGUY6AcgASgL",
          "MgsuU3RhdHVzQ29kZSJPCitEZWxldGVDdXJ0YWluU3dpdGNoZXJTY2hlZHVs",
          "ZVNlcnZlclJlc3BvbnNlEiAKCnN0YXR1c0NvZGUY6AcgASgLMgsuU3RhdHVz",
          "Q29kZSJSCi5TZXRBY3RpdmVDdXJ0YWluU3dpdGNoZXJTY2hlZHVsZVNlcnZl",
          "clJlc3BvbnNlEiAKCnN0YXR1c0NvZGUY6AcgASgLMgsuU3RhdHVzQ29kZSK5",
          "AQodTW90aW9uT25DaGFuZ2VkU2VydmVyUmVzcG9uc2USEAoIZGV2aWNlSWQY",
          "ASABKAkSGwoFc3RhdGUYAiABKA4yDC5Nb3Rpb25TdGF0ZRIuCgxzZW5zb3JS",
          "ZXBvcnQYAyABKAsyGC5FbnZpcm9ubWVudFNlbnNvclJlcG9ydBIXCg9iYXR0",
          "ZXJ5Q2FwYWNpdHkYBCABKAISIAoKc3RhdHVzQ29kZRjoByABKAsyCy5TdGF0",
          "dXNDb2RlIncKHkhvbWVraXRPbkNoYW5nZWRTZXJ2ZXJSZXNwb25zZRIQCghk",
          "ZXZpY2VJZBgBIAEoCRIhCgtob21la2l0TW9kZRgCIAEoDjIMLkhvbWVraXRN",
          "b2RlEiAKCnN0YXR1c0NvZGUY6AcgASgLMgsuU3RhdHVzQ29kZSKYAQodQnV0",
          "dG9uT25DaGFuZ2VkU2VydmVyUmVzcG9uc2USEAoIZGV2aWNlSWQYASABKAkS",
          "GwoFc3RhdGUYAiABKA4yDC5CdXR0b25TdGF0ZRINCgVpbmRleBgDIAEoDRIX",
          "Cg9iYXR0ZXJ5Q2FwYWNpdHkYBCABKAISIAoKc3RhdHVzQ29kZRjoByABKAsy",
          "Cy5TdGF0dXNDb2RlIncKI0dyb3VwQ29udHJvbE9uQ2hhbmdlZFNlcnZlclJl",
          "c3BvbnNlEhAKCGRldmljZUlkGAEgASgJEhwKBXN0YXRlGAIgASgLMg0uQ29u",
          "dHJvbFN0YXRlEiAKCnN0YXR1c0NvZGUY6AcgASgLMgsuU3RhdHVzQ29kZSLQ",
          "AQogTGVkRHJpdmVyT25DaGFuZ2VkU2VydmVyUmVzcG9uc2USDQoFbGVkSWQY",
          "ASABKAkSHwoKcG93ZXJTdGF0ZRgCIAEoDjILLlBvd2VyU3RhdGUSGQoRYnJp",
          "Z2h0bmVzc1BlcmNlbnQYAyABKAUSDgoGcm9vbUlkGAQgASgJEhoKCGxlZEl0",
          "ZW1zGAUgAygLMgguTGVkSXRlbRITCgtsZWREcml2ZXJJZBgGIAEoCRIgCgpz",
          "dGF0dXNDb2RlGOgHIAEoCzILLlN0YXR1c0NvZGUitgEKKEVudmlyb25tZW50",
          "U2Vuc29yT25DaGFuZ2VkU2VydmVyUmVzcG9uc2USCgoCaWQYASABKAkSEAoI",
          "ZGV2aWNlSWQYAiABKAkSOQoXZW52aXJvbm1lbnRTZW5zb3JSZXBvcnQYAyAB",
          "KAsyGC5FbnZpcm9ubWVudFNlbnNvclJlcG9ydBIPCgdiYXR0ZXJ5GAQgASgF",
          "EiAKCnN0YXR1c0NvZGUY6AcgASgLMgsuU3RhdHVzQ29kZSKMAQogU21hcnRQ",
          "bHVnT25DaGFuZ2VkU2VydmVyUmVzcG9uc2USCgoCaWQYASABKAkSEAoIZGV2",
          "aWNlSWQYAiABKAkSCwoDYW1wGAMgASgCEg0KBXBvd2VyGAQgASgCEgwKBHZv",
          "bHQYBSABKAISIAoKc3RhdHVzQ29kZRjoByABKAsyCy5TdGF0dXNDb2RlIoEB",
          "ChVHZXRNZXRlclNlcnZlclJlcXVlc3QSDwoHbWV0ZXJJZBgBIAEoCRIUCgxz",
          "ZXJpYWxOdW1iZXIYAiABKAkSGAoEdHlwZRgDIAEoDjIKLlR5cGVNZXRlchIX",
          "CgRkYXRlGAQgASgLMgkuRGF0ZVRpbWUSDgoGbW9udGhzGAUgASgFIngKFkdl",
          "dE1ldGVyU2VydmVyUmVzcG9uc2USFQoFbWV0ZXIYASABKAsyBi5NZXRlchIl",
          "Cg1tZXRlckVzdGltYXRlGAIgAygLMg4uTWV0ZXJFc3RpbWF0ZRIgCgpzdGF0",
          "dXNDb2RlGOgHIAEoCzILLlN0YXR1c0NvZGUiMQoYVXBkYXRlTWV0ZXJTZXJ2",
          "ZXJSZXF1ZXN0EhUKBW1ldGVyGAEgASgLMgYuTWV0ZXIidwooR2V0TWV0ZXJF",
          "c3RpbWF0ZXNEYXlJbk1vbnRoU2VydmVyUmVxdWVzdBIUCgxzZXJpYWxOdW1i",
          "ZXIYASABKAkSGAoEdHlwZRgCIAEoDjIKLlR5cGVNZXRlchIMCgR5ZWFyGAMg",
          "ASgNEg0KBW1vbnRoGAQgASgNInAKKUdldE1ldGVyRXN0aW1hdGVzRGF5SW5N",
          "b250aFNlcnZlclJlc3BvbnNlEiEKCWVzdGltYXRlcxgBIAMoCzIOLk1ldGVy",
          "RXN0aW1hdGUSIAoKc3RhdHVzQ29kZRjoByABKAsyCy5TdGF0dXNDb2RlIoMB",
          "CidHZXRNZXRlckVzdGltYXRlc0hvdXJJbkRheVNlcnZlclJlcXVlc3QSFAoM",
          "c2VyaWFsTnVtYmVyGAEgASgJEhgKBHR5cGUYAiABKA4yCi5UeXBlTWV0ZXIS",
          "DAoEeWVhchgDIAEoDRINCgVtb250aBgEIAEoDRILCgNkYXkYBSABKA0ibwoo",
          "R2V0TWV0ZXJFc3RpbWF0ZXNIb3VySW5EYXlTZXJ2ZXJSZXNwb25zZRIhCgll",
          "c3RpbWF0ZXMYASADKAsyDi5NZXRlckVzdGltYXRlEiAKCnN0YXR1c0NvZGUY",
          "6AcgASgLMgsuU3RhdHVzQ29kZSIwCh5HZXRNZXRlcnNCeUhvbWVJZFNlcnZl",
          "clJlcXVlc3QSDgoGaG9tZUlkGAEgASgJImsKH0dldE1ldGVyc0J5SG9tZUlk",
          "U2VydmVyUmVzcG9uc2USDgoGaG9tZUlkGAEgASgJEhYKBm1ldGVycxgCIAMo",
          "CzIGLk1ldGVyEiAKCnN0YXR1c0NvZGUY6AcgASgLMgsuU3RhdHVzQ29kZSJF",
          "CiFHZXRNZXRlck1pc3NpbmdJbkRheVNlcnZlclJlcXVlc3QSEgoKaGFyZHdh",
          "cmVJZBgBIAEoCRIMCgRkYXRlGAIgASgFIkYKIkdldE1ldGVyTWlzc2luZ0lu",
          "RGF5U2VydmVyUmVzcG9uc2USIAoKc3RhdHVzQ29kZRjoByABKAsyCy5TdGF0",
          "dXNDb2RlIlQKGVVwZGF0ZU1ldGVyU2VydmVyUmVzcG9uc2USFQoFbWV0ZXIY",
          "ASABKAsyBi5NZXRlchIgCgpzdGF0dXNDb2RlGOgHIAEoCzILLlN0YXR1c0Nv",
          "ZGUiVwocTWV0ZXJPbkNoYW5nZWRTZXJ2ZXJSZXNwb25zZRIVCgVtZXRlchgB",
          "IAEoCzIGLk1ldGVyEiAKCnN0YXR1c0NvZGUY6AcgASgLMgsuU3RhdHVzQ29k",
          "ZSJbCiNHZXRBaXJDb25kaXRpb25lclN0YXRlU2VydmVyUmVxdWVzdBIQCghk",
          "ZXZpY2VJZBgBIAEoCRIQCghpbmRvb3JJZBgCIAEoDRIQCghyZW1vdGVJZBgD",
          "IAEoCSJtCiRHZXRBaXJDb25kaXRpb25lclN0YXRlU2VydmVyUmVzcG9uc2US",
          "IwoFc3RhdGUYASABKAsyFC5BaXJDb25kaXRpb25lclN0YXRlEiAKCnN0YXR1",
          "c0NvZGUY6AcgASgLMgsuU3RhdHVzQ29kZSJUChtBaXJDb25kaXRpb25lclNl",
          "cnZlclJlcXVlc3QSEAoIZGV2aWNlSWQYASABKAkSIwoFc3RhdGUYAiABKAsy",
          "FC5BaXJDb25kaXRpb25lclN0YXRlIkAKHEFpckNvbmRpdGlvbmVyU2VydmVy",
          "UmVzcG9uc2USIAoKc3RhdHVzQ29kZRjoByABKAsyCy5TdGF0dXNDb2RlIoAB",
          "CiVBaXJDb25kaXRpb25lck9uQ2hhbmdlZFNlcnZlclJlc3BvbnNlEhAKCGRl",
          "dmljZUlkGAEgASgJEiMKBXN0YXRlGAIgASgLMhQuQWlyQ29uZGl0aW9uZXJT",
          "dGF0ZRIgCgpzdGF0dXNDb2RlGOgHIAEoCzILLlN0YXR1c0NvZGUiRgoXR2V0",
          "UmVtb3Rlc1NlcnZlclJlcXVlc3QSDgoGaG9tZUlkGAEgASgJEhsKBWdyb3Vw",
          "GAIgASgOMgwuR3JvdXBEZXZpY2UiOgoWR2V0UmVtb3RlU2VydmVyUmVxdWVz",
          "dBIQCghyZW1vdGVJZBgBIAEoCRIOCgZob21lSWQYAiABKAkiUgofR2V0UmVt",
          "b3RlTGlicmFyaWVzU2VydmVyUmVxdWVzdBIOCgZzZWFyY2gYASABKAkSEQoJ",
          "bGFzdF9uYW1lGAIgASgJEgwKBHNpemUYAyABKA0iSwoeR2V0Q29tbWFuZHNS",
          "ZW1vdGVTZXJ2ZXJSZXF1ZXN0EhAKCHJlbW90ZUlkGAEgASgJEhcKD3JlbW90",
          "ZUxpYnJhcnlJZBgCIAEoCSKbAQoeU2VuZENvbW1hbmRSZW1vdGVTZXJ2ZXJS",
          "ZXF1ZXN0EhAKCGRldmljZUlkGAEgASgJEhAKCHJlbW90ZUlkGAIgASgJEhoK",
          "EnJlbW90ZUxpYnJhcnlDbWRJZBgDIAEoCRIfChdyZW1vdGVNdWx0aUxpYnJh",
          "cnlDbWRJZBgEIAEoCRIYCgR0eXBlGAUgASgOMgouVHlwZUxlYXJuIpwBCh9M",
          "ZWFybkNvbW1hbmRSZW1vdGVTZXJ2ZXJSZXF1ZXN0EhAKCGRldmljZUlkGAEg",
          "ASgJEhAKCHJlbW90ZUlkGAIgASgJEhoKEnJlbW90ZUxpYnJhcnlDbWRJZBgD",
          "IAEoCRIfChdyZW1vdGVNdWx0aUxpYnJhcnlDbWRJZBgEIAEoCRIYCgR0eXBl",
          "GAUgASgOMgouVHlwZUxlYXJuInIKIVJlc3RvcmVDb21tYW5kUmVtb3RlU2Vy",
          "dmVyUmVxdWVzdBIQCghyZW1vdGVJZBgBIAEoCRIaChJyZW1vdGVMaWJyYXJ5",
          "Q21kSWQYAiABKAkSHwoXcmVtb3RlTXVsdGlMaWJyYXJ5Q21kSWQYAyABKAki",
          "MQoWQWRkUmVtb3RlU2VydmVyUmVxdWVzdBIXCgZyZW1vdGUYASABKAsyBy5S",
          "ZW1vdGUiNAoZVXBkYXRlUmVtb3RlU2VydmVyUmVxdWVzdBIXCgZyZW1vdGUY",
          "ASABKAsyBy5SZW1vdGUiLQoZRGVsZXRlUmVtb3RlU2VydmVyUmVxdWVzdBIQ",
          "CghyZW1vdGVJZBgBIAEoCSIwChxHZXRSZW1vdGVNdWx0aXNTZXJ2ZXJSZXF1",
          "ZXN0EhAKCHJlbW90ZUlkGAEgASgJIkAKG0FkZFJlbW90ZU11bHRpU2VydmVy",
          "UmVxdWVzdBIhCgtyZW1vdGVNdWx0aRgBIAEoCzIMLlJlbW90ZU11bHRpIiwK",
          "HkRlbGV0ZVJlbW90ZU11bHRpU2VydmVyUmVxdWVzdBIKCgJpZBgBIAEoCSJe",
          "CiVBZGRSZW1vdGVNdWx0aUxpYnJhcnlDbWRTZXJ2ZXJSZXF1ZXN0EjUKFXJl",
          "bW90ZU11bHRpTGlicmFyeUNtZBgBIAEoCzIWLlJlbW90ZU11bHRpTGlicmFy",
          "eUNtZCJhCihVcGRhdGVSZW1vdGVNdWx0aUxpYnJhcnlDbWRTZXJ2ZXJSZXF1",
          "ZXN0EjUKFXJlbW90ZU11bHRpTGlicmFyeUNtZBgBIAEoCzIWLlJlbW90ZU11",
          "bHRpTGlicmFyeUNtZCJmCi1VcGRhdGVHcm91cFJlbW90ZU11bHRpTGlicmFy",
          "eUNtZFNlcnZlclJlcXVlc3QSNQoVcmVtb3RlTXVsdGlMaWJyYXJ5Q21kGAEg",
          "AygLMhYuUmVtb3RlTXVsdGlMaWJyYXJ5Q21kIjYKKERlbGV0ZVJlbW90ZU11",
          "bHRpTGlicmFyeUNtZFNlcnZlclJlcXVlc3QSCgoCaWQYASABKAkiMwofR2V0",
          "UmVtb3RlU2NoZWR1bGVzU2VydmVyUmVxdWVzdBIQCghyZW1vdGVJZBgBIAEo",
          "CSI3CiNHZXRDb3VudFJlbW90ZVNjaGVkdWxlU2VydmVyUmVxdWVzdBIQCghy",
          "ZW1vdGVJZBgBIAEoCSI6Ch5HZXRSZW1vdGVTY2hlZHVsZVNlcnZlclJlcXVl",
          "c3QSGAoQcmVtb3RlU2NoZWR1bGVJZBgBIAEoCSJDCh5BZGRSZW1vdGVTY2hl",
          "ZHVsZVNlcnZlclJlcXVlc3QSIQoIc2NoZWR1bGUYAiABKAsyDy5SZW1vdGVT",
          "Y2hlZHVsZSJGCiFVcGRhdGVSZW1vdGVTY2hlZHVsZVNlcnZlclJlcXVlc3QS",
          "IQoIc2NoZWR1bGUYAiABKAsyDy5SZW1vdGVTY2hlZHVsZSI9CiFEZWxldGVS",
          "ZW1vdGVTY2hlZHVsZVNlcnZlclJlcXVlc3QSGAoQcmVtb3RlU2NoZWR1bGVJ",
          "ZBgBIAEoCSJQCiRTZXRBY3RpdmVSZW1vdGVTY2hlZHVsZVNlcnZlclJlcXVl",
          "c3QSDgoGYWN0aXZlGAEgASgIEhgKEHJlbW90ZVNjaGVkdWxlSWQYAiABKAki",
          "VgoYR2V0UmVtb3Rlc1NlcnZlclJlc3BvbnNlEhgKB3JlbW90ZXMYASADKAsy",
          "By5SZW1vdGUSIAoKc3RhdHVzQ29kZRjoByABKAsyCy5TdGF0dXNDb2RlIlQK",
          "F0dldFJlbW90ZVNlcnZlclJlc3BvbnNlEhcKBnJlbW90ZRgBIAEoCzIHLlJl",
          "bW90ZRIgCgpzdGF0dXNDb2RlGOgHIAEoCzILLlN0YXR1c0NvZGUiZwogR2V0",
          "UmVtb3RlTGlicmFyaWVzU2VydmVyUmVzcG9uc2USIQoJbGlicmFyaWVzGAEg",
          "AygLMg4uUmVtb3RlTGlicmFyeRIgCgpzdGF0dXNDb2RlGOgHIAEoCzILLlN0",
          "YXR1c0NvZGUiZQofR2V0Q29tbWFuZHNSZW1vdGVTZXJ2ZXJSZXNwb25zZRIg",
          "Cghjb21tYW5kcxgBIAMoCzIOLlJlbW90ZUNvbW1hbmQSIAoKc3RhdHVzQ29k",
          "ZRjoByABKAsyCy5TdGF0dXNDb2RlIkMKH1NlbmRDb21tYW5kUmVtb3RlU2Vy",
          "dmVyUmVzcG9uc2USIAoKc3RhdHVzQ29kZRjoByABKAsyCy5TdGF0dXNDb2Rl",
          "IkQKIExlYXJuQ29tbWFuZFJlbW90ZVNlcnZlclJlc3BvbnNlEiAKCnN0YXR1",
          "c0NvZGUY6AcgASgLMgsuU3RhdHVzQ29kZSJGCiJSZXN0b3JlQ29tbWFuZFJl",
          "bW90ZVNlcnZlclJlc3BvbnNlEiAKCnN0YXR1c0NvZGUY6AcgASgLMgsuU3Rh",
          "dHVzQ29kZSJUChdBZGRSZW1vdGVTZXJ2ZXJSZXNwb25zZRIXCgZyZW1vdGUY",
          "ASABKAsyBy5SZW1vdGUSIAoKc3RhdHVzQ29kZRjoByABKAsyCy5TdGF0dXND",
          "b2RlIlcKGlVwZGF0ZVJlbW90ZVNlcnZlclJlc3BvbnNlEhcKBnJlbW90ZRgB",
          "IAEoCzIHLlJlbW90ZRIgCgpzdGF0dXNDb2RlGOgHIAEoCzILLlN0YXR1c0Nv",
          "ZGUiPgoaRGVsZXRlUmVtb3RlU2VydmVyUmVzcG9uc2USIAoKc3RhdHVzQ29k",
          "ZRjoByABKAsyCy5TdGF0dXNDb2RlIkEKHVJlbW90ZU9uQ2hhbmdlZFNlcnZl",
          "clJlc3BvbnNlEiAKCnN0YXR1c0NvZGUY6AcgASgLMgsuU3RhdHVzQ29kZSJl",
          "Ch1HZXRSZW1vdGVNdWx0aXNTZXJ2ZXJSZXNwb25zZRIiCgxyZW1vdGVNdWx0",
          "aXMYASADKAsyDC5SZW1vdGVNdWx0aRIgCgpzdGF0dXNDb2RlGOgHIAEoCzIL",
          "LlN0YXR1c0NvZGUiYwocQWRkUmVtb3RlTXVsdGlTZXJ2ZXJSZXNwb25zZRIh",
          "CgtyZW1vdGVNdWx0aRgBIAEoCzIMLlJlbW90ZU11bHRpEiAKCnN0YXR1c0Nv",
          "ZGUY6AcgASgLMgsuU3RhdHVzQ29kZSJDCh9EZWxldGVSZW1vdGVNdWx0aVNl",
          "cnZlclJlc3BvbnNlEiAKCnN0YXR1c0NvZGUY6AcgASgLMgsuU3RhdHVzQ29k",
          "ZSKBAQomQWRkUmVtb3RlTXVsdGlMaWJyYXJ5Q21kU2VydmVyUmVzcG9uc2US",
          "NQoVcmVtb3RlTXVsdGlMaWJyYXJ5Q21kGAEgASgLMhYuUmVtb3RlTXVsdGlM",
          "aWJyYXJ5Q21kEiAKCnN0YXR1c0NvZGUY6AcgASgLMgsuU3RhdHVzQ29kZSKE",
          "AQopVXBkYXRlUmVtb3RlTXVsdGlMaWJyYXJ5Q21kU2VydmVyUmVzcG9uc2US",
          "NQoVcmVtb3RlTXVsdGlMaWJyYXJ5Q21kGAEgASgLMhYuUmVtb3RlTXVsdGlM",
          "aWJyYXJ5Q21kEiAKCnN0YXR1c0NvZGUY6AcgASgLMgsuU3RhdHVzQ29kZSKJ",
          "AQouVXBkYXRlR3JvdXBSZW1vdGVNdWx0aUxpYnJhcnlDbWRTZXJ2ZXJSZXNw",
          "b25zZRI1ChVyZW1vdGVNdWx0aUxpYnJhcnlDbWQYASADKAsyFi5SZW1vdGVN",
          "dWx0aUxpYnJhcnlDbWQSIAoKc3RhdHVzQ29kZRjoByABKAsyCy5TdGF0dXND",
          "b2RlIk0KKURlbGV0ZVJlbW90ZU11bHRpTGlicmFyeUNtZFNlcnZlclJlc3Bv",
          "bnNlEiAKCnN0YXR1c0NvZGUY6AcgASgLMgsuU3RhdHVzQ29kZSJoCiBHZXRS",
          "ZW1vdGVTY2hlZHVsZXNTZXJ2ZXJSZXNwb25zZRIiCglzY2hlZHVsZXMYASAD",
          "KAsyDy5SZW1vdGVTY2hlZHVsZRIgCgpzdGF0dXNDb2RlGOgHIAEoCzILLlN0",
          "YXR1c0NvZGUiVwokR2V0Q291bnRSZW1vdGVTY2hlZHVsZVNlcnZlclJlc3Bv",
          "bnNlEg0KBWNvdW50GAEgASgNEiAKCnN0YXR1c0NvZGUY6AcgASgLMgsuU3Rh",
          "dHVzQ29kZSJmCh9HZXRSZW1vdGVTY2hlZHVsZVNlcnZlclJlc3BvbnNlEiEK",
          "CHNjaGVkdWxlGAEgASgLMg8uUmVtb3RlU2NoZWR1bGUSIAoKc3RhdHVzQ29k",
          "ZRjoByABKAsyCy5TdGF0dXNDb2RlImYKH0FkZFJlbW90ZVNjaGVkdWxlU2Vy",
          "dmVyUmVzcG9uc2USIQoIc2NoZWR1bGUYASABKAsyDy5SZW1vdGVTY2hlZHVs",
          "ZRIgCgpzdGF0dXNDb2RlGOgHIAEoCzILLlN0YXR1c0NvZGUiaQoiVXBkYXRl",
          "UmVtb3RlU2NoZWR1bGVTZXJ2ZXJSZXNwb25zZRIhCghzY2hlZHVsZRgBIAEo",
          "CzIPLlJlbW90ZVNjaGVkdWxlEiAKCnN0YXR1c0NvZGUY6AcgASgLMgsuU3Rh",
          "dHVzQ29kZSJGCiJEZWxldGVSZW1vdGVTY2hlZHVsZVNlcnZlclJlc3BvbnNl",
          "EiAKCnN0YXR1c0NvZGUY6AcgASgLMgsuU3RhdHVzQ29kZSJJCiVTZXRBY3Rp",
          "dmVSZW1vdGVTY2hlZHVsZVNlcnZlclJlc3BvbnNlEiAKCnN0YXR1c0NvZGUY",
          "6AcgASgLMgsuU3RhdHVzQ29kZSIoChZHZXRTY2VuZXNTZXJ2ZXJSZXF1ZXN0",
          "Eg4KBmhvbWVJZBgBIAEoCSIoChVHZXRTY2VuZVNlcnZlclJlcXVlc3QSDwoH",
          "c2NlbmVJZBgBIAEoCSIuChVBZGRTY2VuZVNlcnZlclJlcXVlc3QSFQoFc2Nl",
          "bmUYASABKAsyBi5TY2VuZSIxChhVcGRhdGVTY2VuZVNlcnZlclJlcXVlc3QS",
          "FQoFc2NlbmUYASABKAsyBi5TY2VuZSIrChhEZWxldGVTY2VuZVNlcnZlclJl",
          "cXVlc3QSDwoHc2NlbmVJZBgBIAEoCSI3CiREZWxldGVTd2l0Y2hlckNvbmRp",
          "dGlvblNlcnZlclJlcXVlc3QSDwoHc2NlbmVJZBgBIAEoCSI3Ch5EZWxldGVT",
          "Y2VuZUFjdGlvblNlcnZlclJlcXVlc3QSFQoNc2NlbmVBY3Rpb25JZBgBIAEo",
          "CSIoChVSdW5TY2VuZVNlcnZlclJlcXVlc3QSDwoHc2NlbmVJZBgBIAEoCSK0",
          "AQoSU2NlbmVTZXJ2ZXJSZXF1ZXN0EhAKCGRldmljZUlkGAEgASgJEg8KB3Nj",
          "ZW5lSWQYAiABKAkSHgoGc291cmNlGAMgASgLMg4uRGV2aWNlSW5TY2VuZRIe",
          "CgZ0YXJnZXQYBCADKAsyDi5EZXZpY2VJblNjZW5lEgwKBHR5cGUYBSABKA0S",
          "DAoEbW9kZRgGIAEoDRIfCgphY3RpdmVUaW1lGAcgASgLMgsuQWN0aXZlVGlt",
          "ZSIxCh5TY2VuZVJldHJ5Q29uZmlybVNlcnZlclJlcXVlc3QSDwoHc2NlbmVJ",
          "ZBgBIAEoCSJTChdHZXRTY2VuZXNTZXJ2ZXJSZXNwb25zZRIWCgZzY2VuZXMY",
          "ASADKAsyBi5TY2VuZRIgCgpzdGF0dXNDb2RlGOgHIAEoCzILLlN0YXR1c0Nv",
          "ZGUiUQoWR2V0U2NlbmVTZXJ2ZXJSZXNwb25zZRIVCgVzY2VuZRgBIAEoCzIG",
          "LlNjZW5lEiAKCnN0YXR1c0NvZGUY6AcgASgLMgsuU3RhdHVzQ29kZSJRChZB",
          "ZGRTY2VuZVNlcnZlclJlc3BvbnNlEhUKBXNjZW5lGAEgASgLMgYuU2NlbmUS",
          "IAoKc3RhdHVzQ29kZRjoByABKAsyCy5TdGF0dXNDb2RlIlQKGVVwZGF0ZVNj",
          "ZW5lU2VydmVyUmVzcG9uc2USFQoFc2NlbmUYASABKAsyBi5TY2VuZRIgCgpz",
          "dGF0dXNDb2RlGOgHIAEoCzILLlN0YXR1c0NvZGUiTgoZRGVsZXRlU2NlbmVT",
          "ZXJ2ZXJSZXNwb25zZRIPCgdzY2VuZUlkGAEgASgJEiAKCnN0YXR1c0NvZGUY",
          "6AcgASgLMgsuU3RhdHVzQ29kZSJJCiVEZWxldGVTd2l0Y2hlckNvbmRpdGlv",
          "blNlcnZlclJlc3BvbnNlEiAKCnN0YXR1c0NvZGUY6AcgASgLMgsuU3RhdHVz",
          "Q29kZSJDCh9EZWxldGVTY2VuZUFjdGlvblNlcnZlclJlc3BvbnNlEiAKCnN0",
          "YXR1c0NvZGUY6AcgASgLMgsuU3RhdHVzQ29kZSI6ChZSdW5TY2VuZVNlcnZl",
          "clJlc3BvbnNlEiAKCnN0YXR1c0NvZGUY6AcgASgLMgsuU3RhdHVzQ29kZSI3",
          "ChNTY2VuZVNlcnZlclJlc3BvbnNlEiAKCnN0YXR1c0NvZGUY6AcgASgLMgsu",
          "U3RhdHVzQ29kZSJUCh9TY2VuZVJldHJ5Q29uZmlybVNlcnZlclJlc3BvbnNl",
          "Eg8KB3NjZW5lSWQYASABKAkSIAoKc3RhdHVzQ29kZRjoByABKAsyCy5TdGF0",
          "dXNDb2RlInIKHFNjZW5lT25DaGFuZ2VkU2VydmVyUmVzcG9uc2USDwoHc2Nl",
          "bmVJZBgBIAEoCRIRCgljb25maXJtZWQYAiABKAgSDAoEbW9kZRgDIAEoDRIg",
          "CgpzdGF0dXNDb2RlGOgHIAEoCzILLlN0YXR1c0NvZGUiQAobU2V0U2NlbmVT",
          "dGF0dXNTZXJ2ZXJSZXF1ZXN0Eg8KB3NjZW5lSWQYASABKAkSEAoIaXNFbmFi",
          "bGUYAiABKAgiQAocU2V0U2NlbmVTdGF0dXNTZXJ2ZXJSZXNwb25zZRIgCgpz",
          "dGF0dXNDb2RlGOgHIAEoCzILLlN0YXR1c0NvZGUiLwoWVGVzdFNjZW5lU2Vy",
          "dmVyUmVxdWVzdBIVCgVzY2VuZRgBIAEoCzIGLlNjZW5lIjsKF1Rlc3RTY2Vu",
          "ZVNlcnZlclJlc3BvbnNlEiAKCnN0YXR1c0NvZGUY6AcgASgLMgsuU3RhdHVz",
          "Q29kZSIpChdHZXRIb21lVGFiU2VydmVyUmVxdWVzdBIOCgZob21lSWQYASAB",
          "KAkiwgQKGEdldEhvbWVUYWJTZXJ2ZXJSZXNwb25zZRIiCg9zdGF0dXNTd2l0",
          "Y2hlcnMYASADKAsyCS5Td2l0Y2hlchIWCgZzY2VuZXMYAiADKAsyBi5TY2Vu",
          "ZRIkChFmYXZvcml0ZVN3aXRjaGVycxgDIAMoCzIJLlN3aXRjaGVyEjIKGGZh",
          "dm9yaXRlQ3VydGFpblN3aXRjaGVycxgEIAMoCzIQLkN1cnRhaW5Td2l0Y2hl",
          "chIgCg9mYXZvcml0ZVJlbW90ZXMYBSADKAsyBy5SZW1vdGUSFQoFbWV0ZXIY",
          "BiADKAsyBi5NZXRlchIoCgpzdGF0dXNSb29tGAcgASgLMhQuQWlyQ29uZGl0",
          "aW9uZXJTdGF0ZRIOCgZob21lSWQYCCABKAkSIAoPZmF2b3JpdGVNb3Rpb25z",
          "GAkgAygLMgcuTW90aW9uEiIKEGZhdm9yaXRlSG9tZWtpdHMYCiADKAsyCC5I",
          "b21la2l0EiAKD2Zhdm9yaXRlQnV0dG9ucxgLIAMoCzIHLkJ1dHRvbhIsChVm",
          "YXZvcml0ZUdyb3VwQ29udHJvbHMYDCADKAsyDS5Hcm91cENvbnRyb2wSEwoL",
          "ZmVhdHVyZUNvZGUYDSABKA0SHgoNc3RhdHVzUmVtb3RlcxgOIAMoCzIHLlJl",
          "bW90ZRIwChZzdGF0dXNDdXJ0YWluU3dpdGNoZXJzGA8gAygLMhAuQ3VydGFp",
          "blN3aXRjaGVyEiAKCnN0YXR1c0NvZGUY6AcgASgLMgsuU3RhdHVzQ29kZSIt",
          "ChtHZXRFbGVjdHJpY1RhYlNlcnZlclJlcXVlc3QSDgoGaG9tZUlkGAEgASgJ",
          "ImYKHEdldEVsZWN0cmljVGFiU2VydmVyUmVzcG9uc2USFAoFcm9vbXMYASAD",
          "KAsyBS5Sb29tEg4KBmhvbWVJZBgCIAEoCRIgCgpzdGF0dXNDb2RlGOgHIAEo",
          "CzILLlN0YXR1c0NvZGUiSgobR2V0U3dpdGNoZXJUYWJTZXJ2ZXJSZXF1ZXN0",
          "Eg4KBmhvbWVJZBgBIAEoCRIbCgVncm91cBgCIAEoDjIMLkdyb3VwRGV2aWNl",
          "IlYKHEdldFN3aXRjaGVyVGFiU2VydmVyUmVzcG9uc2USFAoFcm9vbXMYASAD",
          "KAsyBS5Sb29tEiAKCnN0YXR1c0NvZGUY6AcgASgLMgsuU3RhdHVzQ29kZSJr",
          "ChNNb3Rpb25TZXJ2ZXJSZXF1ZXN0EhAKCGRldmljZUlkGAEgASgJEiEKC21v",
          "dGlvblN0YXRlGAIgASgOMgwuTW90aW9uU3RhdGUSHwoEdHlwZRgDIAEoDjIR",
          "Lk1vdGlvblNlbnNvclR5cGUiOAoUTW90aW9uU2VydmVyUmVzcG9uc2USIAoK",
          "c3RhdHVzQ29kZRjoByABKAsyCy5TdGF0dXNDb2RlIksKFkdldE1vdGlvblNl",
          "cnZlclJlcXVlc3QSEAoIbW90aW9uSWQYASABKAkSHwoEdHlwZRgCIAEoDjIR",
          "Lk1vdGlvblNlbnNvclR5cGUiVAoXR2V0TW90aW9uU2VydmVyUmVzcG9uc2US",
          "FwoGbW90aW9uGAEgASgLMgcuTW90aW9uEiAKCnN0YXR1c0NvZGUY6AcgASgL",
          "MgsuU3RhdHVzQ29kZSI0ChlVcGRhdGVNb3Rpb25TZXJ2ZXJSZXF1ZXN0EhcK",
          "Bm1vdGlvbhgBIAEoCzIHLk1vdGlvbiI+ChpVcGRhdGVNb3Rpb25TZXJ2ZXJS",
          "ZXNwb25zZRIgCgpzdGF0dXNDb2RlGOgHIAEoCzILLlN0YXR1c0NvZGUiMAob",
          "R2V0SG9tZWtpdEluZm9TZXJ2ZXJSZXF1ZXN0EhEKCWhvbWVraXRJZBgBIAEo",
          "CSJbChxHZXRIb21la2l0SW5mb1NlcnZlclJlc3BvbnNlEhkKB2hvbWVraXQY",
          "ASABKAsyCC5Ib21la2l0EiAKCnN0YXR1c0NvZGUY6AcgASgLMgsuU3RhdHVz",
          "Q29kZSI3ChpVcGRhdGVIb21la2l0U2VydmVyUmVxdWVzdBIZCgdob21la2l0",
          "GAEgASgLMgguSG9tZWtpdCI/ChtVcGRhdGVIb21la2l0U2VydmVyUmVzcG9u",
          "c2USIAoKc3RhdHVzQ29kZRjoByABKAsyCy5TdGF0dXNDb2RlIlIKG1NldEhv",
          "bWVraXRNb2RlU2VydmVyUmVxdWVzdBIQCghkZXZpY2VJZBgBIAEoCRIhCgto",
          "b21la2l0TW9kZRgCIAEoDjIMLkhvbWVraXRNb2RlIkAKHFNldEhvbWVraXRN",
          "b2RlU2VydmVyUmVzcG9uc2USIAoKc3RhdHVzQ29kZRjoByABKAsyCy5TdGF0",
          "dXNDb2RlIi4KGkdldEJ1dHRvbkluZm9TZXJ2ZXJSZXF1ZXN0EhAKCGJ1dHRv",
          "bklkGAEgASgJIlgKG0dldEJ1dHRvbkluZm9TZXJ2ZXJSZXNwb25zZRIXCgZi",
          "dXR0b24YASABKAsyBy5CdXR0b24SIAoKc3RhdHVzQ29kZRjoByABKAsyCy5T",
          "dGF0dXNDb2RlIjQKGVVwZGF0ZUJ1dHRvblNlcnZlclJlcXVlc3QSFwoGYnV0",
          "dG9uGAEgASgLMgcuQnV0dG9uIj4KGlVwZGF0ZUJ1dHRvblNlcnZlclJlc3Bv",
          "bnNlEiAKCnN0YXR1c0NvZGUY6AcgASgLMgsuU3RhdHVzQ29kZSJLChlHcm91",
          "cENvbnRyb2xTZXJ2ZXJSZXF1ZXN0EhAKCGRldmljZUlkGAEgASgJEhwKBXN0",
          "YXRlGAIgASgLMg0uQ29udHJvbFN0YXRlIlwKGkdyb3VwQ29udHJvbFNlcnZl",
          "clJlc3BvbnNlEhwKBXN0YXRlGAEgASgLMg0uQ29udHJvbFN0YXRlEiAKCnN0",
          "YXR1c0NvZGUY6AcgASgLMgsuU3RhdHVzQ29kZSIuCiBHZXRHcm91cENvbnRy",
          "b2xJbmZvU2VydmVyUmVxdWVzdBIKCgJpZBgBIAEoCSJqCiFHZXRHcm91cENv",
          "bnRyb2xJbmZvU2VydmVyUmVzcG9uc2USIwoMZ3JvdXBDb250cm9sGAEgASgL",
          "Mg0uR3JvdXBDb250cm9sEiAKCnN0YXR1c0NvZGUY6AcgASgLMgsuU3RhdHVz",
          "Q29kZSIyChhHZXRDb250cm9sc1NlcnZlclJlcXVlc3QSFgoOZ3JvdXBDb250",
          "cm9sSWQYASABKAkiUwoZR2V0Q29udHJvbHNTZXJ2ZXJSZXNwb25zZRIUCgVy",
          "b29tcxgBIAMoCzIFLlJvb20SIAoKc3RhdHVzQ29kZRjoByABKAsyCy5TdGF0",
          "dXNDb2RlIkMKHEFkZEdyb3VwQ29udHJvbFNlcnZlclJlcXVlc3QSIwoMZ3Jv",
          "dXBDb250cm9sGAEgASgLMg0uR3JvdXBDb250cm9sImYKHUFkZEdyb3VwQ29u",
          "dHJvbFNlcnZlclJlc3BvbnNlEiMKDGdyb3VwQ29udHJvbBgCIAEoCzINLkdy",
          "b3VwQ29udHJvbBIgCgpzdGF0dXNDb2RlGOgHIAEoCzILLlN0YXR1c0NvZGUi",
          "RgofVXBkYXRlR3JvdXBDb250cm9sU2VydmVyUmVxdWVzdBIjCgxncm91cENv",
          "bnRyb2wYASABKAsyDS5Hcm91cENvbnRyb2wiRAogVXBkYXRlR3JvdXBDb250",
          "cm9sU2VydmVyUmVzcG9uc2USIAoKc3RhdHVzQ29kZRjoByABKAsyCy5TdGF0",
          "dXNDb2RlIi0KH0RlbGV0ZUdyb3VwQ29udHJvbFNlcnZlclJlcXVlc3QSCgoC",
          "aWQYASABKAkiRAogRGVsZXRlR3JvdXBDb250cm9sU2VydmVyUmVzcG9uc2US",
          "IAoKc3RhdHVzQ29kZRjoByABKAsyCy5TdGF0dXNDb2RlIj0KEUVjaG9TZXJ2",
          "ZXJSZXF1ZXN0Eg8KB21lc3NhZ2UYASABKAkSFwoEdHlwZRgCIAEoDjIJLlR5",
          "cGVFY2hvImAKEkVjaG9TZXJ2ZXJSZXNwb25zZRIPCgdtZXNzYWdlGAEgASgJ",
          "EhcKBHR5cGUYAiABKA4yCS5UeXBlRWNobxIgCgpzdGF0dXNDb2RlGOgHIAEo",
          "CzILLlN0YXR1c0NvZGUiKAoXR2V0VXNlck90cFNlcnZlclJlcXVlc3QSDQoF",
          "cGhvbmUYASABKAkihwEKGEdldFVzZXJPdHBTZXJ2ZXJSZXNwb25zZRIKCgJp",
          "ZBgBIAEoCRINCgVwaG9uZRgCIAEoCRIMCgRjb2RlGAMgASgJEg4KBmFjdGl2",
          "ZRgEIAEoBRIQCghzZW5kRGF0ZRgFIAEoDRIgCgpzdGF0dXNDb2RlGOgHIAEo",
          "CzILLlN0YXR1c0NvZGUi3wMKEUF1dGhTZXJ2ZXJNZXNzYWdlEi8KEmxvZ2lu",
          "U2VydmVyUmVxdWVzdBgBIAEoCzITLkxvZ2luU2VydmVyUmVxdWVzdBIxChNs",
          "b2dpblNlcnZlclJlc3BvbnNlGAIgASgLMhQuTG9naW5TZXJ2ZXJSZXNwb25z",
          "ZRI9ChlyZWZyZXNoVG9rZW5TZXJ2ZXJSZXF1ZXN0GAMgASgLMhouUmVmcmVz",
          "aFRva2VuU2VydmVyUmVxdWVzdBI/ChpyZWZyZXNoVG9rZW5TZXJ2ZXJSZXNw",
          "b25zZRgEIAEoCzIbLlJlZnJlc2hUb2tlblNlcnZlclJlc3BvbnNlEjUKFXNl",
          "bmRDb2RlU2VydmVyUmVxdWVzdBgFIAEoCzIWLlNlbmRDb2RlU2VydmVyUmVx",
          "dWVzdBI3ChZzZW5kQ29kZVNlcnZlclJlc3BvbnNlGAYgASgLMhcuU2VuZENv",
          "ZGVTZXJ2ZXJSZXNwb25zZRI5Chd2ZXJpZnlDb2RlU2VydmVyUmVxdWVzdBgH",
          "IAEoCzIYLlZlcmlmeUNvZGVTZXJ2ZXJSZXF1ZXN0EjsKGHZlcmlmeUNvZGVT",
          "ZXJ2ZXJSZXNwb25zZRgIIAEoCzIZLlZlcmlmeUNvZGVTZXJ2ZXJSZXNwb25z",
          "ZSKrCAoRVXNlclNlcnZlck1lc3NhZ2USOwoYZ2V0VXNlckluZm9TZXJ2ZXJS",
          "ZXF1ZXN0GAEgASgLMhkuR2V0VXNlckluZm9TZXJ2ZXJSZXF1ZXN0Ej0KGWdl",
          "dFVzZXJJbmZvU2VydmVyUmVzcG9uc2UYAiABKAsyGi5HZXRVc2VySW5mb1Nl",
          "cnZlclJlc3BvbnNlEkEKG3VwZGF0ZVVzZXJJbmZvU2VydmVyUmVxdWVzdBgD",
          "IAEoCzIcLlVwZGF0ZVVzZXJJbmZvU2VydmVyUmVxdWVzdBJDChx1cGRhdGVV",
          "c2VySW5mb1NlcnZlclJlc3BvbnNlGAQgASgLMh0uVXBkYXRlVXNlckluZm9T",
          "ZXJ2ZXJSZXNwb25zZRJLCiBzZXRPbmVzaWduYWxGb3JVc2VyU2VydmVyUmVx",
          "dWVzdBgFIAEoCzIhLlNldE9uZXNpZ25hbEZvclVzZXJTZXJ2ZXJSZXF1ZXN0",
          "Ek0KIXNldE9uZXNpZ25hbEZvclVzZXJTZXJ2ZXJSZXNwb25zZRgGIAEoCzIi",
          "LlNldE9uZXNpZ25hbEZvclVzZXJTZXJ2ZXJSZXNwb25zZRJJCh9jaGFuZ2Vk",
          "SG9tZUZvclVzZXJTZXJ2ZXJSZXF1ZXN0GAcgASgLMiAuQ2hhbmdlZEhvbWVG",
          "b3JVc2VyU2VydmVyUmVxdWVzdBJLCiBjaGFuZ2VkSG9tZUZvclVzZXJTZXJ2",
          "ZXJSZXNwb25zZRgIIAEoCzIhLkNoYW5nZWRIb21lRm9yVXNlclNlcnZlclJl",
          "c3BvbnNlEjUKFWdldFVzZXJzU2VydmVyUmVxdWVzdBgJIAEoCzIWLkdldFVz",
          "ZXJzU2VydmVyUmVxdWVzdBI3ChZnZXRVc2Vyc1NlcnZlclJlc3BvbnNlGAog",
          "ASgLMhcuR2V0VXNlcnNTZXJ2ZXJSZXNwb25zZRI5ChdzZWFyY2hVc2VyU2Vy",
          "dmVyUmVxdWVzdBgLIAEoCzIYLlNlYXJjaFVzZXJTZXJ2ZXJSZXF1ZXN0EjsK",
          "GHNlYXJjaFVzZXJTZXJ2ZXJSZXNwb25zZRgMIAEoCzIZLlNlYXJjaFVzZXJT",
          "ZXJ2ZXJSZXNwb25zZRI9ChlBdmF0YXJVcGxvYWRTZXJ2ZXJSZXF1ZXN0GA0g",
          "ASgLMhouQXZhdGFyVXBsb2FkU2VydmVyUmVxdWVzdBI/ChpBdmF0YXJVcGxv",
          "YWRTZXJ2ZXJSZXNwb25zZRgOIAEoCzIbLkF2YXRhclVwbG9hZFNlcnZlclJl",
          "c3BvbnNlEjkKF2dldFVzZXJPdHBTZXJ2ZXJSZXF1ZXN0GA8gASgLMhguR2V0",
          "VXNlck90cFNlcnZlclJlcXVlc3QSOwoYZ2V0VXNlck90cFNlcnZlclJlc3Bv",
          "bnNlGBAgASgLMhkuR2V0VXNlck90cFNlcnZlclJlc3BvbnNlIosKChFIb21l",
          "U2VydmVyTWVzc2FnZRI1ChVnZXRIb21lc1NlcnZlclJlcXVlc3QYASABKAsy",
          "Fi5HZXRIb21lc1NlcnZlclJlcXVlc3QSNwoWZ2V0SG9tZXNTZXJ2ZXJSZXNw",
          "b25zZRgCIAEoCzIXLkdldEhvbWVzU2VydmVyUmVzcG9uc2USMwoUYWRkSG9t",
          "ZVNlcnZlclJlcXVlc3QYAyABKAsyFS5BZGRIb21lU2VydmVyUmVxdWVzdBI1",
          "ChVhZGRIb21lU2VydmVyUmVzcG9uc2UYBCABKAsyFi5BZGRIb21lU2VydmVy",
          "UmVzcG9uc2USOQoXdXBkYXRlSG9tZVNlcnZlclJlcXVlc3QYBSABKAsyGC5V",
          "cGRhdGVIb21lU2VydmVyUmVxdWVzdBI7Chh1cGRhdGVIb21lU2VydmVyUmVz",
          "cG9uc2UYBiABKAsyGS5VcGRhdGVIb21lU2VydmVyUmVzcG9uc2USOQoXZGVs",
          "ZXRlSG9tZVNlcnZlclJlcXVlc3QYByABKAsyGC5EZWxldGVIb21lU2VydmVy",
          "UmVxdWVzdBI7ChhkZWxldGVIb21lU2VydmVyUmVzcG9uc2UYCCABKAsyGS5E",
          "ZWxldGVIb21lU2VydmVyUmVzcG9uc2USQQobZ2V0Q2l0aXplbkluZm9TZXJ2",
          "ZXJSZXF1ZXN0GAkgASgLMhwuR2V0Q2l0aXplbkluZm9TZXJ2ZXJSZXF1ZXN0",
          "EkMKHGdldENpdGl6ZW5JbmZvU2VydmVyUmVzcG9uc2UYCiABKAsyHS5HZXRD",
          "aXRpemVuSW5mb1NlcnZlclJlc3BvbnNlEjkKF3NldENpdGl6ZW5TZXJ2ZXJS",
          "ZXF1ZXN0GAsgASgLMhguU2V0Q2l0aXplblNlcnZlclJlcXVlc3QSOwoYc2V0",
          "Q2l0aXplblNlcnZlclJlc3BvbnNlGAwgASgLMhkuU2V0Q2l0aXplblNlcnZl",
          "clJlc3BvbnNlEj8KGnNldEdwc0ZvckhvbWVTZXJ2ZXJSZXF1ZXN0GA0gASgL",
          "MhsuU2V0R3BzRm9ySG9tZVNlcnZlclJlcXVlc3QSQQobc2V0R3BzRm9ySG9t",
          "ZVNlcnZlclJlc3BvbnNlGA4gASgLMhwuU2V0R3BzRm9ySG9tZVNlcnZlclJl",
          "c3BvbnNlEjsKGGdldEhvbWVJbmZvU2VydmVyUmVxdWVzdBgPIAEoCzIZLkdl",
          "dEhvbWVJbmZvU2VydmVyUmVxdWVzdBI9ChlnZXRIb21lSW5mb1NlcnZlclJl",
          "c3BvbnNlGBAgASgLMhouR2V0SG9tZUluZm9TZXJ2ZXJSZXNwb25zZRJDChxn",
          "ZXRIb21lc0J5UGhvbmVTZXJ2ZXJSZXF1ZXN0GBEgASgLMh0uR2V0SG9tZXNC",
          "eVBob25lU2VydmVyUmVxdWVzdBJFCh1nZXRIb21lc0J5UGhvbmVTZXJ2ZXJS",
          "ZXNwb25zZRgSIAEoCzIeLkdldEhvbWVzQnlQaG9uZVNlcnZlclJlc3BvbnNl",
          "Ek0KIXVwbG9hZGhvbWVCYWNrZ3JvdW5kU2VydmVyUmVxdWVzdBgTIAEoCzIi",
          "LlVwbG9hZEhvbWVCYWNrZ3JvdW5kU2VydmVyUmVxdWVzdBJPCiJ1cGxvYWRI",
          "b21lQmFja2dyb3VuZFNlcnZlclJlc3BvbnNlGBQgASgLMiMuVXBsb2FkSG9t",
          "ZUJhY2tncm91bmRTZXJ2ZXJSZXNwb25zZSL/BAoRUm9vbVNlcnZlck1lc3Nh",
          "Z2USNQoVZ2V0Um9vbXNTZXJ2ZXJSZXF1ZXN0GAEgASgLMhYuR2V0Um9vbXNT",
          "ZXJ2ZXJSZXF1ZXN0EjcKFmdldFJvb21zU2VydmVyUmVzcG9uc2UYAiABKAsy",
          "Fy5HZXRSb29tc1NlcnZlclJlc3BvbnNlEjMKFGFkZFJvb21TZXJ2ZXJSZXF1",
          "ZXN0GAMgASgLMhUuQWRkUm9vbVNlcnZlclJlcXVlc3QSNQoVYWRkUm9vbVNl",
          "cnZlclJlc3BvbnNlGAQgASgLMhYuQWRkUm9vbVNlcnZlclJlc3BvbnNlEjkK",
          "F2RlbGV0ZVJvb21TZXJ2ZXJSZXF1ZXN0GAUgASgLMhguRGVsZXRlUm9vbVNl",
          "cnZlclJlcXVlc3QSOwoYZGVsZXRlUm9vbVNlcnZlclJlc3BvbnNlGAYgASgL",
          "MhkuRGVsZXRlUm9vbVNlcnZlclJlc3BvbnNlEjkKF3VwZGF0ZVJvb21TZXJ2",
          "ZXJSZXF1ZXN0GAcgASgLMhguVXBkYXRlUm9vbVNlcnZlclJlcXVlc3QSOwoY",
          "dXBkYXRlUm9vbVNlcnZlclJlc3BvbnNlGAggASgLMhkuVXBkYXRlUm9vbVNl",
          "cnZlclJlc3BvbnNlEk0KIXVwbG9hZFJvb21CYWNrZ3JvdW5kU2VydmVyUmVx",
          "dWVzdBgJIAEoCzIiLlVwbG9hZFJvb21CYWNrZ3JvdW5kU2VydmVyUmVxdWVz",
          "dBJPCiJ1cGxvYWRSb29tQmFja2dyb3VuZFNlcnZlclJlc3BvbnNlGAogASgL",
          "MiMuVXBsb2FkUm9vbUJhY2tncm91bmRTZXJ2ZXJSZXNwb25zZSKSAQoUUHJv",
          "amVjdFNlcnZlck1lc3NhZ2USOwoYZ2V0UHJvamVjdHNTZXJ2ZXJSZXF1ZXN0",
          "GAEgASgLMhkuR2V0UHJvamVjdHNTZXJ2ZXJSZXF1ZXN0Ej0KGWdldFByb2pl",
          "Y3RzU2VydmVyUmVzcG9uc2UYAiABKAsyGi5HZXRQcm9qZWN0c1NlcnZlclJl",
          "c3BvbnNlIpcBChVCdWlsZGluZ1NlcnZlck1lc3NhZ2USPQoZZ2V0QnVpbGRp",
          "bmdzU2VydmVyUmVxdWVzdBgBIAEoCzIaLkdldEJ1aWxkaW5nc1NlcnZlclJl",
          "cXVlc3QSPwoaZ2V0QnVpbGRpbmdzU2VydmVyUmVzcG9uc2UYAiABKAsyGy5H",
          "ZXRCdWlsZGluZ3NTZXJ2ZXJSZXNwb25zZSKIAQoSRmxvb3JTZXJ2ZXJNZXNz",
          "YWdlEjcKFmdldEZsb29yc1NlcnZlclJlcXVlc3QYASABKAsyFy5HZXRGbG9v",
          "cnNTZXJ2ZXJSZXF1ZXN0EjkKF2dldEZsb29yc1NlcnZlclJlc3BvbnNlGAIg",
          "ASgLMhguR2V0Rmxvb3JzU2VydmVyUmVzcG9uc2UinAEKFkFwYXJ0bWVudFNl",
          "cnZlck1lc3NhZ2USPwoaZ2V0QXBhcnRtZW50c1NlcnZlclJlcXVlc3QYASAB",
          "KAsyGy5HZXRBcGFydG1lbnRzU2VydmVyUmVxdWVzdBJBChtnZXRBcGFydG1l",
          "bnRzU2VydmVyUmVzcG9uc2UYAiABKAsyHC5HZXRBcGFydG1lbnRzU2VydmVy",
          "UmVzcG9uc2UimwIKFVVzZXJIb21lU2VydmVyTWVzc2FnZRI7ChhhZGRVc2Vy",
          "SG9tZVNlcnZlclJlcXVlc3QYASABKAsyGS5BZGRVc2VySG9tZVNlcnZlclJl",
          "cXVlc3QSPQoZYWRkVXNlckhvbWVTZXJ2ZXJSZXNwb25zZRgCIAEoCzIaLkFk",
          "ZFVzZXJIb21lU2VydmVyUmVzcG9uc2USQQobZGVsZXRlVXNlckhvbWVTZXJ2",
          "ZXJSZXF1ZXN0GAMgASgLMhwuRGVsZXRlVXNlckhvbWVTZXJ2ZXJSZXF1ZXN0",
          "EkMKHGRlbGV0ZVVzZXJIb21lU2VydmVyUmVzcG9uc2UYBCABKAsyHS5EZWxl",
          "dGVVc2VySG9tZVNlcnZlclJlc3BvbnNlIvQBChJJbmJveFNlcnZlck1lc3Nh",
          "Z2USNwoWZ2V0VW5yZWFkU2VydmVyUmVxdWVzdBgBIAEoCzIXLkdldFVucmVh",
          "ZFNlcnZlclJlcXVlc3QSOQoXZ2V0VW5yZWFkU2VydmVyUmVzcG9uc2UYAiAB",
          "KAsyGC5HZXRVbnJlYWRTZXJ2ZXJSZXNwb25zZRIzChRzZXRSZWFkU2VydmVy",
          "UmVxdWVzdBgDIAEoCzIVLlNldFJlYWRTZXJ2ZXJSZXF1ZXN0EjUKFXNldFJl",
          "YWRTZXJ2ZXJSZXNwb25zZRgEIAEoCzIWLlNldFJlYWRTZXJ2ZXJSZXNwb25z",
          "ZSKiAwoUU2V0dGluZ1NlcnZlck1lc3NhZ2USQQobZ2V0QmFja2dyb3VuZHNT",
          "ZXJ2ZXJSZXF1ZXN0GAEgASgLMhwuR2V0QmFja2dyb3VuZHNTZXJ2ZXJSZXF1",
          "ZXN0EkMKHGdldEJhY2tncm91bmRzU2VydmVyUmVzcG9uc2UYAiABKAsyHS5H",
          "ZXRCYWNrZ3JvdW5kc1NlcnZlclJlc3BvbnNlEjsKGGdldEF1dG9PZmZzU2Vy",
          "dmVyUmVxdWVzdBgDIAEoCzIZLkdldEF1dG9PZmZzU2VydmVyUmVxdWVzdBI9",
          "ChlnZXRBdXRvT2Zmc1NlcnZlclJlc3BvbnNlGAQgASgLMhouR2V0QXV0b09m",
          "ZnNTZXJ2ZXJSZXNwb25zZRJBChtnZXRUeXBlRGV2aWNlc1NlcnZlclJlcXVl",
          "c3QYBSABKAsyHC5HZXRUeXBlRGV2aWNlc1NlcnZlclJlcXVlc3QSQwocZ2V0",
          "VHlwZURldmljZXNTZXJ2ZXJSZXNwb25zZRgGIAEoCzIdLkdldFR5cGVEZXZp",
          "Y2VzU2VydmVyUmVzcG9uc2UikQ0KE0RldmljZVNlcnZlck1lc3NhZ2USOQoX",
          "Z2V0RGV2aWNlc1NlcnZlclJlcXVlc3QYASABKAsyGC5HZXREZXZpY2VzU2Vy",
          "dmVyUmVxdWVzdBI7ChhnZXREZXZpY2VzU2VydmVyUmVzcG9uc2UYAiABKAsy",
          "GS5HZXREZXZpY2VzU2VydmVyUmVzcG9uc2USNwoWZ2V0RGV2aWNlU2VydmVy",
          "UmVxdWVzdBgDIAEoCzIXLkdldERldmljZVNlcnZlclJlcXVlc3QSOQoXZ2V0",
          "RGV2aWNlU2VydmVyUmVzcG9uc2UYBCABKAsyGC5HZXREZXZpY2VTZXJ2ZXJS",
          "ZXNwb25zZRI5ChdhZGREZXZpY2VzU2VydmVyUmVxdWVzdBgFIAEoCzIYLkFk",
          "ZERldmljZXNTZXJ2ZXJSZXF1ZXN0EjsKGGFkZERldmljZXNTZXJ2ZXJSZXNw",
          "b25zZRgGIAEoCzIZLkFkZERldmljZXNTZXJ2ZXJSZXNwb25zZRI9Chl1cGRh",
          "dGVEZXZpY2VTZXJ2ZXJSZXF1ZXN0GAcgASgLMhouVXBkYXRlRGV2aWNlU2Vy",
          "dmVyUmVxdWVzdBI/Chp1cGRhdGVEZXZpY2VTZXJ2ZXJSZXNwb25zZRgIIAEo",
          "CzIbLlVwZGF0ZURldmljZVNlcnZlclJlc3BvbnNlEj0KGWRlbGV0ZURldmlj",
          "ZVNlcnZlclJlcXVlc3QYCSABKAsyGi5EZWxldGVEZXZpY2VTZXJ2ZXJSZXF1",
          "ZXN0Ej8KGmRlbGV0ZURldmljZVNlcnZlclJlc3BvbnNlGAogASgLMhsuRGVs",
          "ZXRlRGV2aWNlU2VydmVyUmVzcG9uc2USUwokZ2V0RmlybXdhcmVMYXRlc3RE",
          "ZXZpY2VTZXJ2ZXJSZXF1ZXN0GAsgASgLMiUuR2V0RmlybXdhcmVMYXRlc3RE",
          "ZXZpY2VTZXJ2ZXJSZXF1ZXN0ElUKJWdldEZpcm13YXJlTGF0ZXN0RGV2aWNl",
          "U2VydmVyUmVzcG9uc2UYDCABKAsyJi5HZXRGaXJtd2FyZUxhdGVzdERldmlj",
          "ZVNlcnZlclJlc3BvbnNlElEKI2Rvd25sb2FkRmlybXdhcmVEZXZpY2VTZXJ2",
          "ZXJSZXF1ZXN0GA0gASgLMiQuRG93bmxvYWRGaXJtd2FyZURldmljZVNlcnZl",
          "clJlcXVlc3QSUwokZG93bmxvYWRGaXJtd2FyZURldmljZVNlcnZlclJlc3Bv",
          "bnNlGA4gASgLMiUuRG93bmxvYWRGaXJtd2FyZURldmljZVNlcnZlclJlc3Bv",
          "bnNlElcKJmZvcmNlVXBkYXRlRmlybXdhcmVEZXZpY2VTZXJ2ZXJSZXF1ZXN0",
          "GA8gASgLMicuRm9yY2VVcGRhdGVGaXJtd2FyZURldmljZVNlcnZlclJlcXVl",
          "c3QSWQonZm9yY2VVcGRhdGVGaXJtd2FyZURldmljZVNlcnZlclJlc3BvbnNl",
          "GBAgASgLMiguRm9yY2VVcGRhdGVGaXJtd2FyZURldmljZVNlcnZlclJlc3Bv",
          "bnNlEkEKG3JlZ2lzdGVyRGV2aWNlU2VydmVyUmVxdWVzdBgRIAEoCzIcLlJl",
          "Z2lzdGVyRGV2aWNlU2VydmVyUmVxdWVzdBJDChxyZWdpc3RlckRldmljZVNl",
          "cnZlclJlc3BvbnNlGBIgASgLMh0uUmVnaXN0ZXJEZXZpY2VTZXJ2ZXJSZXNw",
          "b25zZRJRCiN1cGRhdGVXU0VuZHBvaW50RGV2aWNlU2VydmVyUmVxdWVzdBgT",
          "IAEoCzIkLlVwZGF0ZVdTRW5kcG9pbnREZXZpY2VTZXJ2ZXJSZXF1ZXN0ElMK",
          "JHVwZGF0ZVdTRW5kcG9pbnREZXZpY2VTZXJ2ZXJSZXNwb25zZRgUIAEoCzIl",
          "LlVwZGF0ZVdTRW5kcG9pbnREZXZpY2VTZXJ2ZXJSZXNwb25zZRJtCjFmb3Jj",
          "ZVVwZGF0ZUZpcm13YXJlQWxsRGV2aWNlc0J5UGhvbmVTZXJ2ZXJSZXF1ZXN0",
          "GBUgASgLMjIuRm9yY2VVcGRhdGVGaXJtd2FyZUFsbERldmljZXNCeVBob25l",
          "U2VydmVyUmVxdWVzdBJvCjJmb3JjZVVwZGF0ZUZpcm13YXJlQWxsRGV2aWNl",
          "c0J5UGhvbmVTZXJ2ZXJSZXNwb25zZRgWIAEoCzIzLkZvcmNlVXBkYXRlRmly",
          "bXdhcmVBbGxEZXZpY2VzQnlQaG9uZVNlcnZlclJlc3BvbnNlIq8PChVTd2l0",
          "Y2hlclNlcnZlck1lc3NhZ2USPQoZZ2V0U3dpdGNoZXJzU2VydmVyUmVxdWVz",
          "dBgBIAEoCzIaLkdldFN3aXRjaGVyc1NlcnZlclJlcXVlc3QSPwoaZ2V0U3dp",
          "dGNoZXJzU2VydmVyUmVzcG9uc2UYAiABKAsyGy5HZXRTd2l0Y2hlcnNTZXJ2",
          "ZXJSZXNwb25zZRI7ChhnZXRTd2l0Y2hlclNlcnZlclJlcXVlc3QYAyABKAsy",
          "GS5HZXRTd2l0Y2hlclNlcnZlclJlcXVlc3QSPQoZZ2V0U3dpdGNoZXJTZXJ2",
          "ZXJSZXNwb25zZRgEIAEoCzIaLkdldFN3aXRjaGVyU2VydmVyUmVzcG9uc2US",
          "QQobZ2V0TG9nU3dpdGNoZXJTZXJ2ZXJSZXF1ZXN0GAUgASgLMhwuR2V0TG9n",
          "U3dpdGNoZXJTZXJ2ZXJSZXF1ZXN0EkMKHGdldExvZ1N3aXRjaGVyU2VydmVy",
          "UmVzcG9uc2UYBiABKAsyHS5HZXRMb2dTd2l0Y2hlclNlcnZlclJlc3BvbnNl",
          "EkUKHWdldEljb25Td2l0Y2hlcnNTZXJ2ZXJSZXF1ZXN0GAcgASgLMh4uR2V0",
          "SWNvblN3aXRjaGVyc1NlcnZlclJlcXVlc3QSRwoeZ2V0SWNvblN3aXRjaGVy",
          "c1NlcnZlclJlc3BvbnNlGAggASgLMh8uR2V0SWNvblN3aXRjaGVyc1NlcnZl",
          "clJlc3BvbnNlEkEKG3VwZGF0ZVN3aXRjaGVyU2VydmVyUmVxdWVzdBgJIAEo",
          "CzIcLlVwZGF0ZVN3aXRjaGVyU2VydmVyUmVxdWVzdBJDChx1cGRhdGVTd2l0",
          "Y2hlclNlcnZlclJlc3BvbnNlGAogASgLMh0uVXBkYXRlU3dpdGNoZXJTZXJ2",
          "ZXJSZXNwb25zZRI1ChVzd2l0Y2hlclNlcnZlclJlcXVlc3QYCyABKAsyFi5T",
          "d2l0Y2hlclNlcnZlclJlcXVlc3QSNwoWc3dpdGNoZXJTZXJ2ZXJSZXNwb25z",
          "ZRgMIAEoCzIXLlN3aXRjaGVyU2VydmVyUmVzcG9uc2USTQohZ2V0U3dpdGNo",
          "ZXJTY2hlZHVsZXNTZXJ2ZXJSZXF1ZXN0GA0gASgLMiIuR2V0U3dpdGNoZXJT",
          "Y2hlZHVsZXNTZXJ2ZXJSZXF1ZXN0Ek8KImdldFN3aXRjaGVyU2NoZWR1bGVz",
          "U2VydmVyUmVzcG9uc2UYDiABKAsyIy5HZXRTd2l0Y2hlclNjaGVkdWxlc1Nl",
          "cnZlclJlc3BvbnNlEksKIGdldFN3aXRjaGVyU2NoZWR1bGVTZXJ2ZXJSZXF1",
          "ZXN0GA8gASgLMiEuR2V0U3dpdGNoZXJTY2hlZHVsZVNlcnZlclJlcXVlc3QS",
          "TQohZ2V0U3dpdGNoZXJTY2hlZHVsZVNlcnZlclJlc3BvbnNlGBAgASgLMiIu",
          "R2V0U3dpdGNoZXJTY2hlZHVsZVNlcnZlclJlc3BvbnNlElUKJWdldENvdW50",
          "U3dpdGNoZXJTY2hlZHVsZVNlcnZlclJlcXVlc3QYESABKAsyJi5HZXRDb3Vu",
          "dFN3aXRjaGVyU2NoZWR1bGVTZXJ2ZXJSZXF1ZXN0ElcKJmdldENvdW50U3dp",
          "dGNoZXJTY2hlZHVsZVNlcnZlclJlc3BvbnNlGBIgASgLMicuR2V0Q291bnRT",
          "d2l0Y2hlclNjaGVkdWxlU2VydmVyUmVzcG9uc2USSwogYWRkU3dpdGNoZXJT",
          "Y2hlZHVsZVNlcnZlclJlcXVlc3QYEyABKAsyIS5BZGRTd2l0Y2hlclNjaGVk",
          "dWxlU2VydmVyUmVxdWVzdBJNCiFhZGRTd2l0Y2hlclNjaGVkdWxlU2VydmVy",
          "UmVzcG9uc2UYFCABKAsyIi5BZGRTd2l0Y2hlclNjaGVkdWxlU2VydmVyUmVz",
          "cG9uc2USUQojdXBkYXRlU3dpdGNoZXJTY2hlZHVsZVNlcnZlclJlcXVlc3QY",
          "FSABKAsyJC5VcGRhdGVTd2l0Y2hlclNjaGVkdWxlU2VydmVyUmVxdWVzdBJT",
          "CiR1cGRhdGVTd2l0Y2hlclNjaGVkdWxlU2VydmVyUmVzcG9uc2UYFiABKAsy",
          "JS5VcGRhdGVTd2l0Y2hlclNjaGVkdWxlU2VydmVyUmVzcG9uc2USUQojZGVs",
          "ZXRlU3dpdGNoZXJTY2hlZHVsZVNlcnZlclJlcXVlc3QYFyABKAsyJC5EZWxl",
          "dGVTd2l0Y2hlclNjaGVkdWxlU2VydmVyUmVxdWVzdBJTCiRkZWxldGVTd2l0",
          "Y2hlclNjaGVkdWxlU2VydmVyUmVzcG9uc2UYGCABKAsyJS5EZWxldGVTd2l0",
          "Y2hlclNjaGVkdWxlU2VydmVyUmVzcG9uc2USVwomc2V0QWN0aXZlU3dpdGNo",
          "ZXJTY2hlZHVsZVNlcnZlclJlcXVlc3QYGSABKAsyJy5TZXRBY3RpdmVTd2l0",
          "Y2hlclNjaGVkdWxlU2VydmVyUmVxdWVzdBJZCidzZXRBY3RpdmVTd2l0Y2hl",
          "clNjaGVkdWxlU2VydmVyUmVzcG9uc2UYGiABKAsyKC5TZXRBY3RpdmVTd2l0",
          "Y2hlclNjaGVkdWxlU2VydmVyUmVzcG9uc2Ui4g8KHEN1cnRhaW5Td2l0Y2hl",
          "clNlcnZlck1lc3NhZ2USSQofZ2V0Q3VydGFpblN3aXRjaGVyU2VydmVyUmVx",
          "dWVzdBgBIAEoCzIgLkdldEN1cnRhaW5Td2l0Y2hlclNlcnZlclJlcXVlc3QS",
          "SwogZ2V0Q3VydGFpblN3aXRjaGVyU2VydmVyUmVzcG9uc2UYAiABKAsyIS5H",
          "ZXRDdXJ0YWluU3dpdGNoZXJTZXJ2ZXJSZXNwb25zZRJPCiJ1cGRhdGVDdXJ0",
          "YWluU3dpdGNoZXJTZXJ2ZXJSZXF1ZXN0GAMgASgLMiMuVXBkYXRlQ3VydGFp",
          "blN3aXRjaGVyU2VydmVyUmVxdWVzdBJRCiN1cGRhdGVDdXJ0YWluU3dpdGNo",
          "ZXJTZXJ2ZXJSZXNwb25zZRgEIAEoCzIkLlVwZGF0ZUN1cnRhaW5Td2l0Y2hl",
          "clNlcnZlclJlc3BvbnNlElMKJGdldEN1cnRhaW5Td2l0Y2hlclN0YXRlU2Vy",
          "dmVyUmVxdWVzdBgFIAEoCzIlLkdldEN1cnRhaW5Td2l0Y2hlclN0YXRlU2Vy",
          "dmVyUmVxdWVzdBJVCiVnZXRDdXJ0YWluU3dpdGNoZXJTdGF0ZVNlcnZlclJl",
          "c3BvbnNlGAYgASgLMiYuR2V0Q3VydGFpblN3aXRjaGVyU3RhdGVTZXJ2ZXJS",
          "ZXNwb25zZRJDChxjdXJ0YWluU3dpdGNoZXJTZXJ2ZXJSZXF1ZXN0GAcgASgL",
          "Mh0uQ3VydGFpblN3aXRjaGVyU2VydmVyUmVxdWVzdBJFCh1jdXJ0YWluU3dp",
          "dGNoZXJTZXJ2ZXJSZXNwb25zZRgIIAEoCzIeLkN1cnRhaW5Td2l0Y2hlclNl",
          "cnZlclJlc3BvbnNlElsKKGdldEN1cnRhaW5Td2l0Y2hlclNjaGVkdWxlc1Nl",
          "cnZlclJlcXVlc3QYCSABKAsyKS5HZXRDdXJ0YWluU3dpdGNoZXJTY2hlZHVs",
          "ZXNTZXJ2ZXJSZXF1ZXN0El0KKWdldEN1cnRhaW5Td2l0Y2hlclNjaGVkdWxl",
          "c1NlcnZlclJlc3BvbnNlGAogASgLMiouR2V0Q3VydGFpblN3aXRjaGVyU2No",
          "ZWR1bGVzU2VydmVyUmVzcG9uc2USWQonZ2V0Q3VydGFpblN3aXRjaGVyU2No",
          "ZWR1bGVTZXJ2ZXJSZXF1ZXN0GAsgASgLMiguR2V0Q3VydGFpblN3aXRjaGVy",
          "U2NoZWR1bGVTZXJ2ZXJSZXF1ZXN0ElsKKGdldEN1cnRhaW5Td2l0Y2hlclNj",
          "aGVkdWxlU2VydmVyUmVzcG9uc2UYDCABKAsyKS5HZXRDdXJ0YWluU3dpdGNo",
          "ZXJTY2hlZHVsZVNlcnZlclJlc3BvbnNlEmMKLGdldENvdW50Q3VydGFpblN3",
          "aXRjaGVyU2NoZWR1bGVTZXJ2ZXJSZXF1ZXN0GA0gASgLMi0uR2V0Q291bnRD",
          "dXJ0YWluU3dpdGNoZXJTY2hlZHVsZVNlcnZlclJlcXVlc3QSZQotZ2V0Q291",
          "bnRDdXJ0YWluU3dpdGNoZXJTY2hlZHVsZVNlcnZlclJlc3BvbnNlGA4gASgL",
          "Mi4uR2V0Q291bnRDdXJ0YWluU3dpdGNoZXJTY2hlZHVsZVNlcnZlclJlc3Bv",
          "bnNlElkKJ2FkZEN1cnRhaW5Td2l0Y2hlclNjaGVkdWxlU2VydmVyUmVxdWVz",
          "dBgPIAEoCzIoLkFkZEN1cnRhaW5Td2l0Y2hlclNjaGVkdWxlU2VydmVyUmVx",
          "dWVzdBJbCihhZGRDdXJ0YWluU3dpdGNoZXJTY2hlZHVsZVNlcnZlclJlc3Bv",
          "bnNlGBAgASgLMikuQWRkQ3VydGFpblN3aXRjaGVyU2NoZWR1bGVTZXJ2ZXJS",
          "ZXNwb25zZRJfCip1cGRhdGVDdXJ0YWluU3dpdGNoZXJTY2hlZHVsZVNlcnZl",
          "clJlcXVlc3QYESABKAsyKy5VcGRhdGVDdXJ0YWluU3dpdGNoZXJTY2hlZHVs",
          "ZVNlcnZlclJlcXVlc3QSYQordXBkYXRlQ3VydGFpblN3aXRjaGVyU2NoZWR1",
          "bGVTZXJ2ZXJSZXNwb25zZRgSIAEoCzIsLlVwZGF0ZUN1cnRhaW5Td2l0Y2hl",
          "clNjaGVkdWxlU2VydmVyUmVzcG9uc2USXwoqZGVsZXRlQ3VydGFpblN3aXRj",
          "aGVyU2NoZWR1bGVTZXJ2ZXJSZXF1ZXN0GBMgASgLMisuRGVsZXRlQ3VydGFp",
          "blN3aXRjaGVyU2NoZWR1bGVTZXJ2ZXJSZXF1ZXN0EmEKK2RlbGV0ZUN1cnRh",
          "aW5Td2l0Y2hlclNjaGVkdWxlU2VydmVyUmVzcG9uc2UYFCABKAsyLC5EZWxl",
          "dGVDdXJ0YWluU3dpdGNoZXJTY2hlZHVsZVNlcnZlclJlc3BvbnNlEmUKLXNl",
          "dEFjdGl2ZUN1cnRhaW5Td2l0Y2hlclNjaGVkdWxlU2VydmVyUmVxdWVzdBgV",
          "IAEoCzIuLlNldEFjdGl2ZUN1cnRhaW5Td2l0Y2hlclNjaGVkdWxlU2VydmVy",
          "UmVxdWVzdBJnCi5zZXRBY3RpdmVDdXJ0YWluU3dpdGNoZXJTY2hlZHVsZVNl",
          "cnZlclJlc3BvbnNlGBYgASgLMi8uU2V0QWN0aXZlQ3VydGFpblN3aXRjaGVy",
          "U2NoZWR1bGVTZXJ2ZXJSZXNwb25zZSK3AQoWTGVkRHJpdmVyU2VydmVyUmVx",
          "dWVzdBIQCghkZXZpY2VJZBgBIAEoCRINCgVpbmRleBgCIAEoBRIOCgZyb29t",
          "SWQYAyABKAkSHwoKcG93ZXJTdGF0ZRgEIAEoDjILLlBvd2VyU3RhdGUSGQoR",
          "YnJpZ2h0bmVzc1BlcmNlbnQYBSABKAUSGgoIbGVkSXRlbXMYBiADKAsyCC5M",
          "ZWRJdGVtEhQKDGdyb3VwQ29udHJvbBgHIAEoDSKZAQoXTGVkRHJpdmVyU2Vy",
          "dmVyUmVzcG9uc2USEAoIZGV2aWNlSWQYASABKAkSDgoGcm9vbUlkGAIgASgJ",
          "Eh8KCnBvd2VyU3RhdGUYAyABKA4yCy5Qb3dlclN0YXRlEhkKEWJyaWdodG5l",
          "c3NQZXJjZXNzGAQgASgFEiAKCnN0YXR1c0NvZGUY6AcgASgLMgsuU3RhdHVz",
          "Q29kZSI9ChlHZXRMZWREcml2ZXJTZXJ2ZXJSZXF1ZXN0EhAKCGRldmljZUlk",
          "GAEgASgJEg4KBnJvb21JZBgCIAEoCSJdChpHZXRMZWREcml2ZXJTZXJ2ZXJS",
          "ZXNwb25zZRIdCglsZWREcml2ZXIYASABKAsyCi5MZWREcml2ZXISIAoKc3Rh",
          "dHVzQ29kZRjoByABKAsyCy5TdGF0dXNDb2RlIj4KHUdldExlZERyaXZlckl0",
          "ZW1TZXJ2ZXJSZXF1ZXN0Eg0KBWxlZElkGAEgASgJEg4KBnJvb21JZBgCIAEo",
          "CSJdCh5HZXRMZWREcml2ZXJJdGVtU2VydmVyUmVzcG9uc2USGQoHbGVkSXRl",
          "bRgBIAEoCzIILkxlZEl0ZW0SIAoKc3RhdHVzQ29kZRjoByABKAsyCy5TdGF0",
          "dXNDb2RlIrIBChxVcGRhdGVMZWREcml2ZXJTZXJ2ZXJSZXF1ZXN0EhAKCGRl",
          "dmljZUlkGAEgASgJEg4KBnJvb21JZBgCIAEoCRIdCglsZWREcml2ZXIYAyAB",
          "KAsyCi5MZWREcml2ZXISGQoRYnJpZ2h0bmVzc1BlcmNlbnQYBCABKAUSFAoM",
          "Z3JvdXBDb250cm9sGAUgASgNEiAKCnN0YXR1c0NvZGUY6AcgASgLMgsuU3Rh",
          "dHVzQ29kZSJwCh1VcGRhdGVMZWREcml2ZXJTZXJ2ZXJSZXNwb25zZRIdCgls",
          "ZWREcml2ZXIYASABKAsyCi5MZWREcml2ZXISDgoGcm9vbUlkGAIgASgJEiAK",
          "CnN0YXR1c0NvZGUY6AcgASgLMgsuU3RhdHVzQ29kZSKyAQogVXBkYXRlTGVk",
          "RHJpdmVySXRlbVNlcnZlclJlcXVlc3QSEAoIZGV2aWNlSWQYASABKAkSDgoG",
          "cm9vbUlkGAIgASgJEhkKB2xlZEl0ZW0YAyABKAsyCC5MZWRJdGVtEhkKEWJy",
          "aWdodG5lc3NQZXJjZW50GAQgASgFEhQKDGdyb3VwQ29udHJvbBgFIAEoDRIg",
          "CgpzdGF0dXNDb2RlGOgHIAEoCzILLlN0YXR1c0NvZGUicAohVXBkYXRlTGVk",
          "RHJpdmVySXRlbVNlcnZlclJlc3BvbnNlEhkKB2xlZEl0ZW0YASABKAsyCC5M",
          "ZWRJdGVtEg4KBnJvb21JZBgCIAEoCRIgCgpzdGF0dXNDb2RlGOgHIAEoCzIL",
          "LlN0YXR1c0NvZGUixAUKFkxlZERyaXZlclNlcnZlck1lc3NhZ2USNwoWbGVk",
          "RHJpdmVyU2VydmVyUmVxdWVzdBgBIAEoCzIXLkxlZERyaXZlclNlcnZlclJl",
          "cXVlc3QSOQoXbGVkRHJpdmVyU2VydmVyUmVzcG9uc2UYAiABKAsyGC5MZWRE",
          "cml2ZXJTZXJ2ZXJSZXNwb25zZRI9ChlnZXRMZWREcml2ZXJTZXJ2ZXJSZXF1",
          "ZXN0GAMgASgLMhouR2V0TGVkRHJpdmVyU2VydmVyUmVxdWVzdBI/ChpnZXRM",
          "ZWREcml2ZXJTZXJ2ZXJSZXNwb25zZRgEIAEoCzIbLkdldExlZERyaXZlclNl",
          "cnZlclJlc3BvbnNlEkUKHWdldExlZERyaXZlckl0ZW1TZXJ2ZXJSZXF1ZXN0",
          "GAUgASgLMh4uR2V0TGVkRHJpdmVySXRlbVNlcnZlclJlcXVlc3QSRwoeZ2V0",
          "TGVkRHJpdmVySXRlbVNlcnZlclJlc3BvbnNlGAYgASgLMh8uR2V0TGVkRHJp",
          "dmVySXRlbVNlcnZlclJlc3BvbnNlEkMKHHVwZGF0ZUxlZERyaXZlclNlcnZl",
          "clJlcXVlc3QYByABKAsyHS5VcGRhdGVMZWREcml2ZXJTZXJ2ZXJSZXF1ZXN0",
          "EkUKHXVwZGF0ZUxlZERyaXZlclNlcnZlclJlc3BvbnNlGAggASgLMh4uVXBk",
          "YXRlTGVkRHJpdmVyU2VydmVyUmVzcG9uc2USSwogdXBkYXRlTGVkRHJpdmVy",
          "SXRlbVNlcnZlclJlcXVlc3QYCSABKAsyIS5VcGRhdGVMZWREcml2ZXJJdGVt",
          "U2VydmVyUmVxdWVzdBJNCiF1cGRhdGVMZWREcml2ZXJJdGVtU2VydmVyUmVz",
          "cG9uc2UYCiABKAsyIi5VcGRhdGVMZWREcml2ZXJJdGVtU2VydmVyUmVzcG9u",
          "c2Ui8QIKE01vdGlvblNlcnZlck1lc3NhZ2USMQoTbW90aW9uU2VydmVyUmVx",
          "dWVzdBgBIAEoCzIULk1vdGlvblNlcnZlclJlcXVlc3QSMwoUbW90aW9uU2Vy",
          "dmVyUmVzcG9uc2UYAiABKAsyFS5Nb3Rpb25TZXJ2ZXJSZXNwb25zZRI3ChZn",
          "ZXRNb3Rpb25TZXJ2ZXJSZXF1ZXN0GAMgASgLMhcuR2V0TW90aW9uU2VydmVy",
          "UmVxdWVzdBI5ChdnZXRNb3Rpb25TZXJ2ZXJSZXNwb25zZRgEIAEoCzIYLkdl",
          "dE1vdGlvblNlcnZlclJlc3BvbnNlEj0KGXVwZGF0ZU1vdGlvblNlcnZlclJl",
          "cXVlc3QYBSABKAsyGi5VcGRhdGVNb3Rpb25TZXJ2ZXJSZXF1ZXN0Ej8KGnVw",
          "ZGF0ZU1vdGlvblNlcnZlclJlc3BvbnNlGAYgASgLMhsuVXBkYXRlTW90aW9u",
          "U2VydmVyUmVzcG9uc2UiqgMKFEhvbWVraXRTZXJ2ZXJNZXNzYWdlEkEKG2dl",
          "dEhvbWVraXRJbmZvU2VydmVyUmVxdWVzdBgBIAEoCzIcLkdldEhvbWVraXRJ",
          "bmZvU2VydmVyUmVxdWVzdBJDChxnZXRIb21la2l0SW5mb1NlcnZlclJlc3Bv",
          "bnNlGAIgASgLMh0uR2V0SG9tZWtpdEluZm9TZXJ2ZXJSZXNwb25zZRI/Chp1",
          "cGRhdGVIb21la2l0U2VydmVyUmVxdWVzdBgDIAEoCzIbLlVwZGF0ZUhvbWVr",
          "aXRTZXJ2ZXJSZXF1ZXN0EkEKG3VwZGF0ZUhvbWVraXRTZXJ2ZXJSZXNwb25z",
          "ZRgEIAEoCzIcLlVwZGF0ZUhvbWVraXRTZXJ2ZXJSZXNwb25zZRJBChtzZXRI",
          "b21la2l0TW9kZVNlcnZlclJlcXVlc3QYBSABKAsyHC5TZXRIb21la2l0TW9k",
          "ZVNlcnZlclJlcXVlc3QSQwocc2V0SG9tZWtpdE1vZGVTZXJ2ZXJSZXNwb25z",
          "ZRgGIAEoCzIdLlNldEhvbWVraXRNb2RlU2VydmVyUmVzcG9uc2UimQIKE0J1",
          "dHRvblNlcnZlck1lc3NhZ2USPwoaZ2V0QnV0dG9uSW5mb1NlcnZlclJlcXVl",
          "c3QYASABKAsyGy5HZXRCdXR0b25JbmZvU2VydmVyUmVxdWVzdBJBChtnZXRC",
          "dXR0b25JbmZvU2VydmVyUmVzcG9uc2UYAiABKAsyHC5HZXRCdXR0b25JbmZv",
          "U2VydmVyUmVzcG9uc2USPQoZdXBkYXRlQnV0dG9uU2VydmVyUmVxdWVzdBgD",
          "IAEoCzIaLlVwZGF0ZUJ1dHRvblNlcnZlclJlcXVlc3QSPwoadXBkYXRlQnV0",
          "dG9uU2VydmVyUmVzcG9uc2UYBCABKAsyGy5VcGRhdGVCdXR0b25TZXJ2ZXJS",
          "ZXNwb25zZSLvBgoZR3JvdXBDb250cm9sU2VydmVyTWVzc2FnZRI9Chlncm91",
          "cENvbnRyb2xTZXJ2ZXJSZXF1ZXN0GAEgASgLMhouR3JvdXBDb250cm9sU2Vy",
          "dmVyUmVxdWVzdBI/Chpncm91cENvbnRyb2xTZXJ2ZXJSZXNwb25zZRgCIAEo",
          "CzIbLkdyb3VwQ29udHJvbFNlcnZlclJlc3BvbnNlEksKIGdldEdyb3VwQ29u",
          "dHJvbEluZm9TZXJ2ZXJSZXF1ZXN0GAMgASgLMiEuR2V0R3JvdXBDb250cm9s",
          "SW5mb1NlcnZlclJlcXVlc3QSTQohZ2V0R3JvdXBDb250cm9sSW5mb1NlcnZl",
          "clJlc3BvbnNlGAQgASgLMiIuR2V0R3JvdXBDb250cm9sSW5mb1NlcnZlclJl",
          "c3BvbnNlEjsKGGdldENvbnRyb2xzU2VydmVyUmVxdWVzdBgFIAEoCzIZLkdl",
          "dENvbnRyb2xzU2VydmVyUmVxdWVzdBI9ChlnZXRDb250cm9sc1NlcnZlclJl",
          "c3BvbnNlGAYgASgLMhouR2V0Q29udHJvbHNTZXJ2ZXJSZXNwb25zZRJDChxh",
          "ZGRHcm91cENvbnRyb2xTZXJ2ZXJSZXF1ZXN0GAcgASgLMh0uQWRkR3JvdXBD",
          "b250cm9sU2VydmVyUmVxdWVzdBJFCh1hZGRHcm91cENvbnRyb2xTZXJ2ZXJS",
          "ZXNwb25zZRgIIAEoCzIeLkFkZEdyb3VwQ29udHJvbFNlcnZlclJlc3BvbnNl",
          "EkkKH3VwZGF0ZUdyb3VwQ29udHJvbFNlcnZlclJlcXVlc3QYCSABKAsyIC5V",
          "cGRhdGVHcm91cENvbnRyb2xTZXJ2ZXJSZXF1ZXN0EksKIHVwZGF0ZUdyb3Vw",
          "Q29udHJvbFNlcnZlclJlc3BvbnNlGAogASgLMiEuVXBkYXRlR3JvdXBDb250",
          "cm9sU2VydmVyUmVzcG9uc2USSQofZGVsZXRlR3JvdXBDb250cm9sU2VydmVy",
          "UmVxdWVzdBgLIAEoCzIgLkRlbGV0ZUdyb3VwQ29udHJvbFNlcnZlclJlcXVl",
          "c3QSSwogZGVsZXRlR3JvdXBDb250cm9sU2VydmVyUmVzcG9uc2UYDCABKAsy",
          "IS5EZWxldGVHcm91cENvbnRyb2xTZXJ2ZXJSZXNwb25zZSKoBwoSTWV0ZXJT",
          "ZXJ2ZXJNZXNzYWdlEjUKFWdldE1ldGVyU2VydmVyUmVxdWVzdBgBIAEoCzIW",
          "LkdldE1ldGVyU2VydmVyUmVxdWVzdBI3ChZnZXRNZXRlclNlcnZlclJlc3Bv",
          "bnNlGAIgASgLMhcuR2V0TWV0ZXJTZXJ2ZXJSZXNwb25zZRI7Chh1cGRhdGVN",
          "ZXRlclNlcnZlclJlcXVlc3QYAyABKAsyGS5VcGRhdGVNZXRlclNlcnZlclJl",
          "cXVlc3QSPQoZdXBkYXRlTWV0ZXJTZXJ2ZXJSZXNwb25zZRgEIAEoCzIaLlVw",
          "ZGF0ZU1ldGVyU2VydmVyUmVzcG9uc2USWwooZ2V0TWV0ZXJFc3RpbWF0ZXNE",
          "YXlJbk1vbnRoU2VydmVyUmVxdWVzdBgFIAEoCzIpLkdldE1ldGVyRXN0aW1h",
          "dGVzRGF5SW5Nb250aFNlcnZlclJlcXVlc3QSXQopZ2V0TWV0ZXJFc3RpbWF0",
          "ZXNEYXlJbk1vbnRoU2VydmVyUmVzcG9uc2UYBiABKAsyKi5HZXRNZXRlckVz",
          "dGltYXRlc0RheUluTW9udGhTZXJ2ZXJSZXNwb25zZRJZCidnZXRNZXRlckVz",
          "dGltYXRlc0hvdXJJbkRheVNlcnZlclJlcXVlc3QYByABKAsyKC5HZXRNZXRl",
          "ckVzdGltYXRlc0hvdXJJbkRheVNlcnZlclJlcXVlc3QSWwooZ2V0TWV0ZXJF",
          "c3RpbWF0ZXNIb3VySW5EYXlTZXJ2ZXJSZXNwb25zZRgIIAEoCzIpLkdldE1l",
          "dGVyRXN0aW1hdGVzSG91ckluRGF5U2VydmVyUmVzcG9uc2USRwoeZ2V0TWV0",
          "ZXJzQnlIb21lSWRTZXJ2ZXJSZXF1ZXN0GAkgASgLMh8uR2V0TWV0ZXJzQnlI",
          "b21lSWRTZXJ2ZXJSZXF1ZXN0EkkKH2dldE1ldGVyc0J5SG9tZUlkU2VydmVy",
          "UmVzcG9uc2UYCiABKAsyIC5HZXRNZXRlcnNCeUhvbWVJZFNlcnZlclJlc3Bv",
          "bnNlEk0KIWdldE1ldGVyTWlzc2luZ0luRGF5U2VydmVyUmVxdWVzdBgLIAEo",
          "CzIiLkdldE1ldGVyTWlzc2luZ0luRGF5U2VydmVyUmVxdWVzdBJPCiJnZXRN",
          "ZXRlck1pc3NpbmdJbkRheVNlcnZlclJlc3BvbnNlGAwgASgLMiMuR2V0TWV0",
          "ZXJNaXNzaW5nSW5EYXlTZXJ2ZXJSZXNwb25zZSLNAgobQWlyQ29uZGl0aW9u",
          "ZXJTZXJ2ZXJNZXNzYWdlElEKI2dldEFpckNvbmRpdGlvbmVyU3RhdGVTZXJ2",
          "ZXJSZXF1ZXN0GAEgASgLMiQuR2V0QWlyQ29uZGl0aW9uZXJTdGF0ZVNlcnZl",
          "clJlcXVlc3QSUwokZ2V0QWlyQ29uZGl0aW9uZXJTdGF0ZVNlcnZlclJlc3Bv",
          "bnNlGAIgASgLMiUuR2V0QWlyQ29uZGl0aW9uZXJTdGF0ZVNlcnZlclJlc3Bv",
          "bnNlEkEKG2FpckNvbmRpdGlvbmVyU2VydmVyUmVxdWVzdBgDIAEoCzIcLkFp",
          "ckNvbmRpdGlvbmVyU2VydmVyUmVxdWVzdBJDChxhaXJDb25kaXRpb25lclNl",
          "cnZlclJlc3BvbnNlGAQgASgLMh0uQWlyQ29uZGl0aW9uZXJTZXJ2ZXJSZXNw",
          "b25zZSLhHAoTUmVtb3RlU2VydmVyTWVzc2FnZRI5ChdnZXRSZW1vdGVzU2Vy",
          "dmVyUmVxdWVzdBgBIAEoCzIYLkdldFJlbW90ZXNTZXJ2ZXJSZXF1ZXN0EjsK",
          "GGdldFJlbW90ZXNTZXJ2ZXJSZXNwb25zZRgCIAEoCzIZLkdldFJlbW90ZXNT",
          "ZXJ2ZXJSZXNwb25zZRI3ChZnZXRSZW1vdGVTZXJ2ZXJSZXF1ZXN0GAMgASgL",
          "MhcuR2V0UmVtb3RlU2VydmVyUmVxdWVzdBI5ChdnZXRSZW1vdGVTZXJ2ZXJS",
          "ZXNwb25zZRgEIAEoCzIYLkdldFJlbW90ZVNlcnZlclJlc3BvbnNlEkkKH2dl",
          "dFJlbW90ZUxpYnJhcmllc1NlcnZlclJlcXVlc3QYBSABKAsyIC5HZXRSZW1v",
          "dGVMaWJyYXJpZXNTZXJ2ZXJSZXF1ZXN0EksKIGdldFJlbW90ZUxpYnJhcmll",
          "c1NlcnZlclJlc3BvbnNlGAYgASgLMiEuR2V0UmVtb3RlTGlicmFyaWVzU2Vy",
          "dmVyUmVzcG9uc2USRwoeZ2V0Q29tbWFuZHNSZW1vdGVTZXJ2ZXJSZXF1ZXN0",
          "GAcgASgLMh8uR2V0Q29tbWFuZHNSZW1vdGVTZXJ2ZXJSZXF1ZXN0EkkKH2dl",
          "dENvbW1hbmRzUmVtb3RlU2VydmVyUmVzcG9uc2UYCCABKAsyIC5HZXRDb21t",
          "YW5kc1JlbW90ZVNlcnZlclJlc3BvbnNlEkcKHnNlbmRDb21tYW5kUmVtb3Rl",
          "U2VydmVyUmVxdWVzdBgJIAEoCzIfLlNlbmRDb21tYW5kUmVtb3RlU2VydmVy",
          "UmVxdWVzdBJJCh9zZW5kQ29tbWFuZFJlbW90ZVNlcnZlclJlc3BvbnNlGAog",
          "ASgLMiAuU2VuZENvbW1hbmRSZW1vdGVTZXJ2ZXJSZXNwb25zZRJJCh9sZWFy",
          "bkNvbW1hbmRSZW1vdGVTZXJ2ZXJSZXF1ZXN0GAsgASgLMiAuTGVhcm5Db21t",
          "YW5kUmVtb3RlU2VydmVyUmVxdWVzdBJLCiBsZWFybkNvbW1hbmRSZW1vdGVT",
          "ZXJ2ZXJSZXNwb25zZRgMIAEoCzIhLkxlYXJuQ29tbWFuZFJlbW90ZVNlcnZl",
          "clJlc3BvbnNlEk0KIXJlc3RvcmVDb21tYW5kUmVtb3RlU2VydmVyUmVxdWVz",
          "dBgNIAEoCzIiLlJlc3RvcmVDb21tYW5kUmVtb3RlU2VydmVyUmVxdWVzdBJP",
          "CiJyZXN0b3JlQ29tbWFuZFJlbW90ZVNlcnZlclJlc3BvbnNlGA4gASgLMiMu",
          "UmVzdG9yZUNvbW1hbmRSZW1vdGVTZXJ2ZXJSZXNwb25zZRI3ChZhZGRSZW1v",
          "dGVTZXJ2ZXJSZXF1ZXN0GA8gASgLMhcuQWRkUmVtb3RlU2VydmVyUmVxdWVz",
          "dBI5ChdhZGRSZW1vdGVTZXJ2ZXJSZXNwb25zZRgQIAEoCzIYLkFkZFJlbW90",
          "ZVNlcnZlclJlc3BvbnNlEj0KGXVwZGF0ZVJlbW90ZVNlcnZlclJlcXVlc3QY",
          "ESABKAsyGi5VcGRhdGVSZW1vdGVTZXJ2ZXJSZXF1ZXN0Ej8KGnVwZGF0ZVJl",
          "bW90ZVNlcnZlclJlc3BvbnNlGBIgASgLMhsuVXBkYXRlUmVtb3RlU2VydmVy",
          "UmVzcG9uc2USPQoZZGVsZXRlUmVtb3RlU2VydmVyUmVxdWVzdBgTIAEoCzIa",
          "LkRlbGV0ZVJlbW90ZVNlcnZlclJlcXVlc3QSPwoaZGVsZXRlUmVtb3RlU2Vy",
          "dmVyUmVzcG9uc2UYFCABKAsyGy5EZWxldGVSZW1vdGVTZXJ2ZXJSZXNwb25z",
          "ZRJJCh9nZXRSZW1vdGVTY2hlZHVsZXNTZXJ2ZXJSZXF1ZXN0GBUgASgLMiAu",
          "R2V0UmVtb3RlU2NoZWR1bGVzU2VydmVyUmVxdWVzdBJLCiBnZXRSZW1vdGVT",
          "Y2hlZHVsZXNTZXJ2ZXJSZXNwb25zZRgWIAEoCzIhLkdldFJlbW90ZVNjaGVk",
          "dWxlc1NlcnZlclJlc3BvbnNlElEKI2dldENvdW50UmVtb3RlU2NoZWR1bGVT",
          "ZXJ2ZXJSZXF1ZXN0GBcgASgLMiQuR2V0Q291bnRSZW1vdGVTY2hlZHVsZVNl",
          "cnZlclJlcXVlc3QSUwokZ2V0Q291bnRSZW1vdGVTY2hlZHVsZVNlcnZlclJl",
          "c3BvbnNlGBggASgLMiUuR2V0Q291bnRSZW1vdGVTY2hlZHVsZVNlcnZlclJl",
          "c3BvbnNlEkcKHmdldFJlbW90ZVNjaGVkdWxlU2VydmVyUmVxdWVzdBgZIAEo",
          "CzIfLkdldFJlbW90ZVNjaGVkdWxlU2VydmVyUmVxdWVzdBJJCh9nZXRSZW1v",
          "dGVTY2hlZHVsZVNlcnZlclJlc3BvbnNlGBogASgLMiAuR2V0UmVtb3RlU2No",
          "ZWR1bGVTZXJ2ZXJSZXNwb25zZRJHCh5hZGRSZW1vdGVTY2hlZHVsZVNlcnZl",
          "clJlcXVlc3QYGyABKAsyHy5BZGRSZW1vdGVTY2hlZHVsZVNlcnZlclJlcXVl",
          "c3QSSQofYWRkUmVtb3RlU2NoZWR1bGVTZXJ2ZXJSZXNwb25zZRgcIAEoCzIg",
          "LkFkZFJlbW90ZVNjaGVkdWxlU2VydmVyUmVzcG9uc2USTQohdXBkYXRlUmVt",
          "b3RlU2NoZWR1bGVTZXJ2ZXJSZXF1ZXN0GB0gASgLMiIuVXBkYXRlUmVtb3Rl",
          "U2NoZWR1bGVTZXJ2ZXJSZXF1ZXN0Ek8KInVwZGF0ZVJlbW90ZVNjaGVkdWxl",
          "U2VydmVyUmVzcG9uc2UYHiABKAsyIy5VcGRhdGVSZW1vdGVTY2hlZHVsZVNl",
          "cnZlclJlc3BvbnNlEk0KIWRlbGV0ZVJlbW90ZVNjaGVkdWxlU2VydmVyUmVx",
          "dWVzdBgfIAEoCzIiLkRlbGV0ZVJlbW90ZVNjaGVkdWxlU2VydmVyUmVxdWVz",
          "dBJPCiJkZWxldGVSZW1vdGVTY2hlZHVsZVNlcnZlclJlc3BvbnNlGCAgASgL",
          "MiMuRGVsZXRlUmVtb3RlU2NoZWR1bGVTZXJ2ZXJSZXNwb25zZRJTCiRzZXRB",
          "Y3RpdmVSZW1vdGVTY2hlZHVsZVNlcnZlclJlcXVlc3QYISABKAsyJS5TZXRB",
          "Y3RpdmVSZW1vdGVTY2hlZHVsZVNlcnZlclJlcXVlc3QSVQolc2V0QWN0aXZl",
          "UmVtb3RlU2NoZWR1bGVTZXJ2ZXJSZXNwb25zZRgiIAEoCzImLlNldEFjdGl2",
          "ZVJlbW90ZVNjaGVkdWxlU2VydmVyUmVzcG9uc2USQwocZ2V0UmVtb3RlTXVs",
          "dGlzU2VydmVyUmVxdWVzdBgjIAEoCzIdLkdldFJlbW90ZU11bHRpc1NlcnZl",
          "clJlcXVlc3QSRQodZ2V0UmVtb3RlTXVsdGlzU2VydmVyUmVzcG9uc2UYJCAB",
          "KAsyHi5HZXRSZW1vdGVNdWx0aXNTZXJ2ZXJSZXNwb25zZRJBChthZGRSZW1v",
          "dGVNdWx0aVNlcnZlclJlcXVlc3QYJSABKAsyHC5BZGRSZW1vdGVNdWx0aVNl",
          "cnZlclJlcXVlc3QSQwocYWRkUmVtb3RlTXVsdGlTZXJ2ZXJSZXNwb25zZRgm",
          "IAEoCzIdLkFkZFJlbW90ZU11bHRpU2VydmVyUmVzcG9uc2USRwoeZGVsZXRl",
          "UmVtb3RlTXVsdGlTZXJ2ZXJSZXF1ZXN0GCcgASgLMh8uRGVsZXRlUmVtb3Rl",
          "TXVsdGlTZXJ2ZXJSZXF1ZXN0EkkKH2RlbGV0ZVJlbW90ZU11bHRpU2VydmVy",
          "UmVzcG9uc2UYKCABKAsyIC5EZWxldGVSZW1vdGVNdWx0aVNlcnZlclJlc3Bv",
          "bnNlElUKJWFkZFJlbW90ZU11bHRpTGlicmFyeUNtZFNlcnZlclJlcXVlc3QY",
          "KSABKAsyJi5BZGRSZW1vdGVNdWx0aUxpYnJhcnlDbWRTZXJ2ZXJSZXF1ZXN0",
          "ElcKJmFkZFJlbW90ZU11bHRpTGlicmFyeUNtZFNlcnZlclJlc3BvbnNlGCog",
          "ASgLMicuQWRkUmVtb3RlTXVsdGlMaWJyYXJ5Q21kU2VydmVyUmVzcG9uc2US",
          "WwooZGVsZXRlUmVtb3RlTXVsdGlMaWJyYXJ5Q21kU2VydmVyUmVxdWVzdBgr",
          "IAEoCzIpLkRlbGV0ZVJlbW90ZU11bHRpTGlicmFyeUNtZFNlcnZlclJlcXVl",
          "c3QSXQopZGVsZXRlUmVtb3RlTXVsdGlMaWJyYXJ5Q21kU2VydmVyUmVzcG9u",
          "c2UYLCABKAsyKi5EZWxldGVSZW1vdGVNdWx0aUxpYnJhcnlDbWRTZXJ2ZXJS",
          "ZXNwb25zZRJbCih1cGRhdGVSZW1vdGVNdWx0aUxpYnJhcnlDbWRTZXJ2ZXJS",
          "ZXF1ZXN0GC0gASgLMikuVXBkYXRlUmVtb3RlTXVsdGlMaWJyYXJ5Q21kU2Vy",
          "dmVyUmVxdWVzdBJdCil1cGRhdGVSZW1vdGVNdWx0aUxpYnJhcnlDbWRTZXJ2",
          "ZXJSZXNwb25zZRguIAEoCzIqLlVwZGF0ZVJlbW90ZU11bHRpTGlicmFyeUNt",
          "ZFNlcnZlclJlc3BvbnNlEmUKLXVwZGF0ZUdyb3VwUmVtb3RlTXVsdGlMaWJy",
          "YXJ5Q21kU2VydmVyUmVxdWVzdBgvIAEoCzIuLlVwZGF0ZUdyb3VwUmVtb3Rl",
          "TXVsdGlMaWJyYXJ5Q21kU2VydmVyUmVxdWVzdBJnCi51cGRhdGVHcm91cFJl",
          "bW90ZU11bHRpTGlicmFyeUNtZFNlcnZlclJlc3BvbnNlGDAgASgLMi8uVXBk",
          "YXRlR3JvdXBSZW1vdGVNdWx0aUxpYnJhcnlDbWRTZXJ2ZXJSZXNwb25zZSK9",
          "DAoSU2NlbmVTZXJ2ZXJNZXNzYWdlEjcKFmdldFNjZW5lc1NlcnZlclJlcXVl",
          "c3QYASABKAsyFy5HZXRTY2VuZXNTZXJ2ZXJSZXF1ZXN0EjkKF2dldFNjZW5l",
          "c1NlcnZlclJlc3BvbnNlGAIgASgLMhguR2V0U2NlbmVzU2VydmVyUmVzcG9u",
          "c2USNQoVZ2V0U2NlbmVTZXJ2ZXJSZXF1ZXN0GAMgASgLMhYuR2V0U2NlbmVT",
          "ZXJ2ZXJSZXF1ZXN0EjcKFmdldFNjZW5lU2VydmVyUmVzcG9uc2UYBCABKAsy",
          "Fy5HZXRTY2VuZVNlcnZlclJlc3BvbnNlEjUKFWFkZFNjZW5lU2VydmVyUmVx",
          "dWVzdBgFIAEoCzIWLkFkZFNjZW5lU2VydmVyUmVxdWVzdBI3ChZhZGRTY2Vu",
          "ZVNlcnZlclJlc3BvbnNlGAYgASgLMhcuQWRkU2NlbmVTZXJ2ZXJSZXNwb25z",
          "ZRI7Chh1cGRhdGVTY2VuZVNlcnZlclJlcXVlc3QYByABKAsyGS5VcGRhdGVT",
          "Y2VuZVNlcnZlclJlcXVlc3QSPQoZdXBkYXRlU2NlbmVTZXJ2ZXJSZXNwb25z",
          "ZRgIIAEoCzIaLlVwZGF0ZVNjZW5lU2VydmVyUmVzcG9uc2USOwoYZGVsZXRl",
          "U2NlbmVTZXJ2ZXJSZXF1ZXN0GAkgASgLMhkuRGVsZXRlU2NlbmVTZXJ2ZXJS",
          "ZXF1ZXN0Ej0KGWRlbGV0ZVNjZW5lU2VydmVyUmVzcG9uc2UYCiABKAsyGi5E",
          "ZWxldGVTY2VuZVNlcnZlclJlc3BvbnNlElMKJGRlbGV0ZVN3aXRjaGVyQ29u",
          "ZGl0aW9uU2VydmVyUmVxdWVzdBgLIAEoCzIlLkRlbGV0ZVN3aXRjaGVyQ29u",
          "ZGl0aW9uU2VydmVyUmVxdWVzdBJVCiVkZWxldGVTd2l0Y2hlckNvbmRpdGlv",
          "blNlcnZlclJlc3BvbnNlGAwgASgLMiYuRGVsZXRlU3dpdGNoZXJDb25kaXRp",
          "b25TZXJ2ZXJSZXNwb25zZRJHCh5kZWxldGVTY2VuZUFjdGlvblNlcnZlclJl",
          "cXVlc3QYDSABKAsyHy5EZWxldGVTY2VuZUFjdGlvblNlcnZlclJlcXVlc3QS",
          "SQofZGVsZXRlU2NlbmVBY3Rpb25TZXJ2ZXJSZXNwb25zZRgOIAEoCzIgLkRl",
          "bGV0ZVNjZW5lQWN0aW9uU2VydmVyUmVzcG9uc2USNQoVcnVuU2NlbmVTZXJ2",
          "ZXJSZXF1ZXN0GA8gASgLMhYuUnVuU2NlbmVTZXJ2ZXJSZXF1ZXN0EjcKFnJ1",
          "blNjZW5lU2VydmVyUmVzcG9uc2UYECABKAsyFy5SdW5TY2VuZVNlcnZlclJl",
          "c3BvbnNlEi8KEnNjZW5lU2VydmVyUmVxdWVzdBgRIAEoCzITLlNjZW5lU2Vy",
          "dmVyUmVxdWVzdBIxChNzY2VuZVNlcnZlclJlc3BvbnNlGBIgASgLMhQuU2Nl",
          "bmVTZXJ2ZXJSZXNwb25zZRJHCh5zY2VuZVJldHJ5Q29uZmlybVNlcnZlclJl",
          "cXVlc3QYEyABKAsyHy5TY2VuZVJldHJ5Q29uZmlybVNlcnZlclJlcXVlc3QS",
          "SQofc2NlbmVSZXRyeUNvbmZpcm1TZXJ2ZXJSZXNwb25zZRgUIAEoCzIgLlNj",
          "ZW5lUmV0cnlDb25maXJtU2VydmVyUmVzcG9uc2USQQobc2V0U2NlbmVTdGF0",
          "dXNTZXJ2ZXJSZXF1ZXN0GBUgASgLMhwuU2V0U2NlbmVTdGF0dXNTZXJ2ZXJS",
          "ZXF1ZXN0EkMKHHNldFNjZW5lU3RhdHVzU2VydmVyUmVzcG9uc2UYFiABKAsy",
          "HS5TZXRTY2VuZVN0YXR1c1NlcnZlclJlc3BvbnNlEjcKFnRlc3RTY2VuZVNl",
          "cnZlclJlcXVlc3QYFyABKAsyFy5UZXN0U2NlbmVTZXJ2ZXJSZXF1ZXN0EjkK",
          "F3Rlc3RTY2VuZVNlcnZlclJlc3BvbnNlGBggASgLMhguVGVzdFNjZW5lU2Vy",
          "dmVyUmVzcG9uc2USNwoTc2NlbmVUcmlnZ2VyUmVxdWVzdBgZIAEoCzIaLlNj",
          "ZW5lVHJpZ2dlckNsaWVudFJlcXVlc3QioQMKF0dlbmVyYWxUYWJTZXJ2ZXJN",
          "ZXNzYWdlEjkKF2dldEhvbWVUYWJTZXJ2ZXJSZXF1ZXN0GAEgASgLMhguR2V0",
          "SG9tZVRhYlNlcnZlclJlcXVlc3QSOwoYZ2V0SG9tZVRhYlNlcnZlclJlc3Bv",
          "bnNlGAIgASgLMhkuR2V0SG9tZVRhYlNlcnZlclJlc3BvbnNlEkEKG2dldEVs",
          "ZWN0cmljVGFiU2VydmVyUmVxdWVzdBgDIAEoCzIcLkdldEVsZWN0cmljVGFi",
          "U2VydmVyUmVxdWVzdBJDChxnZXRFbGVjdHJpY1RhYlNlcnZlclJlc3BvbnNl",
          "GAQgASgLMh0uR2V0RWxlY3RyaWNUYWJTZXJ2ZXJSZXNwb25zZRJBChtnZXRT",
          "d2l0Y2hlclRhYlNlcnZlclJlcXVlc3QYBSABKAsyHC5HZXRTd2l0Y2hlclRh",
          "YlNlcnZlclJlcXVlc3QSQwocZ2V0U3dpdGNoZXJUYWJTZXJ2ZXJSZXNwb25z",
          "ZRgGIAEoCzIdLkdldFN3aXRjaGVyVGFiU2VydmVyUmVzcG9uc2UisgoKFk9u",
          "Q2hhbmdlZFNlcnZlck1lc3NhZ2USSQofc3dpdGNoZXJPbkNoYW5nZWRTZXJ2",
          "ZXJSZXNwb25zZRgBIAEoCzIgLlN3aXRjaGVyT25DaGFuZ2VkU2VydmVyUmVz",
          "cG9uc2USVwomY3VydGFpblN3aXRjaGVyT25DaGFuZ2VkU2VydmVyUmVzcG9u",
          "c2UYAiABKAsyJy5DdXJ0YWluU3dpdGNoZXJPbkNoYW5nZWRTZXJ2ZXJSZXNw",
          "b25zZRJVCiVhaXJDb25kaXRpb25lck9uQ2hhbmdlZFNlcnZlclJlc3BvbnNl",
          "GAMgASgLMiYuQWlyQ29uZGl0aW9uZXJPbkNoYW5nZWRTZXJ2ZXJSZXNwb25z",
          "ZRJFCh1yZW1vdGVPbkNoYW5nZWRTZXJ2ZXJSZXNwb25zZRgEIAEoCzIeLlJl",
          "bW90ZU9uQ2hhbmdlZFNlcnZlclJlc3BvbnNlEkMKHG1ldGVyT25DaGFuZ2Vk",
          "U2VydmVyUmVzcG9uc2UYBSABKAsyHS5NZXRlck9uQ2hhbmdlZFNlcnZlclJl",
          "c3BvbnNlElEKI2RldmljZU9uQ2hhbmdlZERldmljZVNlcnZlclJlc3BvbnNl",
          "GAYgASgLMiQuRGV2aWNlT25DaGFuZ2VkRGV2aWNlU2VydmVyUmVzcG9uc2US",
          "cQozcHJvZ3Jlc3NVcGRhdGVGaXJtd2FyZU9uQ2hhbmdlZERldmljZVNlcnZl",
          "clJlc3BvbnNlGAcgASgLMjQuUHJvZ3Jlc3NVcGRhdGVGaXJtd2FyZU9uQ2hh",
          "bmdlZERldmljZVNlcnZlclJlc3BvbnNlEmUKLWRvd25sb2FkRmlybXdhcmVP",
          "bkNoYW5nZWREZXZpY2VTZXJ2ZXJSZXNwb25zZRgIIAEoCzIuLkRvd25sb2Fk",
          "RmlybXdhcmVPbkNoYW5nZWREZXZpY2VTZXJ2ZXJSZXNwb25zZRJFCh1tb3Rp",
          "b25PbkNoYW5nZWRTZXJ2ZXJSZXNwb25zZRgJIAEoCzIeLk1vdGlvbk9uQ2hh",
          "bmdlZFNlcnZlclJlc3BvbnNlEkMKHHNjZW5lT25DaGFuZ2VkU2VydmVyUmVz",
          "cG9uc2UYCiABKAsyHS5TY2VuZU9uQ2hhbmdlZFNlcnZlclJlc3BvbnNlEkcK",
          "HmhvbWVraXRPbkNoYW5nZWRTZXJ2ZXJSZXNwb25zZRgLIAEoCzIfLkhvbWVr",
          "aXRPbkNoYW5nZWRTZXJ2ZXJSZXNwb25zZRJFCh1idXR0b25PbkNoYW5nZWRT",
          "ZXJ2ZXJSZXNwb25zZRgMIAEoCzIeLkJ1dHRvbk9uQ2hhbmdlZFNlcnZlclJl",
          "c3BvbnNlElEKI2dyb3VwQ29udHJvbE9uQ2hhbmdlZFNlcnZlclJlc3BvbnNl",
          "GA0gASgLMiQuR3JvdXBDb250cm9sT25DaGFuZ2VkU2VydmVyUmVzcG9uc2US",
          "SwogbGVkRHJpdmVyT25DaGFuZ2VkU2VydmVyUmVzcG9uc2UYDiABKAsyIS5M",
          "ZWREcml2ZXJPbkNoYW5nZWRTZXJ2ZXJSZXNwb25zZRJbCihlbnZpcm9ubWVu",
          "dFNlbnNvck9uQ2hhbmdlZFNlcnZlclJlc3BvbnNlGA8gASgLMikuRW52aXJv",
          "bm1lbnRTZW5zb3JPbkNoYW5nZWRTZXJ2ZXJSZXNwb25zZRJLCiBzbWFydFBs",
          "dWdPbkNoYW5nZWRTZXJ2ZXJSZXNwb25zZRgQIAEoCzIhLlNtYXJ0UGx1Z09u",
          "Q2hhbmdlZFNlcnZlclJlc3BvbnNlIngKFlNpbXVsYXRvclNlcnZlck1lc3Nh",
          "Z2USLQoRZWNob1NlcnZlclJlcXVlc3QYASABKAsyEi5FY2hvU2VydmVyUmVx",
          "dWVzdBIvChJlY2hvU2VydmVyUmVzcG9uc2UYAiABKAsyEy5FY2hvU2VydmVy",
          "UmVzcG9uc2UihQsKDVNlcnZlck1lc3NhZ2USLQoRYXV0aFNlcnZlck1lc3Nh",
          "Z2UYASABKAsyEi5BdXRoU2VydmVyTWVzc2FnZRItChF1c2VyU2VydmVyTWVz",
          "c2FnZRgCIAEoCzISLlVzZXJTZXJ2ZXJNZXNzYWdlEi0KEWhvbWVTZXJ2ZXJN",
          "ZXNzYWdlGAMgASgLMhIuSG9tZVNlcnZlck1lc3NhZ2USLQoRcm9vbVNlcnZl",
          "ck1lc3NhZ2UYBCABKAsyEi5Sb29tU2VydmVyTWVzc2FnZRIxChNkZXZpY2VT",
          "ZXJ2ZXJNZXNzYWdlGAUgASgLMhQuRGV2aWNlU2VydmVyTWVzc2FnZRI1ChVz",
          "d2l0Y2hlclNlcnZlck1lc3NhZ2UYBiABKAsyFi5Td2l0Y2hlclNlcnZlck1l",
          "c3NhZ2USQwocY3VydGFpblN3aXRjaGVyU2VydmVyTWVzc2FnZRgHIAEoCzId",
          "LkN1cnRhaW5Td2l0Y2hlclNlcnZlck1lc3NhZ2USLwoSbWV0ZXJTZXJ2ZXJN",
          "ZXNzYWdlGAggASgLMhMuTWV0ZXJTZXJ2ZXJNZXNzYWdlEkEKG2FpckNvbmRp",
          "dGlvbmVyU2VydmVyTWVzc2FnZRgJIAEoCzIcLkFpckNvbmRpdGlvbmVyU2Vy",
          "dmVyTWVzc2FnZRIxChNyZW1vdGVTZXJ2ZXJNZXNzYWdlGAogASgLMhQuUmVt",
          "b3RlU2VydmVyTWVzc2FnZRIvChJzY2VuZVNlcnZlck1lc3NhZ2UYCyABKAsy",
          "Ey5TY2VuZVNlcnZlck1lc3NhZ2USOQoXZ2VuZXJhbFRhYlNlcnZlck1lc3Nh",
          "Z2UYDCABKAsyGC5HZW5lcmFsVGFiU2VydmVyTWVzc2FnZRI3ChZvbkNoYW5n",
          "ZWRTZXJ2ZXJNZXNzYWdlGA0gASgLMhcuT25DaGFuZ2VkU2VydmVyTWVzc2Fn",
          "ZRI3ChZzaW11bGF0b3JTZXJ2ZXJNZXNzYWdlGA4gASgLMhcuU2ltdWxhdG9y",
          "U2VydmVyTWVzc2FnZRIxChNtb3Rpb25TZXJ2ZXJNZXNzYWdlGA8gASgLMhQu",
          "TW90aW9uU2VydmVyTWVzc2FnZRIzChRob21la2l0U2VydmVyTWVzc2FnZRgQ",
          "IAEoCzIVLkhvbWVraXRTZXJ2ZXJNZXNzYWdlEjMKFHByb2plY3RTZXJ2ZXJN",
          "ZXNzYWdlGBEgASgLMhUuUHJvamVjdFNlcnZlck1lc3NhZ2USNQoVYnVpbGRp",
          "bmdTZXJ2ZXJNZXNzYWdlGBIgASgLMhYuQnVpbGRpbmdTZXJ2ZXJNZXNzYWdl",
          "Ei8KEmZsb29yU2VydmVyTWVzc2FnZRgTIAEoCzITLkZsb29yU2VydmVyTWVz",
          "c2FnZRI3ChZhcGFydG1lbnRTZXJ2ZXJNZXNzYWdlGBQgASgLMhcuQXBhcnRt",
          "ZW50U2VydmVyTWVzc2FnZRI1ChV1c2VySG9tZVNlcnZlck1lc3NhZ2UYFSAB",
          "KAsyFi5Vc2VySG9tZVNlcnZlck1lc3NhZ2USLwoSaW5ib3hTZXJ2ZXJNZXNz",
          "YWdlGBYgASgLMhMuSW5ib3hTZXJ2ZXJNZXNzYWdlEjMKFHNldHRpbmdTZXJ2",
          "ZXJNZXNzYWdlGBcgASgLMhUuU2V0dGluZ1NlcnZlck1lc3NhZ2USMQoTYnV0",
          "dG9uU2VydmVyTWVzc2FnZRgYIAEoCzIULkJ1dHRvblNlcnZlck1lc3NhZ2US",
          "PQoZZ3JvdXBDb250cm9sU2VydmVyTWVzc2FnZRgZIAEoCzIaLkdyb3VwQ29u",
          "dHJvbFNlcnZlck1lc3NhZ2USNwoWbGVkRHJpdmVyU2VydmVyTWVzc2FnZRga",
          "IAEoCzIXLkxlZERyaXZlclNlcnZlck1lc3NhZ2VCOwouY29tLnN1bnNoaW5l",
          "LnNtYXJ0aG9tZS5zZXJ2ZXIubWVzc2FnZS5wcm90b2J1ZkIJU2VydmVyQnVm",
          "YgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::CommonMessageReflection.Descriptor, global::ClientMessageReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::LoginServerRequest), global::LoginServerRequest.Parser, new[]{ "AccessToken", "FacebookToken", "GoogleToken", "AccessKey", "DeviceId", "LoggedOS", "VersionOS", "LoggedIP", "Mdns", "BrandName", "Model", "Signal", "Firmware", "Hardware", "Group", "HardwareId", "DeviceToken", "GatewayId", "UpdateMode", "Reactivity", "Brightness", "TimeDelay", "Latitude", "Longitude", "SceneActiveMap", "SupportGroupControl", "GatewayDeviceId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::LoginServerResponse), global::LoginServerResponse.Parser, new[]{ "UserId", "DeviceId", "AccessToken", "RefreshToken", "AccessKey", "ServerDomain", "Home", "KeepAlive", "SerialNumbers", "HardwareId", "LoggedDate", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RefreshTokenServerRequest), global::RefreshTokenServerRequest.Parser, new[]{ "AccessToken", "RefreshToken" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RefreshTokenServerResponse), global::RefreshTokenServerResponse.Parser, new[]{ "AccessToken", "RefreshToken", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SendCodeServerRequest), global::SendCodeServerRequest.Parser, new[]{ "PhoneNumber" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::VerifyCodeServerRequest), global::VerifyCodeServerRequest.Parser, new[]{ "PhoneNumber", "Code" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SendCodeServerResponse), global::SendCodeServerResponse.Parser, new[]{ "Code", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::VerifyCodeServerResponse), global::VerifyCodeServerResponse.Parser, new[]{ "AccessToken", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetUsersServerRequest), global::GetUsersServerRequest.Parser, new[]{ "Search", "Order", "PageSize" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetUsersServerResponse), global::GetUsersServerResponse.Parser, new[]{ "Users", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SearchUserServerRequest), global::SearchUserServerRequest.Parser, new[]{ "Search" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SearchUserServerResponse), global::SearchUserServerResponse.Parser, new[]{ "User", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AvatarUploadServerRequest), global::AvatarUploadServerRequest.Parser, new[]{ "FileUploadForm" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AvatarUploadServerResponse), global::AvatarUploadServerResponse.Parser, new[]{ "ImageUrl", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetUserInfoServerRequest), global::GetUserInfoServerRequest.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetUserInfoServerResponse), global::GetUserInfoServerResponse.Parser, new[]{ "UserId", "Avatar", "FullName", "Email", "PhoneNumber", "Language", "AutoSwitchGps", "Homes", "UserRole", "UserSetting", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateUserInfoServerRequest), global::UpdateUserInfoServerRequest.Parser, new[]{ "Avatar", "FullName", "Email", "PhoneNumber", "MarkedDeleteAvatar", "Language", "AutoSwitchGps" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateUserInfoServerResponse), global::UpdateUserInfoServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ChangedHomeForUserServerRequest), global::ChangedHomeForUserServerRequest.Parser, new[]{ "HomeId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ChangedHomeForUserServerResponse), global::ChangedHomeForUserServerResponse.Parser, new[]{ "HomeId", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SetOnesignalForUserServerRequest), global::SetOnesignalForUserServerRequest.Parser, new[]{ "OnesignalId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SetOnesignalForUserServerResponse), global::SetOnesignalForUserServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetHomesServerRequest), global::GetHomesServerRequest.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetHomesServerResponse), global::GetHomesServerResponse.Parser, new[]{ "Homes", "DefaultHomeId", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetHomesByPhoneServerRequest), global::GetHomesByPhoneServerRequest.Parser, new[]{ "Phone" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetHomesByPhoneServerResponse), global::GetHomesByPhoneServerResponse.Parser, new[]{ "Home", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UploadHomeBackgroundServerRequest), global::UploadHomeBackgroundServerRequest.Parser, new[]{ "HomeId", "FileUploadForm" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UploadHomeBackgroundServerResponse), global::UploadHomeBackgroundServerResponse.Parser, new[]{ "ImageUrl", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetHomeInfoServerRequest), global::GetHomeInfoServerRequest.Parser, new[]{ "HomeId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetHomeInfoServerResponse), global::GetHomeInfoServerResponse.Parser, new[]{ "Home", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AddHomeServerRequest), global::AddHomeServerRequest.Parser, new[]{ "HomeName", "HomeNameEn", "BackgroundName" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AddHomeServerResponse), global::AddHomeServerResponse.Parser, new[]{ "Home", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateHomeServerRequest), global::UpdateHomeServerRequest.Parser, new[]{ "Home" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateHomeServerResponse), global::UpdateHomeServerResponse.Parser, new[]{ "Home", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SetGpsForHomeServerRequest), global::SetGpsForHomeServerRequest.Parser, new[]{ "Id", "Longitude", "Latitude" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SetGpsForHomeServerResponse), global::SetGpsForHomeServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeleteHomeServerRequest), global::DeleteHomeServerRequest.Parser, new[]{ "HomeId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeleteHomeServerResponse), global::DeleteHomeServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetRoomsServerRequest), global::GetRoomsServerRequest.Parser, new[]{ "HomeId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AddRoomServerRequest), global::AddRoomServerRequest.Parser, new[]{ "HomeId", "RoomName", "RoomNameEn", "BackgroundName" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeleteRoomServerRequest), global::DeleteRoomServerRequest.Parser, new[]{ "RoomId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetRoomsServerResponse), global::GetRoomsServerResponse.Parser, new[]{ "Rooms", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AddRoomServerResponse), global::AddRoomServerResponse.Parser, new[]{ "Room", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeleteRoomServerResponse), global::DeleteRoomServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateRoomServerRequest), global::UpdateRoomServerRequest.Parser, new[]{ "Room" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateRoomServerResponse), global::UpdateRoomServerResponse.Parser, new[]{ "Room", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UploadRoomBackgroundServerRequest), global::UploadRoomBackgroundServerRequest.Parser, new[]{ "Room", "FileUploadForm" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UploadRoomBackgroundServerResponse), global::UploadRoomBackgroundServerResponse.Parser, new[]{ "ImageUrl", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetProjectsServerRequest), global::GetProjectsServerRequest.Parser, new[]{ "KeySearch" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetProjectsServerResponse), global::GetProjectsServerResponse.Parser, new[]{ "Projects", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetBuildingsServerRequest), global::GetBuildingsServerRequest.Parser, new[]{ "ProjectId", "KeySearch" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetBuildingsServerResponse), global::GetBuildingsServerResponse.Parser, new[]{ "Buildings", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetFloorsServerRequest), global::GetFloorsServerRequest.Parser, new[]{ "BuildingId", "KeySearch" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetFloorsServerResponse), global::GetFloorsServerResponse.Parser, new[]{ "Floors", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetApartmentsServerRequest), global::GetApartmentsServerRequest.Parser, new[]{ "FloorId", "KeySearch" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetApartmentsServerResponse), global::GetApartmentsServerResponse.Parser, new[]{ "Apartments", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetCitizenInfoServerRequest), global::GetCitizenInfoServerRequest.Parser, new[]{ "HomeId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetCitizenInfoServerResponse), global::GetCitizenInfoServerResponse.Parser, new[]{ "Citizen", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SetCitizenServerRequest), global::SetCitizenServerRequest.Parser, new[]{ "Citizen" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SetCitizenServerResponse), global::SetCitizenServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AddUserHomeServerRequest), global::AddUserHomeServerRequest.Parser, new[]{ "UserHome" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AddUserHomeServerResponse), global::AddUserHomeServerResponse.Parser, new[]{ "UserHome", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeleteUserHomeServerRequest), global::DeleteUserHomeServerRequest.Parser, new[]{ "Id" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeleteUserHomeServerResponse), global::DeleteUserHomeServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetUnreadServerRequest), global::GetUnreadServerRequest.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetUnreadServerResponse), global::GetUnreadServerResponse.Parser, new[]{ "Unread", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SetReadServerRequest), global::SetReadServerRequest.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SetReadServerResponse), global::SetReadServerResponse.Parser, new[]{ "Id", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetBackgroundsServerRequest), global::GetBackgroundsServerRequest.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetBackgroundsServerResponse), global::GetBackgroundsServerResponse.Parser, new[]{ "Backgrounds", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetAutoOffsServerRequest), global::GetAutoOffsServerRequest.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetAutoOffsServerResponse), global::GetAutoOffsServerResponse.Parser, new[]{ "AutoOffs", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetTypeDevicesServerRequest), global::GetTypeDevicesServerRequest.Parser, new[]{ "Group" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetTypeDevicesServerResponse), global::GetTypeDevicesServerResponse.Parser, new[]{ "TypeDevices", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetDevicesServerRequest), global::GetDevicesServerRequest.Parser, new[]{ "HomeId", "Group" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetDeviceServerRequest), global::GetDeviceServerRequest.Parser, new[]{ "DeviceId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AddDevicesServerRequest), global::AddDevicesServerRequest.Parser, new[]{ "Devices" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateDeviceServerRequest), global::UpdateDeviceServerRequest.Parser, new[]{ "Device" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeleteDeviceServerRequest), global::DeleteDeviceServerRequest.Parser, new[]{ "DeviceId", "HardwareId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetFirmwareLatestDeviceServerRequest), global::GetFirmwareLatestDeviceServerRequest.Parser, new[]{ "Model", "Firmware", "DeviceToken", "DeviceId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DownloadFirmwareDeviceServerRequest), global::DownloadFirmwareDeviceServerRequest.Parser, new[]{ "DeviceId", "Model", "FirmwareId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ForceUpdateFirmwareDeviceServerRequest), global::ForceUpdateFirmwareDeviceServerRequest.Parser, new[]{ "DeviceId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ForceUpdateFirmwareAllDevicesByPhoneServerRequest), global::ForceUpdateFirmwareAllDevicesByPhoneServerRequest.Parser, new[]{ "CustomerPhone", "HomeId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ForceUpdateFirmwareAllDevicesByPhoneServerResponse), global::ForceUpdateFirmwareAllDevicesByPhoneServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetDevicesServerResponse), global::GetDevicesServerResponse.Parser, new[]{ "Rooms", "Devices", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetDeviceServerResponse), global::GetDeviceServerResponse.Parser, new[]{ "Device", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AddDevicesServerResponse), global::AddDevicesServerResponse.Parser, new[]{ "Devices", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateDeviceServerResponse), global::UpdateDeviceServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeleteDeviceServerResponse), global::DeleteDeviceServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetFirmwareLatestDeviceServerResponse), global::GetFirmwareLatestDeviceServerResponse.Parser, new[]{ "FirmwareVersion", "FirmwareId", "IsDownloading", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DownloadFirmwareDeviceServerResponse), global::DownloadFirmwareDeviceServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ForceUpdateFirmwareDeviceServerResponse), global::ForceUpdateFirmwareDeviceServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RegisterDeviceServerRequest), global::RegisterDeviceServerRequest.Parser, new[]{ "ManToken", "HardwareId", "Model", "Firmware" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RegisterDeviceServerResponse), global::RegisterDeviceServerResponse.Parser, new[]{ "HardwareId", "DeviceToken", "WsEnpoint", "DataType", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateWSEndpointDeviceServerRequest), global::UpdateWSEndpointDeviceServerRequest.Parser, new[]{ "DeviceId", "WsEnpoint" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateWSEndpointDeviceServerResponse), global::UpdateWSEndpointDeviceServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ProgressUpdateFirmwareOnChangedDeviceServerResponse), global::ProgressUpdateFirmwareOnChangedDeviceServerResponse.Parser, new[]{ "DeviceId", "Percent", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DownloadFirmwareOnChangedDeviceServerResponse), global::DownloadFirmwareOnChangedDeviceServerResponse.Parser, new[]{ "DeviceId", "HardwareId", "Data", "DataSize", "PageIndex", "TotalPage", "PageSize", "FileSize", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeviceOnChangedDeviceServerResponse), global::DeviceOnChangedDeviceServerResponse.Parser, new[]{ "DeviceId", "ConnectionState", "TotalTimeOnOrgin", "TotalTimeOnYear", "TotalTimeOnMonth", "TimeOnLastDate", "TimeOffLastDate", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetSwitchersServerRequest), global::GetSwitchersServerRequest.Parser, new[]{ "DeviceId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetSwitcherServerRequest), global::GetSwitcherServerRequest.Parser, new[]{ "SwitcherId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetIconSwitchersServerRequest), global::GetIconSwitchersServerRequest.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetLogSwitcherServerRequest), global::GetLogSwitcherServerRequest.Parser, new[]{ "DeviceId", "Switcher" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateSwitcherServerRequest), global::UpdateSwitcherServerRequest.Parser, new[]{ "Switcher" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SwitcherServerRequest), global::SwitcherServerRequest.Parser, new[]{ "DeviceId", "Switcher", "PowerState" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetSwitcherSchedulesServerRequest), global::GetSwitcherSchedulesServerRequest.Parser, new[]{ "SwitcherId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetSwitcherScheduleServerRequest), global::GetSwitcherScheduleServerRequest.Parser, new[]{ "SwitcherScheduleId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetCountSwitcherScheduleServerRequest), global::GetCountSwitcherScheduleServerRequest.Parser, new[]{ "SwitcherId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AddSwitcherScheduleServerRequest), global::AddSwitcherScheduleServerRequest.Parser, new[]{ "DeviceId", "Schedule" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateSwitcherScheduleServerRequest), global::UpdateSwitcherScheduleServerRequest.Parser, new[]{ "DeviceId", "Schedule" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeleteSwitcherScheduleServerRequest), global::DeleteSwitcherScheduleServerRequest.Parser, new[]{ "DeviceId", "SwitcherScheduleId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SetActiveSwitcherScheduleServerRequest), global::SetActiveSwitcherScheduleServerRequest.Parser, new[]{ "DeviceId", "SwitcherScheduleId", "Active" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetSwitchersServerResponse), global::GetSwitchersServerResponse.Parser, new[]{ "Switchers", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetSwitcherServerResponse), global::GetSwitcherServerResponse.Parser, new[]{ "Switcher", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetLogSwitcherServerResponse), global::GetLogSwitcherServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetIconSwitchersServerResponse), global::GetIconSwitchersServerResponse.Parser, new[]{ "Icons", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateSwitcherServerResponse), global::UpdateSwitcherServerResponse.Parser, new[]{ "Switcher", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SwitcherServerResponse), global::SwitcherServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SwitcherOnChangedServerResponse), global::SwitcherOnChangedServerResponse.Parser, new[]{ "DeviceId", "Switcher", "PowerState", "TotalTimeOnOrgin", "TotalTimeOnYear", "TotalTimeOnMonth", "TimeOnLastDate", "TimeOffLastDate", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetSwitcherSchedulesServerResponse), global::GetSwitcherSchedulesServerResponse.Parser, new[]{ "Schedules", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetSwitcherScheduleServerResponse), global::GetSwitcherScheduleServerResponse.Parser, new[]{ "Schedule", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetCountSwitcherScheduleServerResponse), global::GetCountSwitcherScheduleServerResponse.Parser, new[]{ "Count", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AddSwitcherScheduleServerResponse), global::AddSwitcherScheduleServerResponse.Parser, new[]{ "SwitcherScheduleId", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateSwitcherScheduleServerResponse), global::UpdateSwitcherScheduleServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeleteSwitcherScheduleServerResponse), global::DeleteSwitcherScheduleServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SetActiveSwitcherScheduleServerResponse), global::SetActiveSwitcherScheduleServerResponse.Parser, new[]{ "DeviceId", "SwitcherScheduleId", "Active", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetCurtainSwitcherServerRequest), global::GetCurtainSwitcherServerRequest.Parser, new[]{ "CurtainSwitcherId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateCurtainSwitcherServerRequest), global::UpdateCurtainSwitcherServerRequest.Parser, new[]{ "CurtainSwitcher" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetCurtainSwitcherStateServerRequest), global::GetCurtainSwitcherStateServerRequest.Parser, new[]{ "DeviceId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CurtainSwitcherServerRequest), global::CurtainSwitcherServerRequest.Parser, new[]{ "DeviceId", "PercentIn", "PercentOut" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetCurtainSwitcherSchedulesServerRequest), global::GetCurtainSwitcherSchedulesServerRequest.Parser, new[]{ "CurtainSwitcherId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetCurtainSwitcherScheduleServerRequest), global::GetCurtainSwitcherScheduleServerRequest.Parser, new[]{ "CurtainSwitcherScheduleId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetCountCurtainSwitcherScheduleServerRequest), global::GetCountCurtainSwitcherScheduleServerRequest.Parser, new[]{ "CurtainSwitcherId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AddCurtainSwitcherScheduleServerRequest), global::AddCurtainSwitcherScheduleServerRequest.Parser, new[]{ "DeviceId", "Schedule" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateCurtainSwitcherScheduleServerRequest), global::UpdateCurtainSwitcherScheduleServerRequest.Parser, new[]{ "DeviceId", "Schedule" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeleteCurtainSwitcherScheduleServerRequest), global::DeleteCurtainSwitcherScheduleServerRequest.Parser, new[]{ "DeviceId", "CurtainSwitcherScheduleId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SetActiveCurtainSwitcherScheduleServerRequest), global::SetActiveCurtainSwitcherScheduleServerRequest.Parser, new[]{ "DeviceId", "CurtainSwitcherScheduleId", "Active" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetCurtainSwitcherServerResponse), global::GetCurtainSwitcherServerResponse.Parser, new[]{ "CurtainSwitcher", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateCurtainSwitcherServerResponse), global::UpdateCurtainSwitcherServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetCurtainSwitcherStateServerResponse), global::GetCurtainSwitcherStateServerResponse.Parser, new[]{ "PercentIn", "PercentOut", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CurtainSwitcherServerResponse), global::CurtainSwitcherServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CurtainSwitcherOnChangedServerResponse), global::CurtainSwitcherOnChangedServerResponse.Parser, new[]{ "DeviceId", "PercentIn", "PercentOut", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetCurtainSwitcherSchedulesServerResponse), global::GetCurtainSwitcherSchedulesServerResponse.Parser, new[]{ "Schedules", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetCountCurtainSwitcherScheduleServerResponse), global::GetCountCurtainSwitcherScheduleServerResponse.Parser, new[]{ "Count", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetCurtainSwitcherScheduleServerResponse), global::GetCurtainSwitcherScheduleServerResponse.Parser, new[]{ "Schedule", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AddCurtainSwitcherScheduleServerResponse), global::AddCurtainSwitcherScheduleServerResponse.Parser, new[]{ "CurtainSwitcherScheduleId", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateCurtainSwitcherScheduleServerResponse), global::UpdateCurtainSwitcherScheduleServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeleteCurtainSwitcherScheduleServerResponse), global::DeleteCurtainSwitcherScheduleServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SetActiveCurtainSwitcherScheduleServerResponse), global::SetActiveCurtainSwitcherScheduleServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MotionOnChangedServerResponse), global::MotionOnChangedServerResponse.Parser, new[]{ "DeviceId", "State", "SensorReport", "BatteryCapacity", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::HomekitOnChangedServerResponse), global::HomekitOnChangedServerResponse.Parser, new[]{ "DeviceId", "HomekitMode", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ButtonOnChangedServerResponse), global::ButtonOnChangedServerResponse.Parser, new[]{ "DeviceId", "State", "Index", "BatteryCapacity", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GroupControlOnChangedServerResponse), global::GroupControlOnChangedServerResponse.Parser, new[]{ "DeviceId", "State", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::LedDriverOnChangedServerResponse), global::LedDriverOnChangedServerResponse.Parser, new[]{ "LedId", "PowerState", "BrightnessPercent", "RoomId", "LedItems", "LedDriverId", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::EnvironmentSensorOnChangedServerResponse), global::EnvironmentSensorOnChangedServerResponse.Parser, new[]{ "Id", "DeviceId", "EnvironmentSensorReport", "Battery", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SmartPlugOnChangedServerResponse), global::SmartPlugOnChangedServerResponse.Parser, new[]{ "Id", "DeviceId", "Amp", "Power", "Volt", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetMeterServerRequest), global::GetMeterServerRequest.Parser, new[]{ "MeterId", "SerialNumber", "Type", "Date", "Months" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetMeterServerResponse), global::GetMeterServerResponse.Parser, new[]{ "Meter", "MeterEstimate", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateMeterServerRequest), global::UpdateMeterServerRequest.Parser, new[]{ "Meter" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetMeterEstimatesDayInMonthServerRequest), global::GetMeterEstimatesDayInMonthServerRequest.Parser, new[]{ "SerialNumber", "Type", "Year", "Month" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetMeterEstimatesDayInMonthServerResponse), global::GetMeterEstimatesDayInMonthServerResponse.Parser, new[]{ "Estimates", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetMeterEstimatesHourInDayServerRequest), global::GetMeterEstimatesHourInDayServerRequest.Parser, new[]{ "SerialNumber", "Type", "Year", "Month", "Day" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetMeterEstimatesHourInDayServerResponse), global::GetMeterEstimatesHourInDayServerResponse.Parser, new[]{ "Estimates", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetMetersByHomeIdServerRequest), global::GetMetersByHomeIdServerRequest.Parser, new[]{ "HomeId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetMetersByHomeIdServerResponse), global::GetMetersByHomeIdServerResponse.Parser, new[]{ "HomeId", "Meters", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetMeterMissingInDayServerRequest), global::GetMeterMissingInDayServerRequest.Parser, new[]{ "HardwareId", "Date" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetMeterMissingInDayServerResponse), global::GetMeterMissingInDayServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateMeterServerResponse), global::UpdateMeterServerResponse.Parser, new[]{ "Meter", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MeterOnChangedServerResponse), global::MeterOnChangedServerResponse.Parser, new[]{ "Meter", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetAirConditionerStateServerRequest), global::GetAirConditionerStateServerRequest.Parser, new[]{ "DeviceId", "IndoorId", "RemoteId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetAirConditionerStateServerResponse), global::GetAirConditionerStateServerResponse.Parser, new[]{ "State", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AirConditionerServerRequest), global::AirConditionerServerRequest.Parser, new[]{ "DeviceId", "State" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AirConditionerServerResponse), global::AirConditionerServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AirConditionerOnChangedServerResponse), global::AirConditionerOnChangedServerResponse.Parser, new[]{ "DeviceId", "State", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetRemotesServerRequest), global::GetRemotesServerRequest.Parser, new[]{ "HomeId", "Group" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetRemoteServerRequest), global::GetRemoteServerRequest.Parser, new[]{ "RemoteId", "HomeId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetRemoteLibrariesServerRequest), global::GetRemoteLibrariesServerRequest.Parser, new[]{ "Search", "LastName", "Size" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetCommandsRemoteServerRequest), global::GetCommandsRemoteServerRequest.Parser, new[]{ "RemoteId", "RemoteLibraryId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SendCommandRemoteServerRequest), global::SendCommandRemoteServerRequest.Parser, new[]{ "DeviceId", "RemoteId", "RemoteLibraryCmdId", "RemoteMultiLibraryCmdId", "Type" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::LearnCommandRemoteServerRequest), global::LearnCommandRemoteServerRequest.Parser, new[]{ "DeviceId", "RemoteId", "RemoteLibraryCmdId", "RemoteMultiLibraryCmdId", "Type" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RestoreCommandRemoteServerRequest), global::RestoreCommandRemoteServerRequest.Parser, new[]{ "RemoteId", "RemoteLibraryCmdId", "RemoteMultiLibraryCmdId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AddRemoteServerRequest), global::AddRemoteServerRequest.Parser, new[]{ "Remote" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateRemoteServerRequest), global::UpdateRemoteServerRequest.Parser, new[]{ "Remote" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeleteRemoteServerRequest), global::DeleteRemoteServerRequest.Parser, new[]{ "RemoteId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetRemoteMultisServerRequest), global::GetRemoteMultisServerRequest.Parser, new[]{ "RemoteId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AddRemoteMultiServerRequest), global::AddRemoteMultiServerRequest.Parser, new[]{ "RemoteMulti" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeleteRemoteMultiServerRequest), global::DeleteRemoteMultiServerRequest.Parser, new[]{ "Id" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AddRemoteMultiLibraryCmdServerRequest), global::AddRemoteMultiLibraryCmdServerRequest.Parser, new[]{ "RemoteMultiLibraryCmd" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateRemoteMultiLibraryCmdServerRequest), global::UpdateRemoteMultiLibraryCmdServerRequest.Parser, new[]{ "RemoteMultiLibraryCmd" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateGroupRemoteMultiLibraryCmdServerRequest), global::UpdateGroupRemoteMultiLibraryCmdServerRequest.Parser, new[]{ "RemoteMultiLibraryCmd" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeleteRemoteMultiLibraryCmdServerRequest), global::DeleteRemoteMultiLibraryCmdServerRequest.Parser, new[]{ "Id" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetRemoteSchedulesServerRequest), global::GetRemoteSchedulesServerRequest.Parser, new[]{ "RemoteId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetCountRemoteScheduleServerRequest), global::GetCountRemoteScheduleServerRequest.Parser, new[]{ "RemoteId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetRemoteScheduleServerRequest), global::GetRemoteScheduleServerRequest.Parser, new[]{ "RemoteScheduleId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AddRemoteScheduleServerRequest), global::AddRemoteScheduleServerRequest.Parser, new[]{ "Schedule" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateRemoteScheduleServerRequest), global::UpdateRemoteScheduleServerRequest.Parser, new[]{ "Schedule" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeleteRemoteScheduleServerRequest), global::DeleteRemoteScheduleServerRequest.Parser, new[]{ "RemoteScheduleId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SetActiveRemoteScheduleServerRequest), global::SetActiveRemoteScheduleServerRequest.Parser, new[]{ "Active", "RemoteScheduleId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetRemotesServerResponse), global::GetRemotesServerResponse.Parser, new[]{ "Remotes", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetRemoteServerResponse), global::GetRemoteServerResponse.Parser, new[]{ "Remote", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetRemoteLibrariesServerResponse), global::GetRemoteLibrariesServerResponse.Parser, new[]{ "Libraries", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetCommandsRemoteServerResponse), global::GetCommandsRemoteServerResponse.Parser, new[]{ "Commands", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SendCommandRemoteServerResponse), global::SendCommandRemoteServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::LearnCommandRemoteServerResponse), global::LearnCommandRemoteServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RestoreCommandRemoteServerResponse), global::RestoreCommandRemoteServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AddRemoteServerResponse), global::AddRemoteServerResponse.Parser, new[]{ "Remote", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateRemoteServerResponse), global::UpdateRemoteServerResponse.Parser, new[]{ "Remote", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeleteRemoteServerResponse), global::DeleteRemoteServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RemoteOnChangedServerResponse), global::RemoteOnChangedServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetRemoteMultisServerResponse), global::GetRemoteMultisServerResponse.Parser, new[]{ "RemoteMultis", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AddRemoteMultiServerResponse), global::AddRemoteMultiServerResponse.Parser, new[]{ "RemoteMulti", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeleteRemoteMultiServerResponse), global::DeleteRemoteMultiServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AddRemoteMultiLibraryCmdServerResponse), global::AddRemoteMultiLibraryCmdServerResponse.Parser, new[]{ "RemoteMultiLibraryCmd", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateRemoteMultiLibraryCmdServerResponse), global::UpdateRemoteMultiLibraryCmdServerResponse.Parser, new[]{ "RemoteMultiLibraryCmd", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateGroupRemoteMultiLibraryCmdServerResponse), global::UpdateGroupRemoteMultiLibraryCmdServerResponse.Parser, new[]{ "RemoteMultiLibraryCmd", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeleteRemoteMultiLibraryCmdServerResponse), global::DeleteRemoteMultiLibraryCmdServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetRemoteSchedulesServerResponse), global::GetRemoteSchedulesServerResponse.Parser, new[]{ "Schedules", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetCountRemoteScheduleServerResponse), global::GetCountRemoteScheduleServerResponse.Parser, new[]{ "Count", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetRemoteScheduleServerResponse), global::GetRemoteScheduleServerResponse.Parser, new[]{ "Schedule", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AddRemoteScheduleServerResponse), global::AddRemoteScheduleServerResponse.Parser, new[]{ "Schedule", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateRemoteScheduleServerResponse), global::UpdateRemoteScheduleServerResponse.Parser, new[]{ "Schedule", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeleteRemoteScheduleServerResponse), global::DeleteRemoteScheduleServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SetActiveRemoteScheduleServerResponse), global::SetActiveRemoteScheduleServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetScenesServerRequest), global::GetScenesServerRequest.Parser, new[]{ "HomeId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetSceneServerRequest), global::GetSceneServerRequest.Parser, new[]{ "SceneId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AddSceneServerRequest), global::AddSceneServerRequest.Parser, new[]{ "Scene" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateSceneServerRequest), global::UpdateSceneServerRequest.Parser, new[]{ "Scene" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeleteSceneServerRequest), global::DeleteSceneServerRequest.Parser, new[]{ "SceneId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeleteSwitcherConditionServerRequest), global::DeleteSwitcherConditionServerRequest.Parser, new[]{ "SceneId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeleteSceneActionServerRequest), global::DeleteSceneActionServerRequest.Parser, new[]{ "SceneActionId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RunSceneServerRequest), global::RunSceneServerRequest.Parser, new[]{ "SceneId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SceneServerRequest), global::SceneServerRequest.Parser, new[]{ "DeviceId", "SceneId", "Source", "Target", "Type", "Mode", "ActiveTime" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SceneRetryConfirmServerRequest), global::SceneRetryConfirmServerRequest.Parser, new[]{ "SceneId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetScenesServerResponse), global::GetScenesServerResponse.Parser, new[]{ "Scenes", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetSceneServerResponse), global::GetSceneServerResponse.Parser, new[]{ "Scene", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AddSceneServerResponse), global::AddSceneServerResponse.Parser, new[]{ "Scene", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateSceneServerResponse), global::UpdateSceneServerResponse.Parser, new[]{ "Scene", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeleteSceneServerResponse), global::DeleteSceneServerResponse.Parser, new[]{ "SceneId", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeleteSwitcherConditionServerResponse), global::DeleteSwitcherConditionServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeleteSceneActionServerResponse), global::DeleteSceneActionServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RunSceneServerResponse), global::RunSceneServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SceneServerResponse), global::SceneServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SceneRetryConfirmServerResponse), global::SceneRetryConfirmServerResponse.Parser, new[]{ "SceneId", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SceneOnChangedServerResponse), global::SceneOnChangedServerResponse.Parser, new[]{ "SceneId", "Confirmed", "Mode", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SetSceneStatusServerRequest), global::SetSceneStatusServerRequest.Parser, new[]{ "SceneId", "IsEnable" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SetSceneStatusServerResponse), global::SetSceneStatusServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::TestSceneServerRequest), global::TestSceneServerRequest.Parser, new[]{ "Scene" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::TestSceneServerResponse), global::TestSceneServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetHomeTabServerRequest), global::GetHomeTabServerRequest.Parser, new[]{ "HomeId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetHomeTabServerResponse), global::GetHomeTabServerResponse.Parser, new[]{ "StatusSwitchers", "Scenes", "FavoriteSwitchers", "FavoriteCurtainSwitchers", "FavoriteRemotes", "Meter", "StatusRoom", "HomeId", "FavoriteMotions", "FavoriteHomekits", "FavoriteButtons", "FavoriteGroupControls", "FeatureCode", "StatusRemotes", "StatusCurtainSwitchers", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetElectricTabServerRequest), global::GetElectricTabServerRequest.Parser, new[]{ "HomeId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetElectricTabServerResponse), global::GetElectricTabServerResponse.Parser, new[]{ "Rooms", "HomeId", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetSwitcherTabServerRequest), global::GetSwitcherTabServerRequest.Parser, new[]{ "HomeId", "Group" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetSwitcherTabServerResponse), global::GetSwitcherTabServerResponse.Parser, new[]{ "Rooms", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MotionServerRequest), global::MotionServerRequest.Parser, new[]{ "DeviceId", "MotionState", "Type" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MotionServerResponse), global::MotionServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetMotionServerRequest), global::GetMotionServerRequest.Parser, new[]{ "MotionId", "Type" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetMotionServerResponse), global::GetMotionServerResponse.Parser, new[]{ "Motion", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateMotionServerRequest), global::UpdateMotionServerRequest.Parser, new[]{ "Motion" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateMotionServerResponse), global::UpdateMotionServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetHomekitInfoServerRequest), global::GetHomekitInfoServerRequest.Parser, new[]{ "HomekitId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetHomekitInfoServerResponse), global::GetHomekitInfoServerResponse.Parser, new[]{ "Homekit", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateHomekitServerRequest), global::UpdateHomekitServerRequest.Parser, new[]{ "Homekit" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateHomekitServerResponse), global::UpdateHomekitServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SetHomekitModeServerRequest), global::SetHomekitModeServerRequest.Parser, new[]{ "DeviceId", "HomekitMode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SetHomekitModeServerResponse), global::SetHomekitModeServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetButtonInfoServerRequest), global::GetButtonInfoServerRequest.Parser, new[]{ "ButtonId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetButtonInfoServerResponse), global::GetButtonInfoServerResponse.Parser, new[]{ "Button", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateButtonServerRequest), global::UpdateButtonServerRequest.Parser, new[]{ "Button" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateButtonServerResponse), global::UpdateButtonServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GroupControlServerRequest), global::GroupControlServerRequest.Parser, new[]{ "DeviceId", "State" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GroupControlServerResponse), global::GroupControlServerResponse.Parser, new[]{ "State", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetGroupControlInfoServerRequest), global::GetGroupControlInfoServerRequest.Parser, new[]{ "Id" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetGroupControlInfoServerResponse), global::GetGroupControlInfoServerResponse.Parser, new[]{ "GroupControl", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetControlsServerRequest), global::GetControlsServerRequest.Parser, new[]{ "GroupControlId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetControlsServerResponse), global::GetControlsServerResponse.Parser, new[]{ "Rooms", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AddGroupControlServerRequest), global::AddGroupControlServerRequest.Parser, new[]{ "GroupControl" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AddGroupControlServerResponse), global::AddGroupControlServerResponse.Parser, new[]{ "GroupControl", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateGroupControlServerRequest), global::UpdateGroupControlServerRequest.Parser, new[]{ "GroupControl" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateGroupControlServerResponse), global::UpdateGroupControlServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeleteGroupControlServerRequest), global::DeleteGroupControlServerRequest.Parser, new[]{ "Id" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeleteGroupControlServerResponse), global::DeleteGroupControlServerResponse.Parser, new[]{ "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::EchoServerRequest), global::EchoServerRequest.Parser, new[]{ "Message", "Type" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::EchoServerResponse), global::EchoServerResponse.Parser, new[]{ "Message", "Type", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetUserOtpServerRequest), global::GetUserOtpServerRequest.Parser, new[]{ "Phone" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetUserOtpServerResponse), global::GetUserOtpServerResponse.Parser, new[]{ "Id", "Phone", "Code", "Active", "SendDate", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AuthServerMessage), global::AuthServerMessage.Parser, new[]{ "LoginServerRequest", "LoginServerResponse", "RefreshTokenServerRequest", "RefreshTokenServerResponse", "SendCodeServerRequest", "SendCodeServerResponse", "VerifyCodeServerRequest", "VerifyCodeServerResponse" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UserServerMessage), global::UserServerMessage.Parser, new[]{ "GetUserInfoServerRequest", "GetUserInfoServerResponse", "UpdateUserInfoServerRequest", "UpdateUserInfoServerResponse", "SetOnesignalForUserServerRequest", "SetOnesignalForUserServerResponse", "ChangedHomeForUserServerRequest", "ChangedHomeForUserServerResponse", "GetUsersServerRequest", "GetUsersServerResponse", "SearchUserServerRequest", "SearchUserServerResponse", "AvatarUploadServerRequest", "AvatarUploadServerResponse", "GetUserOtpServerRequest", "GetUserOtpServerResponse" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::HomeServerMessage), global::HomeServerMessage.Parser, new[]{ "GetHomesServerRequest", "GetHomesServerResponse", "AddHomeServerRequest", "AddHomeServerResponse", "UpdateHomeServerRequest", "UpdateHomeServerResponse", "DeleteHomeServerRequest", "DeleteHomeServerResponse", "GetCitizenInfoServerRequest", "GetCitizenInfoServerResponse", "SetCitizenServerRequest", "SetCitizenServerResponse", "SetGpsForHomeServerRequest", "SetGpsForHomeServerResponse", "GetHomeInfoServerRequest", "GetHomeInfoServerResponse", "GetHomesByPhoneServerRequest", "GetHomesByPhoneServerResponse", "UploadhomeBackgroundServerRequest", "UploadHomeBackgroundServerResponse" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RoomServerMessage), global::RoomServerMessage.Parser, new[]{ "GetRoomsServerRequest", "GetRoomsServerResponse", "AddRoomServerRequest", "AddRoomServerResponse", "DeleteRoomServerRequest", "DeleteRoomServerResponse", "UpdateRoomServerRequest", "UpdateRoomServerResponse", "UploadRoomBackgroundServerRequest", "UploadRoomBackgroundServerResponse" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ProjectServerMessage), global::ProjectServerMessage.Parser, new[]{ "GetProjectsServerRequest", "GetProjectsServerResponse" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::BuildingServerMessage), global::BuildingServerMessage.Parser, new[]{ "GetBuildingsServerRequest", "GetBuildingsServerResponse" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::FloorServerMessage), global::FloorServerMessage.Parser, new[]{ "GetFloorsServerRequest", "GetFloorsServerResponse" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ApartmentServerMessage), global::ApartmentServerMessage.Parser, new[]{ "GetApartmentsServerRequest", "GetApartmentsServerResponse" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UserHomeServerMessage), global::UserHomeServerMessage.Parser, new[]{ "AddUserHomeServerRequest", "AddUserHomeServerResponse", "DeleteUserHomeServerRequest", "DeleteUserHomeServerResponse" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InboxServerMessage), global::InboxServerMessage.Parser, new[]{ "GetUnreadServerRequest", "GetUnreadServerResponse", "SetReadServerRequest", "SetReadServerResponse" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SettingServerMessage), global::SettingServerMessage.Parser, new[]{ "GetBackgroundsServerRequest", "GetBackgroundsServerResponse", "GetAutoOffsServerRequest", "GetAutoOffsServerResponse", "GetTypeDevicesServerRequest", "GetTypeDevicesServerResponse" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DeviceServerMessage), global::DeviceServerMessage.Parser, new[]{ "GetDevicesServerRequest", "GetDevicesServerResponse", "GetDeviceServerRequest", "GetDeviceServerResponse", "AddDevicesServerRequest", "AddDevicesServerResponse", "UpdateDeviceServerRequest", "UpdateDeviceServerResponse", "DeleteDeviceServerRequest", "DeleteDeviceServerResponse", "GetFirmwareLatestDeviceServerRequest", "GetFirmwareLatestDeviceServerResponse", "DownloadFirmwareDeviceServerRequest", "DownloadFirmwareDeviceServerResponse", "ForceUpdateFirmwareDeviceServerRequest", "ForceUpdateFirmwareDeviceServerResponse", "RegisterDeviceServerRequest", "RegisterDeviceServerResponse", "UpdateWSEndpointDeviceServerRequest", "UpdateWSEndpointDeviceServerResponse", "ForceUpdateFirmwareAllDevicesByPhoneServerRequest", "ForceUpdateFirmwareAllDevicesByPhoneServerResponse" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SwitcherServerMessage), global::SwitcherServerMessage.Parser, new[]{ "GetSwitchersServerRequest", "GetSwitchersServerResponse", "GetSwitcherServerRequest", "GetSwitcherServerResponse", "GetLogSwitcherServerRequest", "GetLogSwitcherServerResponse", "GetIconSwitchersServerRequest", "GetIconSwitchersServerResponse", "UpdateSwitcherServerRequest", "UpdateSwitcherServerResponse", "SwitcherServerRequest", "SwitcherServerResponse", "GetSwitcherSchedulesServerRequest", "GetSwitcherSchedulesServerResponse", "GetSwitcherScheduleServerRequest", "GetSwitcherScheduleServerResponse", "GetCountSwitcherScheduleServerRequest", "GetCountSwitcherScheduleServerResponse", "AddSwitcherScheduleServerRequest", "AddSwitcherScheduleServerResponse", "UpdateSwitcherScheduleServerRequest", "UpdateSwitcherScheduleServerResponse", "DeleteSwitcherScheduleServerRequest", "DeleteSwitcherScheduleServerResponse", "SetActiveSwitcherScheduleServerRequest", "SetActiveSwitcherScheduleServerResponse" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CurtainSwitcherServerMessage), global::CurtainSwitcherServerMessage.Parser, new[]{ "GetCurtainSwitcherServerRequest", "GetCurtainSwitcherServerResponse", "UpdateCurtainSwitcherServerRequest", "UpdateCurtainSwitcherServerResponse", "GetCurtainSwitcherStateServerRequest", "GetCurtainSwitcherStateServerResponse", "CurtainSwitcherServerRequest", "CurtainSwitcherServerResponse", "GetCurtainSwitcherSchedulesServerRequest", "GetCurtainSwitcherSchedulesServerResponse", "GetCurtainSwitcherScheduleServerRequest", "GetCurtainSwitcherScheduleServerResponse", "GetCountCurtainSwitcherScheduleServerRequest", "GetCountCurtainSwitcherScheduleServerResponse", "AddCurtainSwitcherScheduleServerRequest", "AddCurtainSwitcherScheduleServerResponse", "UpdateCurtainSwitcherScheduleServerRequest", "UpdateCurtainSwitcherScheduleServerResponse", "DeleteCurtainSwitcherScheduleServerRequest", "DeleteCurtainSwitcherScheduleServerResponse", "SetActiveCurtainSwitcherScheduleServerRequest", "SetActiveCurtainSwitcherScheduleServerResponse" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::LedDriverServerRequest), global::LedDriverServerRequest.Parser, new[]{ "DeviceId", "Index", "RoomId", "PowerState", "BrightnessPercent", "LedItems", "GroupControl" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::LedDriverServerResponse), global::LedDriverServerResponse.Parser, new[]{ "DeviceId", "RoomId", "PowerState", "BrightnessPercess", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetLedDriverServerRequest), global::GetLedDriverServerRequest.Parser, new[]{ "DeviceId", "RoomId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetLedDriverServerResponse), global::GetLedDriverServerResponse.Parser, new[]{ "LedDriver", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetLedDriverItemServerRequest), global::GetLedDriverItemServerRequest.Parser, new[]{ "LedId", "RoomId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetLedDriverItemServerResponse), global::GetLedDriverItemServerResponse.Parser, new[]{ "LedItem", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateLedDriverServerRequest), global::UpdateLedDriverServerRequest.Parser, new[]{ "DeviceId", "RoomId", "LedDriver", "BrightnessPercent", "GroupControl", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateLedDriverServerResponse), global::UpdateLedDriverServerResponse.Parser, new[]{ "LedDriver", "RoomId", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateLedDriverItemServerRequest), global::UpdateLedDriverItemServerRequest.Parser, new[]{ "DeviceId", "RoomId", "LedItem", "BrightnessPercent", "GroupControl", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateLedDriverItemServerResponse), global::UpdateLedDriverItemServerResponse.Parser, new[]{ "LedItem", "RoomId", "StatusCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::LedDriverServerMessage), global::LedDriverServerMessage.Parser, new[]{ "LedDriverServerRequest", "LedDriverServerResponse", "GetLedDriverServerRequest", "GetLedDriverServerResponse", "GetLedDriverItemServerRequest", "GetLedDriverItemServerResponse", "UpdateLedDriverServerRequest", "UpdateLedDriverServerResponse", "UpdateLedDriverItemServerRequest", "UpdateLedDriverItemServerResponse" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MotionServerMessage), global::MotionServerMessage.Parser, new[]{ "MotionServerRequest", "MotionServerResponse", "GetMotionServerRequest", "GetMotionServerResponse", "UpdateMotionServerRequest", "UpdateMotionServerResponse" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::HomekitServerMessage), global::HomekitServerMessage.Parser, new[]{ "GetHomekitInfoServerRequest", "GetHomekitInfoServerResponse", "UpdateHomekitServerRequest", "UpdateHomekitServerResponse", "SetHomekitModeServerRequest", "SetHomekitModeServerResponse" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ButtonServerMessage), global::ButtonServerMessage.Parser, new[]{ "GetButtonInfoServerRequest", "GetButtonInfoServerResponse", "UpdateButtonServerRequest", "UpdateButtonServerResponse" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GroupControlServerMessage), global::GroupControlServerMessage.Parser, new[]{ "GroupControlServerRequest", "GroupControlServerResponse", "GetGroupControlInfoServerRequest", "GetGroupControlInfoServerResponse", "GetControlsServerRequest", "GetControlsServerResponse", "AddGroupControlServerRequest", "AddGroupControlServerResponse", "UpdateGroupControlServerRequest", "UpdateGroupControlServerResponse", "DeleteGroupControlServerRequest", "DeleteGroupControlServerResponse" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MeterServerMessage), global::MeterServerMessage.Parser, new[]{ "GetMeterServerRequest", "GetMeterServerResponse", "UpdateMeterServerRequest", "UpdateMeterServerResponse", "GetMeterEstimatesDayInMonthServerRequest", "GetMeterEstimatesDayInMonthServerResponse", "GetMeterEstimatesHourInDayServerRequest", "GetMeterEstimatesHourInDayServerResponse", "GetMetersByHomeIdServerRequest", "GetMetersByHomeIdServerResponse", "GetMeterMissingInDayServerRequest", "GetMeterMissingInDayServerResponse" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AirConditionerServerMessage), global::AirConditionerServerMessage.Parser, new[]{ "GetAirConditionerStateServerRequest", "GetAirConditionerStateServerResponse", "AirConditionerServerRequest", "AirConditionerServerResponse" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RemoteServerMessage), global::RemoteServerMessage.Parser, new[]{ "GetRemotesServerRequest", "GetRemotesServerResponse", "GetRemoteServerRequest", "GetRemoteServerResponse", "GetRemoteLibrariesServerRequest", "GetRemoteLibrariesServerResponse", "GetCommandsRemoteServerRequest", "GetCommandsRemoteServerResponse", "SendCommandRemoteServerRequest", "SendCommandRemoteServerResponse", "LearnCommandRemoteServerRequest", "LearnCommandRemoteServerResponse", "RestoreCommandRemoteServerRequest", "RestoreCommandRemoteServerResponse", "AddRemoteServerRequest", "AddRemoteServerResponse", "UpdateRemoteServerRequest", "UpdateRemoteServerResponse", "DeleteRemoteServerRequest", "DeleteRemoteServerResponse", "GetRemoteSchedulesServerRequest", "GetRemoteSchedulesServerResponse", "GetCountRemoteScheduleServerRequest", "GetCountRemoteScheduleServerResponse", "GetRemoteScheduleServerRequest", "GetRemoteScheduleServerResponse", "AddRemoteScheduleServerRequest", "AddRemoteScheduleServerResponse", "UpdateRemoteScheduleServerRequest", "UpdateRemoteScheduleServerResponse", "DeleteRemoteScheduleServerRequest", "DeleteRemoteScheduleServerResponse", "SetActiveRemoteScheduleServerRequest", "SetActiveRemoteScheduleServerResponse", "GetRemoteMultisServerRequest", "GetRemoteMultisServerResponse", "AddRemoteMultiServerRequest", "AddRemoteMultiServerResponse", "DeleteRemoteMultiServerRequest", "DeleteRemoteMultiServerResponse", "AddRemoteMultiLibraryCmdServerRequest", "AddRemoteMultiLibraryCmdServerResponse", "DeleteRemoteMultiLibraryCmdServerRequest", "DeleteRemoteMultiLibraryCmdServerResponse", "UpdateRemoteMultiLibraryCmdServerRequest", "UpdateRemoteMultiLibraryCmdServerResponse", "UpdateGroupRemoteMultiLibraryCmdServerRequest", "UpdateGroupRemoteMultiLibraryCmdServerResponse" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SceneServerMessage), global::SceneServerMessage.Parser, new[]{ "GetScenesServerRequest", "GetScenesServerResponse", "GetSceneServerRequest", "GetSceneServerResponse", "AddSceneServerRequest", "AddSceneServerResponse", "UpdateSceneServerRequest", "UpdateSceneServerResponse", "DeleteSceneServerRequest", "DeleteSceneServerResponse", "DeleteSwitcherConditionServerRequest", "DeleteSwitcherConditionServerResponse", "DeleteSceneActionServerRequest", "DeleteSceneActionServerResponse", "RunSceneServerRequest", "RunSceneServerResponse", "SceneServerRequest", "SceneServerResponse", "SceneRetryConfirmServerRequest", "SceneRetryConfirmServerResponse", "SetSceneStatusServerRequest", "SetSceneStatusServerResponse", "TestSceneServerRequest", "TestSceneServerResponse", "SceneTriggerRequest" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GeneralTabServerMessage), global::GeneralTabServerMessage.Parser, new[]{ "GetHomeTabServerRequest", "GetHomeTabServerResponse", "GetElectricTabServerRequest", "GetElectricTabServerResponse", "GetSwitcherTabServerRequest", "GetSwitcherTabServerResponse" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::OnChangedServerMessage), global::OnChangedServerMessage.Parser, new[]{ "SwitcherOnChangedServerResponse", "CurtainSwitcherOnChangedServerResponse", "AirConditionerOnChangedServerResponse", "RemoteOnChangedServerResponse", "MeterOnChangedServerResponse", "DeviceOnChangedDeviceServerResponse", "ProgressUpdateFirmwareOnChangedDeviceServerResponse", "DownloadFirmwareOnChangedDeviceServerResponse", "MotionOnChangedServerResponse", "SceneOnChangedServerResponse", "HomekitOnChangedServerResponse", "ButtonOnChangedServerResponse", "GroupControlOnChangedServerResponse", "LedDriverOnChangedServerResponse", "EnvironmentSensorOnChangedServerResponse", "SmartPlugOnChangedServerResponse" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SimulatorServerMessage), global::SimulatorServerMessage.Parser, new[]{ "EchoServerRequest", "EchoServerResponse" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ServerMessage), global::ServerMessage.Parser, new[]{ "AuthServerMessage", "UserServerMessage", "HomeServerMessage", "RoomServerMessage", "DeviceServerMessage", "SwitcherServerMessage", "CurtainSwitcherServerMessage", "MeterServerMessage", "AirConditionerServerMessage", "RemoteServerMessage", "SceneServerMessage", "GeneralTabServerMessage", "OnChangedServerMessage", "SimulatorServerMessage", "MotionServerMessage", "HomekitServerMessage", "ProjectServerMessage", "BuildingServerMessage", "FloorServerMessage", "ApartmentServerMessage", "UserHomeServerMessage", "InboxServerMessage", "SettingServerMessage", "ButtonServerMessage", "GroupControlServerMessage", "LedDriverServerMessage" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
/// Nhận được yêu cầu đăng nhập từ App hoặc Client
/// </summary>
public sealed partial class LoginServerRequest : pb::IMessage<LoginServerRequest> {
  private static readonly pb::MessageParser<LoginServerRequest> _parser = new pb::MessageParser<LoginServerRequest>(() => new LoginServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<LoginServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginServerRequest(LoginServerRequest other) : this() {
    accessToken_ = other.accessToken_;
    facebookToken_ = other.facebookToken_;
    googleToken_ = other.googleToken_;
    accessKey_ = other.accessKey_;
    deviceId_ = other.deviceId_;
    loggedOS_ = other.loggedOS_;
    versionOS_ = other.versionOS_;
    loggedIP_ = other.loggedIP_;
    mdns_ = other.mdns_;
    brandName_ = other.brandName_;
    model_ = other.model_;
    signal_ = other.signal_;
    firmware_ = other.firmware_;
    hardware_ = other.hardware_;
    group_ = other.group_;
    hardwareId_ = other.hardwareId_;
    deviceToken_ = other.deviceToken_;
    gatewayId_ = other.gatewayId_;
    updateMode_ = other.updateMode_;
    reactivity_ = other.reactivity_;
    brightness_ = other.brightness_;
    timeDelay_ = other.timeDelay_;
    latitude_ = other.latitude_;
    longitude_ = other.longitude_;
    sceneActiveMap_ = other.sceneActiveMap_;
    supportGroupControl_ = other.supportGroupControl_;
    gatewayDeviceId_ = other.gatewayDeviceId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginServerRequest Clone() {
    return new LoginServerRequest(this);
  }

  /// <summary>Field number for the "accessToken" field.</summary>
  public const int AccessTokenFieldNumber = 1;
  private string accessToken_ = "";
  /// <summary>
  /// Dùng để đăng nhập cho App
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AccessToken {
    get { return accessToken_; }
    set {
      accessToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "facebookToken" field.</summary>
  public const int FacebookTokenFieldNumber = 2;
  private string facebookToken_ = "";
  /// <summary>
  /// Dùng để đăng nhập cho App
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string FacebookToken {
    get { return facebookToken_; }
    set {
      facebookToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "googleToken" field.</summary>
  public const int GoogleTokenFieldNumber = 3;
  private string googleToken_ = "";
  /// <summary>
  /// Dùng để đăng nhập cho App
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GoogleToken {
    get { return googleToken_; }
    set {
      googleToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "accessKey" field.</summary>
  public const int AccessKeyFieldNumber = 4;
  private string accessKey_ = "";
  /// <summary>
  /// Dùng để đăng nhập cho Client
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AccessKey {
    get { return accessKey_; }
    set {
      accessKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 5;
  private string deviceId_ = "";
  /// <summary>
  /// DeviceId của thiết bị
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "loggedOS" field.</summary>
  public const int LoggedOSFieldNumber = 6;
  private string loggedOS_ = "";
  /// <summary>
  /// Hệ điều hành đăng nhập
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string LoggedOS {
    get { return loggedOS_; }
    set {
      loggedOS_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "versionOS" field.</summary>
  public const int VersionOSFieldNumber = 7;
  private string versionOS_ = "";
  /// <summary>
  /// Phiên bản hệ điều hành
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string VersionOS {
    get { return versionOS_; }
    set {
      versionOS_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "loggedIP" field.</summary>
  public const int LoggedIPFieldNumber = 8;
  private string loggedIP_ = "";
  /// <summary>
  /// Ip đăng nhập
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string LoggedIP {
    get { return loggedIP_; }
    set {
      loggedIP_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "mdns" field.</summary>
  public const int MdnsFieldNumber = 9;
  private string mdns_ = "";
  /// <summary>
  /// Domain thiết bị
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Mdns {
    get { return mdns_; }
    set {
      mdns_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "brandName" field.</summary>
  public const int BrandNameFieldNumber = 10;
  private string brandName_ = "";
  /// <summary>
  /// BrandnName
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string BrandName {
    get { return brandName_; }
    set {
      brandName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "model" field.</summary>
  public const int ModelFieldNumber = 11;
  private string model_ = "";
  /// <summary>
  /// Model
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Model {
    get { return model_; }
    set {
      model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "signal" field.</summary>
  public const int SignalFieldNumber = 12;
  private int signal_;
  /// <summary>
  /// Tín hiệu sóng, Lưu trên server?
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Signal {
    get { return signal_; }
    set {
      signal_ = value;
    }
  }

  /// <summary>Field number for the "firmware" field.</summary>
  public const int FirmwareFieldNumber = 13;
  private string firmware_ = "";
  /// <summary>
  /// Firmware Version
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Firmware {
    get { return firmware_; }
    set {
      firmware_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "hardware" field.</summary>
  public const int HardwareFieldNumber = 14;
  private string hardware_ = "";
  /// <summary>
  /// Hardware Version
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Hardware {
    get { return hardware_; }
    set {
      hardware_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "group" field.</summary>
  public const int GroupFieldNumber = 15;
  private global::GroupDevice group_ = global::GroupDevice.SwitcherGroup;
  /// <summary>
  /// Nhóm thiết bị công tắc, rèm cửa...
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GroupDevice Group {
    get { return group_; }
    set {
      group_ = value;
    }
  }

  /// <summary>Field number for the "hardwareId" field.</summary>
  public const int HardwareIdFieldNumber = 16;
  private string hardwareId_ = "";
  /// <summary>
  /// hardwareId
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string HardwareId {
    get { return hardwareId_; }
    set {
      hardwareId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "deviceToken" field.</summary>
  public const int DeviceTokenFieldNumber = 17;
  private string deviceToken_ = "";
  /// <summary>
  /// deviceToken
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceToken {
    get { return deviceToken_; }
    set {
      deviceToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "gatewayId" field.</summary>
  public const int GatewayIdFieldNumber = 18;
  private string gatewayId_ = "";
  /// <summary>
  /// gatewayId root
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GatewayId {
    get { return gatewayId_; }
    set {
      gatewayId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "updateMode" field.</summary>
  public const int UpdateModeFieldNumber = 19;
  private uint updateMode_;
  /// <summary>
  /// Chế độ update của thiết bị
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint UpdateMode {
    get { return updateMode_; }
    set {
      updateMode_ = value;
    }
  }

  /// <summary>Field number for the "reactivity" field.</summary>
  public const int ReactivityFieldNumber = 20;
  private uint reactivity_;
  /// <summary>
  /// Độ nhạy của thiết bị
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Reactivity {
    get { return reactivity_; }
    set {
      reactivity_ = value;
    }
  }

  /// <summary>Field number for the "brightness" field.</summary>
  public const int BrightnessFieldNumber = 21;
  private uint brightness_;
  /// <summary>
  /// Độ sáng của thiết bị
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Brightness {
    get { return brightness_; }
    set {
      brightness_ = value;
    }
  }

  /// <summary>Field number for the "timeDelay" field.</summary>
  public const int TimeDelayFieldNumber = 22;
  private uint timeDelay_;
  /// <summary>
  /// Thời gian chờ để tắt PIR
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TimeDelay {
    get { return timeDelay_; }
    set {
      timeDelay_ = value;
    }
  }

  /// <summary>Field number for the "latitude" field.</summary>
  public const int LatitudeFieldNumber = 23;
  private float latitude_;
  /// <summary>
  /// Vĩ độ
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Latitude {
    get { return latitude_; }
    set {
      latitude_ = value;
    }
  }

  /// <summary>Field number for the "longitude" field.</summary>
  public const int LongitudeFieldNumber = 24;
  private float longitude_;
  /// <summary>
  /// Kinh độ
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Longitude {
    get { return longitude_; }
    set {
      longitude_ = value;
    }
  }

  /// <summary>Field number for the "sceneActiveMap" field.</summary>
  public const int SceneActiveMapFieldNumber = 25;
  private uint sceneActiveMap_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint SceneActiveMap {
    get { return sceneActiveMap_; }
    set {
      sceneActiveMap_ = value;
    }
  }

  /// <summary>Field number for the "supportGroupControl" field.</summary>
  public const int SupportGroupControlFieldNumber = 26;
  private uint supportGroupControl_;
  /// <summary>
  /// Xử lý điều kiển group device
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint SupportGroupControl {
    get { return supportGroupControl_; }
    set {
      supportGroupControl_ = value;
    }
  }

  /// <summary>Field number for the "gatewayDeviceId" field.</summary>
  public const int GatewayDeviceIdFieldNumber = 27;
  private string gatewayDeviceId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GatewayDeviceId {
    get { return gatewayDeviceId_; }
    set {
      gatewayDeviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as LoginServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(LoginServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AccessToken != other.AccessToken) return false;
    if (FacebookToken != other.FacebookToken) return false;
    if (GoogleToken != other.GoogleToken) return false;
    if (AccessKey != other.AccessKey) return false;
    if (DeviceId != other.DeviceId) return false;
    if (LoggedOS != other.LoggedOS) return false;
    if (VersionOS != other.VersionOS) return false;
    if (LoggedIP != other.LoggedIP) return false;
    if (Mdns != other.Mdns) return false;
    if (BrandName != other.BrandName) return false;
    if (Model != other.Model) return false;
    if (Signal != other.Signal) return false;
    if (Firmware != other.Firmware) return false;
    if (Hardware != other.Hardware) return false;
    if (Group != other.Group) return false;
    if (HardwareId != other.HardwareId) return false;
    if (DeviceToken != other.DeviceToken) return false;
    if (GatewayId != other.GatewayId) return false;
    if (UpdateMode != other.UpdateMode) return false;
    if (Reactivity != other.Reactivity) return false;
    if (Brightness != other.Brightness) return false;
    if (TimeDelay != other.TimeDelay) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Latitude, other.Latitude)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Longitude, other.Longitude)) return false;
    if (SceneActiveMap != other.SceneActiveMap) return false;
    if (SupportGroupControl != other.SupportGroupControl) return false;
    if (GatewayDeviceId != other.GatewayDeviceId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AccessToken.Length != 0) hash ^= AccessToken.GetHashCode();
    if (FacebookToken.Length != 0) hash ^= FacebookToken.GetHashCode();
    if (GoogleToken.Length != 0) hash ^= GoogleToken.GetHashCode();
    if (AccessKey.Length != 0) hash ^= AccessKey.GetHashCode();
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (LoggedOS.Length != 0) hash ^= LoggedOS.GetHashCode();
    if (VersionOS.Length != 0) hash ^= VersionOS.GetHashCode();
    if (LoggedIP.Length != 0) hash ^= LoggedIP.GetHashCode();
    if (Mdns.Length != 0) hash ^= Mdns.GetHashCode();
    if (BrandName.Length != 0) hash ^= BrandName.GetHashCode();
    if (Model.Length != 0) hash ^= Model.GetHashCode();
    if (Signal != 0) hash ^= Signal.GetHashCode();
    if (Firmware.Length != 0) hash ^= Firmware.GetHashCode();
    if (Hardware.Length != 0) hash ^= Hardware.GetHashCode();
    if (Group != global::GroupDevice.SwitcherGroup) hash ^= Group.GetHashCode();
    if (HardwareId.Length != 0) hash ^= HardwareId.GetHashCode();
    if (DeviceToken.Length != 0) hash ^= DeviceToken.GetHashCode();
    if (GatewayId.Length != 0) hash ^= GatewayId.GetHashCode();
    if (UpdateMode != 0) hash ^= UpdateMode.GetHashCode();
    if (Reactivity != 0) hash ^= Reactivity.GetHashCode();
    if (Brightness != 0) hash ^= Brightness.GetHashCode();
    if (TimeDelay != 0) hash ^= TimeDelay.GetHashCode();
    if (Latitude != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Latitude);
    if (Longitude != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Longitude);
    if (SceneActiveMap != 0) hash ^= SceneActiveMap.GetHashCode();
    if (SupportGroupControl != 0) hash ^= SupportGroupControl.GetHashCode();
    if (GatewayDeviceId.Length != 0) hash ^= GatewayDeviceId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AccessToken.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(AccessToken);
    }
    if (FacebookToken.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(FacebookToken);
    }
    if (GoogleToken.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(GoogleToken);
    }
    if (AccessKey.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(AccessKey);
    }
    if (DeviceId.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(DeviceId);
    }
    if (LoggedOS.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(LoggedOS);
    }
    if (VersionOS.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(VersionOS);
    }
    if (LoggedIP.Length != 0) {
      output.WriteRawTag(66);
      output.WriteString(LoggedIP);
    }
    if (Mdns.Length != 0) {
      output.WriteRawTag(74);
      output.WriteString(Mdns);
    }
    if (BrandName.Length != 0) {
      output.WriteRawTag(82);
      output.WriteString(BrandName);
    }
    if (Model.Length != 0) {
      output.WriteRawTag(90);
      output.WriteString(Model);
    }
    if (Signal != 0) {
      output.WriteRawTag(96);
      output.WriteInt32(Signal);
    }
    if (Firmware.Length != 0) {
      output.WriteRawTag(106);
      output.WriteString(Firmware);
    }
    if (Hardware.Length != 0) {
      output.WriteRawTag(114);
      output.WriteString(Hardware);
    }
    if (Group != global::GroupDevice.SwitcherGroup) {
      output.WriteRawTag(120);
      output.WriteEnum((int) Group);
    }
    if (HardwareId.Length != 0) {
      output.WriteRawTag(130, 1);
      output.WriteString(HardwareId);
    }
    if (DeviceToken.Length != 0) {
      output.WriteRawTag(138, 1);
      output.WriteString(DeviceToken);
    }
    if (GatewayId.Length != 0) {
      output.WriteRawTag(146, 1);
      output.WriteString(GatewayId);
    }
    if (UpdateMode != 0) {
      output.WriteRawTag(152, 1);
      output.WriteUInt32(UpdateMode);
    }
    if (Reactivity != 0) {
      output.WriteRawTag(160, 1);
      output.WriteUInt32(Reactivity);
    }
    if (Brightness != 0) {
      output.WriteRawTag(168, 1);
      output.WriteUInt32(Brightness);
    }
    if (TimeDelay != 0) {
      output.WriteRawTag(176, 1);
      output.WriteUInt32(TimeDelay);
    }
    if (Latitude != 0F) {
      output.WriteRawTag(189, 1);
      output.WriteFloat(Latitude);
    }
    if (Longitude != 0F) {
      output.WriteRawTag(197, 1);
      output.WriteFloat(Longitude);
    }
    if (SceneActiveMap != 0) {
      output.WriteRawTag(200, 1);
      output.WriteUInt32(SceneActiveMap);
    }
    if (SupportGroupControl != 0) {
      output.WriteRawTag(208, 1);
      output.WriteUInt32(SupportGroupControl);
    }
    if (GatewayDeviceId.Length != 0) {
      output.WriteRawTag(218, 1);
      output.WriteString(GatewayDeviceId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AccessToken.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessToken);
    }
    if (FacebookToken.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(FacebookToken);
    }
    if (GoogleToken.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GoogleToken);
    }
    if (AccessKey.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessKey);
    }
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (LoggedOS.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(LoggedOS);
    }
    if (VersionOS.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(VersionOS);
    }
    if (LoggedIP.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(LoggedIP);
    }
    if (Mdns.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Mdns);
    }
    if (BrandName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(BrandName);
    }
    if (Model.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
    }
    if (Signal != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Signal);
    }
    if (Firmware.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Firmware);
    }
    if (Hardware.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Hardware);
    }
    if (Group != global::GroupDevice.SwitcherGroup) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Group);
    }
    if (HardwareId.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(HardwareId);
    }
    if (DeviceToken.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(DeviceToken);
    }
    if (GatewayId.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(GatewayId);
    }
    if (UpdateMode != 0) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(UpdateMode);
    }
    if (Reactivity != 0) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Reactivity);
    }
    if (Brightness != 0) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Brightness);
    }
    if (TimeDelay != 0) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TimeDelay);
    }
    if (Latitude != 0F) {
      size += 2 + 4;
    }
    if (Longitude != 0F) {
      size += 2 + 4;
    }
    if (SceneActiveMap != 0) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SceneActiveMap);
    }
    if (SupportGroupControl != 0) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SupportGroupControl);
    }
    if (GatewayDeviceId.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(GatewayDeviceId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(LoginServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.AccessToken.Length != 0) {
      AccessToken = other.AccessToken;
    }
    if (other.FacebookToken.Length != 0) {
      FacebookToken = other.FacebookToken;
    }
    if (other.GoogleToken.Length != 0) {
      GoogleToken = other.GoogleToken;
    }
    if (other.AccessKey.Length != 0) {
      AccessKey = other.AccessKey;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.LoggedOS.Length != 0) {
      LoggedOS = other.LoggedOS;
    }
    if (other.VersionOS.Length != 0) {
      VersionOS = other.VersionOS;
    }
    if (other.LoggedIP.Length != 0) {
      LoggedIP = other.LoggedIP;
    }
    if (other.Mdns.Length != 0) {
      Mdns = other.Mdns;
    }
    if (other.BrandName.Length != 0) {
      BrandName = other.BrandName;
    }
    if (other.Model.Length != 0) {
      Model = other.Model;
    }
    if (other.Signal != 0) {
      Signal = other.Signal;
    }
    if (other.Firmware.Length != 0) {
      Firmware = other.Firmware;
    }
    if (other.Hardware.Length != 0) {
      Hardware = other.Hardware;
    }
    if (other.Group != global::GroupDevice.SwitcherGroup) {
      Group = other.Group;
    }
    if (other.HardwareId.Length != 0) {
      HardwareId = other.HardwareId;
    }
    if (other.DeviceToken.Length != 0) {
      DeviceToken = other.DeviceToken;
    }
    if (other.GatewayId.Length != 0) {
      GatewayId = other.GatewayId;
    }
    if (other.UpdateMode != 0) {
      UpdateMode = other.UpdateMode;
    }
    if (other.Reactivity != 0) {
      Reactivity = other.Reactivity;
    }
    if (other.Brightness != 0) {
      Brightness = other.Brightness;
    }
    if (other.TimeDelay != 0) {
      TimeDelay = other.TimeDelay;
    }
    if (other.Latitude != 0F) {
      Latitude = other.Latitude;
    }
    if (other.Longitude != 0F) {
      Longitude = other.Longitude;
    }
    if (other.SceneActiveMap != 0) {
      SceneActiveMap = other.SceneActiveMap;
    }
    if (other.SupportGroupControl != 0) {
      SupportGroupControl = other.SupportGroupControl;
    }
    if (other.GatewayDeviceId.Length != 0) {
      GatewayDeviceId = other.GatewayDeviceId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          AccessToken = input.ReadString();
          break;
        }
        case 18: {
          FacebookToken = input.ReadString();
          break;
        }
        case 26: {
          GoogleToken = input.ReadString();
          break;
        }
        case 34: {
          AccessKey = input.ReadString();
          break;
        }
        case 42: {
          DeviceId = input.ReadString();
          break;
        }
        case 50: {
          LoggedOS = input.ReadString();
          break;
        }
        case 58: {
          VersionOS = input.ReadString();
          break;
        }
        case 66: {
          LoggedIP = input.ReadString();
          break;
        }
        case 74: {
          Mdns = input.ReadString();
          break;
        }
        case 82: {
          BrandName = input.ReadString();
          break;
        }
        case 90: {
          Model = input.ReadString();
          break;
        }
        case 96: {
          Signal = input.ReadInt32();
          break;
        }
        case 106: {
          Firmware = input.ReadString();
          break;
        }
        case 114: {
          Hardware = input.ReadString();
          break;
        }
        case 120: {
          Group = (global::GroupDevice) input.ReadEnum();
          break;
        }
        case 130: {
          HardwareId = input.ReadString();
          break;
        }
        case 138: {
          DeviceToken = input.ReadString();
          break;
        }
        case 146: {
          GatewayId = input.ReadString();
          break;
        }
        case 152: {
          UpdateMode = input.ReadUInt32();
          break;
        }
        case 160: {
          Reactivity = input.ReadUInt32();
          break;
        }
        case 168: {
          Brightness = input.ReadUInt32();
          break;
        }
        case 176: {
          TimeDelay = input.ReadUInt32();
          break;
        }
        case 189: {
          Latitude = input.ReadFloat();
          break;
        }
        case 197: {
          Longitude = input.ReadFloat();
          break;
        }
        case 200: {
          SceneActiveMap = input.ReadUInt32();
          break;
        }
        case 208: {
          SupportGroupControl = input.ReadUInt32();
          break;
        }
        case 218: {
          GatewayDeviceId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin đăng nhập cho App hoặc Client
/// </summary>
public sealed partial class LoginServerResponse : pb::IMessage<LoginServerResponse> {
  private static readonly pb::MessageParser<LoginServerResponse> _parser = new pb::MessageParser<LoginServerResponse>(() => new LoginServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<LoginServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginServerResponse(LoginServerResponse other) : this() {
    userId_ = other.userId_;
    deviceId_ = other.deviceId_;
    accessToken_ = other.accessToken_;
    refreshToken_ = other.refreshToken_;
    accessKey_ = other.accessKey_;
    serverDomain_ = other.serverDomain_;
    home_ = other.home_ != null ? other.home_.Clone() : null;
    keepAlive_ = other.keepAlive_;
    serialNumbers_ = other.serialNumbers_.Clone();
    hardwareId_ = other.hardwareId_;
    loggedDate_ = other.loggedDate_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginServerResponse Clone() {
    return new LoginServerResponse(this);
  }

  /// <summary>Field number for the "userId" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 2;
  private string deviceId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "accessToken" field.</summary>
  public const int AccessTokenFieldNumber = 3;
  private string accessToken_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AccessToken {
    get { return accessToken_; }
    set {
      accessToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "refreshToken" field.</summary>
  public const int RefreshTokenFieldNumber = 4;
  private string refreshToken_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RefreshToken {
    get { return refreshToken_; }
    set {
      refreshToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "accessKey" field.</summary>
  public const int AccessKeyFieldNumber = 5;
  private string accessKey_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AccessKey {
    get { return accessKey_; }
    set {
      accessKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "serverDomain" field.</summary>
  public const int ServerDomainFieldNumber = 6;
  private string serverDomain_ = "";
  /// <summary>
  /// IP hoặc Domain Websocket
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ServerDomain {
    get { return serverDomain_; }
    set {
      serverDomain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "home" field.</summary>
  public const int HomeFieldNumber = 7;
  private global::Home home_;
  /// <summary>
  /// Tên của ngôi nhà
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Home Home {
    get { return home_; }
    set {
      home_ = value;
    }
  }

  /// <summary>Field number for the "keepAlive" field.</summary>
  public const int KeepAliveFieldNumber = 8;
  private uint keepAlive_;
  /// <summary>
  /// keepalive
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint KeepAlive {
    get { return keepAlive_; }
    set {
      keepAlive_ = value;
    }
  }

  /// <summary>Field number for the "serialNumbers" field.</summary>
  public const int SerialNumbersFieldNumber = 9;
  private static readonly pb::FieldCodec<string> _repeated_serialNumbers_codec
      = pb::FieldCodec.ForString(74);
  private readonly pbc::RepeatedField<string> serialNumbers_ = new pbc::RepeatedField<string>();
  /// <summary>
  /// Danh sách serialNumbers trả về cho thiết bị, để thiết bị đọc công tơ điện/nước
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<string> SerialNumbers {
    get { return serialNumbers_; }
  }

  /// <summary>Field number for the "hardwareId" field.</summary>
  public const int HardwareIdFieldNumber = 10;
  private string hardwareId_ = "";
  /// <summary>
  /// hardwareId
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string HardwareId {
    get { return hardwareId_; }
    set {
      hardwareId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "loggedDate" field.</summary>
  public const int LoggedDateFieldNumber = 11;
  private ulong loggedDate_;
  /// <summary>
  /// Ngày đăng nhập - Unix Timestamp
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong LoggedDate {
    get { return loggedDate_; }
    set {
      loggedDate_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as LoginServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(LoginServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (DeviceId != other.DeviceId) return false;
    if (AccessToken != other.AccessToken) return false;
    if (RefreshToken != other.RefreshToken) return false;
    if (AccessKey != other.AccessKey) return false;
    if (ServerDomain != other.ServerDomain) return false;
    if (!object.Equals(Home, other.Home)) return false;
    if (KeepAlive != other.KeepAlive) return false;
    if(!serialNumbers_.Equals(other.serialNumbers_)) return false;
    if (HardwareId != other.HardwareId) return false;
    if (LoggedDate != other.LoggedDate) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (AccessToken.Length != 0) hash ^= AccessToken.GetHashCode();
    if (RefreshToken.Length != 0) hash ^= RefreshToken.GetHashCode();
    if (AccessKey.Length != 0) hash ^= AccessKey.GetHashCode();
    if (ServerDomain.Length != 0) hash ^= ServerDomain.GetHashCode();
    if (home_ != null) hash ^= Home.GetHashCode();
    if (KeepAlive != 0) hash ^= KeepAlive.GetHashCode();
    hash ^= serialNumbers_.GetHashCode();
    if (HardwareId.Length != 0) hash ^= HardwareId.GetHashCode();
    if (LoggedDate != 0UL) hash ^= LoggedDate.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (DeviceId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(DeviceId);
    }
    if (AccessToken.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(AccessToken);
    }
    if (RefreshToken.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(RefreshToken);
    }
    if (AccessKey.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(AccessKey);
    }
    if (ServerDomain.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(ServerDomain);
    }
    if (home_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(Home);
    }
    if (KeepAlive != 0) {
      output.WriteRawTag(64);
      output.WriteUInt32(KeepAlive);
    }
    serialNumbers_.WriteTo(output, _repeated_serialNumbers_codec);
    if (HardwareId.Length != 0) {
      output.WriteRawTag(82);
      output.WriteString(HardwareId);
    }
    if (LoggedDate != 0UL) {
      output.WriteRawTag(88);
      output.WriteUInt64(LoggedDate);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (AccessToken.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessToken);
    }
    if (RefreshToken.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RefreshToken);
    }
    if (AccessKey.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessKey);
    }
    if (ServerDomain.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerDomain);
    }
    if (home_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Home);
    }
    if (KeepAlive != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(KeepAlive);
    }
    size += serialNumbers_.CalculateSize(_repeated_serialNumbers_codec);
    if (HardwareId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HardwareId);
    }
    if (LoggedDate != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LoggedDate);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(LoginServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.AccessToken.Length != 0) {
      AccessToken = other.AccessToken;
    }
    if (other.RefreshToken.Length != 0) {
      RefreshToken = other.RefreshToken;
    }
    if (other.AccessKey.Length != 0) {
      AccessKey = other.AccessKey;
    }
    if (other.ServerDomain.Length != 0) {
      ServerDomain = other.ServerDomain;
    }
    if (other.home_ != null) {
      if (home_ == null) {
        Home = new global::Home();
      }
      Home.MergeFrom(other.Home);
    }
    if (other.KeepAlive != 0) {
      KeepAlive = other.KeepAlive;
    }
    serialNumbers_.Add(other.serialNumbers_);
    if (other.HardwareId.Length != 0) {
      HardwareId = other.HardwareId;
    }
    if (other.LoggedDate != 0UL) {
      LoggedDate = other.LoggedDate;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 18: {
          DeviceId = input.ReadString();
          break;
        }
        case 26: {
          AccessToken = input.ReadString();
          break;
        }
        case 34: {
          RefreshToken = input.ReadString();
          break;
        }
        case 42: {
          AccessKey = input.ReadString();
          break;
        }
        case 50: {
          ServerDomain = input.ReadString();
          break;
        }
        case 58: {
          if (home_ == null) {
            Home = new global::Home();
          }
          input.ReadMessage(Home);
          break;
        }
        case 64: {
          KeepAlive = input.ReadUInt32();
          break;
        }
        case 74: {
          serialNumbers_.AddEntriesFrom(input, _repeated_serialNumbers_codec);
          break;
        }
        case 82: {
          HardwareId = input.ReadString();
          break;
        }
        case 88: {
          LoggedDate = input.ReadUInt64();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu RefreshToken
/// </summary>
public sealed partial class RefreshTokenServerRequest : pb::IMessage<RefreshTokenServerRequest> {
  private static readonly pb::MessageParser<RefreshTokenServerRequest> _parser = new pb::MessageParser<RefreshTokenServerRequest>(() => new RefreshTokenServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RefreshTokenServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RefreshTokenServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RefreshTokenServerRequest(RefreshTokenServerRequest other) : this() {
    accessToken_ = other.accessToken_;
    refreshToken_ = other.refreshToken_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RefreshTokenServerRequest Clone() {
    return new RefreshTokenServerRequest(this);
  }

  /// <summary>Field number for the "accessToken" field.</summary>
  public const int AccessTokenFieldNumber = 1;
  private string accessToken_ = "";
  /// <summary>
  /// Access Token cũ
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AccessToken {
    get { return accessToken_; }
    set {
      accessToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "refreshToken" field.</summary>
  public const int RefreshTokenFieldNumber = 2;
  private string refreshToken_ = "";
  /// <summary>
  /// Dùng để RefreshToken cho App, User
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RefreshToken {
    get { return refreshToken_; }
    set {
      refreshToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RefreshTokenServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RefreshTokenServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AccessToken != other.AccessToken) return false;
    if (RefreshToken != other.RefreshToken) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AccessToken.Length != 0) hash ^= AccessToken.GetHashCode();
    if (RefreshToken.Length != 0) hash ^= RefreshToken.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AccessToken.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(AccessToken);
    }
    if (RefreshToken.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(RefreshToken);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AccessToken.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessToken);
    }
    if (RefreshToken.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RefreshToken);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RefreshTokenServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.AccessToken.Length != 0) {
      AccessToken = other.AccessToken;
    }
    if (other.RefreshToken.Length != 0) {
      RefreshToken = other.RefreshToken;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          AccessToken = input.ReadString();
          break;
        }
        case 18: {
          RefreshToken = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi RefreshToken
/// </summary>
public sealed partial class RefreshTokenServerResponse : pb::IMessage<RefreshTokenServerResponse> {
  private static readonly pb::MessageParser<RefreshTokenServerResponse> _parser = new pb::MessageParser<RefreshTokenServerResponse>(() => new RefreshTokenServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RefreshTokenServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RefreshTokenServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RefreshTokenServerResponse(RefreshTokenServerResponse other) : this() {
    accessToken_ = other.accessToken_;
    refreshToken_ = other.refreshToken_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RefreshTokenServerResponse Clone() {
    return new RefreshTokenServerResponse(this);
  }

  /// <summary>Field number for the "accessToken" field.</summary>
  public const int AccessTokenFieldNumber = 1;
  private string accessToken_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AccessToken {
    get { return accessToken_; }
    set {
      accessToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "refreshToken" field.</summary>
  public const int RefreshTokenFieldNumber = 2;
  private string refreshToken_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RefreshToken {
    get { return refreshToken_; }
    set {
      refreshToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RefreshTokenServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RefreshTokenServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AccessToken != other.AccessToken) return false;
    if (RefreshToken != other.RefreshToken) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AccessToken.Length != 0) hash ^= AccessToken.GetHashCode();
    if (RefreshToken.Length != 0) hash ^= RefreshToken.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AccessToken.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(AccessToken);
    }
    if (RefreshToken.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(RefreshToken);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AccessToken.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessToken);
    }
    if (RefreshToken.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RefreshToken);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RefreshTokenServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.AccessToken.Length != 0) {
      AccessToken = other.AccessToken;
    }
    if (other.RefreshToken.Length != 0) {
      RefreshToken = other.RefreshToken;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          AccessToken = input.ReadString();
          break;
        }
        case 18: {
          RefreshToken = input.ReadString();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu gửi lại tin nhắn kích hoạt
/// </summary>
public sealed partial class SendCodeServerRequest : pb::IMessage<SendCodeServerRequest> {
  private static readonly pb::MessageParser<SendCodeServerRequest> _parser = new pb::MessageParser<SendCodeServerRequest>(() => new SendCodeServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SendCodeServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SendCodeServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SendCodeServerRequest(SendCodeServerRequest other) : this() {
    phoneNumber_ = other.phoneNumber_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SendCodeServerRequest Clone() {
    return new SendCodeServerRequest(this);
  }

  /// <summary>Field number for the "phoneNumber" field.</summary>
  public const int PhoneNumberFieldNumber = 1;
  private string phoneNumber_ = "";
  /// <summary>
  /// Số điện thoại
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PhoneNumber {
    get { return phoneNumber_; }
    set {
      phoneNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SendCodeServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SendCodeServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PhoneNumber != other.PhoneNumber) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PhoneNumber.Length != 0) hash ^= PhoneNumber.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PhoneNumber.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(PhoneNumber);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PhoneNumber.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PhoneNumber);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SendCodeServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.PhoneNumber.Length != 0) {
      PhoneNumber = other.PhoneNumber;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          PhoneNumber = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu kiểm tra mã kích hoạt bằng số điện thoại
/// </summary>
public sealed partial class VerifyCodeServerRequest : pb::IMessage<VerifyCodeServerRequest> {
  private static readonly pb::MessageParser<VerifyCodeServerRequest> _parser = new pb::MessageParser<VerifyCodeServerRequest>(() => new VerifyCodeServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<VerifyCodeServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public VerifyCodeServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public VerifyCodeServerRequest(VerifyCodeServerRequest other) : this() {
    phoneNumber_ = other.phoneNumber_;
    code_ = other.code_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public VerifyCodeServerRequest Clone() {
    return new VerifyCodeServerRequest(this);
  }

  /// <summary>Field number for the "phoneNumber" field.</summary>
  public const int PhoneNumberFieldNumber = 1;
  private string phoneNumber_ = "";
  /// <summary>
  /// Số điện thoại
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PhoneNumber {
    get { return phoneNumber_; }
    set {
      phoneNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "code" field.</summary>
  public const int CodeFieldNumber = 2;
  private string code_ = "";
  /// <summary>
  /// Mã kiểm tra
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Code {
    get { return code_; }
    set {
      code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as VerifyCodeServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(VerifyCodeServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PhoneNumber != other.PhoneNumber) return false;
    if (Code != other.Code) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PhoneNumber.Length != 0) hash ^= PhoneNumber.GetHashCode();
    if (Code.Length != 0) hash ^= Code.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PhoneNumber.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(PhoneNumber);
    }
    if (Code.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Code);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PhoneNumber.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PhoneNumber);
    }
    if (Code.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(VerifyCodeServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.PhoneNumber.Length != 0) {
      PhoneNumber = other.PhoneNumber;
    }
    if (other.Code.Length != 0) {
      Code = other.Code;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          PhoneNumber = input.ReadString();
          break;
        }
        case 18: {
          Code = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin có được gửi mã kích hoạt
/// </summary>
public sealed partial class SendCodeServerResponse : pb::IMessage<SendCodeServerResponse> {
  private static readonly pb::MessageParser<SendCodeServerResponse> _parser = new pb::MessageParser<SendCodeServerResponse>(() => new SendCodeServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SendCodeServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SendCodeServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SendCodeServerResponse(SendCodeServerResponse other) : this() {
    code_ = other.code_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SendCodeServerResponse Clone() {
    return new SendCodeServerResponse(this);
  }

  /// <summary>Field number for the "code" field.</summary>
  public const int CodeFieldNumber = 2;
  private string code_ = "";
  /// <summary>
  /// Mã kích hoạt
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Code {
    get { return code_; }
    set {
      code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SendCodeServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SendCodeServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Code != other.Code) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Code.Length != 0) hash ^= Code.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Code.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Code);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Code.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SendCodeServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.Code.Length != 0) {
      Code = other.Code;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 18: {
          Code = input.ReadString();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin kiểm tra mã kích hoạt bằng số điện thoại
/// </summary>
public sealed partial class VerifyCodeServerResponse : pb::IMessage<VerifyCodeServerResponse> {
  private static readonly pb::MessageParser<VerifyCodeServerResponse> _parser = new pb::MessageParser<VerifyCodeServerResponse>(() => new VerifyCodeServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<VerifyCodeServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public VerifyCodeServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public VerifyCodeServerResponse(VerifyCodeServerResponse other) : this() {
    accessToken_ = other.accessToken_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public VerifyCodeServerResponse Clone() {
    return new VerifyCodeServerResponse(this);
  }

  /// <summary>Field number for the "accessToken" field.</summary>
  public const int AccessTokenFieldNumber = 1;
  private string accessToken_ = "";
  /// <summary>
  /// Dùng để đăng nhập cho App
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AccessToken {
    get { return accessToken_; }
    set {
      accessToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as VerifyCodeServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(VerifyCodeServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AccessToken != other.AccessToken) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AccessToken.Length != 0) hash ^= AccessToken.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (AccessToken.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(AccessToken);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AccessToken.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessToken);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(VerifyCodeServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.AccessToken.Length != 0) {
      AccessToken = other.AccessToken;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          AccessToken = input.ReadString();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu lấy danh sách người dùng
/// </summary>
public sealed partial class GetUsersServerRequest : pb::IMessage<GetUsersServerRequest> {
  private static readonly pb::MessageParser<GetUsersServerRequest> _parser = new pb::MessageParser<GetUsersServerRequest>(() => new GetUsersServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetUsersServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUsersServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUsersServerRequest(GetUsersServerRequest other) : this() {
    search_ = other.search_;
    order_ = other.order_;
    pageSize_ = other.pageSize_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUsersServerRequest Clone() {
    return new GetUsersServerRequest(this);
  }

  /// <summary>Field number for the "search" field.</summary>
  public const int SearchFieldNumber = 1;
  private string search_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Search {
    get { return search_; }
    set {
      search_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "order" field.</summary>
  public const int OrderFieldNumber = 2;
  private ulong order_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong Order {
    get { return order_; }
    set {
      order_ = value;
    }
  }

  /// <summary>Field number for the "pageSize" field.</summary>
  public const int PageSizeFieldNumber = 3;
  private uint pageSize_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PageSize {
    get { return pageSize_; }
    set {
      pageSize_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetUsersServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetUsersServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Search != other.Search) return false;
    if (Order != other.Order) return false;
    if (PageSize != other.PageSize) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Search.Length != 0) hash ^= Search.GetHashCode();
    if (Order != 0UL) hash ^= Order.GetHashCode();
    if (PageSize != 0) hash ^= PageSize.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Search.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Search);
    }
    if (Order != 0UL) {
      output.WriteRawTag(16);
      output.WriteUInt64(Order);
    }
    if (PageSize != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(PageSize);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Search.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Search);
    }
    if (Order != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Order);
    }
    if (PageSize != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PageSize);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetUsersServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.Search.Length != 0) {
      Search = other.Search;
    }
    if (other.Order != 0UL) {
      Order = other.Order;
    }
    if (other.PageSize != 0) {
      PageSize = other.PageSize;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Search = input.ReadString();
          break;
        }
        case 16: {
          Order = input.ReadUInt64();
          break;
        }
        case 24: {
          PageSize = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi danh sách người dùng
/// </summary>
public sealed partial class GetUsersServerResponse : pb::IMessage<GetUsersServerResponse> {
  private static readonly pb::MessageParser<GetUsersServerResponse> _parser = new pb::MessageParser<GetUsersServerResponse>(() => new GetUsersServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetUsersServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUsersServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUsersServerResponse(GetUsersServerResponse other) : this() {
    users_ = other.users_.Clone();
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUsersServerResponse Clone() {
    return new GetUsersServerResponse(this);
  }

  /// <summary>Field number for the "users" field.</summary>
  public const int UsersFieldNumber = 1;
  private static readonly pb::FieldCodec<global::User> _repeated_users_codec
      = pb::FieldCodec.ForMessage(10, global::User.Parser);
  private readonly pbc::RepeatedField<global::User> users_ = new pbc::RepeatedField<global::User>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::User> Users {
    get { return users_; }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetUsersServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetUsersServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!users_.Equals(other.users_)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= users_.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    users_.WriteTo(output, _repeated_users_codec);
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += users_.CalculateSize(_repeated_users_codec);
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetUsersServerResponse other) {
    if (other == null) {
      return;
    }
    users_.Add(other.users_);
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          users_.AddEntriesFrom(input, _repeated_users_codec);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận yêu cầu tìm kiếm user theo key
/// </summary>
public sealed partial class SearchUserServerRequest : pb::IMessage<SearchUserServerRequest> {
  private static readonly pb::MessageParser<SearchUserServerRequest> _parser = new pb::MessageParser<SearchUserServerRequest>(() => new SearchUserServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SearchUserServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SearchUserServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SearchUserServerRequest(SearchUserServerRequest other) : this() {
    search_ = other.search_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SearchUserServerRequest Clone() {
    return new SearchUserServerRequest(this);
  }

  /// <summary>Field number for the "search" field.</summary>
  public const int SearchFieldNumber = 1;
  private string search_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Search {
    get { return search_; }
    set {
      search_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SearchUserServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SearchUserServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Search != other.Search) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Search.Length != 0) hash ^= Search.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Search.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Search);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Search.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Search);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SearchUserServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.Search.Length != 0) {
      Search = other.Search;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Search = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi yêu cầu tìm kiếm user theo key
/// </summary>
public sealed partial class SearchUserServerResponse : pb::IMessage<SearchUserServerResponse> {
  private static readonly pb::MessageParser<SearchUserServerResponse> _parser = new pb::MessageParser<SearchUserServerResponse>(() => new SearchUserServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SearchUserServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[11]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SearchUserServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SearchUserServerResponse(SearchUserServerResponse other) : this() {
    user_ = other.user_ != null ? other.user_.Clone() : null;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SearchUserServerResponse Clone() {
    return new SearchUserServerResponse(this);
  }

  /// <summary>Field number for the "user" field.</summary>
  public const int UserFieldNumber = 1;
  private global::User user_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::User User {
    get { return user_; }
    set {
      user_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SearchUserServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SearchUserServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(User, other.User)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (user_ != null) hash ^= User.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (user_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(User);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (user_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SearchUserServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.user_ != null) {
      if (user_ == null) {
        User = new global::User();
      }
      User.MergeFrom(other.User);
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (user_ == null) {
            User = new global::User();
          }
          input.ReadMessage(User);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận yêu cầu tìm kiếm user theo key
/// </summary>
public sealed partial class AvatarUploadServerRequest : pb::IMessage<AvatarUploadServerRequest> {
  private static readonly pb::MessageParser<AvatarUploadServerRequest> _parser = new pb::MessageParser<AvatarUploadServerRequest>(() => new AvatarUploadServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AvatarUploadServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[12]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AvatarUploadServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AvatarUploadServerRequest(AvatarUploadServerRequest other) : this() {
    fileUploadForm_ = other.fileUploadForm_ != null ? other.fileUploadForm_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AvatarUploadServerRequest Clone() {
    return new AvatarUploadServerRequest(this);
  }

  /// <summary>Field number for the "fileUploadForm" field.</summary>
  public const int FileUploadFormFieldNumber = 1;
  private global::FileUploadForm fileUploadForm_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FileUploadForm FileUploadForm {
    get { return fileUploadForm_; }
    set {
      fileUploadForm_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AvatarUploadServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AvatarUploadServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(FileUploadForm, other.FileUploadForm)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (fileUploadForm_ != null) hash ^= FileUploadForm.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (fileUploadForm_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(FileUploadForm);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (fileUploadForm_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(FileUploadForm);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AvatarUploadServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.fileUploadForm_ != null) {
      if (fileUploadForm_ == null) {
        FileUploadForm = new global::FileUploadForm();
      }
      FileUploadForm.MergeFrom(other.FileUploadForm);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (fileUploadForm_ == null) {
            FileUploadForm = new global::FileUploadForm();
          }
          input.ReadMessage(FileUploadForm);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi yêu cầu tìm kiếm user theo key
/// </summary>
public sealed partial class AvatarUploadServerResponse : pb::IMessage<AvatarUploadServerResponse> {
  private static readonly pb::MessageParser<AvatarUploadServerResponse> _parser = new pb::MessageParser<AvatarUploadServerResponse>(() => new AvatarUploadServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AvatarUploadServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[13]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AvatarUploadServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AvatarUploadServerResponse(AvatarUploadServerResponse other) : this() {
    imageUrl_ = other.imageUrl_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AvatarUploadServerResponse Clone() {
    return new AvatarUploadServerResponse(this);
  }

  /// <summary>Field number for the "imageUrl" field.</summary>
  public const int ImageUrlFieldNumber = 1;
  private string imageUrl_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ImageUrl {
    get { return imageUrl_; }
    set {
      imageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AvatarUploadServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AvatarUploadServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ImageUrl != other.ImageUrl) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ImageUrl.Length != 0) hash ^= ImageUrl.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ImageUrl.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ImageUrl);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ImageUrl.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageUrl);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AvatarUploadServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.ImageUrl.Length != 0) {
      ImageUrl = other.ImageUrl;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ImageUrl = input.ReadString();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu trả về thông tin người dùng đã đăng nhập
/// </summary>
public sealed partial class GetUserInfoServerRequest : pb::IMessage<GetUserInfoServerRequest> {
  private static readonly pb::MessageParser<GetUserInfoServerRequest> _parser = new pb::MessageParser<GetUserInfoServerRequest>(() => new GetUserInfoServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetUserInfoServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[14]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUserInfoServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUserInfoServerRequest(GetUserInfoServerRequest other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUserInfoServerRequest Clone() {
    return new GetUserInfoServerRequest(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetUserInfoServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetUserInfoServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetUserInfoServerRequest other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin người dùng
/// </summary>
public sealed partial class GetUserInfoServerResponse : pb::IMessage<GetUserInfoServerResponse> {
  private static readonly pb::MessageParser<GetUserInfoServerResponse> _parser = new pb::MessageParser<GetUserInfoServerResponse>(() => new GetUserInfoServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetUserInfoServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[15]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUserInfoServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUserInfoServerResponse(GetUserInfoServerResponse other) : this() {
    userId_ = other.userId_;
    avatar_ = other.avatar_;
    fullName_ = other.fullName_;
    email_ = other.email_;
    phoneNumber_ = other.phoneNumber_;
    language_ = other.language_;
    autoSwitchGps_ = other.autoSwitchGps_;
    homes_ = other.homes_.Clone();
    userRole_ = other.userRole_;
    userSetting_ = other.userSetting_ != null ? other.userSetting_.Clone() : null;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUserInfoServerResponse Clone() {
    return new GetUserInfoServerResponse(this);
  }

  /// <summary>Field number for the "userId" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "avatar" field.</summary>
  public const int AvatarFieldNumber = 2;
  private pb::ByteString avatar_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Avatar {
    get { return avatar_; }
    set {
      avatar_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "fullName" field.</summary>
  public const int FullNameFieldNumber = 3;
  private string fullName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string FullName {
    get { return fullName_; }
    set {
      fullName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "email" field.</summary>
  public const int EmailFieldNumber = 4;
  private string email_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Email {
    get { return email_; }
    set {
      email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "phoneNumber" field.</summary>
  public const int PhoneNumberFieldNumber = 5;
  private string phoneNumber_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PhoneNumber {
    get { return phoneNumber_; }
    set {
      phoneNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "language" field.</summary>
  public const int LanguageFieldNumber = 6;
  private string language_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Language {
    get { return language_; }
    set {
      language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "autoSwitchGps" field.</summary>
  public const int AutoSwitchGpsFieldNumber = 7;
  private bool autoSwitchGps_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool AutoSwitchGps {
    get { return autoSwitchGps_; }
    set {
      autoSwitchGps_ = value;
    }
  }

  /// <summary>Field number for the "homes" field.</summary>
  public const int HomesFieldNumber = 8;
  private static readonly pb::FieldCodec<global::Home> _repeated_homes_codec
      = pb::FieldCodec.ForMessage(66, global::Home.Parser);
  private readonly pbc::RepeatedField<global::Home> homes_ = new pbc::RepeatedField<global::Home>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Home> Homes {
    get { return homes_; }
  }

  /// <summary>Field number for the "userRole" field.</summary>
  public const int UserRoleFieldNumber = 9;
  private global::UserRole userRole_ = global::UserRole.NormalUser;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UserRole UserRole {
    get { return userRole_; }
    set {
      userRole_ = value;
    }
  }

  /// <summary>Field number for the "userSetting" field.</summary>
  public const int UserSettingFieldNumber = 10;
  private global::UserSetting userSetting_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UserSetting UserSetting {
    get { return userSetting_; }
    set {
      userSetting_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetUserInfoServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetUserInfoServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (Avatar != other.Avatar) return false;
    if (FullName != other.FullName) return false;
    if (Email != other.Email) return false;
    if (PhoneNumber != other.PhoneNumber) return false;
    if (Language != other.Language) return false;
    if (AutoSwitchGps != other.AutoSwitchGps) return false;
    if(!homes_.Equals(other.homes_)) return false;
    if (UserRole != other.UserRole) return false;
    if (!object.Equals(UserSetting, other.UserSetting)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (Avatar.Length != 0) hash ^= Avatar.GetHashCode();
    if (FullName.Length != 0) hash ^= FullName.GetHashCode();
    if (Email.Length != 0) hash ^= Email.GetHashCode();
    if (PhoneNumber.Length != 0) hash ^= PhoneNumber.GetHashCode();
    if (Language.Length != 0) hash ^= Language.GetHashCode();
    if (AutoSwitchGps != false) hash ^= AutoSwitchGps.GetHashCode();
    hash ^= homes_.GetHashCode();
    if (UserRole != global::UserRole.NormalUser) hash ^= UserRole.GetHashCode();
    if (userSetting_ != null) hash ^= UserSetting.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (Avatar.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(Avatar);
    }
    if (FullName.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(FullName);
    }
    if (Email.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Email);
    }
    if (PhoneNumber.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(PhoneNumber);
    }
    if (Language.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(Language);
    }
    if (AutoSwitchGps != false) {
      output.WriteRawTag(56);
      output.WriteBool(AutoSwitchGps);
    }
    homes_.WriteTo(output, _repeated_homes_codec);
    if (UserRole != global::UserRole.NormalUser) {
      output.WriteRawTag(72);
      output.WriteEnum((int) UserRole);
    }
    if (userSetting_ != null) {
      output.WriteRawTag(82);
      output.WriteMessage(UserSetting);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (Avatar.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Avatar);
    }
    if (FullName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(FullName);
    }
    if (Email.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
    }
    if (PhoneNumber.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PhoneNumber);
    }
    if (Language.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
    }
    if (AutoSwitchGps != false) {
      size += 1 + 1;
    }
    size += homes_.CalculateSize(_repeated_homes_codec);
    if (UserRole != global::UserRole.NormalUser) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) UserRole);
    }
    if (userSetting_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserSetting);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetUserInfoServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    if (other.Avatar.Length != 0) {
      Avatar = other.Avatar;
    }
    if (other.FullName.Length != 0) {
      FullName = other.FullName;
    }
    if (other.Email.Length != 0) {
      Email = other.Email;
    }
    if (other.PhoneNumber.Length != 0) {
      PhoneNumber = other.PhoneNumber;
    }
    if (other.Language.Length != 0) {
      Language = other.Language;
    }
    if (other.AutoSwitchGps != false) {
      AutoSwitchGps = other.AutoSwitchGps;
    }
    homes_.Add(other.homes_);
    if (other.UserRole != global::UserRole.NormalUser) {
      UserRole = other.UserRole;
    }
    if (other.userSetting_ != null) {
      if (userSetting_ == null) {
        UserSetting = new global::UserSetting();
      }
      UserSetting.MergeFrom(other.UserSetting);
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 18: {
          Avatar = input.ReadBytes();
          break;
        }
        case 26: {
          FullName = input.ReadString();
          break;
        }
        case 34: {
          Email = input.ReadString();
          break;
        }
        case 42: {
          PhoneNumber = input.ReadString();
          break;
        }
        case 50: {
          Language = input.ReadString();
          break;
        }
        case 56: {
          AutoSwitchGps = input.ReadBool();
          break;
        }
        case 66: {
          homes_.AddEntriesFrom(input, _repeated_homes_codec);
          break;
        }
        case 72: {
          UserRole = (global::UserRole) input.ReadEnum();
          break;
        }
        case 82: {
          if (userSetting_ == null) {
            UserSetting = new global::UserSetting();
          }
          input.ReadMessage(UserSetting);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu cập nhật hồ sơ của tài khoản
/// </summary>
public sealed partial class UpdateUserInfoServerRequest : pb::IMessage<UpdateUserInfoServerRequest> {
  private static readonly pb::MessageParser<UpdateUserInfoServerRequest> _parser = new pb::MessageParser<UpdateUserInfoServerRequest>(() => new UpdateUserInfoServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateUserInfoServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[16]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateUserInfoServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateUserInfoServerRequest(UpdateUserInfoServerRequest other) : this() {
    avatar_ = other.avatar_;
    fullName_ = other.fullName_;
    email_ = other.email_;
    phoneNumber_ = other.phoneNumber_;
    markedDeleteAvatar_ = other.markedDeleteAvatar_;
    language_ = other.language_;
    autoSwitchGps_ = other.autoSwitchGps_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateUserInfoServerRequest Clone() {
    return new UpdateUserInfoServerRequest(this);
  }

  /// <summary>Field number for the "avatar" field.</summary>
  public const int AvatarFieldNumber = 1;
  private pb::ByteString avatar_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Avatar {
    get { return avatar_; }
    set {
      avatar_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "fullName" field.</summary>
  public const int FullNameFieldNumber = 2;
  private string fullName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string FullName {
    get { return fullName_; }
    set {
      fullName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "email" field.</summary>
  public const int EmailFieldNumber = 3;
  private string email_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Email {
    get { return email_; }
    set {
      email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "phoneNumber" field.</summary>
  public const int PhoneNumberFieldNumber = 4;
  private string phoneNumber_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PhoneNumber {
    get { return phoneNumber_; }
    set {
      phoneNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "markedDeleteAvatar" field.</summary>
  public const int MarkedDeleteAvatarFieldNumber = 5;
  private bool markedDeleteAvatar_;
  /// <summary>
  /// Đánh dấu khi xóa avatar
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool MarkedDeleteAvatar {
    get { return markedDeleteAvatar_; }
    set {
      markedDeleteAvatar_ = value;
    }
  }

  /// <summary>Field number for the "language" field.</summary>
  public const int LanguageFieldNumber = 6;
  private string language_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Language {
    get { return language_; }
    set {
      language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "autoSwitchGps" field.</summary>
  public const int AutoSwitchGpsFieldNumber = 7;
  private bool autoSwitchGps_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool AutoSwitchGps {
    get { return autoSwitchGps_; }
    set {
      autoSwitchGps_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateUserInfoServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateUserInfoServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Avatar != other.Avatar) return false;
    if (FullName != other.FullName) return false;
    if (Email != other.Email) return false;
    if (PhoneNumber != other.PhoneNumber) return false;
    if (MarkedDeleteAvatar != other.MarkedDeleteAvatar) return false;
    if (Language != other.Language) return false;
    if (AutoSwitchGps != other.AutoSwitchGps) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Avatar.Length != 0) hash ^= Avatar.GetHashCode();
    if (FullName.Length != 0) hash ^= FullName.GetHashCode();
    if (Email.Length != 0) hash ^= Email.GetHashCode();
    if (PhoneNumber.Length != 0) hash ^= PhoneNumber.GetHashCode();
    if (MarkedDeleteAvatar != false) hash ^= MarkedDeleteAvatar.GetHashCode();
    if (Language.Length != 0) hash ^= Language.GetHashCode();
    if (AutoSwitchGps != false) hash ^= AutoSwitchGps.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Avatar.Length != 0) {
      output.WriteRawTag(10);
      output.WriteBytes(Avatar);
    }
    if (FullName.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(FullName);
    }
    if (Email.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Email);
    }
    if (PhoneNumber.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(PhoneNumber);
    }
    if (MarkedDeleteAvatar != false) {
      output.WriteRawTag(40);
      output.WriteBool(MarkedDeleteAvatar);
    }
    if (Language.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(Language);
    }
    if (AutoSwitchGps != false) {
      output.WriteRawTag(56);
      output.WriteBool(AutoSwitchGps);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Avatar.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Avatar);
    }
    if (FullName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(FullName);
    }
    if (Email.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
    }
    if (PhoneNumber.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PhoneNumber);
    }
    if (MarkedDeleteAvatar != false) {
      size += 1 + 1;
    }
    if (Language.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
    }
    if (AutoSwitchGps != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateUserInfoServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.Avatar.Length != 0) {
      Avatar = other.Avatar;
    }
    if (other.FullName.Length != 0) {
      FullName = other.FullName;
    }
    if (other.Email.Length != 0) {
      Email = other.Email;
    }
    if (other.PhoneNumber.Length != 0) {
      PhoneNumber = other.PhoneNumber;
    }
    if (other.MarkedDeleteAvatar != false) {
      MarkedDeleteAvatar = other.MarkedDeleteAvatar;
    }
    if (other.Language.Length != 0) {
      Language = other.Language;
    }
    if (other.AutoSwitchGps != false) {
      AutoSwitchGps = other.AutoSwitchGps;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Avatar = input.ReadBytes();
          break;
        }
        case 18: {
          FullName = input.ReadString();
          break;
        }
        case 26: {
          Email = input.ReadString();
          break;
        }
        case 34: {
          PhoneNumber = input.ReadString();
          break;
        }
        case 40: {
          MarkedDeleteAvatar = input.ReadBool();
          break;
        }
        case 50: {
          Language = input.ReadString();
          break;
        }
        case 56: {
          AutoSwitchGps = input.ReadBool();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin cập nhật hồ sơ của tài khoản
/// </summary>
public sealed partial class UpdateUserInfoServerResponse : pb::IMessage<UpdateUserInfoServerResponse> {
  private static readonly pb::MessageParser<UpdateUserInfoServerResponse> _parser = new pb::MessageParser<UpdateUserInfoServerResponse>(() => new UpdateUserInfoServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateUserInfoServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[17]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateUserInfoServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateUserInfoServerResponse(UpdateUserInfoServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateUserInfoServerResponse Clone() {
    return new UpdateUserInfoServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateUserInfoServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateUserInfoServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateUserInfoServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu thay đổi nhà đã chọn
/// </summary>
public sealed partial class ChangedHomeForUserServerRequest : pb::IMessage<ChangedHomeForUserServerRequest> {
  private static readonly pb::MessageParser<ChangedHomeForUserServerRequest> _parser = new pb::MessageParser<ChangedHomeForUserServerRequest>(() => new ChangedHomeForUserServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ChangedHomeForUserServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[18]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChangedHomeForUserServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChangedHomeForUserServerRequest(ChangedHomeForUserServerRequest other) : this() {
    homeId_ = other.homeId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChangedHomeForUserServerRequest Clone() {
    return new ChangedHomeForUserServerRequest(this);
  }

  /// <summary>Field number for the "homeId" field.</summary>
  public const int HomeIdFieldNumber = 1;
  private string homeId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string HomeId {
    get { return homeId_; }
    set {
      homeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ChangedHomeForUserServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ChangedHomeForUserServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (HomeId != other.HomeId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HomeId.Length != 0) hash ^= HomeId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (HomeId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(HomeId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HomeId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HomeId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ChangedHomeForUserServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.HomeId.Length != 0) {
      HomeId = other.HomeId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          HomeId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thay đổi nhà đã chọn
/// </summary>
public sealed partial class ChangedHomeForUserServerResponse : pb::IMessage<ChangedHomeForUserServerResponse> {
  private static readonly pb::MessageParser<ChangedHomeForUserServerResponse> _parser = new pb::MessageParser<ChangedHomeForUserServerResponse>(() => new ChangedHomeForUserServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ChangedHomeForUserServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[19]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChangedHomeForUserServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChangedHomeForUserServerResponse(ChangedHomeForUserServerResponse other) : this() {
    homeId_ = other.homeId_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ChangedHomeForUserServerResponse Clone() {
    return new ChangedHomeForUserServerResponse(this);
  }

  /// <summary>Field number for the "homeId" field.</summary>
  public const int HomeIdFieldNumber = 1;
  private string homeId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string HomeId {
    get { return homeId_; }
    set {
      homeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ChangedHomeForUserServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ChangedHomeForUserServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (HomeId != other.HomeId) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HomeId.Length != 0) hash ^= HomeId.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (HomeId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(HomeId);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HomeId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HomeId);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ChangedHomeForUserServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.HomeId.Length != 0) {
      HomeId = other.HomeId;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          HomeId = input.ReadString();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Cập nhật thông báo Onesignal cho người dùng
/// </summary>
public sealed partial class SetOnesignalForUserServerRequest : pb::IMessage<SetOnesignalForUserServerRequest> {
  private static readonly pb::MessageParser<SetOnesignalForUserServerRequest> _parser = new pb::MessageParser<SetOnesignalForUserServerRequest>(() => new SetOnesignalForUserServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SetOnesignalForUserServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[20]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetOnesignalForUserServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetOnesignalForUserServerRequest(SetOnesignalForUserServerRequest other) : this() {
    onesignalId_ = other.onesignalId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetOnesignalForUserServerRequest Clone() {
    return new SetOnesignalForUserServerRequest(this);
  }

  /// <summary>Field number for the "onesignalId" field.</summary>
  public const int OnesignalIdFieldNumber = 1;
  private string onesignalId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string OnesignalId {
    get { return onesignalId_; }
    set {
      onesignalId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SetOnesignalForUserServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SetOnesignalForUserServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (OnesignalId != other.OnesignalId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (OnesignalId.Length != 0) hash ^= OnesignalId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (OnesignalId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(OnesignalId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (OnesignalId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(OnesignalId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SetOnesignalForUserServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.OnesignalId.Length != 0) {
      OnesignalId = other.OnesignalId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          OnesignalId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi cập nhật thông báo Onesignal cho người dùng
/// </summary>
public sealed partial class SetOnesignalForUserServerResponse : pb::IMessage<SetOnesignalForUserServerResponse> {
  private static readonly pb::MessageParser<SetOnesignalForUserServerResponse> _parser = new pb::MessageParser<SetOnesignalForUserServerResponse>(() => new SetOnesignalForUserServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SetOnesignalForUserServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[21]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetOnesignalForUserServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetOnesignalForUserServerResponse(SetOnesignalForUserServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetOnesignalForUserServerResponse Clone() {
    return new SetOnesignalForUserServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SetOnesignalForUserServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SetOnesignalForUserServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SetOnesignalForUserServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu trả về danh sách nhà của tài khoản
/// </summary>
public sealed partial class GetHomesServerRequest : pb::IMessage<GetHomesServerRequest> {
  private static readonly pb::MessageParser<GetHomesServerRequest> _parser = new pb::MessageParser<GetHomesServerRequest>(() => new GetHomesServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetHomesServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[22]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetHomesServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetHomesServerRequest(GetHomesServerRequest other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetHomesServerRequest Clone() {
    return new GetHomesServerRequest(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetHomesServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetHomesServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetHomesServerRequest other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin danh sách nhà cần trả về
/// </summary>
public sealed partial class GetHomesServerResponse : pb::IMessage<GetHomesServerResponse> {
  private static readonly pb::MessageParser<GetHomesServerResponse> _parser = new pb::MessageParser<GetHomesServerResponse>(() => new GetHomesServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetHomesServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[23]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetHomesServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetHomesServerResponse(GetHomesServerResponse other) : this() {
    homes_ = other.homes_.Clone();
    defaultHomeId_ = other.defaultHomeId_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetHomesServerResponse Clone() {
    return new GetHomesServerResponse(this);
  }

  /// <summary>Field number for the "homes" field.</summary>
  public const int HomesFieldNumber = 1;
  private static readonly pb::FieldCodec<global::Home> _repeated_homes_codec
      = pb::FieldCodec.ForMessage(10, global::Home.Parser);
  private readonly pbc::RepeatedField<global::Home> homes_ = new pbc::RepeatedField<global::Home>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Home> Homes {
    get { return homes_; }
  }

  /// <summary>Field number for the "defaultHomeId" field.</summary>
  public const int DefaultHomeIdFieldNumber = 2;
  private string defaultHomeId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DefaultHomeId {
    get { return defaultHomeId_; }
    set {
      defaultHomeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetHomesServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetHomesServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!homes_.Equals(other.homes_)) return false;
    if (DefaultHomeId != other.DefaultHomeId) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= homes_.GetHashCode();
    if (DefaultHomeId.Length != 0) hash ^= DefaultHomeId.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    homes_.WriteTo(output, _repeated_homes_codec);
    if (DefaultHomeId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(DefaultHomeId);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += homes_.CalculateSize(_repeated_homes_codec);
    if (DefaultHomeId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DefaultHomeId);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetHomesServerResponse other) {
    if (other == null) {
      return;
    }
    homes_.Add(other.homes_);
    if (other.DefaultHomeId.Length != 0) {
      DefaultHomeId = other.DefaultHomeId;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          homes_.AddEntriesFrom(input, _repeated_homes_codec);
          break;
        }
        case 18: {
          DefaultHomeId = input.ReadString();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

public sealed partial class GetHomesByPhoneServerRequest : pb::IMessage<GetHomesByPhoneServerRequest> {
  private static readonly pb::MessageParser<GetHomesByPhoneServerRequest> _parser = new pb::MessageParser<GetHomesByPhoneServerRequest>(() => new GetHomesByPhoneServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetHomesByPhoneServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[24]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetHomesByPhoneServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetHomesByPhoneServerRequest(GetHomesByPhoneServerRequest other) : this() {
    phone_ = other.phone_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetHomesByPhoneServerRequest Clone() {
    return new GetHomesByPhoneServerRequest(this);
  }

  /// <summary>Field number for the "phone" field.</summary>
  public const int PhoneFieldNumber = 1;
  private string phone_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Phone {
    get { return phone_; }
    set {
      phone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetHomesByPhoneServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetHomesByPhoneServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Phone != other.Phone) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Phone.Length != 0) hash ^= Phone.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Phone.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Phone);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Phone.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Phone);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetHomesByPhoneServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.Phone.Length != 0) {
      Phone = other.Phone;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Phone = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class GetHomesByPhoneServerResponse : pb::IMessage<GetHomesByPhoneServerResponse> {
  private static readonly pb::MessageParser<GetHomesByPhoneServerResponse> _parser = new pb::MessageParser<GetHomesByPhoneServerResponse>(() => new GetHomesByPhoneServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetHomesByPhoneServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[25]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetHomesByPhoneServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetHomesByPhoneServerResponse(GetHomesByPhoneServerResponse other) : this() {
    home_ = other.home_.Clone();
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetHomesByPhoneServerResponse Clone() {
    return new GetHomesByPhoneServerResponse(this);
  }

  /// <summary>Field number for the "home" field.</summary>
  public const int HomeFieldNumber = 1;
  private static readonly pb::FieldCodec<global::Home> _repeated_home_codec
      = pb::FieldCodec.ForMessage(10, global::Home.Parser);
  private readonly pbc::RepeatedField<global::Home> home_ = new pbc::RepeatedField<global::Home>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Home> Home {
    get { return home_; }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetHomesByPhoneServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetHomesByPhoneServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!home_.Equals(other.home_)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= home_.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    home_.WriteTo(output, _repeated_home_codec);
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += home_.CalculateSize(_repeated_home_codec);
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetHomesByPhoneServerResponse other) {
    if (other == null) {
      return;
    }
    home_.Add(other.home_);
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          home_.AddEntriesFrom(input, _repeated_home_codec);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

public sealed partial class UploadHomeBackgroundServerRequest : pb::IMessage<UploadHomeBackgroundServerRequest> {
  private static readonly pb::MessageParser<UploadHomeBackgroundServerRequest> _parser = new pb::MessageParser<UploadHomeBackgroundServerRequest>(() => new UploadHomeBackgroundServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UploadHomeBackgroundServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[26]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UploadHomeBackgroundServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UploadHomeBackgroundServerRequest(UploadHomeBackgroundServerRequest other) : this() {
    homeId_ = other.homeId_;
    fileUploadForm_ = other.fileUploadForm_ != null ? other.fileUploadForm_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UploadHomeBackgroundServerRequest Clone() {
    return new UploadHomeBackgroundServerRequest(this);
  }

  /// <summary>Field number for the "homeId" field.</summary>
  public const int HomeIdFieldNumber = 1;
  private string homeId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string HomeId {
    get { return homeId_; }
    set {
      homeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "fileUploadForm" field.</summary>
  public const int FileUploadFormFieldNumber = 2;
  private global::FileUploadForm fileUploadForm_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FileUploadForm FileUploadForm {
    get { return fileUploadForm_; }
    set {
      fileUploadForm_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UploadHomeBackgroundServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UploadHomeBackgroundServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (HomeId != other.HomeId) return false;
    if (!object.Equals(FileUploadForm, other.FileUploadForm)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HomeId.Length != 0) hash ^= HomeId.GetHashCode();
    if (fileUploadForm_ != null) hash ^= FileUploadForm.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (HomeId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(HomeId);
    }
    if (fileUploadForm_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(FileUploadForm);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HomeId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HomeId);
    }
    if (fileUploadForm_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(FileUploadForm);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UploadHomeBackgroundServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.HomeId.Length != 0) {
      HomeId = other.HomeId;
    }
    if (other.fileUploadForm_ != null) {
      if (fileUploadForm_ == null) {
        FileUploadForm = new global::FileUploadForm();
      }
      FileUploadForm.MergeFrom(other.FileUploadForm);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          HomeId = input.ReadString();
          break;
        }
        case 18: {
          if (fileUploadForm_ == null) {
            FileUploadForm = new global::FileUploadForm();
          }
          input.ReadMessage(FileUploadForm);
          break;
        }
      }
    }
  }

}

public sealed partial class UploadHomeBackgroundServerResponse : pb::IMessage<UploadHomeBackgroundServerResponse> {
  private static readonly pb::MessageParser<UploadHomeBackgroundServerResponse> _parser = new pb::MessageParser<UploadHomeBackgroundServerResponse>(() => new UploadHomeBackgroundServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UploadHomeBackgroundServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[27]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UploadHomeBackgroundServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UploadHomeBackgroundServerResponse(UploadHomeBackgroundServerResponse other) : this() {
    imageUrl_ = other.imageUrl_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UploadHomeBackgroundServerResponse Clone() {
    return new UploadHomeBackgroundServerResponse(this);
  }

  /// <summary>Field number for the "imageUrl" field.</summary>
  public const int ImageUrlFieldNumber = 1;
  private string imageUrl_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ImageUrl {
    get { return imageUrl_; }
    set {
      imageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UploadHomeBackgroundServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UploadHomeBackgroundServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ImageUrl != other.ImageUrl) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ImageUrl.Length != 0) hash ^= ImageUrl.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ImageUrl.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ImageUrl);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ImageUrl.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageUrl);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UploadHomeBackgroundServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.ImageUrl.Length != 0) {
      ImageUrl = other.ImageUrl;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ImageUrl = input.ReadString();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu trả về thông tin chi tiết nhà
/// </summary>
public sealed partial class GetHomeInfoServerRequest : pb::IMessage<GetHomeInfoServerRequest> {
  private static readonly pb::MessageParser<GetHomeInfoServerRequest> _parser = new pb::MessageParser<GetHomeInfoServerRequest>(() => new GetHomeInfoServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetHomeInfoServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[28]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetHomeInfoServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetHomeInfoServerRequest(GetHomeInfoServerRequest other) : this() {
    homeId_ = other.homeId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetHomeInfoServerRequest Clone() {
    return new GetHomeInfoServerRequest(this);
  }

  /// <summary>Field number for the "homeId" field.</summary>
  public const int HomeIdFieldNumber = 1;
  private string homeId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string HomeId {
    get { return homeId_; }
    set {
      homeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetHomeInfoServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetHomeInfoServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (HomeId != other.HomeId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HomeId.Length != 0) hash ^= HomeId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (HomeId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(HomeId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HomeId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HomeId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetHomeInfoServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.HomeId.Length != 0) {
      HomeId = other.HomeId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          HomeId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin chi tiết nhà
/// </summary>
public sealed partial class GetHomeInfoServerResponse : pb::IMessage<GetHomeInfoServerResponse> {
  private static readonly pb::MessageParser<GetHomeInfoServerResponse> _parser = new pb::MessageParser<GetHomeInfoServerResponse>(() => new GetHomeInfoServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetHomeInfoServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[29]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetHomeInfoServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetHomeInfoServerResponse(GetHomeInfoServerResponse other) : this() {
    home_ = other.home_ != null ? other.home_.Clone() : null;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetHomeInfoServerResponse Clone() {
    return new GetHomeInfoServerResponse(this);
  }

  /// <summary>Field number for the "home" field.</summary>
  public const int HomeFieldNumber = 1;
  private global::Home home_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Home Home {
    get { return home_; }
    set {
      home_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetHomeInfoServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetHomeInfoServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Home, other.Home)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (home_ != null) hash ^= Home.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (home_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Home);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (home_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Home);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetHomeInfoServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.home_ != null) {
      if (home_ == null) {
        Home = new global::Home();
      }
      Home.MergeFrom(other.Home);
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (home_ == null) {
            Home = new global::Home();
          }
          input.ReadMessage(Home);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu thêm nhà mới
/// </summary>
public sealed partial class AddHomeServerRequest : pb::IMessage<AddHomeServerRequest> {
  private static readonly pb::MessageParser<AddHomeServerRequest> _parser = new pb::MessageParser<AddHomeServerRequest>(() => new AddHomeServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AddHomeServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[30]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddHomeServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddHomeServerRequest(AddHomeServerRequest other) : this() {
    homeName_ = other.homeName_;
    homeNameEn_ = other.homeNameEn_;
    backgroundName_ = other.backgroundName_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddHomeServerRequest Clone() {
    return new AddHomeServerRequest(this);
  }

  /// <summary>Field number for the "homeName" field.</summary>
  public const int HomeNameFieldNumber = 1;
  private string homeName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string HomeName {
    get { return homeName_; }
    set {
      homeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "homeNameEn" field.</summary>
  public const int HomeNameEnFieldNumber = 2;
  private string homeNameEn_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string HomeNameEn {
    get { return homeNameEn_; }
    set {
      homeNameEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "backgroundName" field.</summary>
  public const int BackgroundNameFieldNumber = 3;
  private string backgroundName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string BackgroundName {
    get { return backgroundName_; }
    set {
      backgroundName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AddHomeServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AddHomeServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (HomeName != other.HomeName) return false;
    if (HomeNameEn != other.HomeNameEn) return false;
    if (BackgroundName != other.BackgroundName) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HomeName.Length != 0) hash ^= HomeName.GetHashCode();
    if (HomeNameEn.Length != 0) hash ^= HomeNameEn.GetHashCode();
    if (BackgroundName.Length != 0) hash ^= BackgroundName.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (HomeName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(HomeName);
    }
    if (HomeNameEn.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(HomeNameEn);
    }
    if (BackgroundName.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(BackgroundName);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HomeName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HomeName);
    }
    if (HomeNameEn.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HomeNameEn);
    }
    if (BackgroundName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(BackgroundName);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AddHomeServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.HomeName.Length != 0) {
      HomeName = other.HomeName;
    }
    if (other.HomeNameEn.Length != 0) {
      HomeNameEn = other.HomeNameEn;
    }
    if (other.BackgroundName.Length != 0) {
      BackgroundName = other.BackgroundName;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          HomeName = input.ReadString();
          break;
        }
        case 18: {
          HomeNameEn = input.ReadString();
          break;
        }
        case 26: {
          BackgroundName = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin thêm nhà mới
/// </summary>
public sealed partial class AddHomeServerResponse : pb::IMessage<AddHomeServerResponse> {
  private static readonly pb::MessageParser<AddHomeServerResponse> _parser = new pb::MessageParser<AddHomeServerResponse>(() => new AddHomeServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AddHomeServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[31]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddHomeServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddHomeServerResponse(AddHomeServerResponse other) : this() {
    home_ = other.home_ != null ? other.home_.Clone() : null;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddHomeServerResponse Clone() {
    return new AddHomeServerResponse(this);
  }

  /// <summary>Field number for the "home" field.</summary>
  public const int HomeFieldNumber = 1;
  private global::Home home_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Home Home {
    get { return home_; }
    set {
      home_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AddHomeServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AddHomeServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Home, other.Home)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (home_ != null) hash ^= Home.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (home_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Home);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (home_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Home);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AddHomeServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.home_ != null) {
      if (home_ == null) {
        Home = new global::Home();
      }
      Home.MergeFrom(other.Home);
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (home_ == null) {
            Home = new global::Home();
          }
          input.ReadMessage(Home);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu update nhà mới
/// </summary>
public sealed partial class UpdateHomeServerRequest : pb::IMessage<UpdateHomeServerRequest> {
  private static readonly pb::MessageParser<UpdateHomeServerRequest> _parser = new pb::MessageParser<UpdateHomeServerRequest>(() => new UpdateHomeServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateHomeServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[32]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateHomeServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateHomeServerRequest(UpdateHomeServerRequest other) : this() {
    home_ = other.home_ != null ? other.home_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateHomeServerRequest Clone() {
    return new UpdateHomeServerRequest(this);
  }

  /// <summary>Field number for the "home" field.</summary>
  public const int HomeFieldNumber = 1;
  private global::Home home_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Home Home {
    get { return home_; }
    set {
      home_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateHomeServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateHomeServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Home, other.Home)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (home_ != null) hash ^= Home.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (home_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Home);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (home_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Home);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateHomeServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.home_ != null) {
      if (home_ == null) {
        Home = new global::Home();
      }
      Home.MergeFrom(other.Home);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (home_ == null) {
            Home = new global::Home();
          }
          input.ReadMessage(Home);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin update nhà mới
/// </summary>
public sealed partial class UpdateHomeServerResponse : pb::IMessage<UpdateHomeServerResponse> {
  private static readonly pb::MessageParser<UpdateHomeServerResponse> _parser = new pb::MessageParser<UpdateHomeServerResponse>(() => new UpdateHomeServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateHomeServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[33]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateHomeServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateHomeServerResponse(UpdateHomeServerResponse other) : this() {
    home_ = other.home_ != null ? other.home_.Clone() : null;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateHomeServerResponse Clone() {
    return new UpdateHomeServerResponse(this);
  }

  /// <summary>Field number for the "home" field.</summary>
  public const int HomeFieldNumber = 1;
  private global::Home home_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Home Home {
    get { return home_; }
    set {
      home_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateHomeServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateHomeServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Home, other.Home)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (home_ != null) hash ^= Home.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (home_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Home);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (home_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Home);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateHomeServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.home_ != null) {
      if (home_ == null) {
        Home = new global::Home();
      }
      Home.MergeFrom(other.Home);
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (home_ == null) {
            Home = new global::Home();
          }
          input.ReadMessage(Home);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Yêu cầu cập nhật GPS cho nhà
/// </summary>
public sealed partial class SetGpsForHomeServerRequest : pb::IMessage<SetGpsForHomeServerRequest> {
  private static readonly pb::MessageParser<SetGpsForHomeServerRequest> _parser = new pb::MessageParser<SetGpsForHomeServerRequest>(() => new SetGpsForHomeServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SetGpsForHomeServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[34]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetGpsForHomeServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetGpsForHomeServerRequest(SetGpsForHomeServerRequest other) : this() {
    id_ = other.id_;
    longitude_ = other.longitude_;
    latitude_ = other.latitude_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetGpsForHomeServerRequest Clone() {
    return new SetGpsForHomeServerRequest(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private string id_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Id {
    get { return id_; }
    set {
      id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "longitude" field.</summary>
  public const int LongitudeFieldNumber = 2;
  private float longitude_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Longitude {
    get { return longitude_; }
    set {
      longitude_ = value;
    }
  }

  /// <summary>Field number for the "latitude" field.</summary>
  public const int LatitudeFieldNumber = 3;
  private float latitude_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Latitude {
    get { return latitude_; }
    set {
      latitude_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SetGpsForHomeServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SetGpsForHomeServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Longitude, other.Longitude)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Latitude, other.Latitude)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id.Length != 0) hash ^= Id.GetHashCode();
    if (Longitude != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Longitude);
    if (Latitude != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Latitude);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (Longitude != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(Longitude);
    }
    if (Latitude != 0F) {
      output.WriteRawTag(29);
      output.WriteFloat(Latitude);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
    }
    if (Longitude != 0F) {
      size += 1 + 4;
    }
    if (Latitude != 0F) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SetGpsForHomeServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.Id.Length != 0) {
      Id = other.Id;
    }
    if (other.Longitude != 0F) {
      Longitude = other.Longitude;
    }
    if (other.Latitude != 0F) {
      Latitude = other.Latitude;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
        case 21: {
          Longitude = input.ReadFloat();
          break;
        }
        case 29: {
          Latitude = input.ReadFloat();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi cập nhật GPS cho nhà
/// </summary>
public sealed partial class SetGpsForHomeServerResponse : pb::IMessage<SetGpsForHomeServerResponse> {
  private static readonly pb::MessageParser<SetGpsForHomeServerResponse> _parser = new pb::MessageParser<SetGpsForHomeServerResponse>(() => new SetGpsForHomeServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SetGpsForHomeServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[35]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetGpsForHomeServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetGpsForHomeServerResponse(SetGpsForHomeServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetGpsForHomeServerResponse Clone() {
    return new SetGpsForHomeServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SetGpsForHomeServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SetGpsForHomeServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SetGpsForHomeServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu xóa nhà mới
/// </summary>
public sealed partial class DeleteHomeServerRequest : pb::IMessage<DeleteHomeServerRequest> {
  private static readonly pb::MessageParser<DeleteHomeServerRequest> _parser = new pb::MessageParser<DeleteHomeServerRequest>(() => new DeleteHomeServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeleteHomeServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[36]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteHomeServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteHomeServerRequest(DeleteHomeServerRequest other) : this() {
    homeId_ = other.homeId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteHomeServerRequest Clone() {
    return new DeleteHomeServerRequest(this);
  }

  /// <summary>Field number for the "homeId" field.</summary>
  public const int HomeIdFieldNumber = 1;
  private string homeId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string HomeId {
    get { return homeId_; }
    set {
      homeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeleteHomeServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeleteHomeServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (HomeId != other.HomeId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HomeId.Length != 0) hash ^= HomeId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (HomeId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(HomeId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HomeId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HomeId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeleteHomeServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.HomeId.Length != 0) {
      HomeId = other.HomeId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          HomeId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin xóa nhà mới
/// </summary>
public sealed partial class DeleteHomeServerResponse : pb::IMessage<DeleteHomeServerResponse> {
  private static readonly pb::MessageParser<DeleteHomeServerResponse> _parser = new pb::MessageParser<DeleteHomeServerResponse>(() => new DeleteHomeServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeleteHomeServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[37]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteHomeServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteHomeServerResponse(DeleteHomeServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteHomeServerResponse Clone() {
    return new DeleteHomeServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeleteHomeServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeleteHomeServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeleteHomeServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu trả về danh sách các phòng
/// </summary>
public sealed partial class GetRoomsServerRequest : pb::IMessage<GetRoomsServerRequest> {
  private static readonly pb::MessageParser<GetRoomsServerRequest> _parser = new pb::MessageParser<GetRoomsServerRequest>(() => new GetRoomsServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetRoomsServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[38]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRoomsServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRoomsServerRequest(GetRoomsServerRequest other) : this() {
    homeId_ = other.homeId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRoomsServerRequest Clone() {
    return new GetRoomsServerRequest(this);
  }

  /// <summary>Field number for the "homeId" field.</summary>
  public const int HomeIdFieldNumber = 1;
  private string homeId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string HomeId {
    get { return homeId_; }
    set {
      homeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetRoomsServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetRoomsServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (HomeId != other.HomeId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HomeId.Length != 0) hash ^= HomeId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (HomeId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(HomeId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HomeId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HomeId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetRoomsServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.HomeId.Length != 0) {
      HomeId = other.HomeId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          HomeId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu thêm phòng mới
/// </summary>
public sealed partial class AddRoomServerRequest : pb::IMessage<AddRoomServerRequest> {
  private static readonly pb::MessageParser<AddRoomServerRequest> _parser = new pb::MessageParser<AddRoomServerRequest>(() => new AddRoomServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AddRoomServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[39]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddRoomServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddRoomServerRequest(AddRoomServerRequest other) : this() {
    homeId_ = other.homeId_;
    roomName_ = other.roomName_;
    roomNameEn_ = other.roomNameEn_;
    backgroundName_ = other.backgroundName_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddRoomServerRequest Clone() {
    return new AddRoomServerRequest(this);
  }

  /// <summary>Field number for the "homeId" field.</summary>
  public const int HomeIdFieldNumber = 1;
  private string homeId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string HomeId {
    get { return homeId_; }
    set {
      homeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "roomName" field.</summary>
  public const int RoomNameFieldNumber = 2;
  private string roomName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RoomName {
    get { return roomName_; }
    set {
      roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "roomNameEn" field.</summary>
  public const int RoomNameEnFieldNumber = 3;
  private string roomNameEn_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RoomNameEn {
    get { return roomNameEn_; }
    set {
      roomNameEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "backgroundName" field.</summary>
  public const int BackgroundNameFieldNumber = 4;
  private string backgroundName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string BackgroundName {
    get { return backgroundName_; }
    set {
      backgroundName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AddRoomServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AddRoomServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (HomeId != other.HomeId) return false;
    if (RoomName != other.RoomName) return false;
    if (RoomNameEn != other.RoomNameEn) return false;
    if (BackgroundName != other.BackgroundName) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HomeId.Length != 0) hash ^= HomeId.GetHashCode();
    if (RoomName.Length != 0) hash ^= RoomName.GetHashCode();
    if (RoomNameEn.Length != 0) hash ^= RoomNameEn.GetHashCode();
    if (BackgroundName.Length != 0) hash ^= BackgroundName.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (HomeId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(HomeId);
    }
    if (RoomName.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(RoomName);
    }
    if (RoomNameEn.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(RoomNameEn);
    }
    if (BackgroundName.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(BackgroundName);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HomeId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HomeId);
    }
    if (RoomName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
    }
    if (RoomNameEn.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomNameEn);
    }
    if (BackgroundName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(BackgroundName);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AddRoomServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.HomeId.Length != 0) {
      HomeId = other.HomeId;
    }
    if (other.RoomName.Length != 0) {
      RoomName = other.RoomName;
    }
    if (other.RoomNameEn.Length != 0) {
      RoomNameEn = other.RoomNameEn;
    }
    if (other.BackgroundName.Length != 0) {
      BackgroundName = other.BackgroundName;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          HomeId = input.ReadString();
          break;
        }
        case 18: {
          RoomName = input.ReadString();
          break;
        }
        case 26: {
          RoomNameEn = input.ReadString();
          break;
        }
        case 34: {
          BackgroundName = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu xóa 1 phòng
/// </summary>
public sealed partial class DeleteRoomServerRequest : pb::IMessage<DeleteRoomServerRequest> {
  private static readonly pb::MessageParser<DeleteRoomServerRequest> _parser = new pb::MessageParser<DeleteRoomServerRequest>(() => new DeleteRoomServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeleteRoomServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[40]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteRoomServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteRoomServerRequest(DeleteRoomServerRequest other) : this() {
    roomId_ = other.roomId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteRoomServerRequest Clone() {
    return new DeleteRoomServerRequest(this);
  }

  /// <summary>Field number for the "roomId" field.</summary>
  public const int RoomIdFieldNumber = 1;
  private string roomId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RoomId {
    get { return roomId_; }
    set {
      roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeleteRoomServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeleteRoomServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RoomId != other.RoomId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (RoomId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(RoomId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RoomId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeleteRoomServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.RoomId.Length != 0) {
      RoomId = other.RoomId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          RoomId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin danh sách nhà cần trả về
/// </summary>
public sealed partial class GetRoomsServerResponse : pb::IMessage<GetRoomsServerResponse> {
  private static readonly pb::MessageParser<GetRoomsServerResponse> _parser = new pb::MessageParser<GetRoomsServerResponse>(() => new GetRoomsServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetRoomsServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[41]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRoomsServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRoomsServerResponse(GetRoomsServerResponse other) : this() {
    rooms_ = other.rooms_.Clone();
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRoomsServerResponse Clone() {
    return new GetRoomsServerResponse(this);
  }

  /// <summary>Field number for the "rooms" field.</summary>
  public const int RoomsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::Room> _repeated_rooms_codec
      = pb::FieldCodec.ForMessage(10, global::Room.Parser);
  private readonly pbc::RepeatedField<global::Room> rooms_ = new pbc::RepeatedField<global::Room>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Room> Rooms {
    get { return rooms_; }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetRoomsServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetRoomsServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!rooms_.Equals(other.rooms_)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= rooms_.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    rooms_.WriteTo(output, _repeated_rooms_codec);
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += rooms_.CalculateSize(_repeated_rooms_codec);
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetRoomsServerResponse other) {
    if (other == null) {
      return;
    }
    rooms_.Add(other.rooms_);
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          rooms_.AddEntriesFrom(input, _repeated_rooms_codec);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin thêm phòng mới
/// </summary>
public sealed partial class AddRoomServerResponse : pb::IMessage<AddRoomServerResponse> {
  private static readonly pb::MessageParser<AddRoomServerResponse> _parser = new pb::MessageParser<AddRoomServerResponse>(() => new AddRoomServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AddRoomServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[42]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddRoomServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddRoomServerResponse(AddRoomServerResponse other) : this() {
    room_ = other.room_ != null ? other.room_.Clone() : null;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddRoomServerResponse Clone() {
    return new AddRoomServerResponse(this);
  }

  /// <summary>Field number for the "room" field.</summary>
  public const int RoomFieldNumber = 1;
  private global::Room room_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Room Room {
    get { return room_; }
    set {
      room_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AddRoomServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AddRoomServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Room, other.Room)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (room_ != null) hash ^= Room.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (room_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Room);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (room_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Room);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AddRoomServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.room_ != null) {
      if (room_ == null) {
        Room = new global::Room();
      }
      Room.MergeFrom(other.Room);
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (room_ == null) {
            Room = new global::Room();
          }
          input.ReadMessage(Room);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi xóa một phòng
/// </summary>
public sealed partial class DeleteRoomServerResponse : pb::IMessage<DeleteRoomServerResponse> {
  private static readonly pb::MessageParser<DeleteRoomServerResponse> _parser = new pb::MessageParser<DeleteRoomServerResponse>(() => new DeleteRoomServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeleteRoomServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[43]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteRoomServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteRoomServerResponse(DeleteRoomServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteRoomServerResponse Clone() {
    return new DeleteRoomServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeleteRoomServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeleteRoomServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeleteRoomServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

public sealed partial class UpdateRoomServerRequest : pb::IMessage<UpdateRoomServerRequest> {
  private static readonly pb::MessageParser<UpdateRoomServerRequest> _parser = new pb::MessageParser<UpdateRoomServerRequest>(() => new UpdateRoomServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateRoomServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[44]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateRoomServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateRoomServerRequest(UpdateRoomServerRequest other) : this() {
    room_ = other.room_ != null ? other.room_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateRoomServerRequest Clone() {
    return new UpdateRoomServerRequest(this);
  }

  /// <summary>Field number for the "room" field.</summary>
  public const int RoomFieldNumber = 1;
  private global::Room room_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Room Room {
    get { return room_; }
    set {
      room_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateRoomServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateRoomServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Room, other.Room)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (room_ != null) hash ^= Room.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (room_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Room);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (room_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Room);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateRoomServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.room_ != null) {
      if (room_ == null) {
        Room = new global::Room();
      }
      Room.MergeFrom(other.Room);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (room_ == null) {
            Room = new global::Room();
          }
          input.ReadMessage(Room);
          break;
        }
      }
    }
  }

}

public sealed partial class UpdateRoomServerResponse : pb::IMessage<UpdateRoomServerResponse> {
  private static readonly pb::MessageParser<UpdateRoomServerResponse> _parser = new pb::MessageParser<UpdateRoomServerResponse>(() => new UpdateRoomServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateRoomServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[45]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateRoomServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateRoomServerResponse(UpdateRoomServerResponse other) : this() {
    room_ = other.room_ != null ? other.room_.Clone() : null;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateRoomServerResponse Clone() {
    return new UpdateRoomServerResponse(this);
  }

  /// <summary>Field number for the "room" field.</summary>
  public const int RoomFieldNumber = 1;
  private global::Room room_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Room Room {
    get { return room_; }
    set {
      room_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateRoomServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateRoomServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Room, other.Room)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (room_ != null) hash ^= Room.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (room_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Room);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (room_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Room);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateRoomServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.room_ != null) {
      if (room_ == null) {
        Room = new global::Room();
      }
      Room.MergeFrom(other.Room);
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (room_ == null) {
            Room = new global::Room();
          }
          input.ReadMessage(Room);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

public sealed partial class UploadRoomBackgroundServerRequest : pb::IMessage<UploadRoomBackgroundServerRequest> {
  private static readonly pb::MessageParser<UploadRoomBackgroundServerRequest> _parser = new pb::MessageParser<UploadRoomBackgroundServerRequest>(() => new UploadRoomBackgroundServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UploadRoomBackgroundServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[46]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UploadRoomBackgroundServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UploadRoomBackgroundServerRequest(UploadRoomBackgroundServerRequest other) : this() {
    room_ = other.room_ != null ? other.room_.Clone() : null;
    fileUploadForm_ = other.fileUploadForm_ != null ? other.fileUploadForm_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UploadRoomBackgroundServerRequest Clone() {
    return new UploadRoomBackgroundServerRequest(this);
  }

  /// <summary>Field number for the "room" field.</summary>
  public const int RoomFieldNumber = 1;
  private global::Room room_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Room Room {
    get { return room_; }
    set {
      room_ = value;
    }
  }

  /// <summary>Field number for the "fileUploadForm" field.</summary>
  public const int FileUploadFormFieldNumber = 2;
  private global::FileUploadForm fileUploadForm_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FileUploadForm FileUploadForm {
    get { return fileUploadForm_; }
    set {
      fileUploadForm_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UploadRoomBackgroundServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UploadRoomBackgroundServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Room, other.Room)) return false;
    if (!object.Equals(FileUploadForm, other.FileUploadForm)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (room_ != null) hash ^= Room.GetHashCode();
    if (fileUploadForm_ != null) hash ^= FileUploadForm.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (room_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Room);
    }
    if (fileUploadForm_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(FileUploadForm);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (room_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Room);
    }
    if (fileUploadForm_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(FileUploadForm);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UploadRoomBackgroundServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.room_ != null) {
      if (room_ == null) {
        Room = new global::Room();
      }
      Room.MergeFrom(other.Room);
    }
    if (other.fileUploadForm_ != null) {
      if (fileUploadForm_ == null) {
        FileUploadForm = new global::FileUploadForm();
      }
      FileUploadForm.MergeFrom(other.FileUploadForm);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (room_ == null) {
            Room = new global::Room();
          }
          input.ReadMessage(Room);
          break;
        }
        case 18: {
          if (fileUploadForm_ == null) {
            FileUploadForm = new global::FileUploadForm();
          }
          input.ReadMessage(FileUploadForm);
          break;
        }
      }
    }
  }

}

public sealed partial class UploadRoomBackgroundServerResponse : pb::IMessage<UploadRoomBackgroundServerResponse> {
  private static readonly pb::MessageParser<UploadRoomBackgroundServerResponse> _parser = new pb::MessageParser<UploadRoomBackgroundServerResponse>(() => new UploadRoomBackgroundServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UploadRoomBackgroundServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[47]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UploadRoomBackgroundServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UploadRoomBackgroundServerResponse(UploadRoomBackgroundServerResponse other) : this() {
    imageUrl_ = other.imageUrl_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UploadRoomBackgroundServerResponse Clone() {
    return new UploadRoomBackgroundServerResponse(this);
  }

  /// <summary>Field number for the "imageUrl" field.</summary>
  public const int ImageUrlFieldNumber = 1;
  private string imageUrl_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ImageUrl {
    get { return imageUrl_; }
    set {
      imageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UploadRoomBackgroundServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UploadRoomBackgroundServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ImageUrl != other.ImageUrl) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ImageUrl.Length != 0) hash ^= ImageUrl.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ImageUrl.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ImageUrl);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ImageUrl.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageUrl);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UploadRoomBackgroundServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.ImageUrl.Length != 0) {
      ImageUrl = other.ImageUrl;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ImageUrl = input.ReadString();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu trả về danh sách dự án
/// </summary>
public sealed partial class GetProjectsServerRequest : pb::IMessage<GetProjectsServerRequest> {
  private static readonly pb::MessageParser<GetProjectsServerRequest> _parser = new pb::MessageParser<GetProjectsServerRequest>(() => new GetProjectsServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetProjectsServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[48]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetProjectsServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetProjectsServerRequest(GetProjectsServerRequest other) : this() {
    keySearch_ = other.keySearch_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetProjectsServerRequest Clone() {
    return new GetProjectsServerRequest(this);
  }

  /// <summary>Field number for the "keySearch" field.</summary>
  public const int KeySearchFieldNumber = 1;
  private string keySearch_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string KeySearch {
    get { return keySearch_; }
    set {
      keySearch_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetProjectsServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetProjectsServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (KeySearch != other.KeySearch) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (KeySearch.Length != 0) hash ^= KeySearch.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (KeySearch.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(KeySearch);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (KeySearch.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(KeySearch);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetProjectsServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.KeySearch.Length != 0) {
      KeySearch = other.KeySearch;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          KeySearch = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin danh sách dự án
/// </summary>
public sealed partial class GetProjectsServerResponse : pb::IMessage<GetProjectsServerResponse> {
  private static readonly pb::MessageParser<GetProjectsServerResponse> _parser = new pb::MessageParser<GetProjectsServerResponse>(() => new GetProjectsServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetProjectsServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[49]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetProjectsServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetProjectsServerResponse(GetProjectsServerResponse other) : this() {
    projects_ = other.projects_.Clone();
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetProjectsServerResponse Clone() {
    return new GetProjectsServerResponse(this);
  }

  /// <summary>Field number for the "projects" field.</summary>
  public const int ProjectsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::Project> _repeated_projects_codec
      = pb::FieldCodec.ForMessage(10, global::Project.Parser);
  private readonly pbc::RepeatedField<global::Project> projects_ = new pbc::RepeatedField<global::Project>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Project> Projects {
    get { return projects_; }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetProjectsServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetProjectsServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!projects_.Equals(other.projects_)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= projects_.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    projects_.WriteTo(output, _repeated_projects_codec);
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += projects_.CalculateSize(_repeated_projects_codec);
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetProjectsServerResponse other) {
    if (other == null) {
      return;
    }
    projects_.Add(other.projects_);
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          projects_.AddEntriesFrom(input, _repeated_projects_codec);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu trả về danh sách tòa
/// </summary>
public sealed partial class GetBuildingsServerRequest : pb::IMessage<GetBuildingsServerRequest> {
  private static readonly pb::MessageParser<GetBuildingsServerRequest> _parser = new pb::MessageParser<GetBuildingsServerRequest>(() => new GetBuildingsServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetBuildingsServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[50]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetBuildingsServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetBuildingsServerRequest(GetBuildingsServerRequest other) : this() {
    projectId_ = other.projectId_;
    keySearch_ = other.keySearch_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetBuildingsServerRequest Clone() {
    return new GetBuildingsServerRequest(this);
  }

  /// <summary>Field number for the "projectId" field.</summary>
  public const int ProjectIdFieldNumber = 1;
  private string projectId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ProjectId {
    get { return projectId_; }
    set {
      projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "keySearch" field.</summary>
  public const int KeySearchFieldNumber = 2;
  private string keySearch_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string KeySearch {
    get { return keySearch_; }
    set {
      keySearch_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetBuildingsServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetBuildingsServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ProjectId != other.ProjectId) return false;
    if (KeySearch != other.KeySearch) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
    if (KeySearch.Length != 0) hash ^= KeySearch.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ProjectId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ProjectId);
    }
    if (KeySearch.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(KeySearch);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ProjectId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
    }
    if (KeySearch.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(KeySearch);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetBuildingsServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.ProjectId.Length != 0) {
      ProjectId = other.ProjectId;
    }
    if (other.KeySearch.Length != 0) {
      KeySearch = other.KeySearch;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ProjectId = input.ReadString();
          break;
        }
        case 18: {
          KeySearch = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin danh sách tòa
/// </summary>
public sealed partial class GetBuildingsServerResponse : pb::IMessage<GetBuildingsServerResponse> {
  private static readonly pb::MessageParser<GetBuildingsServerResponse> _parser = new pb::MessageParser<GetBuildingsServerResponse>(() => new GetBuildingsServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetBuildingsServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[51]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetBuildingsServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetBuildingsServerResponse(GetBuildingsServerResponse other) : this() {
    buildings_ = other.buildings_.Clone();
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetBuildingsServerResponse Clone() {
    return new GetBuildingsServerResponse(this);
  }

  /// <summary>Field number for the "buildings" field.</summary>
  public const int BuildingsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::Building> _repeated_buildings_codec
      = pb::FieldCodec.ForMessage(10, global::Building.Parser);
  private readonly pbc::RepeatedField<global::Building> buildings_ = new pbc::RepeatedField<global::Building>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Building> Buildings {
    get { return buildings_; }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetBuildingsServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetBuildingsServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!buildings_.Equals(other.buildings_)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= buildings_.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    buildings_.WriteTo(output, _repeated_buildings_codec);
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += buildings_.CalculateSize(_repeated_buildings_codec);
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetBuildingsServerResponse other) {
    if (other == null) {
      return;
    }
    buildings_.Add(other.buildings_);
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          buildings_.AddEntriesFrom(input, _repeated_buildings_codec);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu trả về danh sách tầng
/// </summary>
public sealed partial class GetFloorsServerRequest : pb::IMessage<GetFloorsServerRequest> {
  private static readonly pb::MessageParser<GetFloorsServerRequest> _parser = new pb::MessageParser<GetFloorsServerRequest>(() => new GetFloorsServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetFloorsServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[52]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetFloorsServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetFloorsServerRequest(GetFloorsServerRequest other) : this() {
    buildingId_ = other.buildingId_;
    keySearch_ = other.keySearch_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetFloorsServerRequest Clone() {
    return new GetFloorsServerRequest(this);
  }

  /// <summary>Field number for the "buildingId" field.</summary>
  public const int BuildingIdFieldNumber = 1;
  private string buildingId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string BuildingId {
    get { return buildingId_; }
    set {
      buildingId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "keySearch" field.</summary>
  public const int KeySearchFieldNumber = 2;
  private string keySearch_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string KeySearch {
    get { return keySearch_; }
    set {
      keySearch_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetFloorsServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetFloorsServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (BuildingId != other.BuildingId) return false;
    if (KeySearch != other.KeySearch) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (BuildingId.Length != 0) hash ^= BuildingId.GetHashCode();
    if (KeySearch.Length != 0) hash ^= KeySearch.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (BuildingId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(BuildingId);
    }
    if (KeySearch.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(KeySearch);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (BuildingId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(BuildingId);
    }
    if (KeySearch.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(KeySearch);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetFloorsServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.BuildingId.Length != 0) {
      BuildingId = other.BuildingId;
    }
    if (other.KeySearch.Length != 0) {
      KeySearch = other.KeySearch;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          BuildingId = input.ReadString();
          break;
        }
        case 18: {
          KeySearch = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin danh sách tầng
/// </summary>
public sealed partial class GetFloorsServerResponse : pb::IMessage<GetFloorsServerResponse> {
  private static readonly pb::MessageParser<GetFloorsServerResponse> _parser = new pb::MessageParser<GetFloorsServerResponse>(() => new GetFloorsServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetFloorsServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[53]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetFloorsServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetFloorsServerResponse(GetFloorsServerResponse other) : this() {
    floors_ = other.floors_.Clone();
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetFloorsServerResponse Clone() {
    return new GetFloorsServerResponse(this);
  }

  /// <summary>Field number for the "floors" field.</summary>
  public const int FloorsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::Floor> _repeated_floors_codec
      = pb::FieldCodec.ForMessage(10, global::Floor.Parser);
  private readonly pbc::RepeatedField<global::Floor> floors_ = new pbc::RepeatedField<global::Floor>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Floor> Floors {
    get { return floors_; }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetFloorsServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetFloorsServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!floors_.Equals(other.floors_)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= floors_.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    floors_.WriteTo(output, _repeated_floors_codec);
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += floors_.CalculateSize(_repeated_floors_codec);
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetFloorsServerResponse other) {
    if (other == null) {
      return;
    }
    floors_.Add(other.floors_);
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          floors_.AddEntriesFrom(input, _repeated_floors_codec);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu trả về danh sách căn hộ
/// </summary>
public sealed partial class GetApartmentsServerRequest : pb::IMessage<GetApartmentsServerRequest> {
  private static readonly pb::MessageParser<GetApartmentsServerRequest> _parser = new pb::MessageParser<GetApartmentsServerRequest>(() => new GetApartmentsServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetApartmentsServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[54]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetApartmentsServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetApartmentsServerRequest(GetApartmentsServerRequest other) : this() {
    floorId_ = other.floorId_;
    keySearch_ = other.keySearch_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetApartmentsServerRequest Clone() {
    return new GetApartmentsServerRequest(this);
  }

  /// <summary>Field number for the "floorId" field.</summary>
  public const int FloorIdFieldNumber = 1;
  private string floorId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string FloorId {
    get { return floorId_; }
    set {
      floorId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "keySearch" field.</summary>
  public const int KeySearchFieldNumber = 2;
  private string keySearch_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string KeySearch {
    get { return keySearch_; }
    set {
      keySearch_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetApartmentsServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetApartmentsServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (FloorId != other.FloorId) return false;
    if (KeySearch != other.KeySearch) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (FloorId.Length != 0) hash ^= FloorId.GetHashCode();
    if (KeySearch.Length != 0) hash ^= KeySearch.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (FloorId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(FloorId);
    }
    if (KeySearch.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(KeySearch);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (FloorId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(FloorId);
    }
    if (KeySearch.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(KeySearch);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetApartmentsServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.FloorId.Length != 0) {
      FloorId = other.FloorId;
    }
    if (other.KeySearch.Length != 0) {
      KeySearch = other.KeySearch;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          FloorId = input.ReadString();
          break;
        }
        case 18: {
          KeySearch = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin danh sách căn hộ
/// </summary>
public sealed partial class GetApartmentsServerResponse : pb::IMessage<GetApartmentsServerResponse> {
  private static readonly pb::MessageParser<GetApartmentsServerResponse> _parser = new pb::MessageParser<GetApartmentsServerResponse>(() => new GetApartmentsServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetApartmentsServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[55]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetApartmentsServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetApartmentsServerResponse(GetApartmentsServerResponse other) : this() {
    apartments_ = other.apartments_.Clone();
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetApartmentsServerResponse Clone() {
    return new GetApartmentsServerResponse(this);
  }

  /// <summary>Field number for the "apartments" field.</summary>
  public const int ApartmentsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::Apartment> _repeated_apartments_codec
      = pb::FieldCodec.ForMessage(10, global::Apartment.Parser);
  private readonly pbc::RepeatedField<global::Apartment> apartments_ = new pbc::RepeatedField<global::Apartment>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Apartment> Apartments {
    get { return apartments_; }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetApartmentsServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetApartmentsServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!apartments_.Equals(other.apartments_)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= apartments_.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    apartments_.WriteTo(output, _repeated_apartments_codec);
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += apartments_.CalculateSize(_repeated_apartments_codec);
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetApartmentsServerResponse other) {
    if (other == null) {
      return;
    }
    apartments_.Add(other.apartments_);
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          apartments_.AddEntriesFrom(input, _repeated_apartments_codec);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận yêu cầu lấy thông tin cư dân
/// </summary>
public sealed partial class GetCitizenInfoServerRequest : pb::IMessage<GetCitizenInfoServerRequest> {
  private static readonly pb::MessageParser<GetCitizenInfoServerRequest> _parser = new pb::MessageParser<GetCitizenInfoServerRequest>(() => new GetCitizenInfoServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetCitizenInfoServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[56]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCitizenInfoServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCitizenInfoServerRequest(GetCitizenInfoServerRequest other) : this() {
    homeId_ = other.homeId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCitizenInfoServerRequest Clone() {
    return new GetCitizenInfoServerRequest(this);
  }

  /// <summary>Field number for the "homeId" field.</summary>
  public const int HomeIdFieldNumber = 1;
  private string homeId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string HomeId {
    get { return homeId_; }
    set {
      homeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetCitizenInfoServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetCitizenInfoServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (HomeId != other.HomeId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HomeId.Length != 0) hash ^= HomeId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (HomeId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(HomeId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HomeId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HomeId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetCitizenInfoServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.HomeId.Length != 0) {
      HomeId = other.HomeId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          HomeId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin cư dân
/// </summary>
public sealed partial class GetCitizenInfoServerResponse : pb::IMessage<GetCitizenInfoServerResponse> {
  private static readonly pb::MessageParser<GetCitizenInfoServerResponse> _parser = new pb::MessageParser<GetCitizenInfoServerResponse>(() => new GetCitizenInfoServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetCitizenInfoServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[57]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCitizenInfoServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCitizenInfoServerResponse(GetCitizenInfoServerResponse other) : this() {
    citizen_ = other.citizen_ != null ? other.citizen_.Clone() : null;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCitizenInfoServerResponse Clone() {
    return new GetCitizenInfoServerResponse(this);
  }

  /// <summary>Field number for the "citizen" field.</summary>
  public const int CitizenFieldNumber = 1;
  private global::Citizen citizen_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Citizen Citizen {
    get { return citizen_; }
    set {
      citizen_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetCitizenInfoServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetCitizenInfoServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Citizen, other.Citizen)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (citizen_ != null) hash ^= Citizen.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (citizen_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Citizen);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (citizen_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Citizen);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetCitizenInfoServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.citizen_ != null) {
      if (citizen_ == null) {
        Citizen = new global::Citizen();
      }
      Citizen.MergeFrom(other.Citizen);
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (citizen_ == null) {
            Citizen = new global::Citizen();
          }
          input.ReadMessage(Citizen);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu set thông tin cư dân
/// </summary>
public sealed partial class SetCitizenServerRequest : pb::IMessage<SetCitizenServerRequest> {
  private static readonly pb::MessageParser<SetCitizenServerRequest> _parser = new pb::MessageParser<SetCitizenServerRequest>(() => new SetCitizenServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SetCitizenServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[58]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetCitizenServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetCitizenServerRequest(SetCitizenServerRequest other) : this() {
    citizen_ = other.citizen_ != null ? other.citizen_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetCitizenServerRequest Clone() {
    return new SetCitizenServerRequest(this);
  }

  /// <summary>Field number for the "citizen" field.</summary>
  public const int CitizenFieldNumber = 1;
  private global::Citizen citizen_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Citizen Citizen {
    get { return citizen_; }
    set {
      citizen_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SetCitizenServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SetCitizenServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Citizen, other.Citizen)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (citizen_ != null) hash ^= Citizen.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (citizen_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Citizen);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (citizen_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Citizen);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SetCitizenServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.citizen_ != null) {
      if (citizen_ == null) {
        Citizen = new global::Citizen();
      }
      Citizen.MergeFrom(other.Citizen);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (citizen_ == null) {
            Citizen = new global::Citizen();
          }
          input.ReadMessage(Citizen);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin set thông tin cư dân
/// </summary>
public sealed partial class SetCitizenServerResponse : pb::IMessage<SetCitizenServerResponse> {
  private static readonly pb::MessageParser<SetCitizenServerResponse> _parser = new pb::MessageParser<SetCitizenServerResponse>(() => new SetCitizenServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SetCitizenServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[59]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetCitizenServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetCitizenServerResponse(SetCitizenServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetCitizenServerResponse Clone() {
    return new SetCitizenServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SetCitizenServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SetCitizenServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SetCitizenServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu thêm thành viên mới
/// </summary>
public sealed partial class AddUserHomeServerRequest : pb::IMessage<AddUserHomeServerRequest> {
  private static readonly pb::MessageParser<AddUserHomeServerRequest> _parser = new pb::MessageParser<AddUserHomeServerRequest>(() => new AddUserHomeServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AddUserHomeServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[60]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddUserHomeServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddUserHomeServerRequest(AddUserHomeServerRequest other) : this() {
    userHome_ = other.userHome_ != null ? other.userHome_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddUserHomeServerRequest Clone() {
    return new AddUserHomeServerRequest(this);
  }

  /// <summary>Field number for the "userHome" field.</summary>
  public const int UserHomeFieldNumber = 1;
  private global::UserHome userHome_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UserHome UserHome {
    get { return userHome_; }
    set {
      userHome_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AddUserHomeServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AddUserHomeServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(UserHome, other.UserHome)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (userHome_ != null) hash ^= UserHome.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (userHome_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(UserHome);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (userHome_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserHome);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AddUserHomeServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.userHome_ != null) {
      if (userHome_ == null) {
        UserHome = new global::UserHome();
      }
      UserHome.MergeFrom(other.UserHome);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (userHome_ == null) {
            UserHome = new global::UserHome();
          }
          input.ReadMessage(UserHome);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin thêm thành viên mới
/// </summary>
public sealed partial class AddUserHomeServerResponse : pb::IMessage<AddUserHomeServerResponse> {
  private static readonly pb::MessageParser<AddUserHomeServerResponse> _parser = new pb::MessageParser<AddUserHomeServerResponse>(() => new AddUserHomeServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AddUserHomeServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[61]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddUserHomeServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddUserHomeServerResponse(AddUserHomeServerResponse other) : this() {
    userHome_ = other.userHome_ != null ? other.userHome_.Clone() : null;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddUserHomeServerResponse Clone() {
    return new AddUserHomeServerResponse(this);
  }

  /// <summary>Field number for the "userHome" field.</summary>
  public const int UserHomeFieldNumber = 1;
  private global::UserHome userHome_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UserHome UserHome {
    get { return userHome_; }
    set {
      userHome_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AddUserHomeServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AddUserHomeServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(UserHome, other.UserHome)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (userHome_ != null) hash ^= UserHome.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (userHome_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(UserHome);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (userHome_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserHome);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AddUserHomeServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.userHome_ != null) {
      if (userHome_ == null) {
        UserHome = new global::UserHome();
      }
      UserHome.MergeFrom(other.UserHome);
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (userHome_ == null) {
            UserHome = new global::UserHome();
          }
          input.ReadMessage(UserHome);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu xóa thành viên
/// </summary>
public sealed partial class DeleteUserHomeServerRequest : pb::IMessage<DeleteUserHomeServerRequest> {
  private static readonly pb::MessageParser<DeleteUserHomeServerRequest> _parser = new pb::MessageParser<DeleteUserHomeServerRequest>(() => new DeleteUserHomeServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeleteUserHomeServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[62]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteUserHomeServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteUserHomeServerRequest(DeleteUserHomeServerRequest other) : this() {
    id_ = other.id_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteUserHomeServerRequest Clone() {
    return new DeleteUserHomeServerRequest(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private string id_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Id {
    get { return id_; }
    set {
      id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeleteUserHomeServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeleteUserHomeServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id.Length != 0) hash ^= Id.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeleteUserHomeServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.Id.Length != 0) {
      Id = other.Id;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin xóa thành viên
/// </summary>
public sealed partial class DeleteUserHomeServerResponse : pb::IMessage<DeleteUserHomeServerResponse> {
  private static readonly pb::MessageParser<DeleteUserHomeServerResponse> _parser = new pb::MessageParser<DeleteUserHomeServerResponse>(() => new DeleteUserHomeServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeleteUserHomeServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[63]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteUserHomeServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteUserHomeServerResponse(DeleteUserHomeServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteUserHomeServerResponse Clone() {
    return new DeleteUserHomeServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeleteUserHomeServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeleteUserHomeServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeleteUserHomeServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Thông báo 
/// </summary>
public sealed partial class GetUnreadServerRequest : pb::IMessage<GetUnreadServerRequest> {
  private static readonly pb::MessageParser<GetUnreadServerRequest> _parser = new pb::MessageParser<GetUnreadServerRequest>(() => new GetUnreadServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetUnreadServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[64]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUnreadServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUnreadServerRequest(GetUnreadServerRequest other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUnreadServerRequest Clone() {
    return new GetUnreadServerRequest(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetUnreadServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetUnreadServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetUnreadServerRequest other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class GetUnreadServerResponse : pb::IMessage<GetUnreadServerResponse> {
  private static readonly pb::MessageParser<GetUnreadServerResponse> _parser = new pb::MessageParser<GetUnreadServerResponse>(() => new GetUnreadServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetUnreadServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[65]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUnreadServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUnreadServerResponse(GetUnreadServerResponse other) : this() {
    unread_ = other.unread_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUnreadServerResponse Clone() {
    return new GetUnreadServerResponse(this);
  }

  /// <summary>Field number for the "unread" field.</summary>
  public const int UnreadFieldNumber = 1;
  private ulong unread_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong Unread {
    get { return unread_; }
    set {
      unread_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetUnreadServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetUnreadServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Unread != other.Unread) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Unread != 0UL) hash ^= Unread.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Unread != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(Unread);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Unread != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Unread);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetUnreadServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.Unread != 0UL) {
      Unread = other.Unread;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Unread = input.ReadUInt64();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

public sealed partial class SetReadServerRequest : pb::IMessage<SetReadServerRequest> {
  private static readonly pb::MessageParser<SetReadServerRequest> _parser = new pb::MessageParser<SetReadServerRequest>(() => new SetReadServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SetReadServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[66]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetReadServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetReadServerRequest(SetReadServerRequest other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetReadServerRequest Clone() {
    return new SetReadServerRequest(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SetReadServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SetReadServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SetReadServerRequest other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class SetReadServerResponse : pb::IMessage<SetReadServerResponse> {
  private static readonly pb::MessageParser<SetReadServerResponse> _parser = new pb::MessageParser<SetReadServerResponse>(() => new SetReadServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SetReadServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[67]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetReadServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetReadServerResponse(SetReadServerResponse other) : this() {
    id_ = other.id_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetReadServerResponse Clone() {
    return new SetReadServerResponse(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private string id_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Id {
    get { return id_; }
    set {
      id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SetReadServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SetReadServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id.Length != 0) hash ^= Id.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SetReadServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.Id.Length != 0) {
      Id = other.Id;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu gửi danh sách background cho client
/// </summary>
public sealed partial class GetBackgroundsServerRequest : pb::IMessage<GetBackgroundsServerRequest> {
  private static readonly pb::MessageParser<GetBackgroundsServerRequest> _parser = new pb::MessageParser<GetBackgroundsServerRequest>(() => new GetBackgroundsServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetBackgroundsServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[68]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetBackgroundsServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetBackgroundsServerRequest(GetBackgroundsServerRequest other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetBackgroundsServerRequest Clone() {
    return new GetBackgroundsServerRequest(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetBackgroundsServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetBackgroundsServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetBackgroundsServerRequest other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

/// <summary>
/// Phẩn hồi danh sách background cần trả về cho client
/// </summary>
public sealed partial class GetBackgroundsServerResponse : pb::IMessage<GetBackgroundsServerResponse> {
  private static readonly pb::MessageParser<GetBackgroundsServerResponse> _parser = new pb::MessageParser<GetBackgroundsServerResponse>(() => new GetBackgroundsServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetBackgroundsServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[69]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetBackgroundsServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetBackgroundsServerResponse(GetBackgroundsServerResponse other) : this() {
    backgrounds_ = other.backgrounds_.Clone();
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetBackgroundsServerResponse Clone() {
    return new GetBackgroundsServerResponse(this);
  }

  /// <summary>Field number for the "backgrounds" field.</summary>
  public const int BackgroundsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::ImageNetwork> _repeated_backgrounds_codec
      = pb::FieldCodec.ForMessage(10, global::ImageNetwork.Parser);
  private readonly pbc::RepeatedField<global::ImageNetwork> backgrounds_ = new pbc::RepeatedField<global::ImageNetwork>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::ImageNetwork> Backgrounds {
    get { return backgrounds_; }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetBackgroundsServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetBackgroundsServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!backgrounds_.Equals(other.backgrounds_)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= backgrounds_.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    backgrounds_.WriteTo(output, _repeated_backgrounds_codec);
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += backgrounds_.CalculateSize(_repeated_backgrounds_codec);
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetBackgroundsServerResponse other) {
    if (other == null) {
      return;
    }
    backgrounds_.Add(other.backgrounds_);
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          backgrounds_.AddEntriesFrom(input, _repeated_backgrounds_codec);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu gửi danh sách AutoOff cho client
/// </summary>
public sealed partial class GetAutoOffsServerRequest : pb::IMessage<GetAutoOffsServerRequest> {
  private static readonly pb::MessageParser<GetAutoOffsServerRequest> _parser = new pb::MessageParser<GetAutoOffsServerRequest>(() => new GetAutoOffsServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetAutoOffsServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[70]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetAutoOffsServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetAutoOffsServerRequest(GetAutoOffsServerRequest other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetAutoOffsServerRequest Clone() {
    return new GetAutoOffsServerRequest(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetAutoOffsServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetAutoOffsServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetAutoOffsServerRequest other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

/// <summary>
/// Phẩn hồi danh sách AutoOff cần trả về cho client
/// </summary>
public sealed partial class GetAutoOffsServerResponse : pb::IMessage<GetAutoOffsServerResponse> {
  private static readonly pb::MessageParser<GetAutoOffsServerResponse> _parser = new pb::MessageParser<GetAutoOffsServerResponse>(() => new GetAutoOffsServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetAutoOffsServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[71]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetAutoOffsServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetAutoOffsServerResponse(GetAutoOffsServerResponse other) : this() {
    autoOffs_ = other.autoOffs_.Clone();
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetAutoOffsServerResponse Clone() {
    return new GetAutoOffsServerResponse(this);
  }

  /// <summary>Field number for the "autoOffs" field.</summary>
  public const int AutoOffsFieldNumber = 1;
  private static readonly pb::FieldCodec<uint> _repeated_autoOffs_codec
      = pb::FieldCodec.ForUInt32(10);
  private readonly pbc::RepeatedField<uint> autoOffs_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<uint> AutoOffs {
    get { return autoOffs_; }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetAutoOffsServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetAutoOffsServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!autoOffs_.Equals(other.autoOffs_)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= autoOffs_.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    autoOffs_.WriteTo(output, _repeated_autoOffs_codec);
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += autoOffs_.CalculateSize(_repeated_autoOffs_codec);
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetAutoOffsServerResponse other) {
    if (other == null) {
      return;
    }
    autoOffs_.Add(other.autoOffs_);
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 8: {
          autoOffs_.AddEntriesFrom(input, _repeated_autoOffs_codec);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu gửi danh sách loại thiết bị
/// </summary>
public sealed partial class GetTypeDevicesServerRequest : pb::IMessage<GetTypeDevicesServerRequest> {
  private static readonly pb::MessageParser<GetTypeDevicesServerRequest> _parser = new pb::MessageParser<GetTypeDevicesServerRequest>(() => new GetTypeDevicesServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetTypeDevicesServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[72]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetTypeDevicesServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetTypeDevicesServerRequest(GetTypeDevicesServerRequest other) : this() {
    group_ = other.group_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetTypeDevicesServerRequest Clone() {
    return new GetTypeDevicesServerRequest(this);
  }

  /// <summary>Field number for the "group" field.</summary>
  public const int GroupFieldNumber = 1;
  private global::GroupDevice group_ = global::GroupDevice.SwitcherGroup;
  /// <summary>
  /// Nhóm thiết bị
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GroupDevice Group {
    get { return group_; }
    set {
      group_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetTypeDevicesServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetTypeDevicesServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Group != other.Group) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Group != global::GroupDevice.SwitcherGroup) hash ^= Group.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Group != global::GroupDevice.SwitcherGroup) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Group);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Group != global::GroupDevice.SwitcherGroup) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Group);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetTypeDevicesServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.Group != global::GroupDevice.SwitcherGroup) {
      Group = other.Group;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Group = (global::GroupDevice) input.ReadEnum();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phẩn hồi danh sách loại thiết bị
/// </summary>
public sealed partial class GetTypeDevicesServerResponse : pb::IMessage<GetTypeDevicesServerResponse> {
  private static readonly pb::MessageParser<GetTypeDevicesServerResponse> _parser = new pb::MessageParser<GetTypeDevicesServerResponse>(() => new GetTypeDevicesServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetTypeDevicesServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[73]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetTypeDevicesServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetTypeDevicesServerResponse(GetTypeDevicesServerResponse other) : this() {
    typeDevices_ = other.typeDevices_.Clone();
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetTypeDevicesServerResponse Clone() {
    return new GetTypeDevicesServerResponse(this);
  }

  /// <summary>Field number for the "typeDevices" field.</summary>
  public const int TypeDevicesFieldNumber = 1;
  private static readonly pb::FieldCodec<global::TypeDevice> _repeated_typeDevices_codec
      = pb::FieldCodec.ForEnum(10, x => (int) x, x => (global::TypeDevice) x);
  private readonly pbc::RepeatedField<global::TypeDevice> typeDevices_ = new pbc::RepeatedField<global::TypeDevice>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::TypeDevice> TypeDevices {
    get { return typeDevices_; }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetTypeDevicesServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetTypeDevicesServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!typeDevices_.Equals(other.typeDevices_)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= typeDevices_.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    typeDevices_.WriteTo(output, _repeated_typeDevices_codec);
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += typeDevices_.CalculateSize(_repeated_typeDevices_codec);
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetTypeDevicesServerResponse other) {
    if (other == null) {
      return;
    }
    typeDevices_.Add(other.typeDevices_);
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 8: {
          typeDevices_.AddEntriesFrom(input, _repeated_typeDevices_codec);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu gửi về danh danh thiết bị đã kết nối wifi
/// </summary>
public sealed partial class GetDevicesServerRequest : pb::IMessage<GetDevicesServerRequest> {
  private static readonly pb::MessageParser<GetDevicesServerRequest> _parser = new pb::MessageParser<GetDevicesServerRequest>(() => new GetDevicesServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetDevicesServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[74]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetDevicesServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetDevicesServerRequest(GetDevicesServerRequest other) : this() {
    homeId_ = other.homeId_;
    group_ = other.group_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetDevicesServerRequest Clone() {
    return new GetDevicesServerRequest(this);
  }

  /// <summary>Field number for the "homeId" field.</summary>
  public const int HomeIdFieldNumber = 1;
  private string homeId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string HomeId {
    get { return homeId_; }
    set {
      homeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "group" field.</summary>
  public const int GroupFieldNumber = 2;
  private global::GroupDevice group_ = global::GroupDevice.SwitcherGroup;
  /// <summary>
  /// Nhóm thiết bị
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GroupDevice Group {
    get { return group_; }
    set {
      group_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetDevicesServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetDevicesServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (HomeId != other.HomeId) return false;
    if (Group != other.Group) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HomeId.Length != 0) hash ^= HomeId.GetHashCode();
    if (Group != global::GroupDevice.SwitcherGroup) hash ^= Group.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (HomeId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(HomeId);
    }
    if (Group != global::GroupDevice.SwitcherGroup) {
      output.WriteRawTag(16);
      output.WriteEnum((int) Group);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HomeId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HomeId);
    }
    if (Group != global::GroupDevice.SwitcherGroup) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Group);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetDevicesServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.HomeId.Length != 0) {
      HomeId = other.HomeId;
    }
    if (other.Group != global::GroupDevice.SwitcherGroup) {
      Group = other.Group;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          HomeId = input.ReadString();
          break;
        }
        case 16: {
          Group = (global::GroupDevice) input.ReadEnum();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu gửi 1 thiết bị đã kết nối wifi
/// </summary>
public sealed partial class GetDeviceServerRequest : pb::IMessage<GetDeviceServerRequest> {
  private static readonly pb::MessageParser<GetDeviceServerRequest> _parser = new pb::MessageParser<GetDeviceServerRequest>(() => new GetDeviceServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetDeviceServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[75]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetDeviceServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetDeviceServerRequest(GetDeviceServerRequest other) : this() {
    deviceId_ = other.deviceId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetDeviceServerRequest Clone() {
    return new GetDeviceServerRequest(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetDeviceServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetDeviceServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetDeviceServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu cập nhật danh sách các thiết bị đến DB server
/// </summary>
public sealed partial class AddDevicesServerRequest : pb::IMessage<AddDevicesServerRequest> {
  private static readonly pb::MessageParser<AddDevicesServerRequest> _parser = new pb::MessageParser<AddDevicesServerRequest>(() => new AddDevicesServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AddDevicesServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[76]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddDevicesServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddDevicesServerRequest(AddDevicesServerRequest other) : this() {
    devices_ = other.devices_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddDevicesServerRequest Clone() {
    return new AddDevicesServerRequest(this);
  }

  /// <summary>Field number for the "devices" field.</summary>
  public const int DevicesFieldNumber = 1;
  private static readonly pb::FieldCodec<global::Device> _repeated_devices_codec
      = pb::FieldCodec.ForMessage(10, global::Device.Parser);
  private readonly pbc::RepeatedField<global::Device> devices_ = new pbc::RepeatedField<global::Device>();
  /// <summary>
  /// Thiết bị đã cấu hình rồi thì lần sau sẽ không hiển thị ra nữa nên server sẽ
  /// không thực hiện update trong db
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Device> Devices {
    get { return devices_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AddDevicesServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AddDevicesServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!devices_.Equals(other.devices_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= devices_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    devices_.WriteTo(output, _repeated_devices_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += devices_.CalculateSize(_repeated_devices_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AddDevicesServerRequest other) {
    if (other == null) {
      return;
    }
    devices_.Add(other.devices_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          devices_.AddEntriesFrom(input, _repeated_devices_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu cập nhật thông tin thiết bị
/// </summary>
public sealed partial class UpdateDeviceServerRequest : pb::IMessage<UpdateDeviceServerRequest> {
  private static readonly pb::MessageParser<UpdateDeviceServerRequest> _parser = new pb::MessageParser<UpdateDeviceServerRequest>(() => new UpdateDeviceServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateDeviceServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[77]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateDeviceServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateDeviceServerRequest(UpdateDeviceServerRequest other) : this() {
    device_ = other.device_ != null ? other.device_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateDeviceServerRequest Clone() {
    return new UpdateDeviceServerRequest(this);
  }

  /// <summary>Field number for the "device" field.</summary>
  public const int DeviceFieldNumber = 1;
  private global::Device device_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Device Device {
    get { return device_; }
    set {
      device_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateDeviceServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateDeviceServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Device, other.Device)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (device_ != null) hash ^= Device.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (device_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Device);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (device_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Device);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateDeviceServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.device_ != null) {
      if (device_ == null) {
        Device = new global::Device();
      }
      Device.MergeFrom(other.Device);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (device_ == null) {
            Device = new global::Device();
          }
          input.ReadMessage(Device);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu xóa thiết bị kết nối wifi
/// </summary>
public sealed partial class DeleteDeviceServerRequest : pb::IMessage<DeleteDeviceServerRequest> {
  private static readonly pb::MessageParser<DeleteDeviceServerRequest> _parser = new pb::MessageParser<DeleteDeviceServerRequest>(() => new DeleteDeviceServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeleteDeviceServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[78]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteDeviceServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteDeviceServerRequest(DeleteDeviceServerRequest other) : this() {
    deviceId_ = other.deviceId_;
    hardwareId_ = other.hardwareId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteDeviceServerRequest Clone() {
    return new DeleteDeviceServerRequest(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  /// <summary>
  /// Id của thiết bị
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "hardwareId" field.</summary>
  public const int HardwareIdFieldNumber = 2;
  private string hardwareId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string HardwareId {
    get { return hardwareId_; }
    set {
      hardwareId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeleteDeviceServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeleteDeviceServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    if (HardwareId != other.HardwareId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (HardwareId.Length != 0) hash ^= HardwareId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (HardwareId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(HardwareId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (HardwareId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HardwareId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeleteDeviceServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.HardwareId.Length != 0) {
      HardwareId = other.HardwareId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
        case 18: {
          HardwareId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu lấy về url firmware mới nhất
/// </summary>
public sealed partial class GetFirmwareLatestDeviceServerRequest : pb::IMessage<GetFirmwareLatestDeviceServerRequest> {
  private static readonly pb::MessageParser<GetFirmwareLatestDeviceServerRequest> _parser = new pb::MessageParser<GetFirmwareLatestDeviceServerRequest>(() => new GetFirmwareLatestDeviceServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetFirmwareLatestDeviceServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[79]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetFirmwareLatestDeviceServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetFirmwareLatestDeviceServerRequest(GetFirmwareLatestDeviceServerRequest other) : this() {
    model_ = other.model_;
    firmware_ = other.firmware_;
    deviceToken_ = other.deviceToken_;
    deviceId_ = other.deviceId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetFirmwareLatestDeviceServerRequest Clone() {
    return new GetFirmwareLatestDeviceServerRequest(this);
  }

  /// <summary>Field number for the "model" field.</summary>
  public const int ModelFieldNumber = 1;
  private string model_ = "";
  /// <summary>
  /// Model: "M1", "SW-1TOUCH"
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Model {
    get { return model_; }
    set {
      model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "firmware" field.</summary>
  public const int FirmwareFieldNumber = 2;
  private string firmware_ = "";
  /// <summary>
  /// Firmware: 1.0.0
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Firmware {
    get { return firmware_; }
    set {
      firmware_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "deviceToken" field.</summary>
  public const int DeviceTokenFieldNumber = 3;
  private string deviceToken_ = "";
  /// <summary>
  /// DeviceToken
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceToken {
    get { return deviceToken_; }
    set {
      deviceToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 4;
  private string deviceId_ = "";
  /// <summary>
  /// Chỉ cẩn DeviceId của thiết bị là đủ
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetFirmwareLatestDeviceServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetFirmwareLatestDeviceServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Model != other.Model) return false;
    if (Firmware != other.Firmware) return false;
    if (DeviceToken != other.DeviceToken) return false;
    if (DeviceId != other.DeviceId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Model.Length != 0) hash ^= Model.GetHashCode();
    if (Firmware.Length != 0) hash ^= Firmware.GetHashCode();
    if (DeviceToken.Length != 0) hash ^= DeviceToken.GetHashCode();
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Model.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Model);
    }
    if (Firmware.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Firmware);
    }
    if (DeviceToken.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(DeviceToken);
    }
    if (DeviceId.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(DeviceId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Model.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
    }
    if (Firmware.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Firmware);
    }
    if (DeviceToken.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceToken);
    }
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetFirmwareLatestDeviceServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.Model.Length != 0) {
      Model = other.Model;
    }
    if (other.Firmware.Length != 0) {
      Firmware = other.Firmware;
    }
    if (other.DeviceToken.Length != 0) {
      DeviceToken = other.DeviceToken;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Model = input.ReadString();
          break;
        }
        case 18: {
          Firmware = input.ReadString();
          break;
        }
        case 26: {
          DeviceToken = input.ReadString();
          break;
        }
        case 34: {
          DeviceId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu bắt đầu cập nhật Firmware
/// </summary>
public sealed partial class DownloadFirmwareDeviceServerRequest : pb::IMessage<DownloadFirmwareDeviceServerRequest> {
  private static readonly pb::MessageParser<DownloadFirmwareDeviceServerRequest> _parser = new pb::MessageParser<DownloadFirmwareDeviceServerRequest>(() => new DownloadFirmwareDeviceServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DownloadFirmwareDeviceServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[80]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DownloadFirmwareDeviceServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DownloadFirmwareDeviceServerRequest(DownloadFirmwareDeviceServerRequest other) : this() {
    deviceId_ = other.deviceId_;
    model_ = other.model_;
    firmwareId_ = other.firmwareId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DownloadFirmwareDeviceServerRequest Clone() {
    return new DownloadFirmwareDeviceServerRequest(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "model" field.</summary>
  public const int ModelFieldNumber = 2;
  private string model_ = "";
  /// <summary>
  /// Để check lại device session có khớp model gửi lênh hay không?
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Model {
    get { return model_; }
    set {
      model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "firmwareId" field.</summary>
  public const int FirmwareIdFieldNumber = 3;
  private string firmwareId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string FirmwareId {
    get { return firmwareId_; }
    set {
      firmwareId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DownloadFirmwareDeviceServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DownloadFirmwareDeviceServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    if (Model != other.Model) return false;
    if (FirmwareId != other.FirmwareId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (Model.Length != 0) hash ^= Model.GetHashCode();
    if (FirmwareId.Length != 0) hash ^= FirmwareId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (Model.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Model);
    }
    if (FirmwareId.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(FirmwareId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (Model.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
    }
    if (FirmwareId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(FirmwareId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DownloadFirmwareDeviceServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.Model.Length != 0) {
      Model = other.Model;
    }
    if (other.FirmwareId.Length != 0) {
      FirmwareId = other.FirmwareId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
        case 18: {
          Model = input.ReadString();
          break;
        }
        case 26: {
          FirmwareId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu cập nhật Firmware
/// </summary>
public sealed partial class ForceUpdateFirmwareDeviceServerRequest : pb::IMessage<ForceUpdateFirmwareDeviceServerRequest> {
  private static readonly pb::MessageParser<ForceUpdateFirmwareDeviceServerRequest> _parser = new pb::MessageParser<ForceUpdateFirmwareDeviceServerRequest>(() => new ForceUpdateFirmwareDeviceServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ForceUpdateFirmwareDeviceServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[81]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ForceUpdateFirmwareDeviceServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ForceUpdateFirmwareDeviceServerRequest(ForceUpdateFirmwareDeviceServerRequest other) : this() {
    deviceId_ = other.deviceId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ForceUpdateFirmwareDeviceServerRequest Clone() {
    return new ForceUpdateFirmwareDeviceServerRequest(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ForceUpdateFirmwareDeviceServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ForceUpdateFirmwareDeviceServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ForceUpdateFirmwareDeviceServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class ForceUpdateFirmwareAllDevicesByPhoneServerRequest : pb::IMessage<ForceUpdateFirmwareAllDevicesByPhoneServerRequest> {
  private static readonly pb::MessageParser<ForceUpdateFirmwareAllDevicesByPhoneServerRequest> _parser = new pb::MessageParser<ForceUpdateFirmwareAllDevicesByPhoneServerRequest>(() => new ForceUpdateFirmwareAllDevicesByPhoneServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ForceUpdateFirmwareAllDevicesByPhoneServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[82]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ForceUpdateFirmwareAllDevicesByPhoneServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ForceUpdateFirmwareAllDevicesByPhoneServerRequest(ForceUpdateFirmwareAllDevicesByPhoneServerRequest other) : this() {
    customerPhone_ = other.customerPhone_;
    homeId_ = other.homeId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ForceUpdateFirmwareAllDevicesByPhoneServerRequest Clone() {
    return new ForceUpdateFirmwareAllDevicesByPhoneServerRequest(this);
  }

  /// <summary>Field number for the "customerPhone" field.</summary>
  public const int CustomerPhoneFieldNumber = 1;
  private string customerPhone_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CustomerPhone {
    get { return customerPhone_; }
    set {
      customerPhone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "homeId" field.</summary>
  public const int HomeIdFieldNumber = 2;
  private string homeId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string HomeId {
    get { return homeId_; }
    set {
      homeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ForceUpdateFirmwareAllDevicesByPhoneServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ForceUpdateFirmwareAllDevicesByPhoneServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CustomerPhone != other.CustomerPhone) return false;
    if (HomeId != other.HomeId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CustomerPhone.Length != 0) hash ^= CustomerPhone.GetHashCode();
    if (HomeId.Length != 0) hash ^= HomeId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CustomerPhone.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(CustomerPhone);
    }
    if (HomeId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(HomeId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CustomerPhone.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomerPhone);
    }
    if (HomeId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HomeId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ForceUpdateFirmwareAllDevicesByPhoneServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.CustomerPhone.Length != 0) {
      CustomerPhone = other.CustomerPhone;
    }
    if (other.HomeId.Length != 0) {
      HomeId = other.HomeId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          CustomerPhone = input.ReadString();
          break;
        }
        case 18: {
          HomeId = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class ForceUpdateFirmwareAllDevicesByPhoneServerResponse : pb::IMessage<ForceUpdateFirmwareAllDevicesByPhoneServerResponse> {
  private static readonly pb::MessageParser<ForceUpdateFirmwareAllDevicesByPhoneServerResponse> _parser = new pb::MessageParser<ForceUpdateFirmwareAllDevicesByPhoneServerResponse>(() => new ForceUpdateFirmwareAllDevicesByPhoneServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ForceUpdateFirmwareAllDevicesByPhoneServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[83]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ForceUpdateFirmwareAllDevicesByPhoneServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ForceUpdateFirmwareAllDevicesByPhoneServerResponse(ForceUpdateFirmwareAllDevicesByPhoneServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ForceUpdateFirmwareAllDevicesByPhoneServerResponse Clone() {
    return new ForceUpdateFirmwareAllDevicesByPhoneServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ForceUpdateFirmwareAllDevicesByPhoneServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ForceUpdateFirmwareAllDevicesByPhoneServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ForceUpdateFirmwareAllDevicesByPhoneServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi về danh danh thiết bị đã kết nối wifi
/// </summary>
public sealed partial class GetDevicesServerResponse : pb::IMessage<GetDevicesServerResponse> {
  private static readonly pb::MessageParser<GetDevicesServerResponse> _parser = new pb::MessageParser<GetDevicesServerResponse>(() => new GetDevicesServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetDevicesServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[84]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetDevicesServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetDevicesServerResponse(GetDevicesServerResponse other) : this() {
    rooms_ = other.rooms_.Clone();
    devices_ = other.devices_.Clone();
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetDevicesServerResponse Clone() {
    return new GetDevicesServerResponse(this);
  }

  /// <summary>Field number for the "rooms" field.</summary>
  public const int RoomsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::Room> _repeated_rooms_codec
      = pb::FieldCodec.ForMessage(10, global::Room.Parser);
  private readonly pbc::RepeatedField<global::Room> rooms_ = new pbc::RepeatedField<global::Room>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Room> Rooms {
    get { return rooms_; }
  }

  /// <summary>Field number for the "devices" field.</summary>
  public const int DevicesFieldNumber = 2;
  private static readonly pb::FieldCodec<global::Device> _repeated_devices_codec
      = pb::FieldCodec.ForMessage(18, global::Device.Parser);
  private readonly pbc::RepeatedField<global::Device> devices_ = new pbc::RepeatedField<global::Device>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Device> Devices {
    get { return devices_; }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetDevicesServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetDevicesServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!rooms_.Equals(other.rooms_)) return false;
    if(!devices_.Equals(other.devices_)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= rooms_.GetHashCode();
    hash ^= devices_.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    rooms_.WriteTo(output, _repeated_rooms_codec);
    devices_.WriteTo(output, _repeated_devices_codec);
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += rooms_.CalculateSize(_repeated_rooms_codec);
    size += devices_.CalculateSize(_repeated_devices_codec);
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetDevicesServerResponse other) {
    if (other == null) {
      return;
    }
    rooms_.Add(other.rooms_);
    devices_.Add(other.devices_);
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          rooms_.AddEntriesFrom(input, _repeated_rooms_codec);
          break;
        }
        case 18: {
          devices_.AddEntriesFrom(input, _repeated_devices_codec);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi 1 thiết bị đã kết nối wifi
/// </summary>
public sealed partial class GetDeviceServerResponse : pb::IMessage<GetDeviceServerResponse> {
  private static readonly pb::MessageParser<GetDeviceServerResponse> _parser = new pb::MessageParser<GetDeviceServerResponse>(() => new GetDeviceServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetDeviceServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[85]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetDeviceServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetDeviceServerResponse(GetDeviceServerResponse other) : this() {
    device_ = other.device_ != null ? other.device_.Clone() : null;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetDeviceServerResponse Clone() {
    return new GetDeviceServerResponse(this);
  }

  /// <summary>Field number for the "device" field.</summary>
  public const int DeviceFieldNumber = 1;
  private global::Device device_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Device Device {
    get { return device_; }
    set {
      device_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetDeviceServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetDeviceServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Device, other.Device)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (device_ != null) hash ^= Device.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (device_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Device);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (device_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Device);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetDeviceServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.device_ != null) {
      if (device_ == null) {
        Device = new global::Device();
      }
      Device.MergeFrom(other.Device);
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (device_ == null) {
            Device = new global::Device();
          }
          input.ReadMessage(Device);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin sau khi cập nhật danh sách thiết bị
/// </summary>
public sealed partial class AddDevicesServerResponse : pb::IMessage<AddDevicesServerResponse> {
  private static readonly pb::MessageParser<AddDevicesServerResponse> _parser = new pb::MessageParser<AddDevicesServerResponse>(() => new AddDevicesServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AddDevicesServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[86]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddDevicesServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddDevicesServerResponse(AddDevicesServerResponse other) : this() {
    devices_ = other.devices_.Clone();
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddDevicesServerResponse Clone() {
    return new AddDevicesServerResponse(this);
  }

  /// <summary>Field number for the "devices" field.</summary>
  public const int DevicesFieldNumber = 1;
  private static readonly pb::FieldCodec<global::Device> _repeated_devices_codec
      = pb::FieldCodec.ForMessage(10, global::Device.Parser);
  private readonly pbc::RepeatedField<global::Device> devices_ = new pbc::RepeatedField<global::Device>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Device> Devices {
    get { return devices_; }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AddDevicesServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AddDevicesServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!devices_.Equals(other.devices_)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= devices_.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    devices_.WriteTo(output, _repeated_devices_codec);
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += devices_.CalculateSize(_repeated_devices_codec);
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AddDevicesServerResponse other) {
    if (other == null) {
      return;
    }
    devices_.Add(other.devices_);
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          devices_.AddEntriesFrom(input, _repeated_devices_codec);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin sau khi cập nhật thiết bị
/// </summary>
public sealed partial class UpdateDeviceServerResponse : pb::IMessage<UpdateDeviceServerResponse> {
  private static readonly pb::MessageParser<UpdateDeviceServerResponse> _parser = new pb::MessageParser<UpdateDeviceServerResponse>(() => new UpdateDeviceServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateDeviceServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[87]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateDeviceServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateDeviceServerResponse(UpdateDeviceServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateDeviceServerResponse Clone() {
    return new UpdateDeviceServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateDeviceServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateDeviceServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateDeviceServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi xóa thiết bị
/// </summary>
public sealed partial class DeleteDeviceServerResponse : pb::IMessage<DeleteDeviceServerResponse> {
  private static readonly pb::MessageParser<DeleteDeviceServerResponse> _parser = new pb::MessageParser<DeleteDeviceServerResponse>(() => new DeleteDeviceServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeleteDeviceServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[88]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteDeviceServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteDeviceServerResponse(DeleteDeviceServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteDeviceServerResponse Clone() {
    return new DeleteDeviceServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeleteDeviceServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeleteDeviceServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeleteDeviceServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi về Firmware mới nhất
/// </summary>
public sealed partial class GetFirmwareLatestDeviceServerResponse : pb::IMessage<GetFirmwareLatestDeviceServerResponse> {
  private static readonly pb::MessageParser<GetFirmwareLatestDeviceServerResponse> _parser = new pb::MessageParser<GetFirmwareLatestDeviceServerResponse>(() => new GetFirmwareLatestDeviceServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetFirmwareLatestDeviceServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[89]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetFirmwareLatestDeviceServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetFirmwareLatestDeviceServerResponse(GetFirmwareLatestDeviceServerResponse other) : this() {
    firmwareVersion_ = other.firmwareVersion_;
    firmwareId_ = other.firmwareId_;
    isDownloading_ = other.isDownloading_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetFirmwareLatestDeviceServerResponse Clone() {
    return new GetFirmwareLatestDeviceServerResponse(this);
  }

  /// <summary>Field number for the "firmwareVersion" field.</summary>
  public const int FirmwareVersionFieldNumber = 1;
  private string firmwareVersion_ = "";
  /// <summary>
  /// Firmware: 1.0.1
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string FirmwareVersion {
    get { return firmwareVersion_; }
    set {
      firmwareVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "firmwareId" field.</summary>
  public const int FirmwareIdFieldNumber = 2;
  private string firmwareId_ = "";
  /// <summary>
  /// Id cần download
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string FirmwareId {
    get { return firmwareId_; }
    set {
      firmwareId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "isDownloading" field.</summary>
  public const int IsDownloadingFieldNumber = 3;
  private bool isDownloading_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsDownloading {
    get { return isDownloading_; }
    set {
      isDownloading_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetFirmwareLatestDeviceServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetFirmwareLatestDeviceServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (FirmwareVersion != other.FirmwareVersion) return false;
    if (FirmwareId != other.FirmwareId) return false;
    if (IsDownloading != other.IsDownloading) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (FirmwareVersion.Length != 0) hash ^= FirmwareVersion.GetHashCode();
    if (FirmwareId.Length != 0) hash ^= FirmwareId.GetHashCode();
    if (IsDownloading != false) hash ^= IsDownloading.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (FirmwareVersion.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(FirmwareVersion);
    }
    if (FirmwareId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(FirmwareId);
    }
    if (IsDownloading != false) {
      output.WriteRawTag(24);
      output.WriteBool(IsDownloading);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (FirmwareVersion.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(FirmwareVersion);
    }
    if (FirmwareId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(FirmwareId);
    }
    if (IsDownloading != false) {
      size += 1 + 1;
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetFirmwareLatestDeviceServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.FirmwareVersion.Length != 0) {
      FirmwareVersion = other.FirmwareVersion;
    }
    if (other.FirmwareId.Length != 0) {
      FirmwareId = other.FirmwareId;
    }
    if (other.IsDownloading != false) {
      IsDownloading = other.IsDownloading;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          FirmwareVersion = input.ReadString();
          break;
        }
        case 18: {
          FirmwareId = input.ReadString();
          break;
        }
        case 24: {
          IsDownloading = input.ReadBool();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin bắt đầu cập nhật Firmware mới nhất
/// </summary>
public sealed partial class DownloadFirmwareDeviceServerResponse : pb::IMessage<DownloadFirmwareDeviceServerResponse> {
  private static readonly pb::MessageParser<DownloadFirmwareDeviceServerResponse> _parser = new pb::MessageParser<DownloadFirmwareDeviceServerResponse>(() => new DownloadFirmwareDeviceServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DownloadFirmwareDeviceServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[90]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DownloadFirmwareDeviceServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DownloadFirmwareDeviceServerResponse(DownloadFirmwareDeviceServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DownloadFirmwareDeviceServerResponse Clone() {
    return new DownloadFirmwareDeviceServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DownloadFirmwareDeviceServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DownloadFirmwareDeviceServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DownloadFirmwareDeviceServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin cập nhật Firmware
/// </summary>
public sealed partial class ForceUpdateFirmwareDeviceServerResponse : pb::IMessage<ForceUpdateFirmwareDeviceServerResponse> {
  private static readonly pb::MessageParser<ForceUpdateFirmwareDeviceServerResponse> _parser = new pb::MessageParser<ForceUpdateFirmwareDeviceServerResponse>(() => new ForceUpdateFirmwareDeviceServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ForceUpdateFirmwareDeviceServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[91]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ForceUpdateFirmwareDeviceServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ForceUpdateFirmwareDeviceServerResponse(ForceUpdateFirmwareDeviceServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ForceUpdateFirmwareDeviceServerResponse Clone() {
    return new ForceUpdateFirmwareDeviceServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ForceUpdateFirmwareDeviceServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ForceUpdateFirmwareDeviceServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ForceUpdateFirmwareDeviceServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu đăng ký thiết bị sản xuất
/// </summary>
public sealed partial class RegisterDeviceServerRequest : pb::IMessage<RegisterDeviceServerRequest> {
  private static readonly pb::MessageParser<RegisterDeviceServerRequest> _parser = new pb::MessageParser<RegisterDeviceServerRequest>(() => new RegisterDeviceServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RegisterDeviceServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[92]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RegisterDeviceServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RegisterDeviceServerRequest(RegisterDeviceServerRequest other) : this() {
    manToken_ = other.manToken_;
    hardwareId_ = other.hardwareId_;
    model_ = other.model_;
    firmware_ = other.firmware_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RegisterDeviceServerRequest Clone() {
    return new RegisterDeviceServerRequest(this);
  }

  /// <summary>Field number for the "manToken" field.</summary>
  public const int ManTokenFieldNumber = 1;
  private string manToken_ = "";
  /// <summary>
  /// Mã sản xuất
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ManToken {
    get { return manToken_; }
    set {
      manToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "hardwareId" field.</summary>
  public const int HardwareIdFieldNumber = 2;
  private string hardwareId_ = "";
  /// <summary>
  /// HardwareId của thiết bị cần đăng ký
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string HardwareId {
    get { return hardwareId_; }
    set {
      hardwareId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "model" field.</summary>
  public const int ModelFieldNumber = 3;
  private string model_ = "";
  /// <summary>
  /// Model
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Model {
    get { return model_; }
    set {
      model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "firmware" field.</summary>
  public const int FirmwareFieldNumber = 4;
  private string firmware_ = "";
  /// <summary>
  /// Firmware
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Firmware {
    get { return firmware_; }
    set {
      firmware_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RegisterDeviceServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RegisterDeviceServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ManToken != other.ManToken) return false;
    if (HardwareId != other.HardwareId) return false;
    if (Model != other.Model) return false;
    if (Firmware != other.Firmware) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ManToken.Length != 0) hash ^= ManToken.GetHashCode();
    if (HardwareId.Length != 0) hash ^= HardwareId.GetHashCode();
    if (Model.Length != 0) hash ^= Model.GetHashCode();
    if (Firmware.Length != 0) hash ^= Firmware.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ManToken.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ManToken);
    }
    if (HardwareId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(HardwareId);
    }
    if (Model.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Model);
    }
    if (Firmware.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Firmware);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ManToken.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ManToken);
    }
    if (HardwareId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HardwareId);
    }
    if (Model.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
    }
    if (Firmware.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Firmware);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RegisterDeviceServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.ManToken.Length != 0) {
      ManToken = other.ManToken;
    }
    if (other.HardwareId.Length != 0) {
      HardwareId = other.HardwareId;
    }
    if (other.Model.Length != 0) {
      Model = other.Model;
    }
    if (other.Firmware.Length != 0) {
      Firmware = other.Firmware;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ManToken = input.ReadString();
          break;
        }
        case 18: {
          HardwareId = input.ReadString();
          break;
        }
        case 26: {
          Model = input.ReadString();
          break;
        }
        case 34: {
          Firmware = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi đăng ký thiết bị sản xuất
/// </summary>
public sealed partial class RegisterDeviceServerResponse : pb::IMessage<RegisterDeviceServerResponse> {
  private static readonly pb::MessageParser<RegisterDeviceServerResponse> _parser = new pb::MessageParser<RegisterDeviceServerResponse>(() => new RegisterDeviceServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RegisterDeviceServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[93]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RegisterDeviceServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RegisterDeviceServerResponse(RegisterDeviceServerResponse other) : this() {
    hardwareId_ = other.hardwareId_;
    deviceToken_ = other.deviceToken_;
    wsEnpoint_ = other.wsEnpoint_;
    dataType_ = other.dataType_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RegisterDeviceServerResponse Clone() {
    return new RegisterDeviceServerResponse(this);
  }

  /// <summary>Field number for the "hardwareId" field.</summary>
  public const int HardwareIdFieldNumber = 1;
  private string hardwareId_ = "";
  /// <summary>
  /// HardwareId của thiết bị đã đăng ký
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string HardwareId {
    get { return hardwareId_; }
    set {
      hardwareId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "deviceToken" field.</summary>
  public const int DeviceTokenFieldNumber = 2;
  private string deviceToken_ = "";
  /// <summary>
  /// deviceToken nhận được sau đăng ký
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceToken {
    get { return deviceToken_; }
    set {
      deviceToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "wsEnpoint" field.</summary>
  public const int WsEnpointFieldNumber = 3;
  private string wsEnpoint_ = "";
  /// <summary>
  /// return ws endpoint for device
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string WsEnpoint {
    get { return wsEnpoint_; }
    set {
      wsEnpoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "dataType" field.</summary>
  public const int DataTypeFieldNumber = 4;
  private global::DataType dataType_ = global::DataType.Binaries;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DataType DataType {
    get { return dataType_; }
    set {
      dataType_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RegisterDeviceServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RegisterDeviceServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (HardwareId != other.HardwareId) return false;
    if (DeviceToken != other.DeviceToken) return false;
    if (WsEnpoint != other.WsEnpoint) return false;
    if (DataType != other.DataType) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HardwareId.Length != 0) hash ^= HardwareId.GetHashCode();
    if (DeviceToken.Length != 0) hash ^= DeviceToken.GetHashCode();
    if (WsEnpoint.Length != 0) hash ^= WsEnpoint.GetHashCode();
    if (DataType != global::DataType.Binaries) hash ^= DataType.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (HardwareId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(HardwareId);
    }
    if (DeviceToken.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(DeviceToken);
    }
    if (WsEnpoint.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(WsEnpoint);
    }
    if (DataType != global::DataType.Binaries) {
      output.WriteRawTag(32);
      output.WriteEnum((int) DataType);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HardwareId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HardwareId);
    }
    if (DeviceToken.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceToken);
    }
    if (WsEnpoint.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(WsEnpoint);
    }
    if (DataType != global::DataType.Binaries) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DataType);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RegisterDeviceServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.HardwareId.Length != 0) {
      HardwareId = other.HardwareId;
    }
    if (other.DeviceToken.Length != 0) {
      DeviceToken = other.DeviceToken;
    }
    if (other.WsEnpoint.Length != 0) {
      WsEnpoint = other.WsEnpoint;
    }
    if (other.DataType != global::DataType.Binaries) {
      DataType = other.DataType;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          HardwareId = input.ReadString();
          break;
        }
        case 18: {
          DeviceToken = input.ReadString();
          break;
        }
        case 26: {
          WsEnpoint = input.ReadString();
          break;
        }
        case 32: {
          DataType = (global::DataType) input.ReadEnum();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

public sealed partial class UpdateWSEndpointDeviceServerRequest : pb::IMessage<UpdateWSEndpointDeviceServerRequest> {
  private static readonly pb::MessageParser<UpdateWSEndpointDeviceServerRequest> _parser = new pb::MessageParser<UpdateWSEndpointDeviceServerRequest>(() => new UpdateWSEndpointDeviceServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateWSEndpointDeviceServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[94]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateWSEndpointDeviceServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateWSEndpointDeviceServerRequest(UpdateWSEndpointDeviceServerRequest other) : this() {
    deviceId_ = other.deviceId_;
    wsEnpoint_ = other.wsEnpoint_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateWSEndpointDeviceServerRequest Clone() {
    return new UpdateWSEndpointDeviceServerRequest(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "wsEnpoint" field.</summary>
  public const int WsEnpointFieldNumber = 2;
  private string wsEnpoint_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string WsEnpoint {
    get { return wsEnpoint_; }
    set {
      wsEnpoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateWSEndpointDeviceServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateWSEndpointDeviceServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    if (WsEnpoint != other.WsEnpoint) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (WsEnpoint.Length != 0) hash ^= WsEnpoint.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (WsEnpoint.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(WsEnpoint);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (WsEnpoint.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(WsEnpoint);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateWSEndpointDeviceServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.WsEnpoint.Length != 0) {
      WsEnpoint = other.WsEnpoint;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
        case 18: {
          WsEnpoint = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class UpdateWSEndpointDeviceServerResponse : pb::IMessage<UpdateWSEndpointDeviceServerResponse> {
  private static readonly pb::MessageParser<UpdateWSEndpointDeviceServerResponse> _parser = new pb::MessageParser<UpdateWSEndpointDeviceServerResponse>(() => new UpdateWSEndpointDeviceServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateWSEndpointDeviceServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[95]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateWSEndpointDeviceServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateWSEndpointDeviceServerResponse(UpdateWSEndpointDeviceServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateWSEndpointDeviceServerResponse Clone() {
    return new UpdateWSEndpointDeviceServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateWSEndpointDeviceServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateWSEndpointDeviceServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateWSEndpointDeviceServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin phần trăm cập nhật firmware cho tất cả thiết bị runtime
/// </summary>
public sealed partial class ProgressUpdateFirmwareOnChangedDeviceServerResponse : pb::IMessage<ProgressUpdateFirmwareOnChangedDeviceServerResponse> {
  private static readonly pb::MessageParser<ProgressUpdateFirmwareOnChangedDeviceServerResponse> _parser = new pb::MessageParser<ProgressUpdateFirmwareOnChangedDeviceServerResponse>(() => new ProgressUpdateFirmwareOnChangedDeviceServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ProgressUpdateFirmwareOnChangedDeviceServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[96]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ProgressUpdateFirmwareOnChangedDeviceServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ProgressUpdateFirmwareOnChangedDeviceServerResponse(ProgressUpdateFirmwareOnChangedDeviceServerResponse other) : this() {
    deviceId_ = other.deviceId_;
    percent_ = other.percent_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ProgressUpdateFirmwareOnChangedDeviceServerResponse Clone() {
    return new ProgressUpdateFirmwareOnChangedDeviceServerResponse(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  /// <summary>
  /// DeviceId cho việc đồng bộ tài khoản nhiều thiết bị
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "percent" field.</summary>
  public const int PercentFieldNumber = 2;
  private uint percent_;
  /// <summary>
  /// DeviceId cho việc đồng bộ tài khoản nhiều thiết bị
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Percent {
    get { return percent_; }
    set {
      percent_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ProgressUpdateFirmwareOnChangedDeviceServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ProgressUpdateFirmwareOnChangedDeviceServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    if (Percent != other.Percent) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (Percent != 0) hash ^= Percent.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (Percent != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(Percent);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (Percent != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Percent);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ProgressUpdateFirmwareOnChangedDeviceServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.Percent != 0) {
      Percent = other.Percent;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
        case 16: {
          Percent = input.ReadUInt32();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi content firmware theo packed cho thiết bị
/// </summary>
public sealed partial class DownloadFirmwareOnChangedDeviceServerResponse : pb::IMessage<DownloadFirmwareOnChangedDeviceServerResponse> {
  private static readonly pb::MessageParser<DownloadFirmwareOnChangedDeviceServerResponse> _parser = new pb::MessageParser<DownloadFirmwareOnChangedDeviceServerResponse>(() => new DownloadFirmwareOnChangedDeviceServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DownloadFirmwareOnChangedDeviceServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[97]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DownloadFirmwareOnChangedDeviceServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DownloadFirmwareOnChangedDeviceServerResponse(DownloadFirmwareOnChangedDeviceServerResponse other) : this() {
    deviceId_ = other.deviceId_;
    hardwareId_ = other.hardwareId_;
    data_ = other.data_;
    dataSize_ = other.dataSize_;
    pageIndex_ = other.pageIndex_;
    totalPage_ = other.totalPage_;
    pageSize_ = other.pageSize_;
    fileSize_ = other.fileSize_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DownloadFirmwareOnChangedDeviceServerResponse Clone() {
    return new DownloadFirmwareOnChangedDeviceServerResponse(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  /// <summary>
  /// DeviceId cho việc đồng bộ tài khoản nhiều thiết bị
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "hardwareId" field.</summary>
  public const int HardwareIdFieldNumber = 2;
  private string hardwareId_ = "";
  /// <summary>
  /// HardwareId thiết bị khi qua Root
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string HardwareId {
    get { return hardwareId_; }
    set {
      hardwareId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "data" field.</summary>
  public const int DataFieldNumber = 3;
  private pb::ByteString data_ = pb::ByteString.Empty;
  /// <summary>
  /// Bytes data
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Data {
    get { return data_; }
    set {
      data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "dataSize" field.</summary>
  public const int DataSizeFieldNumber = 4;
  private uint dataSize_;
  /// <summary>
  ///  Kích cỡ thực của dữ liệu trả về
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint DataSize {
    get { return dataSize_; }
    set {
      dataSize_ = value;
    }
  }

  /// <summary>Field number for the "pageIndex" field.</summary>
  public const int PageIndexFieldNumber = 5;
  private uint pageIndex_;
  /// <summary>
  /// Vị trí index hiện tại bắt đầu từ 0
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PageIndex {
    get { return pageIndex_; }
    set {
      pageIndex_ = value;
    }
  }

  /// <summary>Field number for the "totalPage" field.</summary>
  public const int TotalPageFieldNumber = 6;
  private uint totalPage_;
  /// <summary>
  /// Tổng page
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TotalPage {
    get { return totalPage_; }
    set {
      totalPage_ = value;
    }
  }

  /// <summary>Field number for the "pageSize" field.</summary>
  public const int PageSizeFieldNumber = 7;
  private uint pageSize_;
  /// <summary>
  /// Kích cỡ của array buffer(default = 1024)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PageSize {
    get { return pageSize_; }
    set {
      pageSize_ = value;
    }
  }

  /// <summary>Field number for the "fileSize" field.</summary>
  public const int FileSizeFieldNumber = 8;
  private uint fileSize_;
  /// <summary>
  /// Kích cỡ file đơn vị là byte
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint FileSize {
    get { return fileSize_; }
    set {
      fileSize_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DownloadFirmwareOnChangedDeviceServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DownloadFirmwareOnChangedDeviceServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    if (HardwareId != other.HardwareId) return false;
    if (Data != other.Data) return false;
    if (DataSize != other.DataSize) return false;
    if (PageIndex != other.PageIndex) return false;
    if (TotalPage != other.TotalPage) return false;
    if (PageSize != other.PageSize) return false;
    if (FileSize != other.FileSize) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (HardwareId.Length != 0) hash ^= HardwareId.GetHashCode();
    if (Data.Length != 0) hash ^= Data.GetHashCode();
    if (DataSize != 0) hash ^= DataSize.GetHashCode();
    if (PageIndex != 0) hash ^= PageIndex.GetHashCode();
    if (TotalPage != 0) hash ^= TotalPage.GetHashCode();
    if (PageSize != 0) hash ^= PageSize.GetHashCode();
    if (FileSize != 0) hash ^= FileSize.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (HardwareId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(HardwareId);
    }
    if (Data.Length != 0) {
      output.WriteRawTag(26);
      output.WriteBytes(Data);
    }
    if (DataSize != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(DataSize);
    }
    if (PageIndex != 0) {
      output.WriteRawTag(40);
      output.WriteUInt32(PageIndex);
    }
    if (TotalPage != 0) {
      output.WriteRawTag(48);
      output.WriteUInt32(TotalPage);
    }
    if (PageSize != 0) {
      output.WriteRawTag(56);
      output.WriteUInt32(PageSize);
    }
    if (FileSize != 0) {
      output.WriteRawTag(64);
      output.WriteUInt32(FileSize);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (HardwareId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HardwareId);
    }
    if (Data.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
    }
    if (DataSize != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DataSize);
    }
    if (PageIndex != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PageIndex);
    }
    if (TotalPage != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalPage);
    }
    if (PageSize != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PageSize);
    }
    if (FileSize != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FileSize);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DownloadFirmwareOnChangedDeviceServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.HardwareId.Length != 0) {
      HardwareId = other.HardwareId;
    }
    if (other.Data.Length != 0) {
      Data = other.Data;
    }
    if (other.DataSize != 0) {
      DataSize = other.DataSize;
    }
    if (other.PageIndex != 0) {
      PageIndex = other.PageIndex;
    }
    if (other.TotalPage != 0) {
      TotalPage = other.TotalPage;
    }
    if (other.PageSize != 0) {
      PageSize = other.PageSize;
    }
    if (other.FileSize != 0) {
      FileSize = other.FileSize;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
        case 18: {
          HardwareId = input.ReadString();
          break;
        }
        case 26: {
          Data = input.ReadBytes();
          break;
        }
        case 32: {
          DataSize = input.ReadUInt32();
          break;
        }
        case 40: {
          PageIndex = input.ReadUInt32();
          break;
        }
        case 48: {
          TotalPage = input.ReadUInt32();
          break;
        }
        case 56: {
          PageSize = input.ReadUInt32();
          break;
        }
        case 64: {
          FileSize = input.ReadUInt32();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin kết nối của các thiết bị runtime
/// </summary>
public sealed partial class DeviceOnChangedDeviceServerResponse : pb::IMessage<DeviceOnChangedDeviceServerResponse> {
  private static readonly pb::MessageParser<DeviceOnChangedDeviceServerResponse> _parser = new pb::MessageParser<DeviceOnChangedDeviceServerResponse>(() => new DeviceOnChangedDeviceServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeviceOnChangedDeviceServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[98]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeviceOnChangedDeviceServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeviceOnChangedDeviceServerResponse(DeviceOnChangedDeviceServerResponse other) : this() {
    deviceId_ = other.deviceId_;
    connectionState_ = other.connectionState_;
    totalTimeOnOrgin_ = other.totalTimeOnOrgin_;
    totalTimeOnYear_ = other.totalTimeOnYear_;
    totalTimeOnMonth_ = other.totalTimeOnMonth_;
    timeOnLastDate_ = other.timeOnLastDate_;
    timeOffLastDate_ = other.timeOffLastDate_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeviceOnChangedDeviceServerResponse Clone() {
    return new DeviceOnChangedDeviceServerResponse(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  /// <summary>
  /// DeviceId cho việc đồng bộ tài khoản nhiều thiết bị
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "connectionState" field.</summary>
  public const int ConnectionStateFieldNumber = 2;
  private global::ConnectionState connectionState_ = global::ConnectionState.Offline;
  /// <summary>
  /// Offline/Online/Disconect
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ConnectionState ConnectionState {
    get { return connectionState_; }
    set {
      connectionState_ = value;
    }
  }

  /// <summary>Field number for the "totalTimeOnOrgin" field.</summary>
  public const int TotalTimeOnOrginFieldNumber = 3;
  private uint totalTimeOnOrgin_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TotalTimeOnOrgin {
    get { return totalTimeOnOrgin_; }
    set {
      totalTimeOnOrgin_ = value;
    }
  }

  /// <summary>Field number for the "totalTimeOnYear" field.</summary>
  public const int TotalTimeOnYearFieldNumber = 4;
  private uint totalTimeOnYear_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TotalTimeOnYear {
    get { return totalTimeOnYear_; }
    set {
      totalTimeOnYear_ = value;
    }
  }

  /// <summary>Field number for the "totalTimeOnMonth" field.</summary>
  public const int TotalTimeOnMonthFieldNumber = 5;
  private uint totalTimeOnMonth_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TotalTimeOnMonth {
    get { return totalTimeOnMonth_; }
    set {
      totalTimeOnMonth_ = value;
    }
  }

  /// <summary>Field number for the "timeOnLastDate" field.</summary>
  public const int TimeOnLastDateFieldNumber = 6;
  private uint timeOnLastDate_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TimeOnLastDate {
    get { return timeOnLastDate_; }
    set {
      timeOnLastDate_ = value;
    }
  }

  /// <summary>Field number for the "timeOffLastDate" field.</summary>
  public const int TimeOffLastDateFieldNumber = 7;
  private uint timeOffLastDate_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TimeOffLastDate {
    get { return timeOffLastDate_; }
    set {
      timeOffLastDate_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeviceOnChangedDeviceServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeviceOnChangedDeviceServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    if (ConnectionState != other.ConnectionState) return false;
    if (TotalTimeOnOrgin != other.TotalTimeOnOrgin) return false;
    if (TotalTimeOnYear != other.TotalTimeOnYear) return false;
    if (TotalTimeOnMonth != other.TotalTimeOnMonth) return false;
    if (TimeOnLastDate != other.TimeOnLastDate) return false;
    if (TimeOffLastDate != other.TimeOffLastDate) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (ConnectionState != global::ConnectionState.Offline) hash ^= ConnectionState.GetHashCode();
    if (TotalTimeOnOrgin != 0) hash ^= TotalTimeOnOrgin.GetHashCode();
    if (TotalTimeOnYear != 0) hash ^= TotalTimeOnYear.GetHashCode();
    if (TotalTimeOnMonth != 0) hash ^= TotalTimeOnMonth.GetHashCode();
    if (TimeOnLastDate != 0) hash ^= TimeOnLastDate.GetHashCode();
    if (TimeOffLastDate != 0) hash ^= TimeOffLastDate.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (ConnectionState != global::ConnectionState.Offline) {
      output.WriteRawTag(16);
      output.WriteEnum((int) ConnectionState);
    }
    if (TotalTimeOnOrgin != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(TotalTimeOnOrgin);
    }
    if (TotalTimeOnYear != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(TotalTimeOnYear);
    }
    if (TotalTimeOnMonth != 0) {
      output.WriteRawTag(40);
      output.WriteUInt32(TotalTimeOnMonth);
    }
    if (TimeOnLastDate != 0) {
      output.WriteRawTag(48);
      output.WriteUInt32(TimeOnLastDate);
    }
    if (TimeOffLastDate != 0) {
      output.WriteRawTag(56);
      output.WriteUInt32(TimeOffLastDate);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (ConnectionState != global::ConnectionState.Offline) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ConnectionState);
    }
    if (TotalTimeOnOrgin != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalTimeOnOrgin);
    }
    if (TotalTimeOnYear != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalTimeOnYear);
    }
    if (TotalTimeOnMonth != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalTimeOnMonth);
    }
    if (TimeOnLastDate != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeOnLastDate);
    }
    if (TimeOffLastDate != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeOffLastDate);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeviceOnChangedDeviceServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.ConnectionState != global::ConnectionState.Offline) {
      ConnectionState = other.ConnectionState;
    }
    if (other.TotalTimeOnOrgin != 0) {
      TotalTimeOnOrgin = other.TotalTimeOnOrgin;
    }
    if (other.TotalTimeOnYear != 0) {
      TotalTimeOnYear = other.TotalTimeOnYear;
    }
    if (other.TotalTimeOnMonth != 0) {
      TotalTimeOnMonth = other.TotalTimeOnMonth;
    }
    if (other.TimeOnLastDate != 0) {
      TimeOnLastDate = other.TimeOnLastDate;
    }
    if (other.TimeOffLastDate != 0) {
      TimeOffLastDate = other.TimeOffLastDate;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
        case 16: {
          ConnectionState = (global::ConnectionState) input.ReadEnum();
          break;
        }
        case 24: {
          TotalTimeOnOrgin = input.ReadUInt32();
          break;
        }
        case 32: {
          TotalTimeOnYear = input.ReadUInt32();
          break;
        }
        case 40: {
          TotalTimeOnMonth = input.ReadUInt32();
          break;
        }
        case 48: {
          TimeOnLastDate = input.ReadUInt32();
          break;
        }
        case 56: {
          TimeOffLastDate = input.ReadUInt32();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
///----- Yêu cầu về thông tin công tắc -----//
/// Nhận được yêu cầu gửi thông tin danh sách công tắc
/// </summary>
public sealed partial class GetSwitchersServerRequest : pb::IMessage<GetSwitchersServerRequest> {
  private static readonly pb::MessageParser<GetSwitchersServerRequest> _parser = new pb::MessageParser<GetSwitchersServerRequest>(() => new GetSwitchersServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetSwitchersServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[99]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetSwitchersServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetSwitchersServerRequest(GetSwitchersServerRequest other) : this() {
    deviceId_ = other.deviceId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetSwitchersServerRequest Clone() {
    return new GetSwitchersServerRequest(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  /// <summary>
  /// Id của deviceId
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetSwitchersServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetSwitchersServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetSwitchersServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu trả về thông tin của 1 nút công tắc
/// </summary>
public sealed partial class GetSwitcherServerRequest : pb::IMessage<GetSwitcherServerRequest> {
  private static readonly pb::MessageParser<GetSwitcherServerRequest> _parser = new pb::MessageParser<GetSwitcherServerRequest>(() => new GetSwitcherServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetSwitcherServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[100]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetSwitcherServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetSwitcherServerRequest(GetSwitcherServerRequest other) : this() {
    switcherId_ = other.switcherId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetSwitcherServerRequest Clone() {
    return new GetSwitcherServerRequest(this);
  }

  /// <summary>Field number for the "switcherId" field.</summary>
  public const int SwitcherIdFieldNumber = 1;
  private string switcherId_ = "";
  /// <summary>
  /// Id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SwitcherId {
    get { return switcherId_; }
    set {
      switcherId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetSwitcherServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetSwitcherServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SwitcherId != other.SwitcherId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SwitcherId.Length != 0) hash ^= SwitcherId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SwitcherId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(SwitcherId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SwitcherId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SwitcherId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetSwitcherServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.SwitcherId.Length != 0) {
      SwitcherId = other.SwitcherId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          SwitcherId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu trả về danh sách icons của của công tắc
/// </summary>
public sealed partial class GetIconSwitchersServerRequest : pb::IMessage<GetIconSwitchersServerRequest> {
  private static readonly pb::MessageParser<GetIconSwitchersServerRequest> _parser = new pb::MessageParser<GetIconSwitchersServerRequest>(() => new GetIconSwitchersServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetIconSwitchersServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[101]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetIconSwitchersServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetIconSwitchersServerRequest(GetIconSwitchersServerRequest other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetIconSwitchersServerRequest Clone() {
    return new GetIconSwitchersServerRequest(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetIconSwitchersServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetIconSwitchersServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetIconSwitchersServerRequest other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu trả về nhật ký của 1 công tắc
/// </summary>
public sealed partial class GetLogSwitcherServerRequest : pb::IMessage<GetLogSwitcherServerRequest> {
  private static readonly pb::MessageParser<GetLogSwitcherServerRequest> _parser = new pb::MessageParser<GetLogSwitcherServerRequest>(() => new GetLogSwitcherServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetLogSwitcherServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[102]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetLogSwitcherServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetLogSwitcherServerRequest(GetLogSwitcherServerRequest other) : this() {
    deviceId_ = other.deviceId_;
    switcher_ = other.switcher_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetLogSwitcherServerRequest Clone() {
    return new GetLogSwitcherServerRequest(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  /// <summary>
  /// Id của thiết bị
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "switcher" field.</summary>
  public const int SwitcherFieldNumber = 2;
  private uint switcher_;
  /// <summary>
  /// Công tắc 1,2,3,4
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Switcher {
    get { return switcher_; }
    set {
      switcher_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetLogSwitcherServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetLogSwitcherServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    if (Switcher != other.Switcher) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (Switcher != 0) hash ^= Switcher.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (Switcher != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(Switcher);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (Switcher != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Switcher);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetLogSwitcherServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.Switcher != 0) {
      Switcher = other.Switcher;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
        case 16: {
          Switcher = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu cập nhật 1 nút công tắc
/// </summary>
public sealed partial class UpdateSwitcherServerRequest : pb::IMessage<UpdateSwitcherServerRequest> {
  private static readonly pb::MessageParser<UpdateSwitcherServerRequest> _parser = new pb::MessageParser<UpdateSwitcherServerRequest>(() => new UpdateSwitcherServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateSwitcherServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[103]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateSwitcherServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateSwitcherServerRequest(UpdateSwitcherServerRequest other) : this() {
    switcher_ = other.switcher_ != null ? other.switcher_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateSwitcherServerRequest Clone() {
    return new UpdateSwitcherServerRequest(this);
  }

  /// <summary>Field number for the "switcher" field.</summary>
  public const int SwitcherFieldNumber = 1;
  private global::Switcher switcher_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Switcher Switcher {
    get { return switcher_; }
    set {
      switcher_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateSwitcherServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateSwitcherServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Switcher, other.Switcher)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (switcher_ != null) hash ^= Switcher.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (switcher_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Switcher);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (switcher_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Switcher);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateSwitcherServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.switcher_ != null) {
      if (switcher_ == null) {
        Switcher = new global::Switcher();
      }
      Switcher.MergeFrom(other.Switcher);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (switcher_ == null) {
            Switcher = new global::Switcher();
          }
          input.ReadMessage(Switcher);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu thay đổi On/Off thiết bị
/// </summary>
public sealed partial class SwitcherServerRequest : pb::IMessage<SwitcherServerRequest> {
  private static readonly pb::MessageParser<SwitcherServerRequest> _parser = new pb::MessageParser<SwitcherServerRequest>(() => new SwitcherServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SwitcherServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[104]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SwitcherServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SwitcherServerRequest(SwitcherServerRequest other) : this() {
    deviceId_ = other.deviceId_;
    switcher_ = other.switcher_;
    powerState_ = other.powerState_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SwitcherServerRequest Clone() {
    return new SwitcherServerRequest(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  /// <summary>
  /// Id của thiết bị
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "switcher" field.</summary>
  public const int SwitcherFieldNumber = 2;
  private uint switcher_;
  /// <summary>
  /// Công tắc 1,2,3,4
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Switcher {
    get { return switcher_; }
    set {
      switcher_ = value;
    }
  }

  /// <summary>Field number for the "powerState" field.</summary>
  public const int PowerStateFieldNumber = 3;
  private global::PowerState powerState_ = global::PowerState.Off;
  /// <summary>
  /// Trạng thái ON/OFF
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PowerState PowerState {
    get { return powerState_; }
    set {
      powerState_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SwitcherServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SwitcherServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    if (Switcher != other.Switcher) return false;
    if (PowerState != other.PowerState) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (Switcher != 0) hash ^= Switcher.GetHashCode();
    if (PowerState != global::PowerState.Off) hash ^= PowerState.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (Switcher != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(Switcher);
    }
    if (PowerState != global::PowerState.Off) {
      output.WriteRawTag(24);
      output.WriteEnum((int) PowerState);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (Switcher != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Switcher);
    }
    if (PowerState != global::PowerState.Off) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PowerState);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SwitcherServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.Switcher != 0) {
      Switcher = other.Switcher;
    }
    if (other.PowerState != global::PowerState.Off) {
      PowerState = other.PowerState;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
        case 16: {
          Switcher = input.ReadUInt32();
          break;
        }
        case 24: {
          PowerState = (global::PowerState) input.ReadEnum();
          break;
        }
      }
    }
  }

}

/// <summary>
///----- Yêu cầu về lịch hẹn công tắc -----//
/// Nhận được yêu cầu gửi danh sách lịch hẹn giờ của 1 công tắc
/// </summary>
public sealed partial class GetSwitcherSchedulesServerRequest : pb::IMessage<GetSwitcherSchedulesServerRequest> {
  private static readonly pb::MessageParser<GetSwitcherSchedulesServerRequest> _parser = new pb::MessageParser<GetSwitcherSchedulesServerRequest>(() => new GetSwitcherSchedulesServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetSwitcherSchedulesServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[105]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetSwitcherSchedulesServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetSwitcherSchedulesServerRequest(GetSwitcherSchedulesServerRequest other) : this() {
    switcherId_ = other.switcherId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetSwitcherSchedulesServerRequest Clone() {
    return new GetSwitcherSchedulesServerRequest(this);
  }

  /// <summary>Field number for the "switcherId" field.</summary>
  public const int SwitcherIdFieldNumber = 1;
  private string switcherId_ = "";
  /// <summary>
  /// Id của switcher
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SwitcherId {
    get { return switcherId_; }
    set {
      switcherId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetSwitcherSchedulesServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetSwitcherSchedulesServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SwitcherId != other.SwitcherId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SwitcherId.Length != 0) hash ^= SwitcherId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SwitcherId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(SwitcherId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SwitcherId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SwitcherId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetSwitcherSchedulesServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.SwitcherId.Length != 0) {
      SwitcherId = other.SwitcherId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          SwitcherId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu gửi thông tin chi tiết 1 lịch của 1 công tắc
/// </summary>
public sealed partial class GetSwitcherScheduleServerRequest : pb::IMessage<GetSwitcherScheduleServerRequest> {
  private static readonly pb::MessageParser<GetSwitcherScheduleServerRequest> _parser = new pb::MessageParser<GetSwitcherScheduleServerRequest>(() => new GetSwitcherScheduleServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetSwitcherScheduleServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[106]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetSwitcherScheduleServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetSwitcherScheduleServerRequest(GetSwitcherScheduleServerRequest other) : this() {
    switcherScheduleId_ = other.switcherScheduleId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetSwitcherScheduleServerRequest Clone() {
    return new GetSwitcherScheduleServerRequest(this);
  }

  /// <summary>Field number for the "switcherScheduleId" field.</summary>
  public const int SwitcherScheduleIdFieldNumber = 1;
  private string switcherScheduleId_ = "";
  /// <summary>
  /// SwitcherScheduleId
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SwitcherScheduleId {
    get { return switcherScheduleId_; }
    set {
      switcherScheduleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetSwitcherScheduleServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetSwitcherScheduleServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SwitcherScheduleId != other.SwitcherScheduleId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SwitcherScheduleId.Length != 0) hash ^= SwitcherScheduleId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SwitcherScheduleId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(SwitcherScheduleId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SwitcherScheduleId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SwitcherScheduleId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetSwitcherScheduleServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.SwitcherScheduleId.Length != 0) {
      SwitcherScheduleId = other.SwitcherScheduleId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          SwitcherScheduleId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu gửi số lượng lịch hẹn giờ của 1 công tắc
/// </summary>
public sealed partial class GetCountSwitcherScheduleServerRequest : pb::IMessage<GetCountSwitcherScheduleServerRequest> {
  private static readonly pb::MessageParser<GetCountSwitcherScheduleServerRequest> _parser = new pb::MessageParser<GetCountSwitcherScheduleServerRequest>(() => new GetCountSwitcherScheduleServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetCountSwitcherScheduleServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[107]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCountSwitcherScheduleServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCountSwitcherScheduleServerRequest(GetCountSwitcherScheduleServerRequest other) : this() {
    switcherId_ = other.switcherId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCountSwitcherScheduleServerRequest Clone() {
    return new GetCountSwitcherScheduleServerRequest(this);
  }

  /// <summary>Field number for the "switcherId" field.</summary>
  public const int SwitcherIdFieldNumber = 1;
  private string switcherId_ = "";
  /// <summary>
  /// Id của switcher
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SwitcherId {
    get { return switcherId_; }
    set {
      switcherId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetCountSwitcherScheduleServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetCountSwitcherScheduleServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SwitcherId != other.SwitcherId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SwitcherId.Length != 0) hash ^= SwitcherId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SwitcherId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(SwitcherId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SwitcherId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SwitcherId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetCountSwitcherScheduleServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.SwitcherId.Length != 0) {
      SwitcherId = other.SwitcherId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          SwitcherId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu thêm mới 1 lịch của 1 công tắc
/// </summary>
public sealed partial class AddSwitcherScheduleServerRequest : pb::IMessage<AddSwitcherScheduleServerRequest> {
  private static readonly pb::MessageParser<AddSwitcherScheduleServerRequest> _parser = new pb::MessageParser<AddSwitcherScheduleServerRequest>(() => new AddSwitcherScheduleServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AddSwitcherScheduleServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[108]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddSwitcherScheduleServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddSwitcherScheduleServerRequest(AddSwitcherScheduleServerRequest other) : this() {
    deviceId_ = other.deviceId_;
    schedule_ = other.schedule_ != null ? other.schedule_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddSwitcherScheduleServerRequest Clone() {
    return new AddSwitcherScheduleServerRequest(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  /// <summary>
  /// Id của thiết bị
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "schedule" field.</summary>
  public const int ScheduleFieldNumber = 2;
  private global::SwitcherSchedule schedule_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SwitcherSchedule Schedule {
    get { return schedule_; }
    set {
      schedule_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AddSwitcherScheduleServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AddSwitcherScheduleServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    if (!object.Equals(Schedule, other.Schedule)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (schedule_ != null) hash ^= Schedule.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (schedule_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Schedule);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (schedule_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schedule);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AddSwitcherScheduleServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.schedule_ != null) {
      if (schedule_ == null) {
        Schedule = new global::SwitcherSchedule();
      }
      Schedule.MergeFrom(other.Schedule);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
        case 18: {
          if (schedule_ == null) {
            Schedule = new global::SwitcherSchedule();
          }
          input.ReadMessage(Schedule);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu update 1 lịch của 1 công tắc
/// </summary>
public sealed partial class UpdateSwitcherScheduleServerRequest : pb::IMessage<UpdateSwitcherScheduleServerRequest> {
  private static readonly pb::MessageParser<UpdateSwitcherScheduleServerRequest> _parser = new pb::MessageParser<UpdateSwitcherScheduleServerRequest>(() => new UpdateSwitcherScheduleServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateSwitcherScheduleServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[109]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateSwitcherScheduleServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateSwitcherScheduleServerRequest(UpdateSwitcherScheduleServerRequest other) : this() {
    deviceId_ = other.deviceId_;
    schedule_ = other.schedule_ != null ? other.schedule_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateSwitcherScheduleServerRequest Clone() {
    return new UpdateSwitcherScheduleServerRequest(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  /// <summary>
  /// Id của thiết bị;
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "schedule" field.</summary>
  public const int ScheduleFieldNumber = 2;
  private global::SwitcherSchedule schedule_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SwitcherSchedule Schedule {
    get { return schedule_; }
    set {
      schedule_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateSwitcherScheduleServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateSwitcherScheduleServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    if (!object.Equals(Schedule, other.Schedule)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (schedule_ != null) hash ^= Schedule.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (schedule_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Schedule);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (schedule_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schedule);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateSwitcherScheduleServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.schedule_ != null) {
      if (schedule_ == null) {
        Schedule = new global::SwitcherSchedule();
      }
      Schedule.MergeFrom(other.Schedule);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
        case 18: {
          if (schedule_ == null) {
            Schedule = new global::SwitcherSchedule();
          }
          input.ReadMessage(Schedule);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu xóa 1 lịch của 1 công tắc
/// </summary>
public sealed partial class DeleteSwitcherScheduleServerRequest : pb::IMessage<DeleteSwitcherScheduleServerRequest> {
  private static readonly pb::MessageParser<DeleteSwitcherScheduleServerRequest> _parser = new pb::MessageParser<DeleteSwitcherScheduleServerRequest>(() => new DeleteSwitcherScheduleServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeleteSwitcherScheduleServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[110]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteSwitcherScheduleServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteSwitcherScheduleServerRequest(DeleteSwitcherScheduleServerRequest other) : this() {
    deviceId_ = other.deviceId_;
    switcherScheduleId_ = other.switcherScheduleId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteSwitcherScheduleServerRequest Clone() {
    return new DeleteSwitcherScheduleServerRequest(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  /// <summary>
  /// Id của thiết bị
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "switcherScheduleId" field.</summary>
  public const int SwitcherScheduleIdFieldNumber = 2;
  private string switcherScheduleId_ = "";
  /// <summary>
  /// Id của switcherScheduleId
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SwitcherScheduleId {
    get { return switcherScheduleId_; }
    set {
      switcherScheduleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeleteSwitcherScheduleServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeleteSwitcherScheduleServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    if (SwitcherScheduleId != other.SwitcherScheduleId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (SwitcherScheduleId.Length != 0) hash ^= SwitcherScheduleId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (SwitcherScheduleId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(SwitcherScheduleId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (SwitcherScheduleId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SwitcherScheduleId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeleteSwitcherScheduleServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.SwitcherScheduleId.Length != 0) {
      SwitcherScheduleId = other.SwitcherScheduleId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
        case 18: {
          SwitcherScheduleId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu thiết lập active 1 lịch của 1 công tắc
/// </summary>
public sealed partial class SetActiveSwitcherScheduleServerRequest : pb::IMessage<SetActiveSwitcherScheduleServerRequest> {
  private static readonly pb::MessageParser<SetActiveSwitcherScheduleServerRequest> _parser = new pb::MessageParser<SetActiveSwitcherScheduleServerRequest>(() => new SetActiveSwitcherScheduleServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SetActiveSwitcherScheduleServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[111]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetActiveSwitcherScheduleServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetActiveSwitcherScheduleServerRequest(SetActiveSwitcherScheduleServerRequest other) : this() {
    deviceId_ = other.deviceId_;
    switcherScheduleId_ = other.switcherScheduleId_;
    active_ = other.active_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetActiveSwitcherScheduleServerRequest Clone() {
    return new SetActiveSwitcherScheduleServerRequest(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  /// <summary>
  /// Id của thiết bị;
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "switcherScheduleId" field.</summary>
  public const int SwitcherScheduleIdFieldNumber = 2;
  private string switcherScheduleId_ = "";
  /// <summary>
  /// Id của switcherScheduleId
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SwitcherScheduleId {
    get { return switcherScheduleId_; }
    set {
      switcherScheduleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "active" field.</summary>
  public const int ActiveFieldNumber = 3;
  private bool active_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Active {
    get { return active_; }
    set {
      active_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SetActiveSwitcherScheduleServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SetActiveSwitcherScheduleServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    if (SwitcherScheduleId != other.SwitcherScheduleId) return false;
    if (Active != other.Active) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (SwitcherScheduleId.Length != 0) hash ^= SwitcherScheduleId.GetHashCode();
    if (Active != false) hash ^= Active.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (SwitcherScheduleId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(SwitcherScheduleId);
    }
    if (Active != false) {
      output.WriteRawTag(24);
      output.WriteBool(Active);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (SwitcherScheduleId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SwitcherScheduleId);
    }
    if (Active != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SetActiveSwitcherScheduleServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.SwitcherScheduleId.Length != 0) {
      SwitcherScheduleId = other.SwitcherScheduleId;
    }
    if (other.Active != false) {
      Active = other.Active;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
        case 18: {
          SwitcherScheduleId = input.ReadString();
          break;
        }
        case 24: {
          Active = input.ReadBool();
          break;
        }
      }
    }
  }

}

/// <summary>
///----- Phản hồi thông tin công tắc -----//
/// Phản hồi danh sách công tắc của 1 thiết bị
/// </summary>
public sealed partial class GetSwitchersServerResponse : pb::IMessage<GetSwitchersServerResponse> {
  private static readonly pb::MessageParser<GetSwitchersServerResponse> _parser = new pb::MessageParser<GetSwitchersServerResponse>(() => new GetSwitchersServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetSwitchersServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[112]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetSwitchersServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetSwitchersServerResponse(GetSwitchersServerResponse other) : this() {
    switchers_ = other.switchers_.Clone();
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetSwitchersServerResponse Clone() {
    return new GetSwitchersServerResponse(this);
  }

  /// <summary>Field number for the "switchers" field.</summary>
  public const int SwitchersFieldNumber = 1;
  private static readonly pb::FieldCodec<global::Switcher> _repeated_switchers_codec
      = pb::FieldCodec.ForMessage(10, global::Switcher.Parser);
  private readonly pbc::RepeatedField<global::Switcher> switchers_ = new pbc::RepeatedField<global::Switcher>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Switcher> Switchers {
    get { return switchers_; }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetSwitchersServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetSwitchersServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!switchers_.Equals(other.switchers_)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= switchers_.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    switchers_.WriteTo(output, _repeated_switchers_codec);
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += switchers_.CalculateSize(_repeated_switchers_codec);
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetSwitchersServerResponse other) {
    if (other == null) {
      return;
    }
    switchers_.Add(other.switchers_);
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          switchers_.AddEntriesFrom(input, _repeated_switchers_codec);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi trả về thông tin của 1 nút công tắc
/// </summary>
public sealed partial class GetSwitcherServerResponse : pb::IMessage<GetSwitcherServerResponse> {
  private static readonly pb::MessageParser<GetSwitcherServerResponse> _parser = new pb::MessageParser<GetSwitcherServerResponse>(() => new GetSwitcherServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetSwitcherServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[113]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetSwitcherServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetSwitcherServerResponse(GetSwitcherServerResponse other) : this() {
    switcher_ = other.switcher_ != null ? other.switcher_.Clone() : null;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetSwitcherServerResponse Clone() {
    return new GetSwitcherServerResponse(this);
  }

  /// <summary>Field number for the "switcher" field.</summary>
  public const int SwitcherFieldNumber = 1;
  private global::Switcher switcher_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Switcher Switcher {
    get { return switcher_; }
    set {
      switcher_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetSwitcherServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetSwitcherServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Switcher, other.Switcher)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (switcher_ != null) hash ^= Switcher.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (switcher_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Switcher);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (switcher_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Switcher);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetSwitcherServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.switcher_ != null) {
      if (switcher_ == null) {
        Switcher = new global::Switcher();
      }
      Switcher.MergeFrom(other.Switcher);
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (switcher_ == null) {
            Switcher = new global::Switcher();
          }
          input.ReadMessage(Switcher);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi nhật ký/hành trình của 1 công tắc
/// </summary>
public sealed partial class GetLogSwitcherServerResponse : pb::IMessage<GetLogSwitcherServerResponse> {
  private static readonly pb::MessageParser<GetLogSwitcherServerResponse> _parser = new pb::MessageParser<GetLogSwitcherServerResponse>(() => new GetLogSwitcherServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetLogSwitcherServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[114]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetLogSwitcherServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetLogSwitcherServerResponse(GetLogSwitcherServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetLogSwitcherServerResponse Clone() {
    return new GetLogSwitcherServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetLogSwitcherServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetLogSwitcherServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetLogSwitcherServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi danh sách icons của của công tắc
/// </summary>
public sealed partial class GetIconSwitchersServerResponse : pb::IMessage<GetIconSwitchersServerResponse> {
  private static readonly pb::MessageParser<GetIconSwitchersServerResponse> _parser = new pb::MessageParser<GetIconSwitchersServerResponse>(() => new GetIconSwitchersServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetIconSwitchersServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[115]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetIconSwitchersServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetIconSwitchersServerResponse(GetIconSwitchersServerResponse other) : this() {
    icons_ = other.icons_.Clone();
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetIconSwitchersServerResponse Clone() {
    return new GetIconSwitchersServerResponse(this);
  }

  /// <summary>Field number for the "icons" field.</summary>
  public const int IconsFieldNumber = 1;
  private static readonly pb::FieldCodec<string> _repeated_icons_codec
      = pb::FieldCodec.ForString(10);
  private readonly pbc::RepeatedField<string> icons_ = new pbc::RepeatedField<string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<string> Icons {
    get { return icons_; }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetIconSwitchersServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetIconSwitchersServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!icons_.Equals(other.icons_)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= icons_.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    icons_.WriteTo(output, _repeated_icons_codec);
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += icons_.CalculateSize(_repeated_icons_codec);
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetIconSwitchersServerResponse other) {
    if (other == null) {
      return;
    }
    icons_.Add(other.icons_);
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          icons_.AddEntriesFrom(input, _repeated_icons_codec);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi cập nhật 1 nút công tắc
/// </summary>
public sealed partial class UpdateSwitcherServerResponse : pb::IMessage<UpdateSwitcherServerResponse> {
  private static readonly pb::MessageParser<UpdateSwitcherServerResponse> _parser = new pb::MessageParser<UpdateSwitcherServerResponse>(() => new UpdateSwitcherServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateSwitcherServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[116]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateSwitcherServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateSwitcherServerResponse(UpdateSwitcherServerResponse other) : this() {
    switcher_ = other.switcher_ != null ? other.switcher_.Clone() : null;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateSwitcherServerResponse Clone() {
    return new UpdateSwitcherServerResponse(this);
  }

  /// <summary>Field number for the "switcher" field.</summary>
  public const int SwitcherFieldNumber = 1;
  private global::Switcher switcher_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Switcher Switcher {
    get { return switcher_; }
    set {
      switcher_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateSwitcherServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateSwitcherServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Switcher, other.Switcher)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (switcher_ != null) hash ^= Switcher.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (switcher_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Switcher);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (switcher_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Switcher);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateSwitcherServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.switcher_ != null) {
      if (switcher_ == null) {
        Switcher = new global::Switcher();
      }
      Switcher.MergeFrom(other.Switcher);
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (switcher_ == null) {
            Switcher = new global::Switcher();
          }
          input.ReadMessage(Switcher);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thay đổi On/Off thiết bị
/// </summary>
public sealed partial class SwitcherServerResponse : pb::IMessage<SwitcherServerResponse> {
  private static readonly pb::MessageParser<SwitcherServerResponse> _parser = new pb::MessageParser<SwitcherServerResponse>(() => new SwitcherServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SwitcherServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[117]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SwitcherServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SwitcherServerResponse(SwitcherServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SwitcherServerResponse Clone() {
    return new SwitcherServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SwitcherServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SwitcherServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SwitcherServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin thay đổi ON/OFF của công tắc runtime
/// </summary>
public sealed partial class SwitcherOnChangedServerResponse : pb::IMessage<SwitcherOnChangedServerResponse> {
  private static readonly pb::MessageParser<SwitcherOnChangedServerResponse> _parser = new pb::MessageParser<SwitcherOnChangedServerResponse>(() => new SwitcherOnChangedServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SwitcherOnChangedServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[118]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SwitcherOnChangedServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SwitcherOnChangedServerResponse(SwitcherOnChangedServerResponse other) : this() {
    deviceId_ = other.deviceId_;
    switcher_ = other.switcher_;
    powerState_ = other.powerState_;
    totalTimeOnOrgin_ = other.totalTimeOnOrgin_;
    totalTimeOnYear_ = other.totalTimeOnYear_;
    totalTimeOnMonth_ = other.totalTimeOnMonth_;
    timeOnLastDate_ = other.timeOnLastDate_;
    timeOffLastDate_ = other.timeOffLastDate_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SwitcherOnChangedServerResponse Clone() {
    return new SwitcherOnChangedServerResponse(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  /// <summary>
  /// Id của thiết bị để mobile update trạng thái
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "switcher" field.</summary>
  public const int SwitcherFieldNumber = 2;
  private uint switcher_;
  /// <summary>
  /// Công tắc 1,2,3,4
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Switcher {
    get { return switcher_; }
    set {
      switcher_ = value;
    }
  }

  /// <summary>Field number for the "powerState" field.</summary>
  public const int PowerStateFieldNumber = 3;
  private global::PowerState powerState_ = global::PowerState.Off;
  /// <summary>
  /// Trạng thái ON/OFF
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PowerState PowerState {
    get { return powerState_; }
    set {
      powerState_ = value;
    }
  }

  /// <summary>Field number for the "totalTimeOnOrgin" field.</summary>
  public const int TotalTimeOnOrginFieldNumber = 4;
  private uint totalTimeOnOrgin_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TotalTimeOnOrgin {
    get { return totalTimeOnOrgin_; }
    set {
      totalTimeOnOrgin_ = value;
    }
  }

  /// <summary>Field number for the "totalTimeOnYear" field.</summary>
  public const int TotalTimeOnYearFieldNumber = 5;
  private uint totalTimeOnYear_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TotalTimeOnYear {
    get { return totalTimeOnYear_; }
    set {
      totalTimeOnYear_ = value;
    }
  }

  /// <summary>Field number for the "totalTimeOnMonth" field.</summary>
  public const int TotalTimeOnMonthFieldNumber = 6;
  private uint totalTimeOnMonth_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TotalTimeOnMonth {
    get { return totalTimeOnMonth_; }
    set {
      totalTimeOnMonth_ = value;
    }
  }

  /// <summary>Field number for the "timeOnLastDate" field.</summary>
  public const int TimeOnLastDateFieldNumber = 7;
  private uint timeOnLastDate_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TimeOnLastDate {
    get { return timeOnLastDate_; }
    set {
      timeOnLastDate_ = value;
    }
  }

  /// <summary>Field number for the "timeOffLastDate" field.</summary>
  public const int TimeOffLastDateFieldNumber = 8;
  private uint timeOffLastDate_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint TimeOffLastDate {
    get { return timeOffLastDate_; }
    set {
      timeOffLastDate_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SwitcherOnChangedServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SwitcherOnChangedServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    if (Switcher != other.Switcher) return false;
    if (PowerState != other.PowerState) return false;
    if (TotalTimeOnOrgin != other.TotalTimeOnOrgin) return false;
    if (TotalTimeOnYear != other.TotalTimeOnYear) return false;
    if (TotalTimeOnMonth != other.TotalTimeOnMonth) return false;
    if (TimeOnLastDate != other.TimeOnLastDate) return false;
    if (TimeOffLastDate != other.TimeOffLastDate) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (Switcher != 0) hash ^= Switcher.GetHashCode();
    if (PowerState != global::PowerState.Off) hash ^= PowerState.GetHashCode();
    if (TotalTimeOnOrgin != 0) hash ^= TotalTimeOnOrgin.GetHashCode();
    if (TotalTimeOnYear != 0) hash ^= TotalTimeOnYear.GetHashCode();
    if (TotalTimeOnMonth != 0) hash ^= TotalTimeOnMonth.GetHashCode();
    if (TimeOnLastDate != 0) hash ^= TimeOnLastDate.GetHashCode();
    if (TimeOffLastDate != 0) hash ^= TimeOffLastDate.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (Switcher != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(Switcher);
    }
    if (PowerState != global::PowerState.Off) {
      output.WriteRawTag(24);
      output.WriteEnum((int) PowerState);
    }
    if (TotalTimeOnOrgin != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(TotalTimeOnOrgin);
    }
    if (TotalTimeOnYear != 0) {
      output.WriteRawTag(40);
      output.WriteUInt32(TotalTimeOnYear);
    }
    if (TotalTimeOnMonth != 0) {
      output.WriteRawTag(48);
      output.WriteUInt32(TotalTimeOnMonth);
    }
    if (TimeOnLastDate != 0) {
      output.WriteRawTag(56);
      output.WriteUInt32(TimeOnLastDate);
    }
    if (TimeOffLastDate != 0) {
      output.WriteRawTag(64);
      output.WriteUInt32(TimeOffLastDate);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (Switcher != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Switcher);
    }
    if (PowerState != global::PowerState.Off) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PowerState);
    }
    if (TotalTimeOnOrgin != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalTimeOnOrgin);
    }
    if (TotalTimeOnYear != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalTimeOnYear);
    }
    if (TotalTimeOnMonth != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalTimeOnMonth);
    }
    if (TimeOnLastDate != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeOnLastDate);
    }
    if (TimeOffLastDate != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeOffLastDate);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SwitcherOnChangedServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.Switcher != 0) {
      Switcher = other.Switcher;
    }
    if (other.PowerState != global::PowerState.Off) {
      PowerState = other.PowerState;
    }
    if (other.TotalTimeOnOrgin != 0) {
      TotalTimeOnOrgin = other.TotalTimeOnOrgin;
    }
    if (other.TotalTimeOnYear != 0) {
      TotalTimeOnYear = other.TotalTimeOnYear;
    }
    if (other.TotalTimeOnMonth != 0) {
      TotalTimeOnMonth = other.TotalTimeOnMonth;
    }
    if (other.TimeOnLastDate != 0) {
      TimeOnLastDate = other.TimeOnLastDate;
    }
    if (other.TimeOffLastDate != 0) {
      TimeOffLastDate = other.TimeOffLastDate;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
        case 16: {
          Switcher = input.ReadUInt32();
          break;
        }
        case 24: {
          PowerState = (global::PowerState) input.ReadEnum();
          break;
        }
        case 32: {
          TotalTimeOnOrgin = input.ReadUInt32();
          break;
        }
        case 40: {
          TotalTimeOnYear = input.ReadUInt32();
          break;
        }
        case 48: {
          TotalTimeOnMonth = input.ReadUInt32();
          break;
        }
        case 56: {
          TimeOnLastDate = input.ReadUInt32();
          break;
        }
        case 64: {
          TimeOffLastDate = input.ReadUInt32();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
///----- Phản hồi về lịch hẹn công tắc -----//
/// Phản hồi thông tin danh sách hẹn giờ công tắc
/// </summary>
public sealed partial class GetSwitcherSchedulesServerResponse : pb::IMessage<GetSwitcherSchedulesServerResponse> {
  private static readonly pb::MessageParser<GetSwitcherSchedulesServerResponse> _parser = new pb::MessageParser<GetSwitcherSchedulesServerResponse>(() => new GetSwitcherSchedulesServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetSwitcherSchedulesServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[119]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetSwitcherSchedulesServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetSwitcherSchedulesServerResponse(GetSwitcherSchedulesServerResponse other) : this() {
    schedules_ = other.schedules_.Clone();
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetSwitcherSchedulesServerResponse Clone() {
    return new GetSwitcherSchedulesServerResponse(this);
  }

  /// <summary>Field number for the "schedules" field.</summary>
  public const int SchedulesFieldNumber = 1;
  private static readonly pb::FieldCodec<global::SwitcherSchedule> _repeated_schedules_codec
      = pb::FieldCodec.ForMessage(10, global::SwitcherSchedule.Parser);
  private readonly pbc::RepeatedField<global::SwitcherSchedule> schedules_ = new pbc::RepeatedField<global::SwitcherSchedule>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::SwitcherSchedule> Schedules {
    get { return schedules_; }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetSwitcherSchedulesServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetSwitcherSchedulesServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!schedules_.Equals(other.schedules_)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= schedules_.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    schedules_.WriteTo(output, _repeated_schedules_codec);
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += schedules_.CalculateSize(_repeated_schedules_codec);
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetSwitcherSchedulesServerResponse other) {
    if (other == null) {
      return;
    }
    schedules_.Add(other.schedules_);
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          schedules_.AddEntriesFrom(input, _repeated_schedules_codec);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin chi tiết 1 lịch của 1 công tắc
/// </summary>
public sealed partial class GetSwitcherScheduleServerResponse : pb::IMessage<GetSwitcherScheduleServerResponse> {
  private static readonly pb::MessageParser<GetSwitcherScheduleServerResponse> _parser = new pb::MessageParser<GetSwitcherScheduleServerResponse>(() => new GetSwitcherScheduleServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetSwitcherScheduleServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[120]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetSwitcherScheduleServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetSwitcherScheduleServerResponse(GetSwitcherScheduleServerResponse other) : this() {
    schedule_ = other.schedule_ != null ? other.schedule_.Clone() : null;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetSwitcherScheduleServerResponse Clone() {
    return new GetSwitcherScheduleServerResponse(this);
  }

  /// <summary>Field number for the "schedule" field.</summary>
  public const int ScheduleFieldNumber = 1;
  private global::SwitcherSchedule schedule_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SwitcherSchedule Schedule {
    get { return schedule_; }
    set {
      schedule_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetSwitcherScheduleServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetSwitcherScheduleServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Schedule, other.Schedule)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (schedule_ != null) hash ^= Schedule.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (schedule_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Schedule);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (schedule_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schedule);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetSwitcherScheduleServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.schedule_ != null) {
      if (schedule_ == null) {
        Schedule = new global::SwitcherSchedule();
      }
      Schedule.MergeFrom(other.Schedule);
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (schedule_ == null) {
            Schedule = new global::SwitcherSchedule();
          }
          input.ReadMessage(Schedule);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi số lượng lịch hẹn giờ của 1 công tắc
/// </summary>
public sealed partial class GetCountSwitcherScheduleServerResponse : pb::IMessage<GetCountSwitcherScheduleServerResponse> {
  private static readonly pb::MessageParser<GetCountSwitcherScheduleServerResponse> _parser = new pb::MessageParser<GetCountSwitcherScheduleServerResponse>(() => new GetCountSwitcherScheduleServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetCountSwitcherScheduleServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[121]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCountSwitcherScheduleServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCountSwitcherScheduleServerResponse(GetCountSwitcherScheduleServerResponse other) : this() {
    count_ = other.count_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCountSwitcherScheduleServerResponse Clone() {
    return new GetCountSwitcherScheduleServerResponse(this);
  }

  /// <summary>Field number for the "count" field.</summary>
  public const int CountFieldNumber = 1;
  private uint count_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Count {
    get { return count_; }
    set {
      count_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetCountSwitcherScheduleServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetCountSwitcherScheduleServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Count != other.Count) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Count != 0) hash ^= Count.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Count != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(Count);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Count != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Count);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetCountSwitcherScheduleServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.Count != 0) {
      Count = other.Count;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Count = input.ReadUInt32();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thêm mới 1 lịch của 1 công tắc
/// </summary>
public sealed partial class AddSwitcherScheduleServerResponse : pb::IMessage<AddSwitcherScheduleServerResponse> {
  private static readonly pb::MessageParser<AddSwitcherScheduleServerResponse> _parser = new pb::MessageParser<AddSwitcherScheduleServerResponse>(() => new AddSwitcherScheduleServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AddSwitcherScheduleServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[122]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddSwitcherScheduleServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddSwitcherScheduleServerResponse(AddSwitcherScheduleServerResponse other) : this() {
    switcherScheduleId_ = other.switcherScheduleId_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddSwitcherScheduleServerResponse Clone() {
    return new AddSwitcherScheduleServerResponse(this);
  }

  /// <summary>Field number for the "switcherScheduleId" field.</summary>
  public const int SwitcherScheduleIdFieldNumber = 1;
  private string switcherScheduleId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SwitcherScheduleId {
    get { return switcherScheduleId_; }
    set {
      switcherScheduleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AddSwitcherScheduleServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AddSwitcherScheduleServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SwitcherScheduleId != other.SwitcherScheduleId) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SwitcherScheduleId.Length != 0) hash ^= SwitcherScheduleId.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SwitcherScheduleId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(SwitcherScheduleId);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SwitcherScheduleId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SwitcherScheduleId);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AddSwitcherScheduleServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.SwitcherScheduleId.Length != 0) {
      SwitcherScheduleId = other.SwitcherScheduleId;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          SwitcherScheduleId = input.ReadString();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi update 1 lịch của 1 công tắc
/// </summary>
public sealed partial class UpdateSwitcherScheduleServerResponse : pb::IMessage<UpdateSwitcherScheduleServerResponse> {
  private static readonly pb::MessageParser<UpdateSwitcherScheduleServerResponse> _parser = new pb::MessageParser<UpdateSwitcherScheduleServerResponse>(() => new UpdateSwitcherScheduleServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateSwitcherScheduleServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[123]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateSwitcherScheduleServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateSwitcherScheduleServerResponse(UpdateSwitcherScheduleServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateSwitcherScheduleServerResponse Clone() {
    return new UpdateSwitcherScheduleServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateSwitcherScheduleServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateSwitcherScheduleServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateSwitcherScheduleServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi xóa 1 lịch của 1 công tắc
/// </summary>
public sealed partial class DeleteSwitcherScheduleServerResponse : pb::IMessage<DeleteSwitcherScheduleServerResponse> {
  private static readonly pb::MessageParser<DeleteSwitcherScheduleServerResponse> _parser = new pb::MessageParser<DeleteSwitcherScheduleServerResponse>(() => new DeleteSwitcherScheduleServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeleteSwitcherScheduleServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[124]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteSwitcherScheduleServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteSwitcherScheduleServerResponse(DeleteSwitcherScheduleServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteSwitcherScheduleServerResponse Clone() {
    return new DeleteSwitcherScheduleServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeleteSwitcherScheduleServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeleteSwitcherScheduleServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeleteSwitcherScheduleServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi yêu cầu thiết lập active 1 lịch của 1 công tắc
/// </summary>
public sealed partial class SetActiveSwitcherScheduleServerResponse : pb::IMessage<SetActiveSwitcherScheduleServerResponse> {
  private static readonly pb::MessageParser<SetActiveSwitcherScheduleServerResponse> _parser = new pb::MessageParser<SetActiveSwitcherScheduleServerResponse>(() => new SetActiveSwitcherScheduleServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SetActiveSwitcherScheduleServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[125]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetActiveSwitcherScheduleServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetActiveSwitcherScheduleServerResponse(SetActiveSwitcherScheduleServerResponse other) : this() {
    deviceId_ = other.deviceId_;
    switcherScheduleId_ = other.switcherScheduleId_;
    active_ = other.active_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetActiveSwitcherScheduleServerResponse Clone() {
    return new SetActiveSwitcherScheduleServerResponse(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  /// <summary>
  /// Id của thiết bị;
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "switcherScheduleId" field.</summary>
  public const int SwitcherScheduleIdFieldNumber = 2;
  private string switcherScheduleId_ = "";
  /// <summary>
  /// Id của switcherScheduleId
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SwitcherScheduleId {
    get { return switcherScheduleId_; }
    set {
      switcherScheduleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "active" field.</summary>
  public const int ActiveFieldNumber = 3;
  private bool active_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Active {
    get { return active_; }
    set {
      active_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SetActiveSwitcherScheduleServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SetActiveSwitcherScheduleServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    if (SwitcherScheduleId != other.SwitcherScheduleId) return false;
    if (Active != other.Active) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (SwitcherScheduleId.Length != 0) hash ^= SwitcherScheduleId.GetHashCode();
    if (Active != false) hash ^= Active.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (SwitcherScheduleId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(SwitcherScheduleId);
    }
    if (Active != false) {
      output.WriteRawTag(24);
      output.WriteBool(Active);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (SwitcherScheduleId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SwitcherScheduleId);
    }
    if (Active != false) {
      size += 1 + 1;
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SetActiveSwitcherScheduleServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.SwitcherScheduleId.Length != 0) {
      SwitcherScheduleId = other.SwitcherScheduleId;
    }
    if (other.Active != false) {
      Active = other.Active;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
        case 18: {
          SwitcherScheduleId = input.ReadString();
          break;
        }
        case 24: {
          Active = input.ReadBool();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
///----- Yêu cầu thông tin rèm cửa -----//
/// Nhận được yêu cầu trả về thông tin của rèm cửa
/// </summary>
public sealed partial class GetCurtainSwitcherServerRequest : pb::IMessage<GetCurtainSwitcherServerRequest> {
  private static readonly pb::MessageParser<GetCurtainSwitcherServerRequest> _parser = new pb::MessageParser<GetCurtainSwitcherServerRequest>(() => new GetCurtainSwitcherServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetCurtainSwitcherServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[126]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCurtainSwitcherServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCurtainSwitcherServerRequest(GetCurtainSwitcherServerRequest other) : this() {
    curtainSwitcherId_ = other.curtainSwitcherId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCurtainSwitcherServerRequest Clone() {
    return new GetCurtainSwitcherServerRequest(this);
  }

  /// <summary>Field number for the "curtainSwitcherId" field.</summary>
  public const int CurtainSwitcherIdFieldNumber = 1;
  private string curtainSwitcherId_ = "";
  /// <summary>
  /// Id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CurtainSwitcherId {
    get { return curtainSwitcherId_; }
    set {
      curtainSwitcherId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetCurtainSwitcherServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetCurtainSwitcherServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CurtainSwitcherId != other.CurtainSwitcherId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CurtainSwitcherId.Length != 0) hash ^= CurtainSwitcherId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CurtainSwitcherId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(CurtainSwitcherId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CurtainSwitcherId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CurtainSwitcherId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetCurtainSwitcherServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.CurtainSwitcherId.Length != 0) {
      CurtainSwitcherId = other.CurtainSwitcherId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          CurtainSwitcherId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu cập nhật rèm cửa
/// </summary>
public sealed partial class UpdateCurtainSwitcherServerRequest : pb::IMessage<UpdateCurtainSwitcherServerRequest> {
  private static readonly pb::MessageParser<UpdateCurtainSwitcherServerRequest> _parser = new pb::MessageParser<UpdateCurtainSwitcherServerRequest>(() => new UpdateCurtainSwitcherServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateCurtainSwitcherServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[127]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateCurtainSwitcherServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateCurtainSwitcherServerRequest(UpdateCurtainSwitcherServerRequest other) : this() {
    curtainSwitcher_ = other.curtainSwitcher_ != null ? other.curtainSwitcher_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateCurtainSwitcherServerRequest Clone() {
    return new UpdateCurtainSwitcherServerRequest(this);
  }

  /// <summary>Field number for the "curtainSwitcher" field.</summary>
  public const int CurtainSwitcherFieldNumber = 1;
  private global::CurtainSwitcher curtainSwitcher_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::CurtainSwitcher CurtainSwitcher {
    get { return curtainSwitcher_; }
    set {
      curtainSwitcher_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateCurtainSwitcherServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateCurtainSwitcherServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(CurtainSwitcher, other.CurtainSwitcher)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (curtainSwitcher_ != null) hash ^= CurtainSwitcher.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (curtainSwitcher_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(CurtainSwitcher);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (curtainSwitcher_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurtainSwitcher);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateCurtainSwitcherServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.curtainSwitcher_ != null) {
      if (curtainSwitcher_ == null) {
        CurtainSwitcher = new global::CurtainSwitcher();
      }
      CurtainSwitcher.MergeFrom(other.CurtainSwitcher);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (curtainSwitcher_ == null) {
            CurtainSwitcher = new global::CurtainSwitcher();
          }
          input.ReadMessage(CurtainSwitcher);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu trả về state của rèm cửa
/// </summary>
public sealed partial class GetCurtainSwitcherStateServerRequest : pb::IMessage<GetCurtainSwitcherStateServerRequest> {
  private static readonly pb::MessageParser<GetCurtainSwitcherStateServerRequest> _parser = new pb::MessageParser<GetCurtainSwitcherStateServerRequest>(() => new GetCurtainSwitcherStateServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetCurtainSwitcherStateServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[128]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCurtainSwitcherStateServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCurtainSwitcherStateServerRequest(GetCurtainSwitcherStateServerRequest other) : this() {
    deviceId_ = other.deviceId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCurtainSwitcherStateServerRequest Clone() {
    return new GetCurtainSwitcherStateServerRequest(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  /// <summary>
  /// deviceId để lấy trạng thái điều hòa ở session trên server HZ
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetCurtainSwitcherStateServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetCurtainSwitcherStateServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetCurtainSwitcherStateServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được lệnh điều khiển rèm cửa
/// </summary>
public sealed partial class CurtainSwitcherServerRequest : pb::IMessage<CurtainSwitcherServerRequest> {
  private static readonly pb::MessageParser<CurtainSwitcherServerRequest> _parser = new pb::MessageParser<CurtainSwitcherServerRequest>(() => new CurtainSwitcherServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CurtainSwitcherServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[129]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CurtainSwitcherServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CurtainSwitcherServerRequest(CurtainSwitcherServerRequest other) : this() {
    deviceId_ = other.deviceId_;
    percentIn_ = other.percentIn_;
    percentOut_ = other.percentOut_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CurtainSwitcherServerRequest Clone() {
    return new CurtainSwitcherServerRequest(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "percentIn" field.</summary>
  public const int PercentInFieldNumber = 2;
  private uint percentIn_;
  /// <summary>
  /// Phần trăm hướng trong
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PercentIn {
    get { return percentIn_; }
    set {
      percentIn_ = value;
    }
  }

  /// <summary>Field number for the "percentOut" field.</summary>
  public const int PercentOutFieldNumber = 3;
  private uint percentOut_;
  /// <summary>
  /// Phần trăm hướng ngoài
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PercentOut {
    get { return percentOut_; }
    set {
      percentOut_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CurtainSwitcherServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CurtainSwitcherServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    if (PercentIn != other.PercentIn) return false;
    if (PercentOut != other.PercentOut) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (PercentIn != 0) hash ^= PercentIn.GetHashCode();
    if (PercentOut != 0) hash ^= PercentOut.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (PercentIn != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(PercentIn);
    }
    if (PercentOut != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(PercentOut);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (PercentIn != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PercentIn);
    }
    if (PercentOut != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PercentOut);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CurtainSwitcherServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.PercentIn != 0) {
      PercentIn = other.PercentIn;
    }
    if (other.PercentOut != 0) {
      PercentOut = other.PercentOut;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
        case 16: {
          PercentIn = input.ReadUInt32();
          break;
        }
        case 24: {
          PercentOut = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
///----- Yêu cầu về lịch hẹn rèm cửa -----//
/// Nhận được yêu cầu gửi danh sách lịch hẹn giờ của rèm cửa
/// </summary>
public sealed partial class GetCurtainSwitcherSchedulesServerRequest : pb::IMessage<GetCurtainSwitcherSchedulesServerRequest> {
  private static readonly pb::MessageParser<GetCurtainSwitcherSchedulesServerRequest> _parser = new pb::MessageParser<GetCurtainSwitcherSchedulesServerRequest>(() => new GetCurtainSwitcherSchedulesServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetCurtainSwitcherSchedulesServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[130]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCurtainSwitcherSchedulesServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCurtainSwitcherSchedulesServerRequest(GetCurtainSwitcherSchedulesServerRequest other) : this() {
    curtainSwitcherId_ = other.curtainSwitcherId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCurtainSwitcherSchedulesServerRequest Clone() {
    return new GetCurtainSwitcherSchedulesServerRequest(this);
  }

  /// <summary>Field number for the "curtainSwitcherId" field.</summary>
  public const int CurtainSwitcherIdFieldNumber = 1;
  private string curtainSwitcherId_ = "";
  /// <summary>
  /// Id của rèm cửa
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CurtainSwitcherId {
    get { return curtainSwitcherId_; }
    set {
      curtainSwitcherId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetCurtainSwitcherSchedulesServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetCurtainSwitcherSchedulesServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CurtainSwitcherId != other.CurtainSwitcherId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CurtainSwitcherId.Length != 0) hash ^= CurtainSwitcherId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CurtainSwitcherId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(CurtainSwitcherId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CurtainSwitcherId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CurtainSwitcherId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetCurtainSwitcherSchedulesServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.CurtainSwitcherId.Length != 0) {
      CurtainSwitcherId = other.CurtainSwitcherId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          CurtainSwitcherId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu gửi thông tin chi tiết 1 lịch hẹn giờ của rèm cửa
/// </summary>
public sealed partial class GetCurtainSwitcherScheduleServerRequest : pb::IMessage<GetCurtainSwitcherScheduleServerRequest> {
  private static readonly pb::MessageParser<GetCurtainSwitcherScheduleServerRequest> _parser = new pb::MessageParser<GetCurtainSwitcherScheduleServerRequest>(() => new GetCurtainSwitcherScheduleServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetCurtainSwitcherScheduleServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[131]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCurtainSwitcherScheduleServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCurtainSwitcherScheduleServerRequest(GetCurtainSwitcherScheduleServerRequest other) : this() {
    curtainSwitcherScheduleId_ = other.curtainSwitcherScheduleId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCurtainSwitcherScheduleServerRequest Clone() {
    return new GetCurtainSwitcherScheduleServerRequest(this);
  }

  /// <summary>Field number for the "curtainSwitcherScheduleId" field.</summary>
  public const int CurtainSwitcherScheduleIdFieldNumber = 1;
  private string curtainSwitcherScheduleId_ = "";
  /// <summary>
  /// curtainSwitcherScheduleId của rèm cửa
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CurtainSwitcherScheduleId {
    get { return curtainSwitcherScheduleId_; }
    set {
      curtainSwitcherScheduleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetCurtainSwitcherScheduleServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetCurtainSwitcherScheduleServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CurtainSwitcherScheduleId != other.CurtainSwitcherScheduleId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CurtainSwitcherScheduleId.Length != 0) hash ^= CurtainSwitcherScheduleId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CurtainSwitcherScheduleId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(CurtainSwitcherScheduleId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CurtainSwitcherScheduleId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CurtainSwitcherScheduleId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetCurtainSwitcherScheduleServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.CurtainSwitcherScheduleId.Length != 0) {
      CurtainSwitcherScheduleId = other.CurtainSwitcherScheduleId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          CurtainSwitcherScheduleId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu gửi số lượng lịch hẹn giờ của rèm cửa
/// </summary>
public sealed partial class GetCountCurtainSwitcherScheduleServerRequest : pb::IMessage<GetCountCurtainSwitcherScheduleServerRequest> {
  private static readonly pb::MessageParser<GetCountCurtainSwitcherScheduleServerRequest> _parser = new pb::MessageParser<GetCountCurtainSwitcherScheduleServerRequest>(() => new GetCountCurtainSwitcherScheduleServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetCountCurtainSwitcherScheduleServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[132]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCountCurtainSwitcherScheduleServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCountCurtainSwitcherScheduleServerRequest(GetCountCurtainSwitcherScheduleServerRequest other) : this() {
    curtainSwitcherId_ = other.curtainSwitcherId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCountCurtainSwitcherScheduleServerRequest Clone() {
    return new GetCountCurtainSwitcherScheduleServerRequest(this);
  }

  /// <summary>Field number for the "curtainSwitcherId" field.</summary>
  public const int CurtainSwitcherIdFieldNumber = 1;
  private string curtainSwitcherId_ = "";
  /// <summary>
  /// Id của rèm cửa
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CurtainSwitcherId {
    get { return curtainSwitcherId_; }
    set {
      curtainSwitcherId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetCountCurtainSwitcherScheduleServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetCountCurtainSwitcherScheduleServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CurtainSwitcherId != other.CurtainSwitcherId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CurtainSwitcherId.Length != 0) hash ^= CurtainSwitcherId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CurtainSwitcherId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(CurtainSwitcherId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CurtainSwitcherId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CurtainSwitcherId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetCountCurtainSwitcherScheduleServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.CurtainSwitcherId.Length != 0) {
      CurtainSwitcherId = other.CurtainSwitcherId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          CurtainSwitcherId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu thêm mới 1 lịch của rèm cửa
/// </summary>
public sealed partial class AddCurtainSwitcherScheduleServerRequest : pb::IMessage<AddCurtainSwitcherScheduleServerRequest> {
  private static readonly pb::MessageParser<AddCurtainSwitcherScheduleServerRequest> _parser = new pb::MessageParser<AddCurtainSwitcherScheduleServerRequest>(() => new AddCurtainSwitcherScheduleServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AddCurtainSwitcherScheduleServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[133]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddCurtainSwitcherScheduleServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddCurtainSwitcherScheduleServerRequest(AddCurtainSwitcherScheduleServerRequest other) : this() {
    deviceId_ = other.deviceId_;
    schedule_ = other.schedule_ != null ? other.schedule_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddCurtainSwitcherScheduleServerRequest Clone() {
    return new AddCurtainSwitcherScheduleServerRequest(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  /// <summary>
  /// Id của thiết bị
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "schedule" field.</summary>
  public const int ScheduleFieldNumber = 2;
  private global::CurtainSwitcherSchedule schedule_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::CurtainSwitcherSchedule Schedule {
    get { return schedule_; }
    set {
      schedule_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AddCurtainSwitcherScheduleServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AddCurtainSwitcherScheduleServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    if (!object.Equals(Schedule, other.Schedule)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (schedule_ != null) hash ^= Schedule.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (schedule_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Schedule);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (schedule_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schedule);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AddCurtainSwitcherScheduleServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.schedule_ != null) {
      if (schedule_ == null) {
        Schedule = new global::CurtainSwitcherSchedule();
      }
      Schedule.MergeFrom(other.Schedule);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
        case 18: {
          if (schedule_ == null) {
            Schedule = new global::CurtainSwitcherSchedule();
          }
          input.ReadMessage(Schedule);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu update 1 lịch của rèm cửa
/// </summary>
public sealed partial class UpdateCurtainSwitcherScheduleServerRequest : pb::IMessage<UpdateCurtainSwitcherScheduleServerRequest> {
  private static readonly pb::MessageParser<UpdateCurtainSwitcherScheduleServerRequest> _parser = new pb::MessageParser<UpdateCurtainSwitcherScheduleServerRequest>(() => new UpdateCurtainSwitcherScheduleServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateCurtainSwitcherScheduleServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[134]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateCurtainSwitcherScheduleServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateCurtainSwitcherScheduleServerRequest(UpdateCurtainSwitcherScheduleServerRequest other) : this() {
    deviceId_ = other.deviceId_;
    schedule_ = other.schedule_ != null ? other.schedule_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateCurtainSwitcherScheduleServerRequest Clone() {
    return new UpdateCurtainSwitcherScheduleServerRequest(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  /// <summary>
  /// Id của thiết bị;
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "schedule" field.</summary>
  public const int ScheduleFieldNumber = 2;
  private global::CurtainSwitcherSchedule schedule_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::CurtainSwitcherSchedule Schedule {
    get { return schedule_; }
    set {
      schedule_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateCurtainSwitcherScheduleServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateCurtainSwitcherScheduleServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    if (!object.Equals(Schedule, other.Schedule)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (schedule_ != null) hash ^= Schedule.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (schedule_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Schedule);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (schedule_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schedule);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateCurtainSwitcherScheduleServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.schedule_ != null) {
      if (schedule_ == null) {
        Schedule = new global::CurtainSwitcherSchedule();
      }
      Schedule.MergeFrom(other.Schedule);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
        case 18: {
          if (schedule_ == null) {
            Schedule = new global::CurtainSwitcherSchedule();
          }
          input.ReadMessage(Schedule);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu xóa 1 lịch của rèm cửa
/// </summary>
public sealed partial class DeleteCurtainSwitcherScheduleServerRequest : pb::IMessage<DeleteCurtainSwitcherScheduleServerRequest> {
  private static readonly pb::MessageParser<DeleteCurtainSwitcherScheduleServerRequest> _parser = new pb::MessageParser<DeleteCurtainSwitcherScheduleServerRequest>(() => new DeleteCurtainSwitcherScheduleServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeleteCurtainSwitcherScheduleServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[135]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteCurtainSwitcherScheduleServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteCurtainSwitcherScheduleServerRequest(DeleteCurtainSwitcherScheduleServerRequest other) : this() {
    deviceId_ = other.deviceId_;
    curtainSwitcherScheduleId_ = other.curtainSwitcherScheduleId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteCurtainSwitcherScheduleServerRequest Clone() {
    return new DeleteCurtainSwitcherScheduleServerRequest(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  /// <summary>
  /// Id của thiết bị
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "curtainSwitcherScheduleId" field.</summary>
  public const int CurtainSwitcherScheduleIdFieldNumber = 2;
  private string curtainSwitcherScheduleId_ = "";
  /// <summary>
  /// Id của curtainSwitcherScheduleId
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CurtainSwitcherScheduleId {
    get { return curtainSwitcherScheduleId_; }
    set {
      curtainSwitcherScheduleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeleteCurtainSwitcherScheduleServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeleteCurtainSwitcherScheduleServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    if (CurtainSwitcherScheduleId != other.CurtainSwitcherScheduleId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (CurtainSwitcherScheduleId.Length != 0) hash ^= CurtainSwitcherScheduleId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (CurtainSwitcherScheduleId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(CurtainSwitcherScheduleId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (CurtainSwitcherScheduleId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CurtainSwitcherScheduleId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeleteCurtainSwitcherScheduleServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.CurtainSwitcherScheduleId.Length != 0) {
      CurtainSwitcherScheduleId = other.CurtainSwitcherScheduleId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
        case 18: {
          CurtainSwitcherScheduleId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu thiết lập active 1 lịch của 1 rèm cửa
/// </summary>
public sealed partial class SetActiveCurtainSwitcherScheduleServerRequest : pb::IMessage<SetActiveCurtainSwitcherScheduleServerRequest> {
  private static readonly pb::MessageParser<SetActiveCurtainSwitcherScheduleServerRequest> _parser = new pb::MessageParser<SetActiveCurtainSwitcherScheduleServerRequest>(() => new SetActiveCurtainSwitcherScheduleServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SetActiveCurtainSwitcherScheduleServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[136]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetActiveCurtainSwitcherScheduleServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetActiveCurtainSwitcherScheduleServerRequest(SetActiveCurtainSwitcherScheduleServerRequest other) : this() {
    deviceId_ = other.deviceId_;
    curtainSwitcherScheduleId_ = other.curtainSwitcherScheduleId_;
    active_ = other.active_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetActiveCurtainSwitcherScheduleServerRequest Clone() {
    return new SetActiveCurtainSwitcherScheduleServerRequest(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  /// <summary>
  /// Id của thiết bị;
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "curtainSwitcherScheduleId" field.</summary>
  public const int CurtainSwitcherScheduleIdFieldNumber = 2;
  private string curtainSwitcherScheduleId_ = "";
  /// <summary>
  /// Id của curtainSwitcherScheduleId
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CurtainSwitcherScheduleId {
    get { return curtainSwitcherScheduleId_; }
    set {
      curtainSwitcherScheduleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "active" field.</summary>
  public const int ActiveFieldNumber = 3;
  private bool active_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Active {
    get { return active_; }
    set {
      active_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SetActiveCurtainSwitcherScheduleServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SetActiveCurtainSwitcherScheduleServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    if (CurtainSwitcherScheduleId != other.CurtainSwitcherScheduleId) return false;
    if (Active != other.Active) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (CurtainSwitcherScheduleId.Length != 0) hash ^= CurtainSwitcherScheduleId.GetHashCode();
    if (Active != false) hash ^= Active.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (CurtainSwitcherScheduleId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(CurtainSwitcherScheduleId);
    }
    if (Active != false) {
      output.WriteRawTag(24);
      output.WriteBool(Active);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (CurtainSwitcherScheduleId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CurtainSwitcherScheduleId);
    }
    if (Active != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SetActiveCurtainSwitcherScheduleServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.CurtainSwitcherScheduleId.Length != 0) {
      CurtainSwitcherScheduleId = other.CurtainSwitcherScheduleId;
    }
    if (other.Active != false) {
      Active = other.Active;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
        case 18: {
          CurtainSwitcherScheduleId = input.ReadString();
          break;
        }
        case 24: {
          Active = input.ReadBool();
          break;
        }
      }
    }
  }

}

/// <summary>
///----- Phản hồi thông tin rèm cửa -----//
/// Phản hồi trả về thông tin rèm cửa
/// </summary>
public sealed partial class GetCurtainSwitcherServerResponse : pb::IMessage<GetCurtainSwitcherServerResponse> {
  private static readonly pb::MessageParser<GetCurtainSwitcherServerResponse> _parser = new pb::MessageParser<GetCurtainSwitcherServerResponse>(() => new GetCurtainSwitcherServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetCurtainSwitcherServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[137]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCurtainSwitcherServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCurtainSwitcherServerResponse(GetCurtainSwitcherServerResponse other) : this() {
    curtainSwitcher_ = other.curtainSwitcher_ != null ? other.curtainSwitcher_.Clone() : null;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCurtainSwitcherServerResponse Clone() {
    return new GetCurtainSwitcherServerResponse(this);
  }

  /// <summary>Field number for the "curtainSwitcher" field.</summary>
  public const int CurtainSwitcherFieldNumber = 1;
  private global::CurtainSwitcher curtainSwitcher_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::CurtainSwitcher CurtainSwitcher {
    get { return curtainSwitcher_; }
    set {
      curtainSwitcher_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetCurtainSwitcherServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetCurtainSwitcherServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(CurtainSwitcher, other.CurtainSwitcher)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (curtainSwitcher_ != null) hash ^= CurtainSwitcher.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (curtainSwitcher_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(CurtainSwitcher);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (curtainSwitcher_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurtainSwitcher);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetCurtainSwitcherServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.curtainSwitcher_ != null) {
      if (curtainSwitcher_ == null) {
        CurtainSwitcher = new global::CurtainSwitcher();
      }
      CurtainSwitcher.MergeFrom(other.CurtainSwitcher);
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (curtainSwitcher_ == null) {
            CurtainSwitcher = new global::CurtainSwitcher();
          }
          input.ReadMessage(CurtainSwitcher);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi cập nhật thông tin rèm cửa
/// </summary>
public sealed partial class UpdateCurtainSwitcherServerResponse : pb::IMessage<UpdateCurtainSwitcherServerResponse> {
  private static readonly pb::MessageParser<UpdateCurtainSwitcherServerResponse> _parser = new pb::MessageParser<UpdateCurtainSwitcherServerResponse>(() => new UpdateCurtainSwitcherServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateCurtainSwitcherServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[138]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateCurtainSwitcherServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateCurtainSwitcherServerResponse(UpdateCurtainSwitcherServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateCurtainSwitcherServerResponse Clone() {
    return new UpdateCurtainSwitcherServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateCurtainSwitcherServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateCurtainSwitcherServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateCurtainSwitcherServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin state của rèm cửa
/// </summary>
public sealed partial class GetCurtainSwitcherStateServerResponse : pb::IMessage<GetCurtainSwitcherStateServerResponse> {
  private static readonly pb::MessageParser<GetCurtainSwitcherStateServerResponse> _parser = new pb::MessageParser<GetCurtainSwitcherStateServerResponse>(() => new GetCurtainSwitcherStateServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetCurtainSwitcherStateServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[139]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCurtainSwitcherStateServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCurtainSwitcherStateServerResponse(GetCurtainSwitcherStateServerResponse other) : this() {
    percentIn_ = other.percentIn_;
    percentOut_ = other.percentOut_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCurtainSwitcherStateServerResponse Clone() {
    return new GetCurtainSwitcherStateServerResponse(this);
  }

  /// <summary>Field number for the "percentIn" field.</summary>
  public const int PercentInFieldNumber = 1;
  private uint percentIn_;
  /// <summary>
  /// Phần trăm hướng trong
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PercentIn {
    get { return percentIn_; }
    set {
      percentIn_ = value;
    }
  }

  /// <summary>Field number for the "percentOut" field.</summary>
  public const int PercentOutFieldNumber = 2;
  private uint percentOut_;
  /// <summary>
  /// Phần trăm hướng ngoài
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PercentOut {
    get { return percentOut_; }
    set {
      percentOut_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetCurtainSwitcherStateServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetCurtainSwitcherStateServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PercentIn != other.PercentIn) return false;
    if (PercentOut != other.PercentOut) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PercentIn != 0) hash ^= PercentIn.GetHashCode();
    if (PercentOut != 0) hash ^= PercentOut.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PercentIn != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(PercentIn);
    }
    if (PercentOut != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(PercentOut);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PercentIn != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PercentIn);
    }
    if (PercentOut != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PercentOut);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetCurtainSwitcherStateServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.PercentIn != 0) {
      PercentIn = other.PercentIn;
    }
    if (other.PercentOut != 0) {
      PercentOut = other.PercentOut;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          PercentIn = input.ReadUInt32();
          break;
        }
        case 16: {
          PercentOut = input.ReadUInt32();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi lệnh điều khiển rèm cửa
/// </summary>
public sealed partial class CurtainSwitcherServerResponse : pb::IMessage<CurtainSwitcherServerResponse> {
  private static readonly pb::MessageParser<CurtainSwitcherServerResponse> _parser = new pb::MessageParser<CurtainSwitcherServerResponse>(() => new CurtainSwitcherServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CurtainSwitcherServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[140]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CurtainSwitcherServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CurtainSwitcherServerResponse(CurtainSwitcherServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CurtainSwitcherServerResponse Clone() {
    return new CurtainSwitcherServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CurtainSwitcherServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CurtainSwitcherServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CurtainSwitcherServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi trạng thái rèm cửa runtime
/// </summary>
public sealed partial class CurtainSwitcherOnChangedServerResponse : pb::IMessage<CurtainSwitcherOnChangedServerResponse> {
  private static readonly pb::MessageParser<CurtainSwitcherOnChangedServerResponse> _parser = new pb::MessageParser<CurtainSwitcherOnChangedServerResponse>(() => new CurtainSwitcherOnChangedServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CurtainSwitcherOnChangedServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[141]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CurtainSwitcherOnChangedServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CurtainSwitcherOnChangedServerResponse(CurtainSwitcherOnChangedServerResponse other) : this() {
    deviceId_ = other.deviceId_;
    percentIn_ = other.percentIn_;
    percentOut_ = other.percentOut_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CurtainSwitcherOnChangedServerResponse Clone() {
    return new CurtainSwitcherOnChangedServerResponse(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  /// <summary>
  /// Id của thiết bị để mobile update trạng thái
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "percentIn" field.</summary>
  public const int PercentInFieldNumber = 2;
  private uint percentIn_;
  /// <summary>
  /// Phần trăm hướng trong
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PercentIn {
    get { return percentIn_; }
    set {
      percentIn_ = value;
    }
  }

  /// <summary>Field number for the "percentOut" field.</summary>
  public const int PercentOutFieldNumber = 3;
  private uint percentOut_;
  /// <summary>
  /// Phần trăm hướng ngoài
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint PercentOut {
    get { return percentOut_; }
    set {
      percentOut_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CurtainSwitcherOnChangedServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CurtainSwitcherOnChangedServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    if (PercentIn != other.PercentIn) return false;
    if (PercentOut != other.PercentOut) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (PercentIn != 0) hash ^= PercentIn.GetHashCode();
    if (PercentOut != 0) hash ^= PercentOut.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (PercentIn != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(PercentIn);
    }
    if (PercentOut != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(PercentOut);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (PercentIn != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PercentIn);
    }
    if (PercentOut != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PercentOut);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CurtainSwitcherOnChangedServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.PercentIn != 0) {
      PercentIn = other.PercentIn;
    }
    if (other.PercentOut != 0) {
      PercentOut = other.PercentOut;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
        case 16: {
          PercentIn = input.ReadUInt32();
          break;
        }
        case 24: {
          PercentOut = input.ReadUInt32();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
///----- Phản hồi về lịch hẹn rèm cửa -----//
/// Phản hồi thông tin danh sách hẹn giờ rèm cửa
/// </summary>
public sealed partial class GetCurtainSwitcherSchedulesServerResponse : pb::IMessage<GetCurtainSwitcherSchedulesServerResponse> {
  private static readonly pb::MessageParser<GetCurtainSwitcherSchedulesServerResponse> _parser = new pb::MessageParser<GetCurtainSwitcherSchedulesServerResponse>(() => new GetCurtainSwitcherSchedulesServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetCurtainSwitcherSchedulesServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[142]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCurtainSwitcherSchedulesServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCurtainSwitcherSchedulesServerResponse(GetCurtainSwitcherSchedulesServerResponse other) : this() {
    schedules_ = other.schedules_.Clone();
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCurtainSwitcherSchedulesServerResponse Clone() {
    return new GetCurtainSwitcherSchedulesServerResponse(this);
  }

  /// <summary>Field number for the "schedules" field.</summary>
  public const int SchedulesFieldNumber = 1;
  private static readonly pb::FieldCodec<global::CurtainSwitcherSchedule> _repeated_schedules_codec
      = pb::FieldCodec.ForMessage(10, global::CurtainSwitcherSchedule.Parser);
  private readonly pbc::RepeatedField<global::CurtainSwitcherSchedule> schedules_ = new pbc::RepeatedField<global::CurtainSwitcherSchedule>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::CurtainSwitcherSchedule> Schedules {
    get { return schedules_; }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetCurtainSwitcherSchedulesServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetCurtainSwitcherSchedulesServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!schedules_.Equals(other.schedules_)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= schedules_.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    schedules_.WriteTo(output, _repeated_schedules_codec);
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += schedules_.CalculateSize(_repeated_schedules_codec);
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetCurtainSwitcherSchedulesServerResponse other) {
    if (other == null) {
      return;
    }
    schedules_.Add(other.schedules_);
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          schedules_.AddEntriesFrom(input, _repeated_schedules_codec);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi số lượng lịch hẹn giờ của rèm cửa
/// </summary>
public sealed partial class GetCountCurtainSwitcherScheduleServerResponse : pb::IMessage<GetCountCurtainSwitcherScheduleServerResponse> {
  private static readonly pb::MessageParser<GetCountCurtainSwitcherScheduleServerResponse> _parser = new pb::MessageParser<GetCountCurtainSwitcherScheduleServerResponse>(() => new GetCountCurtainSwitcherScheduleServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetCountCurtainSwitcherScheduleServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[143]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCountCurtainSwitcherScheduleServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCountCurtainSwitcherScheduleServerResponse(GetCountCurtainSwitcherScheduleServerResponse other) : this() {
    count_ = other.count_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCountCurtainSwitcherScheduleServerResponse Clone() {
    return new GetCountCurtainSwitcherScheduleServerResponse(this);
  }

  /// <summary>Field number for the "count" field.</summary>
  public const int CountFieldNumber = 1;
  private uint count_;
  /// <summary>
  /// Id của rèm cửa
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Count {
    get { return count_; }
    set {
      count_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetCountCurtainSwitcherScheduleServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetCountCurtainSwitcherScheduleServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Count != other.Count) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Count != 0) hash ^= Count.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Count != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(Count);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Count != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Count);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetCountCurtainSwitcherScheduleServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.Count != 0) {
      Count = other.Count;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Count = input.ReadUInt32();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin chi tiết 1 lịch của rèm cửa
/// </summary>
public sealed partial class GetCurtainSwitcherScheduleServerResponse : pb::IMessage<GetCurtainSwitcherScheduleServerResponse> {
  private static readonly pb::MessageParser<GetCurtainSwitcherScheduleServerResponse> _parser = new pb::MessageParser<GetCurtainSwitcherScheduleServerResponse>(() => new GetCurtainSwitcherScheduleServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetCurtainSwitcherScheduleServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[144]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCurtainSwitcherScheduleServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCurtainSwitcherScheduleServerResponse(GetCurtainSwitcherScheduleServerResponse other) : this() {
    schedule_ = other.schedule_ != null ? other.schedule_.Clone() : null;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCurtainSwitcherScheduleServerResponse Clone() {
    return new GetCurtainSwitcherScheduleServerResponse(this);
  }

  /// <summary>Field number for the "schedule" field.</summary>
  public const int ScheduleFieldNumber = 1;
  private global::CurtainSwitcherSchedule schedule_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::CurtainSwitcherSchedule Schedule {
    get { return schedule_; }
    set {
      schedule_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetCurtainSwitcherScheduleServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetCurtainSwitcherScheduleServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Schedule, other.Schedule)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (schedule_ != null) hash ^= Schedule.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (schedule_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Schedule);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (schedule_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schedule);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetCurtainSwitcherScheduleServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.schedule_ != null) {
      if (schedule_ == null) {
        Schedule = new global::CurtainSwitcherSchedule();
      }
      Schedule.MergeFrom(other.Schedule);
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (schedule_ == null) {
            Schedule = new global::CurtainSwitcherSchedule();
          }
          input.ReadMessage(Schedule);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thêm mới 1 lịch của rèm cửa
/// </summary>
public sealed partial class AddCurtainSwitcherScheduleServerResponse : pb::IMessage<AddCurtainSwitcherScheduleServerResponse> {
  private static readonly pb::MessageParser<AddCurtainSwitcherScheduleServerResponse> _parser = new pb::MessageParser<AddCurtainSwitcherScheduleServerResponse>(() => new AddCurtainSwitcherScheduleServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AddCurtainSwitcherScheduleServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[145]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddCurtainSwitcherScheduleServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddCurtainSwitcherScheduleServerResponse(AddCurtainSwitcherScheduleServerResponse other) : this() {
    curtainSwitcherScheduleId_ = other.curtainSwitcherScheduleId_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddCurtainSwitcherScheduleServerResponse Clone() {
    return new AddCurtainSwitcherScheduleServerResponse(this);
  }

  /// <summary>Field number for the "curtainSwitcherScheduleId" field.</summary>
  public const int CurtainSwitcherScheduleIdFieldNumber = 1;
  private string curtainSwitcherScheduleId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CurtainSwitcherScheduleId {
    get { return curtainSwitcherScheduleId_; }
    set {
      curtainSwitcherScheduleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AddCurtainSwitcherScheduleServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AddCurtainSwitcherScheduleServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CurtainSwitcherScheduleId != other.CurtainSwitcherScheduleId) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CurtainSwitcherScheduleId.Length != 0) hash ^= CurtainSwitcherScheduleId.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CurtainSwitcherScheduleId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(CurtainSwitcherScheduleId);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CurtainSwitcherScheduleId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CurtainSwitcherScheduleId);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AddCurtainSwitcherScheduleServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.CurtainSwitcherScheduleId.Length != 0) {
      CurtainSwitcherScheduleId = other.CurtainSwitcherScheduleId;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          CurtainSwitcherScheduleId = input.ReadString();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi update 1 lịch của rèm cửa
/// </summary>
public sealed partial class UpdateCurtainSwitcherScheduleServerResponse : pb::IMessage<UpdateCurtainSwitcherScheduleServerResponse> {
  private static readonly pb::MessageParser<UpdateCurtainSwitcherScheduleServerResponse> _parser = new pb::MessageParser<UpdateCurtainSwitcherScheduleServerResponse>(() => new UpdateCurtainSwitcherScheduleServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateCurtainSwitcherScheduleServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[146]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateCurtainSwitcherScheduleServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateCurtainSwitcherScheduleServerResponse(UpdateCurtainSwitcherScheduleServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateCurtainSwitcherScheduleServerResponse Clone() {
    return new UpdateCurtainSwitcherScheduleServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateCurtainSwitcherScheduleServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateCurtainSwitcherScheduleServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateCurtainSwitcherScheduleServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi xóa 1 lịch của rèm cửa
/// </summary>
public sealed partial class DeleteCurtainSwitcherScheduleServerResponse : pb::IMessage<DeleteCurtainSwitcherScheduleServerResponse> {
  private static readonly pb::MessageParser<DeleteCurtainSwitcherScheduleServerResponse> _parser = new pb::MessageParser<DeleteCurtainSwitcherScheduleServerResponse>(() => new DeleteCurtainSwitcherScheduleServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeleteCurtainSwitcherScheduleServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[147]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteCurtainSwitcherScheduleServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteCurtainSwitcherScheduleServerResponse(DeleteCurtainSwitcherScheduleServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteCurtainSwitcherScheduleServerResponse Clone() {
    return new DeleteCurtainSwitcherScheduleServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeleteCurtainSwitcherScheduleServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeleteCurtainSwitcherScheduleServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeleteCurtainSwitcherScheduleServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi yêu cầu thiết lập active 1 lịch của 1 rèm cửa
/// </summary>
public sealed partial class SetActiveCurtainSwitcherScheduleServerResponse : pb::IMessage<SetActiveCurtainSwitcherScheduleServerResponse> {
  private static readonly pb::MessageParser<SetActiveCurtainSwitcherScheduleServerResponse> _parser = new pb::MessageParser<SetActiveCurtainSwitcherScheduleServerResponse>(() => new SetActiveCurtainSwitcherScheduleServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SetActiveCurtainSwitcherScheduleServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[148]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetActiveCurtainSwitcherScheduleServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetActiveCurtainSwitcherScheduleServerResponse(SetActiveCurtainSwitcherScheduleServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetActiveCurtainSwitcherScheduleServerResponse Clone() {
    return new SetActiveCurtainSwitcherScheduleServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SetActiveCurtainSwitcherScheduleServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SetActiveCurtainSwitcherScheduleServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SetActiveCurtainSwitcherScheduleServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi trạng thái của thiết bị chuyển động
/// </summary>
public sealed partial class MotionOnChangedServerResponse : pb::IMessage<MotionOnChangedServerResponse> {
  private static readonly pb::MessageParser<MotionOnChangedServerResponse> _parser = new pb::MessageParser<MotionOnChangedServerResponse>(() => new MotionOnChangedServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MotionOnChangedServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[149]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MotionOnChangedServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MotionOnChangedServerResponse(MotionOnChangedServerResponse other) : this() {
    deviceId_ = other.deviceId_;
    state_ = other.state_;
    sensorReport_ = other.sensorReport_ != null ? other.sensorReport_.Clone() : null;
    batteryCapacity_ = other.batteryCapacity_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MotionOnChangedServerResponse Clone() {
    return new MotionOnChangedServerResponse(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  /// <summary>
  /// Id của thiết bị chuyển động
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "state" field.</summary>
  public const int StateFieldNumber = 2;
  private global::MotionState state_ = global::MotionState.MotionNone;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MotionState State {
    get { return state_; }
    set {
      state_ = value;
    }
  }

  /// <summary>Field number for the "sensorReport" field.</summary>
  public const int SensorReportFieldNumber = 3;
  private global::EnvironmentSensorReport sensorReport_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::EnvironmentSensorReport SensorReport {
    get { return sensorReport_; }
    set {
      sensorReport_ = value;
    }
  }

  /// <summary>Field number for the "batteryCapacity" field.</summary>
  public const int BatteryCapacityFieldNumber = 4;
  private float batteryCapacity_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float BatteryCapacity {
    get { return batteryCapacity_; }
    set {
      batteryCapacity_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MotionOnChangedServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MotionOnChangedServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    if (State != other.State) return false;
    if (!object.Equals(SensorReport, other.SensorReport)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BatteryCapacity, other.BatteryCapacity)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (State != global::MotionState.MotionNone) hash ^= State.GetHashCode();
    if (sensorReport_ != null) hash ^= SensorReport.GetHashCode();
    if (BatteryCapacity != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BatteryCapacity);
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (State != global::MotionState.MotionNone) {
      output.WriteRawTag(16);
      output.WriteEnum((int) State);
    }
    if (sensorReport_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(SensorReport);
    }
    if (BatteryCapacity != 0F) {
      output.WriteRawTag(37);
      output.WriteFloat(BatteryCapacity);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (State != global::MotionState.MotionNone) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
    }
    if (sensorReport_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SensorReport);
    }
    if (BatteryCapacity != 0F) {
      size += 1 + 4;
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MotionOnChangedServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.State != global::MotionState.MotionNone) {
      State = other.State;
    }
    if (other.sensorReport_ != null) {
      if (sensorReport_ == null) {
        SensorReport = new global::EnvironmentSensorReport();
      }
      SensorReport.MergeFrom(other.SensorReport);
    }
    if (other.BatteryCapacity != 0F) {
      BatteryCapacity = other.BatteryCapacity;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
        case 16: {
          State = (global::MotionState) input.ReadEnum();
          break;
        }
        case 26: {
          if (sensorReport_ == null) {
            SensorReport = new global::EnvironmentSensorReport();
          }
          input.ReadMessage(SensorReport);
          break;
        }
        case 37: {
          BatteryCapacity = input.ReadFloat();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi trạng thái của thiết bị Homekit
/// </summary>
public sealed partial class HomekitOnChangedServerResponse : pb::IMessage<HomekitOnChangedServerResponse> {
  private static readonly pb::MessageParser<HomekitOnChangedServerResponse> _parser = new pb::MessageParser<HomekitOnChangedServerResponse>(() => new HomekitOnChangedServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<HomekitOnChangedServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[150]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public HomekitOnChangedServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public HomekitOnChangedServerResponse(HomekitOnChangedServerResponse other) : this() {
    deviceId_ = other.deviceId_;
    homekitMode_ = other.homekitMode_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public HomekitOnChangedServerResponse Clone() {
    return new HomekitOnChangedServerResponse(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  /// <summary>
  /// Id của thiết bị homekit
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "homekitMode" field.</summary>
  public const int HomekitModeFieldNumber = 2;
  private global::HomekitMode homekitMode_ = global::HomekitMode.HomekitNormalMode;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::HomekitMode HomekitMode {
    get { return homekitMode_; }
    set {
      homekitMode_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as HomekitOnChangedServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(HomekitOnChangedServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    if (HomekitMode != other.HomekitMode) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (HomekitMode != global::HomekitMode.HomekitNormalMode) hash ^= HomekitMode.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (HomekitMode != global::HomekitMode.HomekitNormalMode) {
      output.WriteRawTag(16);
      output.WriteEnum((int) HomekitMode);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (HomekitMode != global::HomekitMode.HomekitNormalMode) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) HomekitMode);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(HomekitOnChangedServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.HomekitMode != global::HomekitMode.HomekitNormalMode) {
      HomekitMode = other.HomekitMode;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
        case 16: {
          HomekitMode = (global::HomekitMode) input.ReadEnum();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi trạng thái của thiết bị nút nhấn
/// </summary>
public sealed partial class ButtonOnChangedServerResponse : pb::IMessage<ButtonOnChangedServerResponse> {
  private static readonly pb::MessageParser<ButtonOnChangedServerResponse> _parser = new pb::MessageParser<ButtonOnChangedServerResponse>(() => new ButtonOnChangedServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ButtonOnChangedServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[151]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ButtonOnChangedServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ButtonOnChangedServerResponse(ButtonOnChangedServerResponse other) : this() {
    deviceId_ = other.deviceId_;
    state_ = other.state_;
    index_ = other.index_;
    batteryCapacity_ = other.batteryCapacity_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ButtonOnChangedServerResponse Clone() {
    return new ButtonOnChangedServerResponse(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  /// <summary>
  /// Id của thiết bị nút nhấn
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "state" field.</summary>
  public const int StateFieldNumber = 2;
  private global::ButtonState state_ = global::ButtonState.Nothing;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ButtonState State {
    get { return state_; }
    set {
      state_ = value;
    }
  }

  /// <summary>Field number for the "index" field.</summary>
  public const int IndexFieldNumber = 3;
  private uint index_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Index {
    get { return index_; }
    set {
      index_ = value;
    }
  }

  /// <summary>Field number for the "batteryCapacity" field.</summary>
  public const int BatteryCapacityFieldNumber = 4;
  private float batteryCapacity_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float BatteryCapacity {
    get { return batteryCapacity_; }
    set {
      batteryCapacity_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ButtonOnChangedServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ButtonOnChangedServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    if (State != other.State) return false;
    if (Index != other.Index) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BatteryCapacity, other.BatteryCapacity)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (State != global::ButtonState.Nothing) hash ^= State.GetHashCode();
    if (Index != 0) hash ^= Index.GetHashCode();
    if (BatteryCapacity != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BatteryCapacity);
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (State != global::ButtonState.Nothing) {
      output.WriteRawTag(16);
      output.WriteEnum((int) State);
    }
    if (Index != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(Index);
    }
    if (BatteryCapacity != 0F) {
      output.WriteRawTag(37);
      output.WriteFloat(BatteryCapacity);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (State != global::ButtonState.Nothing) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
    }
    if (Index != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
    }
    if (BatteryCapacity != 0F) {
      size += 1 + 4;
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ButtonOnChangedServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.State != global::ButtonState.Nothing) {
      State = other.State;
    }
    if (other.Index != 0) {
      Index = other.Index;
    }
    if (other.BatteryCapacity != 0F) {
      BatteryCapacity = other.BatteryCapacity;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
        case 16: {
          State = (global::ButtonState) input.ReadEnum();
          break;
        }
        case 24: {
          Index = input.ReadUInt32();
          break;
        }
        case 37: {
          BatteryCapacity = input.ReadFloat();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi trạng thái của thiết bị nhóm
/// </summary>
public sealed partial class GroupControlOnChangedServerResponse : pb::IMessage<GroupControlOnChangedServerResponse> {
  private static readonly pb::MessageParser<GroupControlOnChangedServerResponse> _parser = new pb::MessageParser<GroupControlOnChangedServerResponse>(() => new GroupControlOnChangedServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GroupControlOnChangedServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[152]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GroupControlOnChangedServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GroupControlOnChangedServerResponse(GroupControlOnChangedServerResponse other) : this() {
    deviceId_ = other.deviceId_;
    state_ = other.state_ != null ? other.state_.Clone() : null;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GroupControlOnChangedServerResponse Clone() {
    return new GroupControlOnChangedServerResponse(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  /// <summary>
  /// Id của thiết bị nhóm
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "state" field.</summary>
  public const int StateFieldNumber = 2;
  private global::ControlState state_;
  /// <summary>
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ControlState State {
    get { return state_; }
    set {
      state_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GroupControlOnChangedServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GroupControlOnChangedServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    if (!object.Equals(State, other.State)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (state_ != null) hash ^= State.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (state_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(State);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (state_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(State);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GroupControlOnChangedServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.state_ != null) {
      if (state_ == null) {
        State = new global::ControlState();
      }
      State.MergeFrom(other.State);
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
        case 18: {
          if (state_ == null) {
            State = new global::ControlState();
          }
          input.ReadMessage(State);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

public sealed partial class LedDriverOnChangedServerResponse : pb::IMessage<LedDriverOnChangedServerResponse> {
  private static readonly pb::MessageParser<LedDriverOnChangedServerResponse> _parser = new pb::MessageParser<LedDriverOnChangedServerResponse>(() => new LedDriverOnChangedServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<LedDriverOnChangedServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[153]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LedDriverOnChangedServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LedDriverOnChangedServerResponse(LedDriverOnChangedServerResponse other) : this() {
    ledId_ = other.ledId_;
    powerState_ = other.powerState_;
    brightnessPercent_ = other.brightnessPercent_;
    roomId_ = other.roomId_;
    ledItems_ = other.ledItems_.Clone();
    ledDriverId_ = other.ledDriverId_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LedDriverOnChangedServerResponse Clone() {
    return new LedDriverOnChangedServerResponse(this);
  }

  /// <summary>Field number for the "ledId" field.</summary>
  public const int LedIdFieldNumber = 1;
  private string ledId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string LedId {
    get { return ledId_; }
    set {
      ledId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "powerState" field.</summary>
  public const int PowerStateFieldNumber = 2;
  private global::PowerState powerState_ = global::PowerState.Off;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PowerState PowerState {
    get { return powerState_; }
    set {
      powerState_ = value;
    }
  }

  /// <summary>Field number for the "brightnessPercent" field.</summary>
  public const int BrightnessPercentFieldNumber = 3;
  private int brightnessPercent_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int BrightnessPercent {
    get { return brightnessPercent_; }
    set {
      brightnessPercent_ = value;
    }
  }

  /// <summary>Field number for the "roomId" field.</summary>
  public const int RoomIdFieldNumber = 4;
  private string roomId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RoomId {
    get { return roomId_; }
    set {
      roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "ledItems" field.</summary>
  public const int LedItemsFieldNumber = 5;
  private static readonly pb::FieldCodec<global::LedItem> _repeated_ledItems_codec
      = pb::FieldCodec.ForMessage(42, global::LedItem.Parser);
  private readonly pbc::RepeatedField<global::LedItem> ledItems_ = new pbc::RepeatedField<global::LedItem>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::LedItem> LedItems {
    get { return ledItems_; }
  }

  /// <summary>Field number for the "ledDriverId" field.</summary>
  public const int LedDriverIdFieldNumber = 6;
  private string ledDriverId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string LedDriverId {
    get { return ledDriverId_; }
    set {
      ledDriverId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as LedDriverOnChangedServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(LedDriverOnChangedServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (LedId != other.LedId) return false;
    if (PowerState != other.PowerState) return false;
    if (BrightnessPercent != other.BrightnessPercent) return false;
    if (RoomId != other.RoomId) return false;
    if(!ledItems_.Equals(other.ledItems_)) return false;
    if (LedDriverId != other.LedDriverId) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (LedId.Length != 0) hash ^= LedId.GetHashCode();
    if (PowerState != global::PowerState.Off) hash ^= PowerState.GetHashCode();
    if (BrightnessPercent != 0) hash ^= BrightnessPercent.GetHashCode();
    if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
    hash ^= ledItems_.GetHashCode();
    if (LedDriverId.Length != 0) hash ^= LedDriverId.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (LedId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(LedId);
    }
    if (PowerState != global::PowerState.Off) {
      output.WriteRawTag(16);
      output.WriteEnum((int) PowerState);
    }
    if (BrightnessPercent != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(BrightnessPercent);
    }
    if (RoomId.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(RoomId);
    }
    ledItems_.WriteTo(output, _repeated_ledItems_codec);
    if (LedDriverId.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(LedDriverId);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (LedId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(LedId);
    }
    if (PowerState != global::PowerState.Off) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PowerState);
    }
    if (BrightnessPercent != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(BrightnessPercent);
    }
    if (RoomId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
    }
    size += ledItems_.CalculateSize(_repeated_ledItems_codec);
    if (LedDriverId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(LedDriverId);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(LedDriverOnChangedServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.LedId.Length != 0) {
      LedId = other.LedId;
    }
    if (other.PowerState != global::PowerState.Off) {
      PowerState = other.PowerState;
    }
    if (other.BrightnessPercent != 0) {
      BrightnessPercent = other.BrightnessPercent;
    }
    if (other.RoomId.Length != 0) {
      RoomId = other.RoomId;
    }
    ledItems_.Add(other.ledItems_);
    if (other.LedDriverId.Length != 0) {
      LedDriverId = other.LedDriverId;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          LedId = input.ReadString();
          break;
        }
        case 16: {
          PowerState = (global::PowerState) input.ReadEnum();
          break;
        }
        case 24: {
          BrightnessPercent = input.ReadInt32();
          break;
        }
        case 34: {
          RoomId = input.ReadString();
          break;
        }
        case 42: {
          ledItems_.AddEntriesFrom(input, _repeated_ledItems_codec);
          break;
        }
        case 50: {
          LedDriverId = input.ReadString();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

public sealed partial class EnvironmentSensorOnChangedServerResponse : pb::IMessage<EnvironmentSensorOnChangedServerResponse> {
  private static readonly pb::MessageParser<EnvironmentSensorOnChangedServerResponse> _parser = new pb::MessageParser<EnvironmentSensorOnChangedServerResponse>(() => new EnvironmentSensorOnChangedServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<EnvironmentSensorOnChangedServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[154]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EnvironmentSensorOnChangedServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EnvironmentSensorOnChangedServerResponse(EnvironmentSensorOnChangedServerResponse other) : this() {
    id_ = other.id_;
    deviceId_ = other.deviceId_;
    environmentSensorReport_ = other.environmentSensorReport_ != null ? other.environmentSensorReport_.Clone() : null;
    battery_ = other.battery_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EnvironmentSensorOnChangedServerResponse Clone() {
    return new EnvironmentSensorOnChangedServerResponse(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private string id_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Id {
    get { return id_; }
    set {
      id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 2;
  private string deviceId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "environmentSensorReport" field.</summary>
  public const int EnvironmentSensorReportFieldNumber = 3;
  private global::EnvironmentSensorReport environmentSensorReport_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::EnvironmentSensorReport EnvironmentSensorReport {
    get { return environmentSensorReport_; }
    set {
      environmentSensorReport_ = value;
    }
  }

  /// <summary>Field number for the "battery" field.</summary>
  public const int BatteryFieldNumber = 4;
  private int battery_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Battery {
    get { return battery_; }
    set {
      battery_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as EnvironmentSensorOnChangedServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(EnvironmentSensorOnChangedServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (DeviceId != other.DeviceId) return false;
    if (!object.Equals(EnvironmentSensorReport, other.EnvironmentSensorReport)) return false;
    if (Battery != other.Battery) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id.Length != 0) hash ^= Id.GetHashCode();
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (environmentSensorReport_ != null) hash ^= EnvironmentSensorReport.GetHashCode();
    if (Battery != 0) hash ^= Battery.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (DeviceId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(DeviceId);
    }
    if (environmentSensorReport_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(EnvironmentSensorReport);
    }
    if (Battery != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Battery);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
    }
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (environmentSensorReport_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(EnvironmentSensorReport);
    }
    if (Battery != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Battery);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(EnvironmentSensorOnChangedServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.Id.Length != 0) {
      Id = other.Id;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.environmentSensorReport_ != null) {
      if (environmentSensorReport_ == null) {
        EnvironmentSensorReport = new global::EnvironmentSensorReport();
      }
      EnvironmentSensorReport.MergeFrom(other.EnvironmentSensorReport);
    }
    if (other.Battery != 0) {
      Battery = other.Battery;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
        case 18: {
          DeviceId = input.ReadString();
          break;
        }
        case 26: {
          if (environmentSensorReport_ == null) {
            EnvironmentSensorReport = new global::EnvironmentSensorReport();
          }
          input.ReadMessage(EnvironmentSensorReport);
          break;
        }
        case 32: {
          Battery = input.ReadInt32();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

public sealed partial class SmartPlugOnChangedServerResponse : pb::IMessage<SmartPlugOnChangedServerResponse> {
  private static readonly pb::MessageParser<SmartPlugOnChangedServerResponse> _parser = new pb::MessageParser<SmartPlugOnChangedServerResponse>(() => new SmartPlugOnChangedServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SmartPlugOnChangedServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[155]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SmartPlugOnChangedServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SmartPlugOnChangedServerResponse(SmartPlugOnChangedServerResponse other) : this() {
    id_ = other.id_;
    deviceId_ = other.deviceId_;
    amp_ = other.amp_;
    power_ = other.power_;
    volt_ = other.volt_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SmartPlugOnChangedServerResponse Clone() {
    return new SmartPlugOnChangedServerResponse(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private string id_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Id {
    get { return id_; }
    set {
      id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 2;
  private string deviceId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "amp" field.</summary>
  public const int AmpFieldNumber = 3;
  private float amp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Amp {
    get { return amp_; }
    set {
      amp_ = value;
    }
  }

  /// <summary>Field number for the "power" field.</summary>
  public const int PowerFieldNumber = 4;
  private float power_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Power {
    get { return power_; }
    set {
      power_ = value;
    }
  }

  /// <summary>Field number for the "volt" field.</summary>
  public const int VoltFieldNumber = 5;
  private float volt_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Volt {
    get { return volt_; }
    set {
      volt_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SmartPlugOnChangedServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SmartPlugOnChangedServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (DeviceId != other.DeviceId) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Amp, other.Amp)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Power, other.Power)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Volt, other.Volt)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id.Length != 0) hash ^= Id.GetHashCode();
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (Amp != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Amp);
    if (Power != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Power);
    if (Volt != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Volt);
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (DeviceId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(DeviceId);
    }
    if (Amp != 0F) {
      output.WriteRawTag(29);
      output.WriteFloat(Amp);
    }
    if (Power != 0F) {
      output.WriteRawTag(37);
      output.WriteFloat(Power);
    }
    if (Volt != 0F) {
      output.WriteRawTag(45);
      output.WriteFloat(Volt);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
    }
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (Amp != 0F) {
      size += 1 + 4;
    }
    if (Power != 0F) {
      size += 1 + 4;
    }
    if (Volt != 0F) {
      size += 1 + 4;
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SmartPlugOnChangedServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.Id.Length != 0) {
      Id = other.Id;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.Amp != 0F) {
      Amp = other.Amp;
    }
    if (other.Power != 0F) {
      Power = other.Power;
    }
    if (other.Volt != 0F) {
      Volt = other.Volt;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
        case 18: {
          DeviceId = input.ReadString();
          break;
        }
        case 29: {
          Amp = input.ReadFloat();
          break;
        }
        case 37: {
          Power = input.ReadFloat();
          break;
        }
        case 45: {
          Volt = input.ReadFloat();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu trả về thông tin của đồng hồ điện/nước
/// </summary>
public sealed partial class GetMeterServerRequest : pb::IMessage<GetMeterServerRequest> {
  private static readonly pb::MessageParser<GetMeterServerRequest> _parser = new pb::MessageParser<GetMeterServerRequest>(() => new GetMeterServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetMeterServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[156]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMeterServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMeterServerRequest(GetMeterServerRequest other) : this() {
    meterId_ = other.meterId_;
    serialNumber_ = other.serialNumber_;
    type_ = other.type_;
    date_ = other.date_ != null ? other.date_.Clone() : null;
    months_ = other.months_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMeterServerRequest Clone() {
    return new GetMeterServerRequest(this);
  }

  /// <summary>Field number for the "meterId" field.</summary>
  public const int MeterIdFieldNumber = 1;
  private string meterId_ = "";
  /// <summary>
  /// Id của thiết bị điện/nước
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string MeterId {
    get { return meterId_; }
    set {
      meterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "serialNumber" field.</summary>
  public const int SerialNumberFieldNumber = 2;
  private string serialNumber_ = "";
  /// <summary>
  /// [Deprecated]
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SerialNumber {
    get { return serialNumber_; }
    set {
      serialNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 3;
  private global::TypeMeter type_ = global::TypeMeter.ElectricMeter;
  /// <summary>
  /// [Deprecated]
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::TypeMeter Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "date" field.</summary>
  public const int DateFieldNumber = 4;
  private global::DateTime date_;
  /// <summary>
  /// [Deprecated]
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DateTime Date {
    get { return date_; }
    set {
      date_ = value;
    }
  }

  /// <summary>Field number for the "months" field.</summary>
  public const int MonthsFieldNumber = 5;
  private int months_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Months {
    get { return months_; }
    set {
      months_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetMeterServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetMeterServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MeterId != other.MeterId) return false;
    if (SerialNumber != other.SerialNumber) return false;
    if (Type != other.Type) return false;
    if (!object.Equals(Date, other.Date)) return false;
    if (Months != other.Months) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (MeterId.Length != 0) hash ^= MeterId.GetHashCode();
    if (SerialNumber.Length != 0) hash ^= SerialNumber.GetHashCode();
    if (Type != global::TypeMeter.ElectricMeter) hash ^= Type.GetHashCode();
    if (date_ != null) hash ^= Date.GetHashCode();
    if (Months != 0) hash ^= Months.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (MeterId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(MeterId);
    }
    if (SerialNumber.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(SerialNumber);
    }
    if (Type != global::TypeMeter.ElectricMeter) {
      output.WriteRawTag(24);
      output.WriteEnum((int) Type);
    }
    if (date_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Date);
    }
    if (Months != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(Months);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (MeterId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MeterId);
    }
    if (SerialNumber.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SerialNumber);
    }
    if (Type != global::TypeMeter.ElectricMeter) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (date_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Date);
    }
    if (Months != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Months);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetMeterServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.MeterId.Length != 0) {
      MeterId = other.MeterId;
    }
    if (other.SerialNumber.Length != 0) {
      SerialNumber = other.SerialNumber;
    }
    if (other.Type != global::TypeMeter.ElectricMeter) {
      Type = other.Type;
    }
    if (other.date_ != null) {
      if (date_ == null) {
        Date = new global::DateTime();
      }
      Date.MergeFrom(other.Date);
    }
    if (other.Months != 0) {
      Months = other.Months;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          MeterId = input.ReadString();
          break;
        }
        case 18: {
          SerialNumber = input.ReadString();
          break;
        }
        case 24: {
          Type = (global::TypeMeter) input.ReadEnum();
          break;
        }
        case 34: {
          if (date_ == null) {
            Date = new global::DateTime();
          }
          input.ReadMessage(Date);
          break;
        }
        case 40: {
          Months = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin của đồng hồ điện/nước
/// </summary>
public sealed partial class GetMeterServerResponse : pb::IMessage<GetMeterServerResponse> {
  private static readonly pb::MessageParser<GetMeterServerResponse> _parser = new pb::MessageParser<GetMeterServerResponse>(() => new GetMeterServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetMeterServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[157]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMeterServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMeterServerResponse(GetMeterServerResponse other) : this() {
    meter_ = other.meter_ != null ? other.meter_.Clone() : null;
    meterEstimate_ = other.meterEstimate_.Clone();
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMeterServerResponse Clone() {
    return new GetMeterServerResponse(this);
  }

  /// <summary>Field number for the "meter" field.</summary>
  public const int MeterFieldNumber = 1;
  private global::Meter meter_;
  /// <summary>
  /// [Deprecated]
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Meter Meter {
    get { return meter_; }
    set {
      meter_ = value;
    }
  }

  /// <summary>Field number for the "meterEstimate" field.</summary>
  public const int MeterEstimateFieldNumber = 2;
  private static readonly pb::FieldCodec<global::MeterEstimate> _repeated_meterEstimate_codec
      = pb::FieldCodec.ForMessage(18, global::MeterEstimate.Parser);
  private readonly pbc::RepeatedField<global::MeterEstimate> meterEstimate_ = new pbc::RepeatedField<global::MeterEstimate>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::MeterEstimate> MeterEstimate {
    get { return meterEstimate_; }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetMeterServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetMeterServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Meter, other.Meter)) return false;
    if(!meterEstimate_.Equals(other.meterEstimate_)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (meter_ != null) hash ^= Meter.GetHashCode();
    hash ^= meterEstimate_.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (meter_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Meter);
    }
    meterEstimate_.WriteTo(output, _repeated_meterEstimate_codec);
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (meter_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Meter);
    }
    size += meterEstimate_.CalculateSize(_repeated_meterEstimate_codec);
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetMeterServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.meter_ != null) {
      if (meter_ == null) {
        Meter = new global::Meter();
      }
      Meter.MergeFrom(other.Meter);
    }
    meterEstimate_.Add(other.meterEstimate_);
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (meter_ == null) {
            Meter = new global::Meter();
          }
          input.ReadMessage(Meter);
          break;
        }
        case 18: {
          meterEstimate_.AddEntriesFrom(input, _repeated_meterEstimate_codec);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận yêu cầu cập nhật đồng hồ
/// </summary>
public sealed partial class UpdateMeterServerRequest : pb::IMessage<UpdateMeterServerRequest> {
  private static readonly pb::MessageParser<UpdateMeterServerRequest> _parser = new pb::MessageParser<UpdateMeterServerRequest>(() => new UpdateMeterServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateMeterServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[158]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateMeterServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateMeterServerRequest(UpdateMeterServerRequest other) : this() {
    meter_ = other.meter_ != null ? other.meter_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateMeterServerRequest Clone() {
    return new UpdateMeterServerRequest(this);
  }

  /// <summary>Field number for the "meter" field.</summary>
  public const int MeterFieldNumber = 1;
  private global::Meter meter_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Meter Meter {
    get { return meter_; }
    set {
      meter_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateMeterServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateMeterServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Meter, other.Meter)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (meter_ != null) hash ^= Meter.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (meter_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Meter);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (meter_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Meter);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateMeterServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.meter_ != null) {
      if (meter_ == null) {
        Meter = new global::Meter();
      }
      Meter.MergeFrom(other.Meter);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (meter_ == null) {
            Meter = new global::Meter();
          }
          input.ReadMessage(Meter);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu trả về thông tin tiêu thụ theo ngày trong tháng
/// </summary>
public sealed partial class GetMeterEstimatesDayInMonthServerRequest : pb::IMessage<GetMeterEstimatesDayInMonthServerRequest> {
  private static readonly pb::MessageParser<GetMeterEstimatesDayInMonthServerRequest> _parser = new pb::MessageParser<GetMeterEstimatesDayInMonthServerRequest>(() => new GetMeterEstimatesDayInMonthServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetMeterEstimatesDayInMonthServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[159]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMeterEstimatesDayInMonthServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMeterEstimatesDayInMonthServerRequest(GetMeterEstimatesDayInMonthServerRequest other) : this() {
    serialNumber_ = other.serialNumber_;
    type_ = other.type_;
    year_ = other.year_;
    month_ = other.month_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMeterEstimatesDayInMonthServerRequest Clone() {
    return new GetMeterEstimatesDayInMonthServerRequest(this);
  }

  /// <summary>Field number for the "serialNumber" field.</summary>
  public const int SerialNumberFieldNumber = 1;
  private string serialNumber_ = "";
  /// <summary>
  /// SerialNumber
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SerialNumber {
    get { return serialNumber_; }
    set {
      serialNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 2;
  private global::TypeMeter type_ = global::TypeMeter.ElectricMeter;
  /// <summary>
  /// Là điện or nước
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::TypeMeter Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "year" field.</summary>
  public const int YearFieldNumber = 3;
  private uint year_;
  /// <summary>
  /// Năm
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Year {
    get { return year_; }
    set {
      year_ = value;
    }
  }

  /// <summary>Field number for the "month" field.</summary>
  public const int MonthFieldNumber = 4;
  private uint month_;
  /// <summary>
  /// Tháng
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Month {
    get { return month_; }
    set {
      month_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetMeterEstimatesDayInMonthServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetMeterEstimatesDayInMonthServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SerialNumber != other.SerialNumber) return false;
    if (Type != other.Type) return false;
    if (Year != other.Year) return false;
    if (Month != other.Month) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SerialNumber.Length != 0) hash ^= SerialNumber.GetHashCode();
    if (Type != global::TypeMeter.ElectricMeter) hash ^= Type.GetHashCode();
    if (Year != 0) hash ^= Year.GetHashCode();
    if (Month != 0) hash ^= Month.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SerialNumber.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(SerialNumber);
    }
    if (Type != global::TypeMeter.ElectricMeter) {
      output.WriteRawTag(16);
      output.WriteEnum((int) Type);
    }
    if (Year != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(Year);
    }
    if (Month != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(Month);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SerialNumber.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SerialNumber);
    }
    if (Type != global::TypeMeter.ElectricMeter) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (Year != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Year);
    }
    if (Month != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Month);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetMeterEstimatesDayInMonthServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.SerialNumber.Length != 0) {
      SerialNumber = other.SerialNumber;
    }
    if (other.Type != global::TypeMeter.ElectricMeter) {
      Type = other.Type;
    }
    if (other.Year != 0) {
      Year = other.Year;
    }
    if (other.Month != 0) {
      Month = other.Month;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          SerialNumber = input.ReadString();
          break;
        }
        case 16: {
          Type = (global::TypeMeter) input.ReadEnum();
          break;
        }
        case 24: {
          Year = input.ReadUInt32();
          break;
        }
        case 32: {
          Month = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi yêu cầu trả về thông tin tiêu thụ theo ngày
/// </summary>
public sealed partial class GetMeterEstimatesDayInMonthServerResponse : pb::IMessage<GetMeterEstimatesDayInMonthServerResponse> {
  private static readonly pb::MessageParser<GetMeterEstimatesDayInMonthServerResponse> _parser = new pb::MessageParser<GetMeterEstimatesDayInMonthServerResponse>(() => new GetMeterEstimatesDayInMonthServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetMeterEstimatesDayInMonthServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[160]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMeterEstimatesDayInMonthServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMeterEstimatesDayInMonthServerResponse(GetMeterEstimatesDayInMonthServerResponse other) : this() {
    estimates_ = other.estimates_.Clone();
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMeterEstimatesDayInMonthServerResponse Clone() {
    return new GetMeterEstimatesDayInMonthServerResponse(this);
  }

  /// <summary>Field number for the "estimates" field.</summary>
  public const int EstimatesFieldNumber = 1;
  private static readonly pb::FieldCodec<global::MeterEstimate> _repeated_estimates_codec
      = pb::FieldCodec.ForMessage(10, global::MeterEstimate.Parser);
  private readonly pbc::RepeatedField<global::MeterEstimate> estimates_ = new pbc::RepeatedField<global::MeterEstimate>();
  /// <summary>
  /// Ước tính số lượng tiêu thụ từng giờ theo các ngày trong 1 tháng
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::MeterEstimate> Estimates {
    get { return estimates_; }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetMeterEstimatesDayInMonthServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetMeterEstimatesDayInMonthServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!estimates_.Equals(other.estimates_)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= estimates_.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    estimates_.WriteTo(output, _repeated_estimates_codec);
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += estimates_.CalculateSize(_repeated_estimates_codec);
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetMeterEstimatesDayInMonthServerResponse other) {
    if (other == null) {
      return;
    }
    estimates_.Add(other.estimates_);
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          estimates_.AddEntriesFrom(input, _repeated_estimates_codec);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu trả về thông tin tiêu thụ theo giờ trong ngày
/// </summary>
public sealed partial class GetMeterEstimatesHourInDayServerRequest : pb::IMessage<GetMeterEstimatesHourInDayServerRequest> {
  private static readonly pb::MessageParser<GetMeterEstimatesHourInDayServerRequest> _parser = new pb::MessageParser<GetMeterEstimatesHourInDayServerRequest>(() => new GetMeterEstimatesHourInDayServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetMeterEstimatesHourInDayServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[161]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMeterEstimatesHourInDayServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMeterEstimatesHourInDayServerRequest(GetMeterEstimatesHourInDayServerRequest other) : this() {
    serialNumber_ = other.serialNumber_;
    type_ = other.type_;
    year_ = other.year_;
    month_ = other.month_;
    day_ = other.day_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMeterEstimatesHourInDayServerRequest Clone() {
    return new GetMeterEstimatesHourInDayServerRequest(this);
  }

  /// <summary>Field number for the "serialNumber" field.</summary>
  public const int SerialNumberFieldNumber = 1;
  private string serialNumber_ = "";
  /// <summary>
  /// SerialNumber
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SerialNumber {
    get { return serialNumber_; }
    set {
      serialNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 2;
  private global::TypeMeter type_ = global::TypeMeter.ElectricMeter;
  /// <summary>
  /// Là điện or nước
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::TypeMeter Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "year" field.</summary>
  public const int YearFieldNumber = 3;
  private uint year_;
  /// <summary>
  /// Năm
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Year {
    get { return year_; }
    set {
      year_ = value;
    }
  }

  /// <summary>Field number for the "month" field.</summary>
  public const int MonthFieldNumber = 4;
  private uint month_;
  /// <summary>
  /// Tháng
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Month {
    get { return month_; }
    set {
      month_ = value;
    }
  }

  /// <summary>Field number for the "day" field.</summary>
  public const int DayFieldNumber = 5;
  private uint day_;
  /// <summary>
  /// Ngày
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Day {
    get { return day_; }
    set {
      day_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetMeterEstimatesHourInDayServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetMeterEstimatesHourInDayServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SerialNumber != other.SerialNumber) return false;
    if (Type != other.Type) return false;
    if (Year != other.Year) return false;
    if (Month != other.Month) return false;
    if (Day != other.Day) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SerialNumber.Length != 0) hash ^= SerialNumber.GetHashCode();
    if (Type != global::TypeMeter.ElectricMeter) hash ^= Type.GetHashCode();
    if (Year != 0) hash ^= Year.GetHashCode();
    if (Month != 0) hash ^= Month.GetHashCode();
    if (Day != 0) hash ^= Day.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SerialNumber.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(SerialNumber);
    }
    if (Type != global::TypeMeter.ElectricMeter) {
      output.WriteRawTag(16);
      output.WriteEnum((int) Type);
    }
    if (Year != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(Year);
    }
    if (Month != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(Month);
    }
    if (Day != 0) {
      output.WriteRawTag(40);
      output.WriteUInt32(Day);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SerialNumber.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SerialNumber);
    }
    if (Type != global::TypeMeter.ElectricMeter) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (Year != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Year);
    }
    if (Month != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Month);
    }
    if (Day != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Day);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetMeterEstimatesHourInDayServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.SerialNumber.Length != 0) {
      SerialNumber = other.SerialNumber;
    }
    if (other.Type != global::TypeMeter.ElectricMeter) {
      Type = other.Type;
    }
    if (other.Year != 0) {
      Year = other.Year;
    }
    if (other.Month != 0) {
      Month = other.Month;
    }
    if (other.Day != 0) {
      Day = other.Day;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          SerialNumber = input.ReadString();
          break;
        }
        case 16: {
          Type = (global::TypeMeter) input.ReadEnum();
          break;
        }
        case 24: {
          Year = input.ReadUInt32();
          break;
        }
        case 32: {
          Month = input.ReadUInt32();
          break;
        }
        case 40: {
          Day = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi yêu cầu trả về thông tin tiêu thụ theo giờ trong ngày
/// </summary>
public sealed partial class GetMeterEstimatesHourInDayServerResponse : pb::IMessage<GetMeterEstimatesHourInDayServerResponse> {
  private static readonly pb::MessageParser<GetMeterEstimatesHourInDayServerResponse> _parser = new pb::MessageParser<GetMeterEstimatesHourInDayServerResponse>(() => new GetMeterEstimatesHourInDayServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetMeterEstimatesHourInDayServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[162]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMeterEstimatesHourInDayServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMeterEstimatesHourInDayServerResponse(GetMeterEstimatesHourInDayServerResponse other) : this() {
    estimates_ = other.estimates_.Clone();
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMeterEstimatesHourInDayServerResponse Clone() {
    return new GetMeterEstimatesHourInDayServerResponse(this);
  }

  /// <summary>Field number for the "estimates" field.</summary>
  public const int EstimatesFieldNumber = 1;
  private static readonly pb::FieldCodec<global::MeterEstimate> _repeated_estimates_codec
      = pb::FieldCodec.ForMessage(10, global::MeterEstimate.Parser);
  private readonly pbc::RepeatedField<global::MeterEstimate> estimates_ = new pbc::RepeatedField<global::MeterEstimate>();
  /// <summary>
  /// Ước tính số lượng tiêu thụ theo giờ trong 1 ngày
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::MeterEstimate> Estimates {
    get { return estimates_; }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetMeterEstimatesHourInDayServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetMeterEstimatesHourInDayServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!estimates_.Equals(other.estimates_)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= estimates_.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    estimates_.WriteTo(output, _repeated_estimates_codec);
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += estimates_.CalculateSize(_repeated_estimates_codec);
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetMeterEstimatesHourInDayServerResponse other) {
    if (other == null) {
      return;
    }
    estimates_.Add(other.estimates_);
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          estimates_.AddEntriesFrom(input, _repeated_estimates_codec);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu trả về danh sách đồng hồ của nhà
/// </summary>
public sealed partial class GetMetersByHomeIdServerRequest : pb::IMessage<GetMetersByHomeIdServerRequest> {
  private static readonly pb::MessageParser<GetMetersByHomeIdServerRequest> _parser = new pb::MessageParser<GetMetersByHomeIdServerRequest>(() => new GetMetersByHomeIdServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetMetersByHomeIdServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[163]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMetersByHomeIdServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMetersByHomeIdServerRequest(GetMetersByHomeIdServerRequest other) : this() {
    homeId_ = other.homeId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMetersByHomeIdServerRequest Clone() {
    return new GetMetersByHomeIdServerRequest(this);
  }

  /// <summary>Field number for the "homeId" field.</summary>
  public const int HomeIdFieldNumber = 1;
  private string homeId_ = "";
  /// <summary>
  /// homeId
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string HomeId {
    get { return homeId_; }
    set {
      homeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetMetersByHomeIdServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetMetersByHomeIdServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (HomeId != other.HomeId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HomeId.Length != 0) hash ^= HomeId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (HomeId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(HomeId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HomeId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HomeId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetMetersByHomeIdServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.HomeId.Length != 0) {
      HomeId = other.HomeId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          HomeId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi yêu cầu trả về danh sách đồng hồ của nhà
/// </summary>
public sealed partial class GetMetersByHomeIdServerResponse : pb::IMessage<GetMetersByHomeIdServerResponse> {
  private static readonly pb::MessageParser<GetMetersByHomeIdServerResponse> _parser = new pb::MessageParser<GetMetersByHomeIdServerResponse>(() => new GetMetersByHomeIdServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetMetersByHomeIdServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[164]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMetersByHomeIdServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMetersByHomeIdServerResponse(GetMetersByHomeIdServerResponse other) : this() {
    homeId_ = other.homeId_;
    meters_ = other.meters_.Clone();
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMetersByHomeIdServerResponse Clone() {
    return new GetMetersByHomeIdServerResponse(this);
  }

  /// <summary>Field number for the "homeId" field.</summary>
  public const int HomeIdFieldNumber = 1;
  private string homeId_ = "";
  /// <summary>
  /// homeId
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string HomeId {
    get { return homeId_; }
    set {
      homeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "meters" field.</summary>
  public const int MetersFieldNumber = 2;
  private static readonly pb::FieldCodec<global::Meter> _repeated_meters_codec
      = pb::FieldCodec.ForMessage(18, global::Meter.Parser);
  private readonly pbc::RepeatedField<global::Meter> meters_ = new pbc::RepeatedField<global::Meter>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Meter> Meters {
    get { return meters_; }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetMetersByHomeIdServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetMetersByHomeIdServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (HomeId != other.HomeId) return false;
    if(!meters_.Equals(other.meters_)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HomeId.Length != 0) hash ^= HomeId.GetHashCode();
    hash ^= meters_.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (HomeId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(HomeId);
    }
    meters_.WriteTo(output, _repeated_meters_codec);
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HomeId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HomeId);
    }
    size += meters_.CalculateSize(_repeated_meters_codec);
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetMetersByHomeIdServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.HomeId.Length != 0) {
      HomeId = other.HomeId;
    }
    meters_.Add(other.meters_);
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          HomeId = input.ReadString();
          break;
        }
        case 18: {
          meters_.AddEntriesFrom(input, _repeated_meters_codec);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu chỉ số đông hồ bị thiếu trong ngày
/// </summary>
public sealed partial class GetMeterMissingInDayServerRequest : pb::IMessage<GetMeterMissingInDayServerRequest> {
  private static readonly pb::MessageParser<GetMeterMissingInDayServerRequest> _parser = new pb::MessageParser<GetMeterMissingInDayServerRequest>(() => new GetMeterMissingInDayServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetMeterMissingInDayServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[165]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMeterMissingInDayServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMeterMissingInDayServerRequest(GetMeterMissingInDayServerRequest other) : this() {
    hardwareId_ = other.hardwareId_;
    date_ = other.date_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMeterMissingInDayServerRequest Clone() {
    return new GetMeterMissingInDayServerRequest(this);
  }

  /// <summary>Field number for the "hardwareId" field.</summary>
  public const int HardwareIdFieldNumber = 1;
  private string hardwareId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string HardwareId {
    get { return hardwareId_; }
    set {
      hardwareId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "date" field.</summary>
  public const int DateFieldNumber = 2;
  private int date_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Date {
    get { return date_; }
    set {
      date_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetMeterMissingInDayServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetMeterMissingInDayServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (HardwareId != other.HardwareId) return false;
    if (Date != other.Date) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HardwareId.Length != 0) hash ^= HardwareId.GetHashCode();
    if (Date != 0) hash ^= Date.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (HardwareId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(HardwareId);
    }
    if (Date != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Date);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HardwareId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HardwareId);
    }
    if (Date != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Date);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetMeterMissingInDayServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.HardwareId.Length != 0) {
      HardwareId = other.HardwareId;
    }
    if (other.Date != 0) {
      Date = other.Date;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          HardwareId = input.ReadString();
          break;
        }
        case 16: {
          Date = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi yêu cầu
/// </summary>
public sealed partial class GetMeterMissingInDayServerResponse : pb::IMessage<GetMeterMissingInDayServerResponse> {
  private static readonly pb::MessageParser<GetMeterMissingInDayServerResponse> _parser = new pb::MessageParser<GetMeterMissingInDayServerResponse>(() => new GetMeterMissingInDayServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetMeterMissingInDayServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[166]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMeterMissingInDayServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMeterMissingInDayServerResponse(GetMeterMissingInDayServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMeterMissingInDayServerResponse Clone() {
    return new GetMeterMissingInDayServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetMeterMissingInDayServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetMeterMissingInDayServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetMeterMissingInDayServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi yêu cầu cập nhật đồng hồ
/// </summary>
public sealed partial class UpdateMeterServerResponse : pb::IMessage<UpdateMeterServerResponse> {
  private static readonly pb::MessageParser<UpdateMeterServerResponse> _parser = new pb::MessageParser<UpdateMeterServerResponse>(() => new UpdateMeterServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateMeterServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[167]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateMeterServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateMeterServerResponse(UpdateMeterServerResponse other) : this() {
    meter_ = other.meter_ != null ? other.meter_.Clone() : null;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateMeterServerResponse Clone() {
    return new UpdateMeterServerResponse(this);
  }

  /// <summary>Field number for the "meter" field.</summary>
  public const int MeterFieldNumber = 1;
  private global::Meter meter_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Meter Meter {
    get { return meter_; }
    set {
      meter_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateMeterServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateMeterServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Meter, other.Meter)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (meter_ != null) hash ^= Meter.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (meter_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Meter);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (meter_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Meter);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateMeterServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.meter_ != null) {
      if (meter_ == null) {
        Meter = new global::Meter();
      }
      Meter.MergeFrom(other.Meter);
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (meter_ == null) {
            Meter = new global::Meter();
          }
          input.ReadMessage(Meter);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin thay đổi các chỉ số của thiết bị điện/nước runtime
/// </summary>
public sealed partial class MeterOnChangedServerResponse : pb::IMessage<MeterOnChangedServerResponse> {
  private static readonly pb::MessageParser<MeterOnChangedServerResponse> _parser = new pb::MessageParser<MeterOnChangedServerResponse>(() => new MeterOnChangedServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MeterOnChangedServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[168]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MeterOnChangedServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MeterOnChangedServerResponse(MeterOnChangedServerResponse other) : this() {
    meter_ = other.meter_ != null ? other.meter_.Clone() : null;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MeterOnChangedServerResponse Clone() {
    return new MeterOnChangedServerResponse(this);
  }

  /// <summary>Field number for the "meter" field.</summary>
  public const int MeterFieldNumber = 1;
  private global::Meter meter_;
  /// <summary>
  /// Meter
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Meter Meter {
    get { return meter_; }
    set {
      meter_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MeterOnChangedServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MeterOnChangedServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Meter, other.Meter)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (meter_ != null) hash ^= Meter.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (meter_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Meter);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (meter_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Meter);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MeterOnChangedServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.meter_ != null) {
      if (meter_ == null) {
        Meter = new global::Meter();
      }
      Meter.MergeFrom(other.Meter);
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (meter_ == null) {
            Meter = new global::Meter();
          }
          input.ReadMessage(Meter);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu trả về state của điều hòa
/// </summary>
public sealed partial class GetAirConditionerStateServerRequest : pb::IMessage<GetAirConditionerStateServerRequest> {
  private static readonly pb::MessageParser<GetAirConditionerStateServerRequest> _parser = new pb::MessageParser<GetAirConditionerStateServerRequest>(() => new GetAirConditionerStateServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetAirConditionerStateServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[169]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetAirConditionerStateServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetAirConditionerStateServerRequest(GetAirConditionerStateServerRequest other) : this() {
    deviceId_ = other.deviceId_;
    indoorId_ = other.indoorId_;
    remoteId_ = other.remoteId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetAirConditionerStateServerRequest Clone() {
    return new GetAirConditionerStateServerRequest(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  /// <summary>
  /// deviceId để lấy trạng thái điều hòa ở session trên server HZ
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "indoorId" field.</summary>
  public const int IndoorIdFieldNumber = 2;
  private uint indoorId_;
  /// <summary>
  /// Id của dàn lạnh, 0 hoặc null nếu máy lạnh chỉ quản lý 1 dàn lạnh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint IndoorId {
    get { return indoorId_; }
    set {
      indoorId_ = value;
    }
  }

  /// <summary>Field number for the "remoteId" field.</summary>
  public const int RemoteIdFieldNumber = 3;
  private string remoteId_ = "";
  /// <summary>
  /// [Optional] Sửa dụng remoteId để lấy thông tin remote
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RemoteId {
    get { return remoteId_; }
    set {
      remoteId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetAirConditionerStateServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetAirConditionerStateServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    if (IndoorId != other.IndoorId) return false;
    if (RemoteId != other.RemoteId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (IndoorId != 0) hash ^= IndoorId.GetHashCode();
    if (RemoteId.Length != 0) hash ^= RemoteId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (IndoorId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(IndoorId);
    }
    if (RemoteId.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(RemoteId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (IndoorId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(IndoorId);
    }
    if (RemoteId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RemoteId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetAirConditionerStateServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.IndoorId != 0) {
      IndoorId = other.IndoorId;
    }
    if (other.RemoteId.Length != 0) {
      RemoteId = other.RemoteId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
        case 16: {
          IndoorId = input.ReadUInt32();
          break;
        }
        case 26: {
          RemoteId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin state của điều hòa
/// </summary>
public sealed partial class GetAirConditionerStateServerResponse : pb::IMessage<GetAirConditionerStateServerResponse> {
  private static readonly pb::MessageParser<GetAirConditionerStateServerResponse> _parser = new pb::MessageParser<GetAirConditionerStateServerResponse>(() => new GetAirConditionerStateServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetAirConditionerStateServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[170]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetAirConditionerStateServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetAirConditionerStateServerResponse(GetAirConditionerStateServerResponse other) : this() {
    state_ = other.state_ != null ? other.state_.Clone() : null;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetAirConditionerStateServerResponse Clone() {
    return new GetAirConditionerStateServerResponse(this);
  }

  /// <summary>Field number for the "state" field.</summary>
  public const int StateFieldNumber = 1;
  private global::AirConditionerState state_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AirConditionerState State {
    get { return state_; }
    set {
      state_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetAirConditionerStateServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetAirConditionerStateServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(State, other.State)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (state_ != null) hash ^= State.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (state_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(State);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (state_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(State);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetAirConditionerStateServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.state_ != null) {
      if (state_ == null) {
        State = new global::AirConditionerState();
      }
      State.MergeFrom(other.State);
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (state_ == null) {
            State = new global::AirConditionerState();
          }
          input.ReadMessage(State);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu điều khiển điều hòa
/// </summary>
public sealed partial class AirConditionerServerRequest : pb::IMessage<AirConditionerServerRequest> {
  private static readonly pb::MessageParser<AirConditionerServerRequest> _parser = new pb::MessageParser<AirConditionerServerRequest>(() => new AirConditionerServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AirConditionerServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[171]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AirConditionerServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AirConditionerServerRequest(AirConditionerServerRequest other) : this() {
    deviceId_ = other.deviceId_;
    state_ = other.state_ != null ? other.state_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AirConditionerServerRequest Clone() {
    return new AirConditionerServerRequest(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "state" field.</summary>
  public const int StateFieldNumber = 2;
  private global::AirConditionerState state_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AirConditionerState State {
    get { return state_; }
    set {
      state_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AirConditionerServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AirConditionerServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    if (!object.Equals(State, other.State)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (state_ != null) hash ^= State.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (state_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(State);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (state_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(State);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AirConditionerServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.state_ != null) {
      if (state_ == null) {
        State = new global::AirConditionerState();
      }
      State.MergeFrom(other.State);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
        case 18: {
          if (state_ == null) {
            State = new global::AirConditionerState();
          }
          input.ReadMessage(State);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin điều khiển điều hòa
/// </summary>
public sealed partial class AirConditionerServerResponse : pb::IMessage<AirConditionerServerResponse> {
  private static readonly pb::MessageParser<AirConditionerServerResponse> _parser = new pb::MessageParser<AirConditionerServerResponse>(() => new AirConditionerServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AirConditionerServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[172]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AirConditionerServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AirConditionerServerResponse(AirConditionerServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AirConditionerServerResponse Clone() {
    return new AirConditionerServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AirConditionerServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AirConditionerServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AirConditionerServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi state của điều hòa runtime
/// </summary>
public sealed partial class AirConditionerOnChangedServerResponse : pb::IMessage<AirConditionerOnChangedServerResponse> {
  private static readonly pb::MessageParser<AirConditionerOnChangedServerResponse> _parser = new pb::MessageParser<AirConditionerOnChangedServerResponse>(() => new AirConditionerOnChangedServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AirConditionerOnChangedServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[173]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AirConditionerOnChangedServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AirConditionerOnChangedServerResponse(AirConditionerOnChangedServerResponse other) : this() {
    deviceId_ = other.deviceId_;
    state_ = other.state_ != null ? other.state_.Clone() : null;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AirConditionerOnChangedServerResponse Clone() {
    return new AirConditionerOnChangedServerResponse(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  /// <summary>
  /// Id của thiết bị để mobile update trạng thái
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "state" field.</summary>
  public const int StateFieldNumber = 2;
  private global::AirConditionerState state_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AirConditionerState State {
    get { return state_; }
    set {
      state_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AirConditionerOnChangedServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AirConditionerOnChangedServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    if (!object.Equals(State, other.State)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (state_ != null) hash ^= State.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (state_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(State);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (state_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(State);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AirConditionerOnChangedServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.state_ != null) {
      if (state_ == null) {
        State = new global::AirConditionerState();
      }
      State.MergeFrom(other.State);
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
        case 18: {
          if (state_ == null) {
            State = new global::AirConditionerState();
          }
          input.ReadMessage(State);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
///----- Yêu cầu thông tin của remote -----//
/// Nhận được yêu cầu trả về  danh sách các remote
/// </summary>
public sealed partial class GetRemotesServerRequest : pb::IMessage<GetRemotesServerRequest> {
  private static readonly pb::MessageParser<GetRemotesServerRequest> _parser = new pb::MessageParser<GetRemotesServerRequest>(() => new GetRemotesServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetRemotesServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[174]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRemotesServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRemotesServerRequest(GetRemotesServerRequest other) : this() {
    homeId_ = other.homeId_;
    group_ = other.group_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRemotesServerRequest Clone() {
    return new GetRemotesServerRequest(this);
  }

  /// <summary>Field number for the "homeId" field.</summary>
  public const int HomeIdFieldNumber = 1;
  private string homeId_ = "";
  /// <summary>
  /// HomeId
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string HomeId {
    get { return homeId_; }
    set {
      homeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "group" field.</summary>
  public const int GroupFieldNumber = 2;
  private global::GroupDevice group_ = global::GroupDevice.SwitcherGroup;
  /// <summary>
  /// Nhóm thiết bị
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GroupDevice Group {
    get { return group_; }
    set {
      group_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetRemotesServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetRemotesServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (HomeId != other.HomeId) return false;
    if (Group != other.Group) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HomeId.Length != 0) hash ^= HomeId.GetHashCode();
    if (Group != global::GroupDevice.SwitcherGroup) hash ^= Group.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (HomeId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(HomeId);
    }
    if (Group != global::GroupDevice.SwitcherGroup) {
      output.WriteRawTag(16);
      output.WriteEnum((int) Group);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HomeId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HomeId);
    }
    if (Group != global::GroupDevice.SwitcherGroup) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Group);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetRemotesServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.HomeId.Length != 0) {
      HomeId = other.HomeId;
    }
    if (other.Group != global::GroupDevice.SwitcherGroup) {
      Group = other.Group;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          HomeId = input.ReadString();
          break;
        }
        case 16: {
          Group = (global::GroupDevice) input.ReadEnum();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu trả về thông tin chi tiết của remote
/// </summary>
public sealed partial class GetRemoteServerRequest : pb::IMessage<GetRemoteServerRequest> {
  private static readonly pb::MessageParser<GetRemoteServerRequest> _parser = new pb::MessageParser<GetRemoteServerRequest>(() => new GetRemoteServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetRemoteServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[175]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRemoteServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRemoteServerRequest(GetRemoteServerRequest other) : this() {
    remoteId_ = other.remoteId_;
    homeId_ = other.homeId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRemoteServerRequest Clone() {
    return new GetRemoteServerRequest(this);
  }

  /// <summary>Field number for the "remoteId" field.</summary>
  public const int RemoteIdFieldNumber = 1;
  private string remoteId_ = "";
  /// <summary>
  /// Id của remote
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RemoteId {
    get { return remoteId_; }
    set {
      remoteId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "homeId" field.</summary>
  public const int HomeIdFieldNumber = 2;
  private string homeId_ = "";
  /// <summary>
  /// HomeId để trả về danh sách thiết bị IRRF trong căn hộ
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string HomeId {
    get { return homeId_; }
    set {
      homeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetRemoteServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetRemoteServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RemoteId != other.RemoteId) return false;
    if (HomeId != other.HomeId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RemoteId.Length != 0) hash ^= RemoteId.GetHashCode();
    if (HomeId.Length != 0) hash ^= HomeId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (RemoteId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(RemoteId);
    }
    if (HomeId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(HomeId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RemoteId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RemoteId);
    }
    if (HomeId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HomeId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetRemoteServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.RemoteId.Length != 0) {
      RemoteId = other.RemoteId;
    }
    if (other.HomeId.Length != 0) {
      HomeId = other.HomeId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          RemoteId = input.ReadString();
          break;
        }
        case 18: {
          HomeId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu trả về danh sách các remote library
/// </summary>
public sealed partial class GetRemoteLibrariesServerRequest : pb::IMessage<GetRemoteLibrariesServerRequest> {
  private static readonly pb::MessageParser<GetRemoteLibrariesServerRequest> _parser = new pb::MessageParser<GetRemoteLibrariesServerRequest>(() => new GetRemoteLibrariesServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetRemoteLibrariesServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[176]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRemoteLibrariesServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRemoteLibrariesServerRequest(GetRemoteLibrariesServerRequest other) : this() {
    search_ = other.search_;
    lastName_ = other.lastName_;
    size_ = other.size_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRemoteLibrariesServerRequest Clone() {
    return new GetRemoteLibrariesServerRequest(this);
  }

  /// <summary>Field number for the "search" field.</summary>
  public const int SearchFieldNumber = 1;
  private string search_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Search {
    get { return search_; }
    set {
      search_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "last_name" field.</summary>
  public const int LastNameFieldNumber = 2;
  private string lastName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string LastName {
    get { return lastName_; }
    set {
      lastName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "size" field.</summary>
  public const int SizeFieldNumber = 3;
  private uint size_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Size {
    get { return size_; }
    set {
      size_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetRemoteLibrariesServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetRemoteLibrariesServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Search != other.Search) return false;
    if (LastName != other.LastName) return false;
    if (Size != other.Size) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Search.Length != 0) hash ^= Search.GetHashCode();
    if (LastName.Length != 0) hash ^= LastName.GetHashCode();
    if (Size != 0) hash ^= Size.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Search.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Search);
    }
    if (LastName.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(LastName);
    }
    if (Size != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(Size);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Search.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Search);
    }
    if (LastName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(LastName);
    }
    if (Size != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Size);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetRemoteLibrariesServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.Search.Length != 0) {
      Search = other.Search;
    }
    if (other.LastName.Length != 0) {
      LastName = other.LastName;
    }
    if (other.Size != 0) {
      Size = other.Size;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Search = input.ReadString();
          break;
        }
        case 18: {
          LastName = input.ReadString();
          break;
        }
        case 24: {
          Size = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu trả về các nút lệnh remote
/// </summary>
public sealed partial class GetCommandsRemoteServerRequest : pb::IMessage<GetCommandsRemoteServerRequest> {
  private static readonly pb::MessageParser<GetCommandsRemoteServerRequest> _parser = new pb::MessageParser<GetCommandsRemoteServerRequest>(() => new GetCommandsRemoteServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetCommandsRemoteServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[177]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCommandsRemoteServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCommandsRemoteServerRequest(GetCommandsRemoteServerRequest other) : this() {
    remoteId_ = other.remoteId_;
    remoteLibraryId_ = other.remoteLibraryId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCommandsRemoteServerRequest Clone() {
    return new GetCommandsRemoteServerRequest(this);
  }

  /// <summary>Field number for the "remoteId" field.</summary>
  public const int RemoteIdFieldNumber = 1;
  private string remoteId_ = "";
  /// <summary>
  /// Dùng cho đa năng
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RemoteId {
    get { return remoteId_; }
    set {
      remoteId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "remoteLibraryId" field.</summary>
  public const int RemoteLibraryIdFieldNumber = 2;
  private string remoteLibraryId_ = "";
  /// <summary>
  /// Dùng cho đơn năng
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RemoteLibraryId {
    get { return remoteLibraryId_; }
    set {
      remoteLibraryId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetCommandsRemoteServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetCommandsRemoteServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RemoteId != other.RemoteId) return false;
    if (RemoteLibraryId != other.RemoteLibraryId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RemoteId.Length != 0) hash ^= RemoteId.GetHashCode();
    if (RemoteLibraryId.Length != 0) hash ^= RemoteLibraryId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (RemoteId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(RemoteId);
    }
    if (RemoteLibraryId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(RemoteLibraryId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RemoteId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RemoteId);
    }
    if (RemoteLibraryId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RemoteLibraryId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetCommandsRemoteServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.RemoteId.Length != 0) {
      RemoteId = other.RemoteId;
    }
    if (other.RemoteLibraryId.Length != 0) {
      RemoteLibraryId = other.RemoteLibraryId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          RemoteId = input.ReadString();
          break;
        }
        case 18: {
          RemoteLibraryId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu thực hiện lệnh remote
/// </summary>
public sealed partial class SendCommandRemoteServerRequest : pb::IMessage<SendCommandRemoteServerRequest> {
  private static readonly pb::MessageParser<SendCommandRemoteServerRequest> _parser = new pb::MessageParser<SendCommandRemoteServerRequest>(() => new SendCommandRemoteServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SendCommandRemoteServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[178]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SendCommandRemoteServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SendCommandRemoteServerRequest(SendCommandRemoteServerRequest other) : this() {
    deviceId_ = other.deviceId_;
    remoteId_ = other.remoteId_;
    remoteLibraryCmdId_ = other.remoteLibraryCmdId_;
    remoteMultiLibraryCmdId_ = other.remoteMultiLibraryCmdId_;
    type_ = other.type_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SendCommandRemoteServerRequest Clone() {
    return new SendCommandRemoteServerRequest(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  /// <summary>
  /// Id của deviceId
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "remoteId" field.</summary>
  public const int RemoteIdFieldNumber = 2;
  private string remoteId_ = "";
  /// <summary>
  /// Id của remote dùng cho thư viện có sẵn
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RemoteId {
    get { return remoteId_; }
    set {
      remoteId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "remoteLibraryCmdId" field.</summary>
  public const int RemoteLibraryCmdIdFieldNumber = 3;
  private string remoteLibraryCmdId_ = "";
  /// <summary>
  /// Dùng cho thư viện có sẵn
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RemoteLibraryCmdId {
    get { return remoteLibraryCmdId_; }
    set {
      remoteLibraryCmdId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "remoteMultiLibraryCmdId" field.</summary>
  public const int RemoteMultiLibraryCmdIdFieldNumber = 4;
  private string remoteMultiLibraryCmdId_ = "";
  /// <summary>
  /// Id của lệnh từ remote đa năng
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RemoteMultiLibraryCmdId {
    get { return remoteMultiLibraryCmdId_; }
    set {
      remoteMultiLibraryCmdId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 5;
  private global::TypeLearn type_ = global::TypeLearn.Ir;
  /// <summary>
  /// IR or RF
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::TypeLearn Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SendCommandRemoteServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SendCommandRemoteServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    if (RemoteId != other.RemoteId) return false;
    if (RemoteLibraryCmdId != other.RemoteLibraryCmdId) return false;
    if (RemoteMultiLibraryCmdId != other.RemoteMultiLibraryCmdId) return false;
    if (Type != other.Type) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (RemoteId.Length != 0) hash ^= RemoteId.GetHashCode();
    if (RemoteLibraryCmdId.Length != 0) hash ^= RemoteLibraryCmdId.GetHashCode();
    if (RemoteMultiLibraryCmdId.Length != 0) hash ^= RemoteMultiLibraryCmdId.GetHashCode();
    if (Type != global::TypeLearn.Ir) hash ^= Type.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (RemoteId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(RemoteId);
    }
    if (RemoteLibraryCmdId.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(RemoteLibraryCmdId);
    }
    if (RemoteMultiLibraryCmdId.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(RemoteMultiLibraryCmdId);
    }
    if (Type != global::TypeLearn.Ir) {
      output.WriteRawTag(40);
      output.WriteEnum((int) Type);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (RemoteId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RemoteId);
    }
    if (RemoteLibraryCmdId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RemoteLibraryCmdId);
    }
    if (RemoteMultiLibraryCmdId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RemoteMultiLibraryCmdId);
    }
    if (Type != global::TypeLearn.Ir) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SendCommandRemoteServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.RemoteId.Length != 0) {
      RemoteId = other.RemoteId;
    }
    if (other.RemoteLibraryCmdId.Length != 0) {
      RemoteLibraryCmdId = other.RemoteLibraryCmdId;
    }
    if (other.RemoteMultiLibraryCmdId.Length != 0) {
      RemoteMultiLibraryCmdId = other.RemoteMultiLibraryCmdId;
    }
    if (other.Type != global::TypeLearn.Ir) {
      Type = other.Type;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
        case 18: {
          RemoteId = input.ReadString();
          break;
        }
        case 26: {
          RemoteLibraryCmdId = input.ReadString();
          break;
        }
        case 34: {
          RemoteMultiLibraryCmdId = input.ReadString();
          break;
        }
        case 40: {
          Type = (global::TypeLearn) input.ReadEnum();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu học lệnh remote
/// </summary>
public sealed partial class LearnCommandRemoteServerRequest : pb::IMessage<LearnCommandRemoteServerRequest> {
  private static readonly pb::MessageParser<LearnCommandRemoteServerRequest> _parser = new pb::MessageParser<LearnCommandRemoteServerRequest>(() => new LearnCommandRemoteServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<LearnCommandRemoteServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[179]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LearnCommandRemoteServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LearnCommandRemoteServerRequest(LearnCommandRemoteServerRequest other) : this() {
    deviceId_ = other.deviceId_;
    remoteId_ = other.remoteId_;
    remoteLibraryCmdId_ = other.remoteLibraryCmdId_;
    remoteMultiLibraryCmdId_ = other.remoteMultiLibraryCmdId_;
    type_ = other.type_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LearnCommandRemoteServerRequest Clone() {
    return new LearnCommandRemoteServerRequest(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  /// <summary>
  /// Id của thiết bị cần học lệnh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "remoteId" field.</summary>
  public const int RemoteIdFieldNumber = 2;
  private string remoteId_ = "";
  /// <summary>
  /// Id của remote
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RemoteId {
    get { return remoteId_; }
    set {
      remoteId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "remoteLibraryCmdId" field.</summary>
  public const int RemoteLibraryCmdIdFieldNumber = 3;
  private string remoteLibraryCmdId_ = "";
  /// <summary>
  /// Id của lệnh từ thư viện
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RemoteLibraryCmdId {
    get { return remoteLibraryCmdId_; }
    set {
      remoteLibraryCmdId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "remoteMultiLibraryCmdId" field.</summary>
  public const int RemoteMultiLibraryCmdIdFieldNumber = 4;
  private string remoteMultiLibraryCmdId_ = "";
  /// <summary>
  /// Id của lệnh từ remote đa năng
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RemoteMultiLibraryCmdId {
    get { return remoteMultiLibraryCmdId_; }
    set {
      remoteMultiLibraryCmdId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 5;
  private global::TypeLearn type_ = global::TypeLearn.Ir;
  /// <summary>
  /// IR or RF
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::TypeLearn Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as LearnCommandRemoteServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(LearnCommandRemoteServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    if (RemoteId != other.RemoteId) return false;
    if (RemoteLibraryCmdId != other.RemoteLibraryCmdId) return false;
    if (RemoteMultiLibraryCmdId != other.RemoteMultiLibraryCmdId) return false;
    if (Type != other.Type) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (RemoteId.Length != 0) hash ^= RemoteId.GetHashCode();
    if (RemoteLibraryCmdId.Length != 0) hash ^= RemoteLibraryCmdId.GetHashCode();
    if (RemoteMultiLibraryCmdId.Length != 0) hash ^= RemoteMultiLibraryCmdId.GetHashCode();
    if (Type != global::TypeLearn.Ir) hash ^= Type.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (RemoteId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(RemoteId);
    }
    if (RemoteLibraryCmdId.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(RemoteLibraryCmdId);
    }
    if (RemoteMultiLibraryCmdId.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(RemoteMultiLibraryCmdId);
    }
    if (Type != global::TypeLearn.Ir) {
      output.WriteRawTag(40);
      output.WriteEnum((int) Type);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (RemoteId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RemoteId);
    }
    if (RemoteLibraryCmdId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RemoteLibraryCmdId);
    }
    if (RemoteMultiLibraryCmdId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RemoteMultiLibraryCmdId);
    }
    if (Type != global::TypeLearn.Ir) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(LearnCommandRemoteServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.RemoteId.Length != 0) {
      RemoteId = other.RemoteId;
    }
    if (other.RemoteLibraryCmdId.Length != 0) {
      RemoteLibraryCmdId = other.RemoteLibraryCmdId;
    }
    if (other.RemoteMultiLibraryCmdId.Length != 0) {
      RemoteMultiLibraryCmdId = other.RemoteMultiLibraryCmdId;
    }
    if (other.Type != global::TypeLearn.Ir) {
      Type = other.Type;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
        case 18: {
          RemoteId = input.ReadString();
          break;
        }
        case 26: {
          RemoteLibraryCmdId = input.ReadString();
          break;
        }
        case 34: {
          RemoteMultiLibraryCmdId = input.ReadString();
          break;
        }
        case 40: {
          Type = (global::TypeLearn) input.ReadEnum();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu khôi phục lệnh mặc định
/// </summary>
public sealed partial class RestoreCommandRemoteServerRequest : pb::IMessage<RestoreCommandRemoteServerRequest> {
  private static readonly pb::MessageParser<RestoreCommandRemoteServerRequest> _parser = new pb::MessageParser<RestoreCommandRemoteServerRequest>(() => new RestoreCommandRemoteServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RestoreCommandRemoteServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[180]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RestoreCommandRemoteServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RestoreCommandRemoteServerRequest(RestoreCommandRemoteServerRequest other) : this() {
    remoteId_ = other.remoteId_;
    remoteLibraryCmdId_ = other.remoteLibraryCmdId_;
    remoteMultiLibraryCmdId_ = other.remoteMultiLibraryCmdId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RestoreCommandRemoteServerRequest Clone() {
    return new RestoreCommandRemoteServerRequest(this);
  }

  /// <summary>Field number for the "remoteId" field.</summary>
  public const int RemoteIdFieldNumber = 1;
  private string remoteId_ = "";
  /// <summary>
  /// Id của remote
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RemoteId {
    get { return remoteId_; }
    set {
      remoteId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "remoteLibraryCmdId" field.</summary>
  public const int RemoteLibraryCmdIdFieldNumber = 2;
  private string remoteLibraryCmdId_ = "";
  /// <summary>
  /// Id của lệnh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RemoteLibraryCmdId {
    get { return remoteLibraryCmdId_; }
    set {
      remoteLibraryCmdId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "remoteMultiLibraryCmdId" field.</summary>
  public const int RemoteMultiLibraryCmdIdFieldNumber = 3;
  private string remoteMultiLibraryCmdId_ = "";
  /// <summary>
  /// Id của lệnh từ remote đa năng
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RemoteMultiLibraryCmdId {
    get { return remoteMultiLibraryCmdId_; }
    set {
      remoteMultiLibraryCmdId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RestoreCommandRemoteServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RestoreCommandRemoteServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RemoteId != other.RemoteId) return false;
    if (RemoteLibraryCmdId != other.RemoteLibraryCmdId) return false;
    if (RemoteMultiLibraryCmdId != other.RemoteMultiLibraryCmdId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RemoteId.Length != 0) hash ^= RemoteId.GetHashCode();
    if (RemoteLibraryCmdId.Length != 0) hash ^= RemoteLibraryCmdId.GetHashCode();
    if (RemoteMultiLibraryCmdId.Length != 0) hash ^= RemoteMultiLibraryCmdId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (RemoteId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(RemoteId);
    }
    if (RemoteLibraryCmdId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(RemoteLibraryCmdId);
    }
    if (RemoteMultiLibraryCmdId.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(RemoteMultiLibraryCmdId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RemoteId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RemoteId);
    }
    if (RemoteLibraryCmdId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RemoteLibraryCmdId);
    }
    if (RemoteMultiLibraryCmdId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RemoteMultiLibraryCmdId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RestoreCommandRemoteServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.RemoteId.Length != 0) {
      RemoteId = other.RemoteId;
    }
    if (other.RemoteLibraryCmdId.Length != 0) {
      RemoteLibraryCmdId = other.RemoteLibraryCmdId;
    }
    if (other.RemoteMultiLibraryCmdId.Length != 0) {
      RemoteMultiLibraryCmdId = other.RemoteMultiLibraryCmdId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          RemoteId = input.ReadString();
          break;
        }
        case 18: {
          RemoteLibraryCmdId = input.ReadString();
          break;
        }
        case 26: {
          RemoteMultiLibraryCmdId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu thêm mới 1 remote
/// </summary>
public sealed partial class AddRemoteServerRequest : pb::IMessage<AddRemoteServerRequest> {
  private static readonly pb::MessageParser<AddRemoteServerRequest> _parser = new pb::MessageParser<AddRemoteServerRequest>(() => new AddRemoteServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AddRemoteServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[181]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddRemoteServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddRemoteServerRequest(AddRemoteServerRequest other) : this() {
    remote_ = other.remote_ != null ? other.remote_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddRemoteServerRequest Clone() {
    return new AddRemoteServerRequest(this);
  }

  /// <summary>Field number for the "remote" field.</summary>
  public const int RemoteFieldNumber = 1;
  private global::Remote remote_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Remote Remote {
    get { return remote_; }
    set {
      remote_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AddRemoteServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AddRemoteServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Remote, other.Remote)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (remote_ != null) hash ^= Remote.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (remote_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Remote);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (remote_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Remote);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AddRemoteServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.remote_ != null) {
      if (remote_ == null) {
        Remote = new global::Remote();
      }
      Remote.MergeFrom(other.Remote);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (remote_ == null) {
            Remote = new global::Remote();
          }
          input.ReadMessage(Remote);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu update 1 remote
/// </summary>
public sealed partial class UpdateRemoteServerRequest : pb::IMessage<UpdateRemoteServerRequest> {
  private static readonly pb::MessageParser<UpdateRemoteServerRequest> _parser = new pb::MessageParser<UpdateRemoteServerRequest>(() => new UpdateRemoteServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateRemoteServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[182]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateRemoteServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateRemoteServerRequest(UpdateRemoteServerRequest other) : this() {
    remote_ = other.remote_ != null ? other.remote_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateRemoteServerRequest Clone() {
    return new UpdateRemoteServerRequest(this);
  }

  /// <summary>Field number for the "remote" field.</summary>
  public const int RemoteFieldNumber = 1;
  private global::Remote remote_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Remote Remote {
    get { return remote_; }
    set {
      remote_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateRemoteServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateRemoteServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Remote, other.Remote)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (remote_ != null) hash ^= Remote.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (remote_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Remote);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (remote_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Remote);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateRemoteServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.remote_ != null) {
      if (remote_ == null) {
        Remote = new global::Remote();
      }
      Remote.MergeFrom(other.Remote);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (remote_ == null) {
            Remote = new global::Remote();
          }
          input.ReadMessage(Remote);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu xóa 1 remote
/// </summary>
public sealed partial class DeleteRemoteServerRequest : pb::IMessage<DeleteRemoteServerRequest> {
  private static readonly pb::MessageParser<DeleteRemoteServerRequest> _parser = new pb::MessageParser<DeleteRemoteServerRequest>(() => new DeleteRemoteServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeleteRemoteServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[183]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteRemoteServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteRemoteServerRequest(DeleteRemoteServerRequest other) : this() {
    remoteId_ = other.remoteId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteRemoteServerRequest Clone() {
    return new DeleteRemoteServerRequest(this);
  }

  /// <summary>Field number for the "remoteId" field.</summary>
  public const int RemoteIdFieldNumber = 1;
  private string remoteId_ = "";
  /// <summary>
  /// Id của remote
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RemoteId {
    get { return remoteId_; }
    set {
      remoteId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeleteRemoteServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeleteRemoteServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RemoteId != other.RemoteId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RemoteId.Length != 0) hash ^= RemoteId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (RemoteId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(RemoteId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RemoteId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RemoteId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeleteRemoteServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.RemoteId.Length != 0) {
      RemoteId = other.RemoteId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          RemoteId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
///----- Yêu cầu remote đa năng -----//
/// Nhận được yêu cầu gửi danh sách remote đa năng
/// </summary>
public sealed partial class GetRemoteMultisServerRequest : pb::IMessage<GetRemoteMultisServerRequest> {
  private static readonly pb::MessageParser<GetRemoteMultisServerRequest> _parser = new pb::MessageParser<GetRemoteMultisServerRequest>(() => new GetRemoteMultisServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetRemoteMultisServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[184]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRemoteMultisServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRemoteMultisServerRequest(GetRemoteMultisServerRequest other) : this() {
    remoteId_ = other.remoteId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRemoteMultisServerRequest Clone() {
    return new GetRemoteMultisServerRequest(this);
  }

  /// <summary>Field number for the "remoteId" field.</summary>
  public const int RemoteIdFieldNumber = 1;
  private string remoteId_ = "";
  /// <summary>
  /// Id của remote
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RemoteId {
    get { return remoteId_; }
    set {
      remoteId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetRemoteMultisServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetRemoteMultisServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RemoteId != other.RemoteId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RemoteId.Length != 0) hash ^= RemoteId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (RemoteId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(RemoteId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RemoteId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RemoteId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetRemoteMultisServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.RemoteId.Length != 0) {
      RemoteId = other.RemoteId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          RemoteId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu thêm mới remote đa năng
/// </summary>
public sealed partial class AddRemoteMultiServerRequest : pb::IMessage<AddRemoteMultiServerRequest> {
  private static readonly pb::MessageParser<AddRemoteMultiServerRequest> _parser = new pb::MessageParser<AddRemoteMultiServerRequest>(() => new AddRemoteMultiServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AddRemoteMultiServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[185]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddRemoteMultiServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddRemoteMultiServerRequest(AddRemoteMultiServerRequest other) : this() {
    remoteMulti_ = other.remoteMulti_ != null ? other.remoteMulti_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddRemoteMultiServerRequest Clone() {
    return new AddRemoteMultiServerRequest(this);
  }

  /// <summary>Field number for the "remoteMulti" field.</summary>
  public const int RemoteMultiFieldNumber = 1;
  private global::RemoteMulti remoteMulti_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RemoteMulti RemoteMulti {
    get { return remoteMulti_; }
    set {
      remoteMulti_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AddRemoteMultiServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AddRemoteMultiServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(RemoteMulti, other.RemoteMulti)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (remoteMulti_ != null) hash ^= RemoteMulti.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (remoteMulti_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(RemoteMulti);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (remoteMulti_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(RemoteMulti);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AddRemoteMultiServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.remoteMulti_ != null) {
      if (remoteMulti_ == null) {
        RemoteMulti = new global::RemoteMulti();
      }
      RemoteMulti.MergeFrom(other.RemoteMulti);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (remoteMulti_ == null) {
            RemoteMulti = new global::RemoteMulti();
          }
          input.ReadMessage(RemoteMulti);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu xóa remote đa năng
/// </summary>
public sealed partial class DeleteRemoteMultiServerRequest : pb::IMessage<DeleteRemoteMultiServerRequest> {
  private static readonly pb::MessageParser<DeleteRemoteMultiServerRequest> _parser = new pb::MessageParser<DeleteRemoteMultiServerRequest>(() => new DeleteRemoteMultiServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeleteRemoteMultiServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[186]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteRemoteMultiServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteRemoteMultiServerRequest(DeleteRemoteMultiServerRequest other) : this() {
    id_ = other.id_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteRemoteMultiServerRequest Clone() {
    return new DeleteRemoteMultiServerRequest(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private string id_ = "";
  /// <summary>
  /// Id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Id {
    get { return id_; }
    set {
      id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeleteRemoteMultiServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeleteRemoteMultiServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id.Length != 0) hash ^= Id.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeleteRemoteMultiServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.Id.Length != 0) {
      Id = other.Id;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu thêm nút lệnh cho remote đa năng
/// </summary>
public sealed partial class AddRemoteMultiLibraryCmdServerRequest : pb::IMessage<AddRemoteMultiLibraryCmdServerRequest> {
  private static readonly pb::MessageParser<AddRemoteMultiLibraryCmdServerRequest> _parser = new pb::MessageParser<AddRemoteMultiLibraryCmdServerRequest>(() => new AddRemoteMultiLibraryCmdServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AddRemoteMultiLibraryCmdServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[187]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddRemoteMultiLibraryCmdServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddRemoteMultiLibraryCmdServerRequest(AddRemoteMultiLibraryCmdServerRequest other) : this() {
    remoteMultiLibraryCmd_ = other.remoteMultiLibraryCmd_ != null ? other.remoteMultiLibraryCmd_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddRemoteMultiLibraryCmdServerRequest Clone() {
    return new AddRemoteMultiLibraryCmdServerRequest(this);
  }

  /// <summary>Field number for the "remoteMultiLibraryCmd" field.</summary>
  public const int RemoteMultiLibraryCmdFieldNumber = 1;
  private global::RemoteMultiLibraryCmd remoteMultiLibraryCmd_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RemoteMultiLibraryCmd RemoteMultiLibraryCmd {
    get { return remoteMultiLibraryCmd_; }
    set {
      remoteMultiLibraryCmd_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AddRemoteMultiLibraryCmdServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AddRemoteMultiLibraryCmdServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(RemoteMultiLibraryCmd, other.RemoteMultiLibraryCmd)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (remoteMultiLibraryCmd_ != null) hash ^= RemoteMultiLibraryCmd.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (remoteMultiLibraryCmd_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(RemoteMultiLibraryCmd);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (remoteMultiLibraryCmd_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(RemoteMultiLibraryCmd);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AddRemoteMultiLibraryCmdServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.remoteMultiLibraryCmd_ != null) {
      if (remoteMultiLibraryCmd_ == null) {
        RemoteMultiLibraryCmd = new global::RemoteMultiLibraryCmd();
      }
      RemoteMultiLibraryCmd.MergeFrom(other.RemoteMultiLibraryCmd);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (remoteMultiLibraryCmd_ == null) {
            RemoteMultiLibraryCmd = new global::RemoteMultiLibraryCmd();
          }
          input.ReadMessage(RemoteMultiLibraryCmd);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu thêm nút lệnh cho remote đa năng
/// </summary>
public sealed partial class UpdateRemoteMultiLibraryCmdServerRequest : pb::IMessage<UpdateRemoteMultiLibraryCmdServerRequest> {
  private static readonly pb::MessageParser<UpdateRemoteMultiLibraryCmdServerRequest> _parser = new pb::MessageParser<UpdateRemoteMultiLibraryCmdServerRequest>(() => new UpdateRemoteMultiLibraryCmdServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateRemoteMultiLibraryCmdServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[188]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateRemoteMultiLibraryCmdServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateRemoteMultiLibraryCmdServerRequest(UpdateRemoteMultiLibraryCmdServerRequest other) : this() {
    remoteMultiLibraryCmd_ = other.remoteMultiLibraryCmd_ != null ? other.remoteMultiLibraryCmd_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateRemoteMultiLibraryCmdServerRequest Clone() {
    return new UpdateRemoteMultiLibraryCmdServerRequest(this);
  }

  /// <summary>Field number for the "remoteMultiLibraryCmd" field.</summary>
  public const int RemoteMultiLibraryCmdFieldNumber = 1;
  private global::RemoteMultiLibraryCmd remoteMultiLibraryCmd_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RemoteMultiLibraryCmd RemoteMultiLibraryCmd {
    get { return remoteMultiLibraryCmd_; }
    set {
      remoteMultiLibraryCmd_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateRemoteMultiLibraryCmdServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateRemoteMultiLibraryCmdServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(RemoteMultiLibraryCmd, other.RemoteMultiLibraryCmd)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (remoteMultiLibraryCmd_ != null) hash ^= RemoteMultiLibraryCmd.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (remoteMultiLibraryCmd_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(RemoteMultiLibraryCmd);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (remoteMultiLibraryCmd_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(RemoteMultiLibraryCmd);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateRemoteMultiLibraryCmdServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.remoteMultiLibraryCmd_ != null) {
      if (remoteMultiLibraryCmd_ == null) {
        RemoteMultiLibraryCmd = new global::RemoteMultiLibraryCmd();
      }
      RemoteMultiLibraryCmd.MergeFrom(other.RemoteMultiLibraryCmd);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (remoteMultiLibraryCmd_ == null) {
            RemoteMultiLibraryCmd = new global::RemoteMultiLibraryCmd();
          }
          input.ReadMessage(RemoteMultiLibraryCmd);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu thêm nút lệnh cho remote đa năng
/// </summary>
public sealed partial class UpdateGroupRemoteMultiLibraryCmdServerRequest : pb::IMessage<UpdateGroupRemoteMultiLibraryCmdServerRequest> {
  private static readonly pb::MessageParser<UpdateGroupRemoteMultiLibraryCmdServerRequest> _parser = new pb::MessageParser<UpdateGroupRemoteMultiLibraryCmdServerRequest>(() => new UpdateGroupRemoteMultiLibraryCmdServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateGroupRemoteMultiLibraryCmdServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[189]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateGroupRemoteMultiLibraryCmdServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateGroupRemoteMultiLibraryCmdServerRequest(UpdateGroupRemoteMultiLibraryCmdServerRequest other) : this() {
    remoteMultiLibraryCmd_ = other.remoteMultiLibraryCmd_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateGroupRemoteMultiLibraryCmdServerRequest Clone() {
    return new UpdateGroupRemoteMultiLibraryCmdServerRequest(this);
  }

  /// <summary>Field number for the "remoteMultiLibraryCmd" field.</summary>
  public const int RemoteMultiLibraryCmdFieldNumber = 1;
  private static readonly pb::FieldCodec<global::RemoteMultiLibraryCmd> _repeated_remoteMultiLibraryCmd_codec
      = pb::FieldCodec.ForMessage(10, global::RemoteMultiLibraryCmd.Parser);
  private readonly pbc::RepeatedField<global::RemoteMultiLibraryCmd> remoteMultiLibraryCmd_ = new pbc::RepeatedField<global::RemoteMultiLibraryCmd>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::RemoteMultiLibraryCmd> RemoteMultiLibraryCmd {
    get { return remoteMultiLibraryCmd_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateGroupRemoteMultiLibraryCmdServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateGroupRemoteMultiLibraryCmdServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!remoteMultiLibraryCmd_.Equals(other.remoteMultiLibraryCmd_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= remoteMultiLibraryCmd_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    remoteMultiLibraryCmd_.WriteTo(output, _repeated_remoteMultiLibraryCmd_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += remoteMultiLibraryCmd_.CalculateSize(_repeated_remoteMultiLibraryCmd_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateGroupRemoteMultiLibraryCmdServerRequest other) {
    if (other == null) {
      return;
    }
    remoteMultiLibraryCmd_.Add(other.remoteMultiLibraryCmd_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          remoteMultiLibraryCmd_.AddEntriesFrom(input, _repeated_remoteMultiLibraryCmd_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu xóa nút lệnh đa năng
/// </summary>
public sealed partial class DeleteRemoteMultiLibraryCmdServerRequest : pb::IMessage<DeleteRemoteMultiLibraryCmdServerRequest> {
  private static readonly pb::MessageParser<DeleteRemoteMultiLibraryCmdServerRequest> _parser = new pb::MessageParser<DeleteRemoteMultiLibraryCmdServerRequest>(() => new DeleteRemoteMultiLibraryCmdServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeleteRemoteMultiLibraryCmdServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[190]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteRemoteMultiLibraryCmdServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteRemoteMultiLibraryCmdServerRequest(DeleteRemoteMultiLibraryCmdServerRequest other) : this() {
    id_ = other.id_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteRemoteMultiLibraryCmdServerRequest Clone() {
    return new DeleteRemoteMultiLibraryCmdServerRequest(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private string id_ = "";
  /// <summary>
  /// Id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Id {
    get { return id_; }
    set {
      id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeleteRemoteMultiLibraryCmdServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeleteRemoteMultiLibraryCmdServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id.Length != 0) hash ^= Id.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeleteRemoteMultiLibraryCmdServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.Id.Length != 0) {
      Id = other.Id;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
///----- Yêu cầu hẹn giờ của remote -----//
/// Nhận được yêu cầu gửi danh sách lịch hẹn giờ của 1 remote
/// </summary>
public sealed partial class GetRemoteSchedulesServerRequest : pb::IMessage<GetRemoteSchedulesServerRequest> {
  private static readonly pb::MessageParser<GetRemoteSchedulesServerRequest> _parser = new pb::MessageParser<GetRemoteSchedulesServerRequest>(() => new GetRemoteSchedulesServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetRemoteSchedulesServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[191]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRemoteSchedulesServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRemoteSchedulesServerRequest(GetRemoteSchedulesServerRequest other) : this() {
    remoteId_ = other.remoteId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRemoteSchedulesServerRequest Clone() {
    return new GetRemoteSchedulesServerRequest(this);
  }

  /// <summary>Field number for the "remoteId" field.</summary>
  public const int RemoteIdFieldNumber = 1;
  private string remoteId_ = "";
  /// <summary>
  /// Id của remote
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RemoteId {
    get { return remoteId_; }
    set {
      remoteId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetRemoteSchedulesServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetRemoteSchedulesServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RemoteId != other.RemoteId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RemoteId.Length != 0) hash ^= RemoteId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (RemoteId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(RemoteId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RemoteId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RemoteId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetRemoteSchedulesServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.RemoteId.Length != 0) {
      RemoteId = other.RemoteId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          RemoteId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu gửi số lượng lịch hẹn giờ của 1 remote
/// </summary>
public sealed partial class GetCountRemoteScheduleServerRequest : pb::IMessage<GetCountRemoteScheduleServerRequest> {
  private static readonly pb::MessageParser<GetCountRemoteScheduleServerRequest> _parser = new pb::MessageParser<GetCountRemoteScheduleServerRequest>(() => new GetCountRemoteScheduleServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetCountRemoteScheduleServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[192]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCountRemoteScheduleServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCountRemoteScheduleServerRequest(GetCountRemoteScheduleServerRequest other) : this() {
    remoteId_ = other.remoteId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCountRemoteScheduleServerRequest Clone() {
    return new GetCountRemoteScheduleServerRequest(this);
  }

  /// <summary>Field number for the "remoteId" field.</summary>
  public const int RemoteIdFieldNumber = 1;
  private string remoteId_ = "";
  /// <summary>
  /// Id của remote
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RemoteId {
    get { return remoteId_; }
    set {
      remoteId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetCountRemoteScheduleServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetCountRemoteScheduleServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RemoteId != other.RemoteId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RemoteId.Length != 0) hash ^= RemoteId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (RemoteId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(RemoteId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RemoteId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RemoteId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetCountRemoteScheduleServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.RemoteId.Length != 0) {
      RemoteId = other.RemoteId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          RemoteId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu gửi thông tin chi tiết 1 lịch của 1 remote
/// </summary>
public sealed partial class GetRemoteScheduleServerRequest : pb::IMessage<GetRemoteScheduleServerRequest> {
  private static readonly pb::MessageParser<GetRemoteScheduleServerRequest> _parser = new pb::MessageParser<GetRemoteScheduleServerRequest>(() => new GetRemoteScheduleServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetRemoteScheduleServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[193]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRemoteScheduleServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRemoteScheduleServerRequest(GetRemoteScheduleServerRequest other) : this() {
    remoteScheduleId_ = other.remoteScheduleId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRemoteScheduleServerRequest Clone() {
    return new GetRemoteScheduleServerRequest(this);
  }

  /// <summary>Field number for the "remoteScheduleId" field.</summary>
  public const int RemoteScheduleIdFieldNumber = 1;
  private string remoteScheduleId_ = "";
  /// <summary>
  /// Id của remoteScheduleId
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RemoteScheduleId {
    get { return remoteScheduleId_; }
    set {
      remoteScheduleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetRemoteScheduleServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetRemoteScheduleServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RemoteScheduleId != other.RemoteScheduleId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RemoteScheduleId.Length != 0) hash ^= RemoteScheduleId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (RemoteScheduleId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(RemoteScheduleId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RemoteScheduleId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RemoteScheduleId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetRemoteScheduleServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.RemoteScheduleId.Length != 0) {
      RemoteScheduleId = other.RemoteScheduleId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          RemoteScheduleId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu thêm mới 1 lịch của 1 remote
/// </summary>
public sealed partial class AddRemoteScheduleServerRequest : pb::IMessage<AddRemoteScheduleServerRequest> {
  private static readonly pb::MessageParser<AddRemoteScheduleServerRequest> _parser = new pb::MessageParser<AddRemoteScheduleServerRequest>(() => new AddRemoteScheduleServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AddRemoteScheduleServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[194]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddRemoteScheduleServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddRemoteScheduleServerRequest(AddRemoteScheduleServerRequest other) : this() {
    schedule_ = other.schedule_ != null ? other.schedule_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddRemoteScheduleServerRequest Clone() {
    return new AddRemoteScheduleServerRequest(this);
  }

  /// <summary>Field number for the "schedule" field.</summary>
  public const int ScheduleFieldNumber = 2;
  private global::RemoteSchedule schedule_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RemoteSchedule Schedule {
    get { return schedule_; }
    set {
      schedule_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AddRemoteScheduleServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AddRemoteScheduleServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Schedule, other.Schedule)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (schedule_ != null) hash ^= Schedule.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (schedule_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Schedule);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (schedule_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schedule);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AddRemoteScheduleServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.schedule_ != null) {
      if (schedule_ == null) {
        Schedule = new global::RemoteSchedule();
      }
      Schedule.MergeFrom(other.Schedule);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 18: {
          if (schedule_ == null) {
            Schedule = new global::RemoteSchedule();
          }
          input.ReadMessage(Schedule);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu update 1 lịch của 1 remote
/// </summary>
public sealed partial class UpdateRemoteScheduleServerRequest : pb::IMessage<UpdateRemoteScheduleServerRequest> {
  private static readonly pb::MessageParser<UpdateRemoteScheduleServerRequest> _parser = new pb::MessageParser<UpdateRemoteScheduleServerRequest>(() => new UpdateRemoteScheduleServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateRemoteScheduleServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[195]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateRemoteScheduleServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateRemoteScheduleServerRequest(UpdateRemoteScheduleServerRequest other) : this() {
    schedule_ = other.schedule_ != null ? other.schedule_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateRemoteScheduleServerRequest Clone() {
    return new UpdateRemoteScheduleServerRequest(this);
  }

  /// <summary>Field number for the "schedule" field.</summary>
  public const int ScheduleFieldNumber = 2;
  private global::RemoteSchedule schedule_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RemoteSchedule Schedule {
    get { return schedule_; }
    set {
      schedule_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateRemoteScheduleServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateRemoteScheduleServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Schedule, other.Schedule)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (schedule_ != null) hash ^= Schedule.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (schedule_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Schedule);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (schedule_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schedule);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateRemoteScheduleServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.schedule_ != null) {
      if (schedule_ == null) {
        Schedule = new global::RemoteSchedule();
      }
      Schedule.MergeFrom(other.Schedule);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 18: {
          if (schedule_ == null) {
            Schedule = new global::RemoteSchedule();
          }
          input.ReadMessage(Schedule);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu xóa 1 lịch của 1 remote
/// </summary>
public sealed partial class DeleteRemoteScheduleServerRequest : pb::IMessage<DeleteRemoteScheduleServerRequest> {
  private static readonly pb::MessageParser<DeleteRemoteScheduleServerRequest> _parser = new pb::MessageParser<DeleteRemoteScheduleServerRequest>(() => new DeleteRemoteScheduleServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeleteRemoteScheduleServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[196]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteRemoteScheduleServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteRemoteScheduleServerRequest(DeleteRemoteScheduleServerRequest other) : this() {
    remoteScheduleId_ = other.remoteScheduleId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteRemoteScheduleServerRequest Clone() {
    return new DeleteRemoteScheduleServerRequest(this);
  }

  /// <summary>Field number for the "remoteScheduleId" field.</summary>
  public const int RemoteScheduleIdFieldNumber = 1;
  private string remoteScheduleId_ = "";
  /// <summary>
  /// Id của remoteScheduleId
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RemoteScheduleId {
    get { return remoteScheduleId_; }
    set {
      remoteScheduleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeleteRemoteScheduleServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeleteRemoteScheduleServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RemoteScheduleId != other.RemoteScheduleId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RemoteScheduleId.Length != 0) hash ^= RemoteScheduleId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (RemoteScheduleId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(RemoteScheduleId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RemoteScheduleId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RemoteScheduleId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeleteRemoteScheduleServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.RemoteScheduleId.Length != 0) {
      RemoteScheduleId = other.RemoteScheduleId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          RemoteScheduleId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu set active lịch của 1 remote
/// </summary>
public sealed partial class SetActiveRemoteScheduleServerRequest : pb::IMessage<SetActiveRemoteScheduleServerRequest> {
  private static readonly pb::MessageParser<SetActiveRemoteScheduleServerRequest> _parser = new pb::MessageParser<SetActiveRemoteScheduleServerRequest>(() => new SetActiveRemoteScheduleServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SetActiveRemoteScheduleServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[197]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetActiveRemoteScheduleServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetActiveRemoteScheduleServerRequest(SetActiveRemoteScheduleServerRequest other) : this() {
    active_ = other.active_;
    remoteScheduleId_ = other.remoteScheduleId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetActiveRemoteScheduleServerRequest Clone() {
    return new SetActiveRemoteScheduleServerRequest(this);
  }

  /// <summary>Field number for the "active" field.</summary>
  public const int ActiveFieldNumber = 1;
  private bool active_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Active {
    get { return active_; }
    set {
      active_ = value;
    }
  }

  /// <summary>Field number for the "remoteScheduleId" field.</summary>
  public const int RemoteScheduleIdFieldNumber = 2;
  private string remoteScheduleId_ = "";
  /// <summary>
  /// Id của remoteScheduleId
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RemoteScheduleId {
    get { return remoteScheduleId_; }
    set {
      remoteScheduleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SetActiveRemoteScheduleServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SetActiveRemoteScheduleServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Active != other.Active) return false;
    if (RemoteScheduleId != other.RemoteScheduleId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Active != false) hash ^= Active.GetHashCode();
    if (RemoteScheduleId.Length != 0) hash ^= RemoteScheduleId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Active != false) {
      output.WriteRawTag(8);
      output.WriteBool(Active);
    }
    if (RemoteScheduleId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(RemoteScheduleId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Active != false) {
      size += 1 + 1;
    }
    if (RemoteScheduleId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RemoteScheduleId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SetActiveRemoteScheduleServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.Active != false) {
      Active = other.Active;
    }
    if (other.RemoteScheduleId.Length != 0) {
      RemoteScheduleId = other.RemoteScheduleId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Active = input.ReadBool();
          break;
        }
        case 18: {
          RemoteScheduleId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
///----- Phản hồi của remote -----//
/// Phản hồi thông tin danh sách các remote
/// </summary>
public sealed partial class GetRemotesServerResponse : pb::IMessage<GetRemotesServerResponse> {
  private static readonly pb::MessageParser<GetRemotesServerResponse> _parser = new pb::MessageParser<GetRemotesServerResponse>(() => new GetRemotesServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetRemotesServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[198]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRemotesServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRemotesServerResponse(GetRemotesServerResponse other) : this() {
    remotes_ = other.remotes_.Clone();
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRemotesServerResponse Clone() {
    return new GetRemotesServerResponse(this);
  }

  /// <summary>Field number for the "remotes" field.</summary>
  public const int RemotesFieldNumber = 1;
  private static readonly pb::FieldCodec<global::Remote> _repeated_remotes_codec
      = pb::FieldCodec.ForMessage(10, global::Remote.Parser);
  private readonly pbc::RepeatedField<global::Remote> remotes_ = new pbc::RepeatedField<global::Remote>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Remote> Remotes {
    get { return remotes_; }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetRemotesServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetRemotesServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!remotes_.Equals(other.remotes_)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= remotes_.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    remotes_.WriteTo(output, _repeated_remotes_codec);
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += remotes_.CalculateSize(_repeated_remotes_codec);
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetRemotesServerResponse other) {
    if (other == null) {
      return;
    }
    remotes_.Add(other.remotes_);
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          remotes_.AddEntriesFrom(input, _repeated_remotes_codec);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin chi tiết của remote
/// </summary>
public sealed partial class GetRemoteServerResponse : pb::IMessage<GetRemoteServerResponse> {
  private static readonly pb::MessageParser<GetRemoteServerResponse> _parser = new pb::MessageParser<GetRemoteServerResponse>(() => new GetRemoteServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetRemoteServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[199]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRemoteServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRemoteServerResponse(GetRemoteServerResponse other) : this() {
    remote_ = other.remote_ != null ? other.remote_.Clone() : null;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRemoteServerResponse Clone() {
    return new GetRemoteServerResponse(this);
  }

  /// <summary>Field number for the "remote" field.</summary>
  public const int RemoteFieldNumber = 1;
  private global::Remote remote_;
  /// <summary>
  /// Remote
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Remote Remote {
    get { return remote_; }
    set {
      remote_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetRemoteServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetRemoteServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Remote, other.Remote)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (remote_ != null) hash ^= Remote.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (remote_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Remote);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (remote_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Remote);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetRemoteServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.remote_ != null) {
      if (remote_ == null) {
        Remote = new global::Remote();
      }
      Remote.MergeFrom(other.Remote);
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (remote_ == null) {
            Remote = new global::Remote();
          }
          input.ReadMessage(Remote);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin về danh sách các remote library
/// </summary>
public sealed partial class GetRemoteLibrariesServerResponse : pb::IMessage<GetRemoteLibrariesServerResponse> {
  private static readonly pb::MessageParser<GetRemoteLibrariesServerResponse> _parser = new pb::MessageParser<GetRemoteLibrariesServerResponse>(() => new GetRemoteLibrariesServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetRemoteLibrariesServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[200]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRemoteLibrariesServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRemoteLibrariesServerResponse(GetRemoteLibrariesServerResponse other) : this() {
    libraries_ = other.libraries_.Clone();
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRemoteLibrariesServerResponse Clone() {
    return new GetRemoteLibrariesServerResponse(this);
  }

  /// <summary>Field number for the "libraries" field.</summary>
  public const int LibrariesFieldNumber = 1;
  private static readonly pb::FieldCodec<global::RemoteLibrary> _repeated_libraries_codec
      = pb::FieldCodec.ForMessage(10, global::RemoteLibrary.Parser);
  private readonly pbc::RepeatedField<global::RemoteLibrary> libraries_ = new pbc::RepeatedField<global::RemoteLibrary>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::RemoteLibrary> Libraries {
    get { return libraries_; }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetRemoteLibrariesServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetRemoteLibrariesServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!libraries_.Equals(other.libraries_)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= libraries_.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    libraries_.WriteTo(output, _repeated_libraries_codec);
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += libraries_.CalculateSize(_repeated_libraries_codec);
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetRemoteLibrariesServerResponse other) {
    if (other == null) {
      return;
    }
    libraries_.Add(other.libraries_);
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          libraries_.AddEntriesFrom(input, _repeated_libraries_codec);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin danh sách các nút điều khiển
/// </summary>
public sealed partial class GetCommandsRemoteServerResponse : pb::IMessage<GetCommandsRemoteServerResponse> {
  private static readonly pb::MessageParser<GetCommandsRemoteServerResponse> _parser = new pb::MessageParser<GetCommandsRemoteServerResponse>(() => new GetCommandsRemoteServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetCommandsRemoteServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[201]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCommandsRemoteServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCommandsRemoteServerResponse(GetCommandsRemoteServerResponse other) : this() {
    commands_ = other.commands_.Clone();
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCommandsRemoteServerResponse Clone() {
    return new GetCommandsRemoteServerResponse(this);
  }

  /// <summary>Field number for the "commands" field.</summary>
  public const int CommandsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::RemoteCommand> _repeated_commands_codec
      = pb::FieldCodec.ForMessage(10, global::RemoteCommand.Parser);
  private readonly pbc::RepeatedField<global::RemoteCommand> commands_ = new pbc::RepeatedField<global::RemoteCommand>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::RemoteCommand> Commands {
    get { return commands_; }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetCommandsRemoteServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetCommandsRemoteServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!commands_.Equals(other.commands_)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= commands_.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    commands_.WriteTo(output, _repeated_commands_codec);
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += commands_.CalculateSize(_repeated_commands_codec);
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetCommandsRemoteServerResponse other) {
    if (other == null) {
      return;
    }
    commands_.Add(other.commands_);
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          commands_.AddEntriesFrom(input, _repeated_commands_codec);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin sau khi thực hiện lệnh remote
/// </summary>
public sealed partial class SendCommandRemoteServerResponse : pb::IMessage<SendCommandRemoteServerResponse> {
  private static readonly pb::MessageParser<SendCommandRemoteServerResponse> _parser = new pb::MessageParser<SendCommandRemoteServerResponse>(() => new SendCommandRemoteServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SendCommandRemoteServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[202]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SendCommandRemoteServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SendCommandRemoteServerResponse(SendCommandRemoteServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SendCommandRemoteServerResponse Clone() {
    return new SendCommandRemoteServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SendCommandRemoteServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SendCommandRemoteServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SendCommandRemoteServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin sau khi yêu cầu học lệnh remote kết thúc
/// </summary>
public sealed partial class LearnCommandRemoteServerResponse : pb::IMessage<LearnCommandRemoteServerResponse> {
  private static readonly pb::MessageParser<LearnCommandRemoteServerResponse> _parser = new pb::MessageParser<LearnCommandRemoteServerResponse>(() => new LearnCommandRemoteServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<LearnCommandRemoteServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[203]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LearnCommandRemoteServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LearnCommandRemoteServerResponse(LearnCommandRemoteServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LearnCommandRemoteServerResponse Clone() {
    return new LearnCommandRemoteServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as LearnCommandRemoteServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(LearnCommandRemoteServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(LearnCommandRemoteServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi sau khôi phục lệnh mặc định
/// </summary>
public sealed partial class RestoreCommandRemoteServerResponse : pb::IMessage<RestoreCommandRemoteServerResponse> {
  private static readonly pb::MessageParser<RestoreCommandRemoteServerResponse> _parser = new pb::MessageParser<RestoreCommandRemoteServerResponse>(() => new RestoreCommandRemoteServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RestoreCommandRemoteServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[204]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RestoreCommandRemoteServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RestoreCommandRemoteServerResponse(RestoreCommandRemoteServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RestoreCommandRemoteServerResponse Clone() {
    return new RestoreCommandRemoteServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RestoreCommandRemoteServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RestoreCommandRemoteServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RestoreCommandRemoteServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin thêm mới 1 remote
/// </summary>
public sealed partial class AddRemoteServerResponse : pb::IMessage<AddRemoteServerResponse> {
  private static readonly pb::MessageParser<AddRemoteServerResponse> _parser = new pb::MessageParser<AddRemoteServerResponse>(() => new AddRemoteServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AddRemoteServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[205]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddRemoteServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddRemoteServerResponse(AddRemoteServerResponse other) : this() {
    remote_ = other.remote_ != null ? other.remote_.Clone() : null;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddRemoteServerResponse Clone() {
    return new AddRemoteServerResponse(this);
  }

  /// <summary>Field number for the "remote" field.</summary>
  public const int RemoteFieldNumber = 1;
  private global::Remote remote_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Remote Remote {
    get { return remote_; }
    set {
      remote_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AddRemoteServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AddRemoteServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Remote, other.Remote)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (remote_ != null) hash ^= Remote.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (remote_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Remote);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (remote_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Remote);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AddRemoteServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.remote_ != null) {
      if (remote_ == null) {
        Remote = new global::Remote();
      }
      Remote.MergeFrom(other.Remote);
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (remote_ == null) {
            Remote = new global::Remote();
          }
          input.ReadMessage(Remote);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin update 1 remote
/// </summary>
public sealed partial class UpdateRemoteServerResponse : pb::IMessage<UpdateRemoteServerResponse> {
  private static readonly pb::MessageParser<UpdateRemoteServerResponse> _parser = new pb::MessageParser<UpdateRemoteServerResponse>(() => new UpdateRemoteServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateRemoteServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[206]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateRemoteServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateRemoteServerResponse(UpdateRemoteServerResponse other) : this() {
    remote_ = other.remote_ != null ? other.remote_.Clone() : null;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateRemoteServerResponse Clone() {
    return new UpdateRemoteServerResponse(this);
  }

  /// <summary>Field number for the "remote" field.</summary>
  public const int RemoteFieldNumber = 1;
  private global::Remote remote_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Remote Remote {
    get { return remote_; }
    set {
      remote_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateRemoteServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateRemoteServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Remote, other.Remote)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (remote_ != null) hash ^= Remote.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (remote_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Remote);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (remote_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Remote);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateRemoteServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.remote_ != null) {
      if (remote_ == null) {
        Remote = new global::Remote();
      }
      Remote.MergeFrom(other.Remote);
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (remote_ == null) {
            Remote = new global::Remote();
          }
          input.ReadMessage(Remote);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin xóa 1 remote
/// </summary>
public sealed partial class DeleteRemoteServerResponse : pb::IMessage<DeleteRemoteServerResponse> {
  private static readonly pb::MessageParser<DeleteRemoteServerResponse> _parser = new pb::MessageParser<DeleteRemoteServerResponse>(() => new DeleteRemoteServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeleteRemoteServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[207]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteRemoteServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteRemoteServerResponse(DeleteRemoteServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteRemoteServerResponse Clone() {
    return new DeleteRemoteServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeleteRemoteServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeleteRemoteServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeleteRemoteServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin sau khi thực hiện lệnh remote/runtime nhưng chỉ có 1 chiều
/// </summary>
public sealed partial class RemoteOnChangedServerResponse : pb::IMessage<RemoteOnChangedServerResponse> {
  private static readonly pb::MessageParser<RemoteOnChangedServerResponse> _parser = new pb::MessageParser<RemoteOnChangedServerResponse>(() => new RemoteOnChangedServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RemoteOnChangedServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[208]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RemoteOnChangedServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RemoteOnChangedServerResponse(RemoteOnChangedServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RemoteOnChangedServerResponse Clone() {
    return new RemoteOnChangedServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RemoteOnChangedServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RemoteOnChangedServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RemoteOnChangedServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
///----- Phản hồi remote đa năng -----//
/// Phản hồi thông tin danh sách remote đa năng
/// </summary>
public sealed partial class GetRemoteMultisServerResponse : pb::IMessage<GetRemoteMultisServerResponse> {
  private static readonly pb::MessageParser<GetRemoteMultisServerResponse> _parser = new pb::MessageParser<GetRemoteMultisServerResponse>(() => new GetRemoteMultisServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetRemoteMultisServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[209]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRemoteMultisServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRemoteMultisServerResponse(GetRemoteMultisServerResponse other) : this() {
    remoteMultis_ = other.remoteMultis_.Clone();
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRemoteMultisServerResponse Clone() {
    return new GetRemoteMultisServerResponse(this);
  }

  /// <summary>Field number for the "remoteMultis" field.</summary>
  public const int RemoteMultisFieldNumber = 1;
  private static readonly pb::FieldCodec<global::RemoteMulti> _repeated_remoteMultis_codec
      = pb::FieldCodec.ForMessage(10, global::RemoteMulti.Parser);
  private readonly pbc::RepeatedField<global::RemoteMulti> remoteMultis_ = new pbc::RepeatedField<global::RemoteMulti>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::RemoteMulti> RemoteMultis {
    get { return remoteMultis_; }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetRemoteMultisServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetRemoteMultisServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!remoteMultis_.Equals(other.remoteMultis_)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= remoteMultis_.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    remoteMultis_.WriteTo(output, _repeated_remoteMultis_codec);
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += remoteMultis_.CalculateSize(_repeated_remoteMultis_codec);
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetRemoteMultisServerResponse other) {
    if (other == null) {
      return;
    }
    remoteMultis_.Add(other.remoteMultis_);
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          remoteMultis_.AddEntriesFrom(input, _repeated_remoteMultis_codec);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thêm mới remote đa năng
/// </summary>
public sealed partial class AddRemoteMultiServerResponse : pb::IMessage<AddRemoteMultiServerResponse> {
  private static readonly pb::MessageParser<AddRemoteMultiServerResponse> _parser = new pb::MessageParser<AddRemoteMultiServerResponse>(() => new AddRemoteMultiServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AddRemoteMultiServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[210]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddRemoteMultiServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddRemoteMultiServerResponse(AddRemoteMultiServerResponse other) : this() {
    remoteMulti_ = other.remoteMulti_ != null ? other.remoteMulti_.Clone() : null;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddRemoteMultiServerResponse Clone() {
    return new AddRemoteMultiServerResponse(this);
  }

  /// <summary>Field number for the "remoteMulti" field.</summary>
  public const int RemoteMultiFieldNumber = 1;
  private global::RemoteMulti remoteMulti_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RemoteMulti RemoteMulti {
    get { return remoteMulti_; }
    set {
      remoteMulti_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AddRemoteMultiServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AddRemoteMultiServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(RemoteMulti, other.RemoteMulti)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (remoteMulti_ != null) hash ^= RemoteMulti.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (remoteMulti_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(RemoteMulti);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (remoteMulti_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(RemoteMulti);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AddRemoteMultiServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.remoteMulti_ != null) {
      if (remoteMulti_ == null) {
        RemoteMulti = new global::RemoteMulti();
      }
      RemoteMulti.MergeFrom(other.RemoteMulti);
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (remoteMulti_ == null) {
            RemoteMulti = new global::RemoteMulti();
          }
          input.ReadMessage(RemoteMulti);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi xóa remote đa năng
/// </summary>
public sealed partial class DeleteRemoteMultiServerResponse : pb::IMessage<DeleteRemoteMultiServerResponse> {
  private static readonly pb::MessageParser<DeleteRemoteMultiServerResponse> _parser = new pb::MessageParser<DeleteRemoteMultiServerResponse>(() => new DeleteRemoteMultiServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeleteRemoteMultiServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[211]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteRemoteMultiServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteRemoteMultiServerResponse(DeleteRemoteMultiServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteRemoteMultiServerResponse Clone() {
    return new DeleteRemoteMultiServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeleteRemoteMultiServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeleteRemoteMultiServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeleteRemoteMultiServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thêm nút lệnh cho remote đa năng
/// </summary>
public sealed partial class AddRemoteMultiLibraryCmdServerResponse : pb::IMessage<AddRemoteMultiLibraryCmdServerResponse> {
  private static readonly pb::MessageParser<AddRemoteMultiLibraryCmdServerResponse> _parser = new pb::MessageParser<AddRemoteMultiLibraryCmdServerResponse>(() => new AddRemoteMultiLibraryCmdServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AddRemoteMultiLibraryCmdServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[212]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddRemoteMultiLibraryCmdServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddRemoteMultiLibraryCmdServerResponse(AddRemoteMultiLibraryCmdServerResponse other) : this() {
    remoteMultiLibraryCmd_ = other.remoteMultiLibraryCmd_ != null ? other.remoteMultiLibraryCmd_.Clone() : null;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddRemoteMultiLibraryCmdServerResponse Clone() {
    return new AddRemoteMultiLibraryCmdServerResponse(this);
  }

  /// <summary>Field number for the "remoteMultiLibraryCmd" field.</summary>
  public const int RemoteMultiLibraryCmdFieldNumber = 1;
  private global::RemoteMultiLibraryCmd remoteMultiLibraryCmd_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RemoteMultiLibraryCmd RemoteMultiLibraryCmd {
    get { return remoteMultiLibraryCmd_; }
    set {
      remoteMultiLibraryCmd_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AddRemoteMultiLibraryCmdServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AddRemoteMultiLibraryCmdServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(RemoteMultiLibraryCmd, other.RemoteMultiLibraryCmd)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (remoteMultiLibraryCmd_ != null) hash ^= RemoteMultiLibraryCmd.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (remoteMultiLibraryCmd_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(RemoteMultiLibraryCmd);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (remoteMultiLibraryCmd_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(RemoteMultiLibraryCmd);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AddRemoteMultiLibraryCmdServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.remoteMultiLibraryCmd_ != null) {
      if (remoteMultiLibraryCmd_ == null) {
        RemoteMultiLibraryCmd = new global::RemoteMultiLibraryCmd();
      }
      RemoteMultiLibraryCmd.MergeFrom(other.RemoteMultiLibraryCmd);
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (remoteMultiLibraryCmd_ == null) {
            RemoteMultiLibraryCmd = new global::RemoteMultiLibraryCmd();
          }
          input.ReadMessage(RemoteMultiLibraryCmd);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thêm nút lệnh cho remote đa năng
/// </summary>
public sealed partial class UpdateRemoteMultiLibraryCmdServerResponse : pb::IMessage<UpdateRemoteMultiLibraryCmdServerResponse> {
  private static readonly pb::MessageParser<UpdateRemoteMultiLibraryCmdServerResponse> _parser = new pb::MessageParser<UpdateRemoteMultiLibraryCmdServerResponse>(() => new UpdateRemoteMultiLibraryCmdServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateRemoteMultiLibraryCmdServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[213]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateRemoteMultiLibraryCmdServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateRemoteMultiLibraryCmdServerResponse(UpdateRemoteMultiLibraryCmdServerResponse other) : this() {
    remoteMultiLibraryCmd_ = other.remoteMultiLibraryCmd_ != null ? other.remoteMultiLibraryCmd_.Clone() : null;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateRemoteMultiLibraryCmdServerResponse Clone() {
    return new UpdateRemoteMultiLibraryCmdServerResponse(this);
  }

  /// <summary>Field number for the "remoteMultiLibraryCmd" field.</summary>
  public const int RemoteMultiLibraryCmdFieldNumber = 1;
  private global::RemoteMultiLibraryCmd remoteMultiLibraryCmd_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RemoteMultiLibraryCmd RemoteMultiLibraryCmd {
    get { return remoteMultiLibraryCmd_; }
    set {
      remoteMultiLibraryCmd_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateRemoteMultiLibraryCmdServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateRemoteMultiLibraryCmdServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(RemoteMultiLibraryCmd, other.RemoteMultiLibraryCmd)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (remoteMultiLibraryCmd_ != null) hash ^= RemoteMultiLibraryCmd.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (remoteMultiLibraryCmd_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(RemoteMultiLibraryCmd);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (remoteMultiLibraryCmd_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(RemoteMultiLibraryCmd);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateRemoteMultiLibraryCmdServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.remoteMultiLibraryCmd_ != null) {
      if (remoteMultiLibraryCmd_ == null) {
        RemoteMultiLibraryCmd = new global::RemoteMultiLibraryCmd();
      }
      RemoteMultiLibraryCmd.MergeFrom(other.RemoteMultiLibraryCmd);
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (remoteMultiLibraryCmd_ == null) {
            RemoteMultiLibraryCmd = new global::RemoteMultiLibraryCmd();
          }
          input.ReadMessage(RemoteMultiLibraryCmd);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thêm nút lệnh cho remote đa năng
/// </summary>
public sealed partial class UpdateGroupRemoteMultiLibraryCmdServerResponse : pb::IMessage<UpdateGroupRemoteMultiLibraryCmdServerResponse> {
  private static readonly pb::MessageParser<UpdateGroupRemoteMultiLibraryCmdServerResponse> _parser = new pb::MessageParser<UpdateGroupRemoteMultiLibraryCmdServerResponse>(() => new UpdateGroupRemoteMultiLibraryCmdServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateGroupRemoteMultiLibraryCmdServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[214]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateGroupRemoteMultiLibraryCmdServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateGroupRemoteMultiLibraryCmdServerResponse(UpdateGroupRemoteMultiLibraryCmdServerResponse other) : this() {
    remoteMultiLibraryCmd_ = other.remoteMultiLibraryCmd_.Clone();
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateGroupRemoteMultiLibraryCmdServerResponse Clone() {
    return new UpdateGroupRemoteMultiLibraryCmdServerResponse(this);
  }

  /// <summary>Field number for the "remoteMultiLibraryCmd" field.</summary>
  public const int RemoteMultiLibraryCmdFieldNumber = 1;
  private static readonly pb::FieldCodec<global::RemoteMultiLibraryCmd> _repeated_remoteMultiLibraryCmd_codec
      = pb::FieldCodec.ForMessage(10, global::RemoteMultiLibraryCmd.Parser);
  private readonly pbc::RepeatedField<global::RemoteMultiLibraryCmd> remoteMultiLibraryCmd_ = new pbc::RepeatedField<global::RemoteMultiLibraryCmd>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::RemoteMultiLibraryCmd> RemoteMultiLibraryCmd {
    get { return remoteMultiLibraryCmd_; }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateGroupRemoteMultiLibraryCmdServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateGroupRemoteMultiLibraryCmdServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!remoteMultiLibraryCmd_.Equals(other.remoteMultiLibraryCmd_)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= remoteMultiLibraryCmd_.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    remoteMultiLibraryCmd_.WriteTo(output, _repeated_remoteMultiLibraryCmd_codec);
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += remoteMultiLibraryCmd_.CalculateSize(_repeated_remoteMultiLibraryCmd_codec);
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateGroupRemoteMultiLibraryCmdServerResponse other) {
    if (other == null) {
      return;
    }
    remoteMultiLibraryCmd_.Add(other.remoteMultiLibraryCmd_);
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          remoteMultiLibraryCmd_.AddEntriesFrom(input, _repeated_remoteMultiLibraryCmd_codec);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi xóa nút lệnh đa năng
/// </summary>
public sealed partial class DeleteRemoteMultiLibraryCmdServerResponse : pb::IMessage<DeleteRemoteMultiLibraryCmdServerResponse> {
  private static readonly pb::MessageParser<DeleteRemoteMultiLibraryCmdServerResponse> _parser = new pb::MessageParser<DeleteRemoteMultiLibraryCmdServerResponse>(() => new DeleteRemoteMultiLibraryCmdServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeleteRemoteMultiLibraryCmdServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[215]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteRemoteMultiLibraryCmdServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteRemoteMultiLibraryCmdServerResponse(DeleteRemoteMultiLibraryCmdServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteRemoteMultiLibraryCmdServerResponse Clone() {
    return new DeleteRemoteMultiLibraryCmdServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeleteRemoteMultiLibraryCmdServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeleteRemoteMultiLibraryCmdServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeleteRemoteMultiLibraryCmdServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
///----- Phản hồi hẹn giờ remote -----//
/// Phản hồi thông tin danh sách hẹn giờ remote
/// </summary>
public sealed partial class GetRemoteSchedulesServerResponse : pb::IMessage<GetRemoteSchedulesServerResponse> {
  private static readonly pb::MessageParser<GetRemoteSchedulesServerResponse> _parser = new pb::MessageParser<GetRemoteSchedulesServerResponse>(() => new GetRemoteSchedulesServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetRemoteSchedulesServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[216]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRemoteSchedulesServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRemoteSchedulesServerResponse(GetRemoteSchedulesServerResponse other) : this() {
    schedules_ = other.schedules_.Clone();
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRemoteSchedulesServerResponse Clone() {
    return new GetRemoteSchedulesServerResponse(this);
  }

  /// <summary>Field number for the "schedules" field.</summary>
  public const int SchedulesFieldNumber = 1;
  private static readonly pb::FieldCodec<global::RemoteSchedule> _repeated_schedules_codec
      = pb::FieldCodec.ForMessage(10, global::RemoteSchedule.Parser);
  private readonly pbc::RepeatedField<global::RemoteSchedule> schedules_ = new pbc::RepeatedField<global::RemoteSchedule>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::RemoteSchedule> Schedules {
    get { return schedules_; }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetRemoteSchedulesServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetRemoteSchedulesServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!schedules_.Equals(other.schedules_)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= schedules_.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    schedules_.WriteTo(output, _repeated_schedules_codec);
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += schedules_.CalculateSize(_repeated_schedules_codec);
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetRemoteSchedulesServerResponse other) {
    if (other == null) {
      return;
    }
    schedules_.Add(other.schedules_);
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          schedules_.AddEntriesFrom(input, _repeated_schedules_codec);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu gửi số lượng lịch hẹn giờ của 1 remote
/// </summary>
public sealed partial class GetCountRemoteScheduleServerResponse : pb::IMessage<GetCountRemoteScheduleServerResponse> {
  private static readonly pb::MessageParser<GetCountRemoteScheduleServerResponse> _parser = new pb::MessageParser<GetCountRemoteScheduleServerResponse>(() => new GetCountRemoteScheduleServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetCountRemoteScheduleServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[217]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCountRemoteScheduleServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCountRemoteScheduleServerResponse(GetCountRemoteScheduleServerResponse other) : this() {
    count_ = other.count_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetCountRemoteScheduleServerResponse Clone() {
    return new GetCountRemoteScheduleServerResponse(this);
  }

  /// <summary>Field number for the "count" field.</summary>
  public const int CountFieldNumber = 1;
  private uint count_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Count {
    get { return count_; }
    set {
      count_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetCountRemoteScheduleServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetCountRemoteScheduleServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Count != other.Count) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Count != 0) hash ^= Count.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Count != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(Count);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Count != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Count);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetCountRemoteScheduleServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.Count != 0) {
      Count = other.Count;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Count = input.ReadUInt32();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin chi tiết 1 lịch của 1 remote
/// </summary>
public sealed partial class GetRemoteScheduleServerResponse : pb::IMessage<GetRemoteScheduleServerResponse> {
  private static readonly pb::MessageParser<GetRemoteScheduleServerResponse> _parser = new pb::MessageParser<GetRemoteScheduleServerResponse>(() => new GetRemoteScheduleServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetRemoteScheduleServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[218]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRemoteScheduleServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRemoteScheduleServerResponse(GetRemoteScheduleServerResponse other) : this() {
    schedule_ = other.schedule_ != null ? other.schedule_.Clone() : null;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetRemoteScheduleServerResponse Clone() {
    return new GetRemoteScheduleServerResponse(this);
  }

  /// <summary>Field number for the "schedule" field.</summary>
  public const int ScheduleFieldNumber = 1;
  private global::RemoteSchedule schedule_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RemoteSchedule Schedule {
    get { return schedule_; }
    set {
      schedule_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetRemoteScheduleServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetRemoteScheduleServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Schedule, other.Schedule)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (schedule_ != null) hash ^= Schedule.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (schedule_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Schedule);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (schedule_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schedule);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetRemoteScheduleServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.schedule_ != null) {
      if (schedule_ == null) {
        Schedule = new global::RemoteSchedule();
      }
      Schedule.MergeFrom(other.Schedule);
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (schedule_ == null) {
            Schedule = new global::RemoteSchedule();
          }
          input.ReadMessage(Schedule);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thêm mới 1 lịch của 1 remote
/// </summary>
public sealed partial class AddRemoteScheduleServerResponse : pb::IMessage<AddRemoteScheduleServerResponse> {
  private static readonly pb::MessageParser<AddRemoteScheduleServerResponse> _parser = new pb::MessageParser<AddRemoteScheduleServerResponse>(() => new AddRemoteScheduleServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AddRemoteScheduleServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[219]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddRemoteScheduleServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddRemoteScheduleServerResponse(AddRemoteScheduleServerResponse other) : this() {
    schedule_ = other.schedule_ != null ? other.schedule_.Clone() : null;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddRemoteScheduleServerResponse Clone() {
    return new AddRemoteScheduleServerResponse(this);
  }

  /// <summary>Field number for the "schedule" field.</summary>
  public const int ScheduleFieldNumber = 1;
  private global::RemoteSchedule schedule_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RemoteSchedule Schedule {
    get { return schedule_; }
    set {
      schedule_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AddRemoteScheduleServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AddRemoteScheduleServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Schedule, other.Schedule)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (schedule_ != null) hash ^= Schedule.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (schedule_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Schedule);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (schedule_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schedule);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AddRemoteScheduleServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.schedule_ != null) {
      if (schedule_ == null) {
        Schedule = new global::RemoteSchedule();
      }
      Schedule.MergeFrom(other.Schedule);
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (schedule_ == null) {
            Schedule = new global::RemoteSchedule();
          }
          input.ReadMessage(Schedule);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi update 1 lịch của 1 remote
/// </summary>
public sealed partial class UpdateRemoteScheduleServerResponse : pb::IMessage<UpdateRemoteScheduleServerResponse> {
  private static readonly pb::MessageParser<UpdateRemoteScheduleServerResponse> _parser = new pb::MessageParser<UpdateRemoteScheduleServerResponse>(() => new UpdateRemoteScheduleServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateRemoteScheduleServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[220]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateRemoteScheduleServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateRemoteScheduleServerResponse(UpdateRemoteScheduleServerResponse other) : this() {
    schedule_ = other.schedule_ != null ? other.schedule_.Clone() : null;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateRemoteScheduleServerResponse Clone() {
    return new UpdateRemoteScheduleServerResponse(this);
  }

  /// <summary>Field number for the "schedule" field.</summary>
  public const int ScheduleFieldNumber = 1;
  private global::RemoteSchedule schedule_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RemoteSchedule Schedule {
    get { return schedule_; }
    set {
      schedule_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateRemoteScheduleServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateRemoteScheduleServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Schedule, other.Schedule)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (schedule_ != null) hash ^= Schedule.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (schedule_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Schedule);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (schedule_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schedule);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateRemoteScheduleServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.schedule_ != null) {
      if (schedule_ == null) {
        Schedule = new global::RemoteSchedule();
      }
      Schedule.MergeFrom(other.Schedule);
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (schedule_ == null) {
            Schedule = new global::RemoteSchedule();
          }
          input.ReadMessage(Schedule);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi xóa 1 lịch của 1 remote
/// </summary>
public sealed partial class DeleteRemoteScheduleServerResponse : pb::IMessage<DeleteRemoteScheduleServerResponse> {
  private static readonly pb::MessageParser<DeleteRemoteScheduleServerResponse> _parser = new pb::MessageParser<DeleteRemoteScheduleServerResponse>(() => new DeleteRemoteScheduleServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeleteRemoteScheduleServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[221]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteRemoteScheduleServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteRemoteScheduleServerResponse(DeleteRemoteScheduleServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteRemoteScheduleServerResponse Clone() {
    return new DeleteRemoteScheduleServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeleteRemoteScheduleServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeleteRemoteScheduleServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeleteRemoteScheduleServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi set active lịch của 1 remote
/// </summary>
public sealed partial class SetActiveRemoteScheduleServerResponse : pb::IMessage<SetActiveRemoteScheduleServerResponse> {
  private static readonly pb::MessageParser<SetActiveRemoteScheduleServerResponse> _parser = new pb::MessageParser<SetActiveRemoteScheduleServerResponse>(() => new SetActiveRemoteScheduleServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SetActiveRemoteScheduleServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[222]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetActiveRemoteScheduleServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetActiveRemoteScheduleServerResponse(SetActiveRemoteScheduleServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetActiveRemoteScheduleServerResponse Clone() {
    return new SetActiveRemoteScheduleServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SetActiveRemoteScheduleServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SetActiveRemoteScheduleServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SetActiveRemoteScheduleServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
///----- Yêu cầu kịch bản -----//
/// Nhận được yêu cầu gửi danh sách kịch bản
/// </summary>
public sealed partial class GetScenesServerRequest : pb::IMessage<GetScenesServerRequest> {
  private static readonly pb::MessageParser<GetScenesServerRequest> _parser = new pb::MessageParser<GetScenesServerRequest>(() => new GetScenesServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetScenesServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[223]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetScenesServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetScenesServerRequest(GetScenesServerRequest other) : this() {
    homeId_ = other.homeId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetScenesServerRequest Clone() {
    return new GetScenesServerRequest(this);
  }

  /// <summary>Field number for the "homeId" field.</summary>
  public const int HomeIdFieldNumber = 1;
  private string homeId_ = "";
  /// <summary>
  /// Id của home
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string HomeId {
    get { return homeId_; }
    set {
      homeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetScenesServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetScenesServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (HomeId != other.HomeId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HomeId.Length != 0) hash ^= HomeId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (HomeId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(HomeId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HomeId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HomeId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetScenesServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.HomeId.Length != 0) {
      HomeId = other.HomeId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          HomeId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu gửi thông tin chi tiết 1 kịch bản
/// </summary>
public sealed partial class GetSceneServerRequest : pb::IMessage<GetSceneServerRequest> {
  private static readonly pb::MessageParser<GetSceneServerRequest> _parser = new pb::MessageParser<GetSceneServerRequest>(() => new GetSceneServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetSceneServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[224]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetSceneServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetSceneServerRequest(GetSceneServerRequest other) : this() {
    sceneId_ = other.sceneId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetSceneServerRequest Clone() {
    return new GetSceneServerRequest(this);
  }

  /// <summary>Field number for the "sceneId" field.</summary>
  public const int SceneIdFieldNumber = 1;
  private string sceneId_ = "";
  /// <summary>
  /// Id của Scene
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SceneId {
    get { return sceneId_; }
    set {
      sceneId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetSceneServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetSceneServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SceneId != other.SceneId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SceneId.Length != 0) hash ^= SceneId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SceneId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(SceneId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SceneId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SceneId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetSceneServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.SceneId.Length != 0) {
      SceneId = other.SceneId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          SceneId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu thêm mới 1 kịch bản
/// </summary>
public sealed partial class AddSceneServerRequest : pb::IMessage<AddSceneServerRequest> {
  private static readonly pb::MessageParser<AddSceneServerRequest> _parser = new pb::MessageParser<AddSceneServerRequest>(() => new AddSceneServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AddSceneServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[225]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddSceneServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddSceneServerRequest(AddSceneServerRequest other) : this() {
    scene_ = other.scene_ != null ? other.scene_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddSceneServerRequest Clone() {
    return new AddSceneServerRequest(this);
  }

  /// <summary>Field number for the "scene" field.</summary>
  public const int SceneFieldNumber = 1;
  private global::Scene scene_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Scene Scene {
    get { return scene_; }
    set {
      scene_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AddSceneServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AddSceneServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Scene, other.Scene)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (scene_ != null) hash ^= Scene.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (scene_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Scene);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (scene_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scene);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AddSceneServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.scene_ != null) {
      if (scene_ == null) {
        Scene = new global::Scene();
      }
      Scene.MergeFrom(other.Scene);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (scene_ == null) {
            Scene = new global::Scene();
          }
          input.ReadMessage(Scene);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu update 1 kịch bản
/// </summary>
public sealed partial class UpdateSceneServerRequest : pb::IMessage<UpdateSceneServerRequest> {
  private static readonly pb::MessageParser<UpdateSceneServerRequest> _parser = new pb::MessageParser<UpdateSceneServerRequest>(() => new UpdateSceneServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateSceneServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[226]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateSceneServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateSceneServerRequest(UpdateSceneServerRequest other) : this() {
    scene_ = other.scene_ != null ? other.scene_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateSceneServerRequest Clone() {
    return new UpdateSceneServerRequest(this);
  }

  /// <summary>Field number for the "scene" field.</summary>
  public const int SceneFieldNumber = 1;
  private global::Scene scene_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Scene Scene {
    get { return scene_; }
    set {
      scene_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateSceneServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateSceneServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Scene, other.Scene)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (scene_ != null) hash ^= Scene.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (scene_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Scene);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (scene_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scene);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateSceneServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.scene_ != null) {
      if (scene_ == null) {
        Scene = new global::Scene();
      }
      Scene.MergeFrom(other.Scene);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (scene_ == null) {
            Scene = new global::Scene();
          }
          input.ReadMessage(Scene);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu xóa 1 kịch bản
/// </summary>
public sealed partial class DeleteSceneServerRequest : pb::IMessage<DeleteSceneServerRequest> {
  private static readonly pb::MessageParser<DeleteSceneServerRequest> _parser = new pb::MessageParser<DeleteSceneServerRequest>(() => new DeleteSceneServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeleteSceneServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[227]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteSceneServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteSceneServerRequest(DeleteSceneServerRequest other) : this() {
    sceneId_ = other.sceneId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteSceneServerRequest Clone() {
    return new DeleteSceneServerRequest(this);
  }

  /// <summary>Field number for the "sceneId" field.</summary>
  public const int SceneIdFieldNumber = 1;
  private string sceneId_ = "";
  /// <summary>
  /// Id của Scene
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SceneId {
    get { return sceneId_; }
    set {
      sceneId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeleteSceneServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeleteSceneServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SceneId != other.SceneId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SceneId.Length != 0) hash ^= SceneId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SceneId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(SceneId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SceneId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SceneId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeleteSceneServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.SceneId.Length != 0) {
      SceneId = other.SceneId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          SceneId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận yêu cầu xóa điều kiện kịch bản
/// </summary>
public sealed partial class DeleteSwitcherConditionServerRequest : pb::IMessage<DeleteSwitcherConditionServerRequest> {
  private static readonly pb::MessageParser<DeleteSwitcherConditionServerRequest> _parser = new pb::MessageParser<DeleteSwitcherConditionServerRequest>(() => new DeleteSwitcherConditionServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeleteSwitcherConditionServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[228]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteSwitcherConditionServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteSwitcherConditionServerRequest(DeleteSwitcherConditionServerRequest other) : this() {
    sceneId_ = other.sceneId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteSwitcherConditionServerRequest Clone() {
    return new DeleteSwitcherConditionServerRequest(this);
  }

  /// <summary>Field number for the "sceneId" field.</summary>
  public const int SceneIdFieldNumber = 1;
  private string sceneId_ = "";
  /// <summary>
  /// Id của Scene
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SceneId {
    get { return sceneId_; }
    set {
      sceneId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeleteSwitcherConditionServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeleteSwitcherConditionServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SceneId != other.SceneId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SceneId.Length != 0) hash ^= SceneId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SceneId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(SceneId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SceneId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SceneId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeleteSwitcherConditionServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.SceneId.Length != 0) {
      SceneId = other.SceneId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          SceneId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận yêu cầu xóa một thực thi kịch bản
/// </summary>
public sealed partial class DeleteSceneActionServerRequest : pb::IMessage<DeleteSceneActionServerRequest> {
  private static readonly pb::MessageParser<DeleteSceneActionServerRequest> _parser = new pb::MessageParser<DeleteSceneActionServerRequest>(() => new DeleteSceneActionServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeleteSceneActionServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[229]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteSceneActionServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteSceneActionServerRequest(DeleteSceneActionServerRequest other) : this() {
    sceneActionId_ = other.sceneActionId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteSceneActionServerRequest Clone() {
    return new DeleteSceneActionServerRequest(this);
  }

  /// <summary>Field number for the "sceneActionId" field.</summary>
  public const int SceneActionIdFieldNumber = 1;
  private string sceneActionId_ = "";
  /// <summary>
  /// Id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SceneActionId {
    get { return sceneActionId_; }
    set {
      sceneActionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeleteSceneActionServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeleteSceneActionServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SceneActionId != other.SceneActionId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SceneActionId.Length != 0) hash ^= SceneActionId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SceneActionId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(SceneActionId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SceneActionId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SceneActionId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeleteSceneActionServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.SceneActionId.Length != 0) {
      SceneActionId = other.SceneActionId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          SceneActionId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận yêu cầu chạy kịch bản
/// </summary>
public sealed partial class RunSceneServerRequest : pb::IMessage<RunSceneServerRequest> {
  private static readonly pb::MessageParser<RunSceneServerRequest> _parser = new pb::MessageParser<RunSceneServerRequest>(() => new RunSceneServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RunSceneServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[230]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RunSceneServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RunSceneServerRequest(RunSceneServerRequest other) : this() {
    sceneId_ = other.sceneId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RunSceneServerRequest Clone() {
    return new RunSceneServerRequest(this);
  }

  /// <summary>Field number for the "sceneId" field.</summary>
  public const int SceneIdFieldNumber = 1;
  private string sceneId_ = "";
  /// <summary>
  /// sceneId
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SceneId {
    get { return sceneId_; }
    set {
      sceneId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RunSceneServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RunSceneServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SceneId != other.SceneId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SceneId.Length != 0) hash ^= SceneId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SceneId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(SceneId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SceneId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SceneId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RunSceneServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.SceneId.Length != 0) {
      SceneId = other.SceneId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          SceneId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu về cầu kịch bản bắc cầu đến thiết bị
/// </summary>
public sealed partial class SceneServerRequest : pb::IMessage<SceneServerRequest> {
  private static readonly pb::MessageParser<SceneServerRequest> _parser = new pb::MessageParser<SceneServerRequest>(() => new SceneServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SceneServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[231]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SceneServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SceneServerRequest(SceneServerRequest other) : this() {
    deviceId_ = other.deviceId_;
    sceneId_ = other.sceneId_;
    source_ = other.source_ != null ? other.source_.Clone() : null;
    target_ = other.target_.Clone();
    type_ = other.type_;
    mode_ = other.mode_;
    activeTime_ = other.activeTime_ != null ? other.activeTime_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SceneServerRequest Clone() {
    return new SceneServerRequest(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  /// <summary>
  /// deviceId của thiết bị cần tagret
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "sceneId" field.</summary>
  public const int SceneIdFieldNumber = 2;
  private string sceneId_ = "";
  /// <summary>
  /// sceneId
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SceneId {
    get { return sceneId_; }
    set {
      sceneId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "source" field.</summary>
  public const int SourceFieldNumber = 3;
  private global::DeviceInScene source_;
  /// <summary>
  /// 2: Thiết bị điều khiển
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DeviceInScene Source {
    get { return source_; }
    set {
      source_ = value;
    }
  }

  /// <summary>Field number for the "target" field.</summary>
  public const int TargetFieldNumber = 4;
  private static readonly pb::FieldCodec<global::DeviceInScene> _repeated_target_codec
      = pb::FieldCodec.ForMessage(34, global::DeviceInScene.Parser);
  private readonly pbc::RepeatedField<global::DeviceInScene> target_ = new pbc::RepeatedField<global::DeviceInScene>();
  /// <summary>
  /// 3: danh sách các thiết bị được điều khiển
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::DeviceInScene> Target {
    get { return target_; }
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 5;
  private uint type_;
  /// <summary>
  /// 1: Cùng On/Off, 2: Đảo ngược
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "mode" field.</summary>
  public const int ModeFieldNumber = 6;
  private uint mode_;
  /// <summary>
  /// 1: Add, 2: Edit, 3: Delete
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Mode {
    get { return mode_; }
    set {
      mode_ = value;
    }
  }

  /// <summary>Field number for the "activeTime" field.</summary>
  public const int ActiveTimeFieldNumber = 7;
  private global::ActiveTime activeTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ActiveTime ActiveTime {
    get { return activeTime_; }
    set {
      activeTime_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SceneServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SceneServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    if (SceneId != other.SceneId) return false;
    if (!object.Equals(Source, other.Source)) return false;
    if(!target_.Equals(other.target_)) return false;
    if (Type != other.Type) return false;
    if (Mode != other.Mode) return false;
    if (!object.Equals(ActiveTime, other.ActiveTime)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (SceneId.Length != 0) hash ^= SceneId.GetHashCode();
    if (source_ != null) hash ^= Source.GetHashCode();
    hash ^= target_.GetHashCode();
    if (Type != 0) hash ^= Type.GetHashCode();
    if (Mode != 0) hash ^= Mode.GetHashCode();
    if (activeTime_ != null) hash ^= ActiveTime.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (SceneId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(SceneId);
    }
    if (source_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Source);
    }
    target_.WriteTo(output, _repeated_target_codec);
    if (Type != 0) {
      output.WriteRawTag(40);
      output.WriteUInt32(Type);
    }
    if (Mode != 0) {
      output.WriteRawTag(48);
      output.WriteUInt32(Mode);
    }
    if (activeTime_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(ActiveTime);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (SceneId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SceneId);
    }
    if (source_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Source);
    }
    size += target_.CalculateSize(_repeated_target_codec);
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Type);
    }
    if (Mode != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Mode);
    }
    if (activeTime_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActiveTime);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SceneServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.SceneId.Length != 0) {
      SceneId = other.SceneId;
    }
    if (other.source_ != null) {
      if (source_ == null) {
        Source = new global::DeviceInScene();
      }
      Source.MergeFrom(other.Source);
    }
    target_.Add(other.target_);
    if (other.Type != 0) {
      Type = other.Type;
    }
    if (other.Mode != 0) {
      Mode = other.Mode;
    }
    if (other.activeTime_ != null) {
      if (activeTime_ == null) {
        ActiveTime = new global::ActiveTime();
      }
      ActiveTime.MergeFrom(other.ActiveTime);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
        case 18: {
          SceneId = input.ReadString();
          break;
        }
        case 26: {
          if (source_ == null) {
            Source = new global::DeviceInScene();
          }
          input.ReadMessage(Source);
          break;
        }
        case 34: {
          target_.AddEntriesFrom(input, _repeated_target_codec);
          break;
        }
        case 40: {
          Type = input.ReadUInt32();
          break;
        }
        case 48: {
          Mode = input.ReadUInt32();
          break;
        }
        case 58: {
          if (activeTime_ == null) {
            ActiveTime = new global::ActiveTime();
          }
          input.ReadMessage(ActiveTime);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu gửi lại thông tin xác nhận đến thiết bị
/// </summary>
public sealed partial class SceneRetryConfirmServerRequest : pb::IMessage<SceneRetryConfirmServerRequest> {
  private static readonly pb::MessageParser<SceneRetryConfirmServerRequest> _parser = new pb::MessageParser<SceneRetryConfirmServerRequest>(() => new SceneRetryConfirmServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SceneRetryConfirmServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[232]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SceneRetryConfirmServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SceneRetryConfirmServerRequest(SceneRetryConfirmServerRequest other) : this() {
    sceneId_ = other.sceneId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SceneRetryConfirmServerRequest Clone() {
    return new SceneRetryConfirmServerRequest(this);
  }

  /// <summary>Field number for the "sceneId" field.</summary>
  public const int SceneIdFieldNumber = 1;
  private string sceneId_ = "";
  /// <summary>
  /// Id của Scene
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SceneId {
    get { return sceneId_; }
    set {
      sceneId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SceneRetryConfirmServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SceneRetryConfirmServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SceneId != other.SceneId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SceneId.Length != 0) hash ^= SceneId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SceneId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(SceneId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SceneId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SceneId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SceneRetryConfirmServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.SceneId.Length != 0) {
      SceneId = other.SceneId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          SceneId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
///----- Phản hồi kịch bản -----//
/// Phản hồi thông tin danh sách các kịch bản
/// </summary>
public sealed partial class GetScenesServerResponse : pb::IMessage<GetScenesServerResponse> {
  private static readonly pb::MessageParser<GetScenesServerResponse> _parser = new pb::MessageParser<GetScenesServerResponse>(() => new GetScenesServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetScenesServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[233]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetScenesServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetScenesServerResponse(GetScenesServerResponse other) : this() {
    scenes_ = other.scenes_.Clone();
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetScenesServerResponse Clone() {
    return new GetScenesServerResponse(this);
  }

  /// <summary>Field number for the "scenes" field.</summary>
  public const int ScenesFieldNumber = 1;
  private static readonly pb::FieldCodec<global::Scene> _repeated_scenes_codec
      = pb::FieldCodec.ForMessage(10, global::Scene.Parser);
  private readonly pbc::RepeatedField<global::Scene> scenes_ = new pbc::RepeatedField<global::Scene>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Scene> Scenes {
    get { return scenes_; }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetScenesServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetScenesServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!scenes_.Equals(other.scenes_)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= scenes_.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    scenes_.WriteTo(output, _repeated_scenes_codec);
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += scenes_.CalculateSize(_repeated_scenes_codec);
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetScenesServerResponse other) {
    if (other == null) {
      return;
    }
    scenes_.Add(other.scenes_);
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          scenes_.AddEntriesFrom(input, _repeated_scenes_codec);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin chi tiết của 1 kịch bản
/// </summary>
public sealed partial class GetSceneServerResponse : pb::IMessage<GetSceneServerResponse> {
  private static readonly pb::MessageParser<GetSceneServerResponse> _parser = new pb::MessageParser<GetSceneServerResponse>(() => new GetSceneServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetSceneServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[234]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetSceneServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetSceneServerResponse(GetSceneServerResponse other) : this() {
    scene_ = other.scene_ != null ? other.scene_.Clone() : null;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetSceneServerResponse Clone() {
    return new GetSceneServerResponse(this);
  }

  /// <summary>Field number for the "scene" field.</summary>
  public const int SceneFieldNumber = 1;
  private global::Scene scene_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Scene Scene {
    get { return scene_; }
    set {
      scene_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetSceneServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetSceneServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Scene, other.Scene)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (scene_ != null) hash ^= Scene.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (scene_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Scene);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (scene_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scene);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetSceneServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.scene_ != null) {
      if (scene_ == null) {
        Scene = new global::Scene();
      }
      Scene.MergeFrom(other.Scene);
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (scene_ == null) {
            Scene = new global::Scene();
          }
          input.ReadMessage(Scene);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin thêm mới 1 kịch bản
/// </summary>
public sealed partial class AddSceneServerResponse : pb::IMessage<AddSceneServerResponse> {
  private static readonly pb::MessageParser<AddSceneServerResponse> _parser = new pb::MessageParser<AddSceneServerResponse>(() => new AddSceneServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AddSceneServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[235]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddSceneServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddSceneServerResponse(AddSceneServerResponse other) : this() {
    scene_ = other.scene_ != null ? other.scene_.Clone() : null;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddSceneServerResponse Clone() {
    return new AddSceneServerResponse(this);
  }

  /// <summary>Field number for the "scene" field.</summary>
  public const int SceneFieldNumber = 1;
  private global::Scene scene_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Scene Scene {
    get { return scene_; }
    set {
      scene_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AddSceneServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AddSceneServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Scene, other.Scene)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (scene_ != null) hash ^= Scene.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (scene_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Scene);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (scene_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scene);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AddSceneServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.scene_ != null) {
      if (scene_ == null) {
        Scene = new global::Scene();
      }
      Scene.MergeFrom(other.Scene);
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (scene_ == null) {
            Scene = new global::Scene();
          }
          input.ReadMessage(Scene);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin update 1 kịch bản
/// </summary>
public sealed partial class UpdateSceneServerResponse : pb::IMessage<UpdateSceneServerResponse> {
  private static readonly pb::MessageParser<UpdateSceneServerResponse> _parser = new pb::MessageParser<UpdateSceneServerResponse>(() => new UpdateSceneServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateSceneServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[236]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateSceneServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateSceneServerResponse(UpdateSceneServerResponse other) : this() {
    scene_ = other.scene_ != null ? other.scene_.Clone() : null;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateSceneServerResponse Clone() {
    return new UpdateSceneServerResponse(this);
  }

  /// <summary>Field number for the "scene" field.</summary>
  public const int SceneFieldNumber = 1;
  private global::Scene scene_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Scene Scene {
    get { return scene_; }
    set {
      scene_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateSceneServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateSceneServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Scene, other.Scene)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (scene_ != null) hash ^= Scene.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (scene_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Scene);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (scene_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scene);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateSceneServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.scene_ != null) {
      if (scene_ == null) {
        Scene = new global::Scene();
      }
      Scene.MergeFrom(other.Scene);
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (scene_ == null) {
            Scene = new global::Scene();
          }
          input.ReadMessage(Scene);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin xóa 1 kịch bản
/// </summary>
public sealed partial class DeleteSceneServerResponse : pb::IMessage<DeleteSceneServerResponse> {
  private static readonly pb::MessageParser<DeleteSceneServerResponse> _parser = new pb::MessageParser<DeleteSceneServerResponse>(() => new DeleteSceneServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeleteSceneServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[237]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteSceneServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteSceneServerResponse(DeleteSceneServerResponse other) : this() {
    sceneId_ = other.sceneId_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteSceneServerResponse Clone() {
    return new DeleteSceneServerResponse(this);
  }

  /// <summary>Field number for the "sceneId" field.</summary>
  public const int SceneIdFieldNumber = 1;
  private string sceneId_ = "";
  /// <summary>
  /// Id của Scene
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SceneId {
    get { return sceneId_; }
    set {
      sceneId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeleteSceneServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeleteSceneServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SceneId != other.SceneId) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SceneId.Length != 0) hash ^= SceneId.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SceneId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(SceneId);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SceneId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SceneId);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeleteSceneServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.SceneId.Length != 0) {
      SceneId = other.SceneId;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          SceneId = input.ReadString();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi yêu cầu xóa điều kiện kịch bản
/// </summary>
public sealed partial class DeleteSwitcherConditionServerResponse : pb::IMessage<DeleteSwitcherConditionServerResponse> {
  private static readonly pb::MessageParser<DeleteSwitcherConditionServerResponse> _parser = new pb::MessageParser<DeleteSwitcherConditionServerResponse>(() => new DeleteSwitcherConditionServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeleteSwitcherConditionServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[238]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteSwitcherConditionServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteSwitcherConditionServerResponse(DeleteSwitcherConditionServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteSwitcherConditionServerResponse Clone() {
    return new DeleteSwitcherConditionServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeleteSwitcherConditionServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeleteSwitcherConditionServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeleteSwitcherConditionServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi yêu cầu xóa một thực thi kịch bản
/// </summary>
public sealed partial class DeleteSceneActionServerResponse : pb::IMessage<DeleteSceneActionServerResponse> {
  private static readonly pb::MessageParser<DeleteSceneActionServerResponse> _parser = new pb::MessageParser<DeleteSceneActionServerResponse>(() => new DeleteSceneActionServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeleteSceneActionServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[239]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteSceneActionServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteSceneActionServerResponse(DeleteSceneActionServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteSceneActionServerResponse Clone() {
    return new DeleteSceneActionServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeleteSceneActionServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeleteSceneActionServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeleteSceneActionServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi chạy kịch bản
/// </summary>
public sealed partial class RunSceneServerResponse : pb::IMessage<RunSceneServerResponse> {
  private static readonly pb::MessageParser<RunSceneServerResponse> _parser = new pb::MessageParser<RunSceneServerResponse>(() => new RunSceneServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RunSceneServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[240]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RunSceneServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RunSceneServerResponse(RunSceneServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RunSceneServerResponse Clone() {
    return new RunSceneServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RunSceneServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RunSceneServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RunSceneServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi gửi kịch bản bắc cầu
/// </summary>
public sealed partial class SceneServerResponse : pb::IMessage<SceneServerResponse> {
  private static readonly pb::MessageParser<SceneServerResponse> _parser = new pb::MessageParser<SceneServerResponse>(() => new SceneServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SceneServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[241]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SceneServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SceneServerResponse(SceneServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SceneServerResponse Clone() {
    return new SceneServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SceneServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SceneServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SceneServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin xác nhận đến thiết bị
/// </summary>
public sealed partial class SceneRetryConfirmServerResponse : pb::IMessage<SceneRetryConfirmServerResponse> {
  private static readonly pb::MessageParser<SceneRetryConfirmServerResponse> _parser = new pb::MessageParser<SceneRetryConfirmServerResponse>(() => new SceneRetryConfirmServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SceneRetryConfirmServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[242]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SceneRetryConfirmServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SceneRetryConfirmServerResponse(SceneRetryConfirmServerResponse other) : this() {
    sceneId_ = other.sceneId_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SceneRetryConfirmServerResponse Clone() {
    return new SceneRetryConfirmServerResponse(this);
  }

  /// <summary>Field number for the "sceneId" field.</summary>
  public const int SceneIdFieldNumber = 1;
  private string sceneId_ = "";
  /// <summary>
  /// sceneId của kịch bản
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SceneId {
    get { return sceneId_; }
    set {
      sceneId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SceneRetryConfirmServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SceneRetryConfirmServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SceneId != other.SceneId) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SceneId.Length != 0) hash ^= SceneId.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SceneId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(SceneId);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SceneId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SceneId);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SceneRetryConfirmServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.SceneId.Length != 0) {
      SceneId = other.SceneId;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          SceneId = input.ReadString();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi trạng thái kịch bản runtime
/// </summary>
public sealed partial class SceneOnChangedServerResponse : pb::IMessage<SceneOnChangedServerResponse> {
  private static readonly pb::MessageParser<SceneOnChangedServerResponse> _parser = new pb::MessageParser<SceneOnChangedServerResponse>(() => new SceneOnChangedServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SceneOnChangedServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[243]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SceneOnChangedServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SceneOnChangedServerResponse(SceneOnChangedServerResponse other) : this() {
    sceneId_ = other.sceneId_;
    confirmed_ = other.confirmed_;
    mode_ = other.mode_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SceneOnChangedServerResponse Clone() {
    return new SceneOnChangedServerResponse(this);
  }

  /// <summary>Field number for the "sceneId" field.</summary>
  public const int SceneIdFieldNumber = 1;
  private string sceneId_ = "";
  /// <summary>
  /// sceneId của kịch bản
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SceneId {
    get { return sceneId_; }
    set {
      sceneId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "confirmed" field.</summary>
  public const int ConfirmedFieldNumber = 2;
  private bool confirmed_;
  /// <summary>
  /// đã xác nhận
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Confirmed {
    get { return confirmed_; }
    set {
      confirmed_ = value;
    }
  }

  /// <summary>Field number for the "mode" field.</summary>
  public const int ModeFieldNumber = 3;
  private uint mode_;
  /// <summary>
  /// 1: Add, 2: Edit, 3: Delete
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Mode {
    get { return mode_; }
    set {
      mode_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SceneOnChangedServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SceneOnChangedServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SceneId != other.SceneId) return false;
    if (Confirmed != other.Confirmed) return false;
    if (Mode != other.Mode) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SceneId.Length != 0) hash ^= SceneId.GetHashCode();
    if (Confirmed != false) hash ^= Confirmed.GetHashCode();
    if (Mode != 0) hash ^= Mode.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SceneId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(SceneId);
    }
    if (Confirmed != false) {
      output.WriteRawTag(16);
      output.WriteBool(Confirmed);
    }
    if (Mode != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(Mode);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SceneId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SceneId);
    }
    if (Confirmed != false) {
      size += 1 + 1;
    }
    if (Mode != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Mode);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SceneOnChangedServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.SceneId.Length != 0) {
      SceneId = other.SceneId;
    }
    if (other.Confirmed != false) {
      Confirmed = other.Confirmed;
    }
    if (other.Mode != 0) {
      Mode = other.Mode;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          SceneId = input.ReadString();
          break;
        }
        case 16: {
          Confirmed = input.ReadBool();
          break;
        }
        case 24: {
          Mode = input.ReadUInt32();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Enable/Disable ngữ cảnh.
/// </summary>
public sealed partial class SetSceneStatusServerRequest : pb::IMessage<SetSceneStatusServerRequest> {
  private static readonly pb::MessageParser<SetSceneStatusServerRequest> _parser = new pb::MessageParser<SetSceneStatusServerRequest>(() => new SetSceneStatusServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SetSceneStatusServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[244]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetSceneStatusServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetSceneStatusServerRequest(SetSceneStatusServerRequest other) : this() {
    sceneId_ = other.sceneId_;
    isEnable_ = other.isEnable_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetSceneStatusServerRequest Clone() {
    return new SetSceneStatusServerRequest(this);
  }

  /// <summary>Field number for the "sceneId" field.</summary>
  public const int SceneIdFieldNumber = 1;
  private string sceneId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SceneId {
    get { return sceneId_; }
    set {
      sceneId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "isEnable" field.</summary>
  public const int IsEnableFieldNumber = 2;
  private bool isEnable_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsEnable {
    get { return isEnable_; }
    set {
      isEnable_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SetSceneStatusServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SetSceneStatusServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SceneId != other.SceneId) return false;
    if (IsEnable != other.IsEnable) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SceneId.Length != 0) hash ^= SceneId.GetHashCode();
    if (IsEnable != false) hash ^= IsEnable.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SceneId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(SceneId);
    }
    if (IsEnable != false) {
      output.WriteRawTag(16);
      output.WriteBool(IsEnable);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SceneId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SceneId);
    }
    if (IsEnable != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SetSceneStatusServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.SceneId.Length != 0) {
      SceneId = other.SceneId;
    }
    if (other.IsEnable != false) {
      IsEnable = other.IsEnable;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          SceneId = input.ReadString();
          break;
        }
        case 16: {
          IsEnable = input.ReadBool();
          break;
        }
      }
    }
  }

}

public sealed partial class SetSceneStatusServerResponse : pb::IMessage<SetSceneStatusServerResponse> {
  private static readonly pb::MessageParser<SetSceneStatusServerResponse> _parser = new pb::MessageParser<SetSceneStatusServerResponse>(() => new SetSceneStatusServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SetSceneStatusServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[245]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetSceneStatusServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetSceneStatusServerResponse(SetSceneStatusServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetSceneStatusServerResponse Clone() {
    return new SetSceneStatusServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SetSceneStatusServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SetSceneStatusServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SetSceneStatusServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Chạy thử kịch bản
/// </summary>
public sealed partial class TestSceneServerRequest : pb::IMessage<TestSceneServerRequest> {
  private static readonly pb::MessageParser<TestSceneServerRequest> _parser = new pb::MessageParser<TestSceneServerRequest>(() => new TestSceneServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<TestSceneServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[246]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TestSceneServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TestSceneServerRequest(TestSceneServerRequest other) : this() {
    scene_ = other.scene_ != null ? other.scene_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TestSceneServerRequest Clone() {
    return new TestSceneServerRequest(this);
  }

  /// <summary>Field number for the "scene" field.</summary>
  public const int SceneFieldNumber = 1;
  private global::Scene scene_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Scene Scene {
    get { return scene_; }
    set {
      scene_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as TestSceneServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(TestSceneServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Scene, other.Scene)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (scene_ != null) hash ^= Scene.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (scene_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Scene);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (scene_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scene);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(TestSceneServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.scene_ != null) {
      if (scene_ == null) {
        Scene = new global::Scene();
      }
      Scene.MergeFrom(other.Scene);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (scene_ == null) {
            Scene = new global::Scene();
          }
          input.ReadMessage(Scene);
          break;
        }
      }
    }
  }

}

public sealed partial class TestSceneServerResponse : pb::IMessage<TestSceneServerResponse> {
  private static readonly pb::MessageParser<TestSceneServerResponse> _parser = new pb::MessageParser<TestSceneServerResponse>(() => new TestSceneServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<TestSceneServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[247]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TestSceneServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TestSceneServerResponse(TestSceneServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TestSceneServerResponse Clone() {
    return new TestSceneServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as TestSceneServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(TestSceneServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(TestSceneServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
///----- Home -----//
/// Nhận được yêu cầu trả về màn hình trang chủ
/// </summary>
public sealed partial class GetHomeTabServerRequest : pb::IMessage<GetHomeTabServerRequest> {
  private static readonly pb::MessageParser<GetHomeTabServerRequest> _parser = new pb::MessageParser<GetHomeTabServerRequest>(() => new GetHomeTabServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetHomeTabServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[248]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetHomeTabServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetHomeTabServerRequest(GetHomeTabServerRequest other) : this() {
    homeId_ = other.homeId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetHomeTabServerRequest Clone() {
    return new GetHomeTabServerRequest(this);
  }

  /// <summary>Field number for the "homeId" field.</summary>
  public const int HomeIdFieldNumber = 1;
  private string homeId_ = "";
  /// <summary>
  /// Id của nhà
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string HomeId {
    get { return homeId_; }
    set {
      homeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetHomeTabServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetHomeTabServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (HomeId != other.HomeId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HomeId.Length != 0) hash ^= HomeId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (HomeId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(HomeId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HomeId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HomeId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetHomeTabServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.HomeId.Length != 0) {
      HomeId = other.HomeId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          HomeId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi trả về màn hình trang chủ
/// </summary>
public sealed partial class GetHomeTabServerResponse : pb::IMessage<GetHomeTabServerResponse> {
  private static readonly pb::MessageParser<GetHomeTabServerResponse> _parser = new pb::MessageParser<GetHomeTabServerResponse>(() => new GetHomeTabServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetHomeTabServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[249]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetHomeTabServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetHomeTabServerResponse(GetHomeTabServerResponse other) : this() {
    statusSwitchers_ = other.statusSwitchers_.Clone();
    scenes_ = other.scenes_.Clone();
    favoriteSwitchers_ = other.favoriteSwitchers_.Clone();
    favoriteCurtainSwitchers_ = other.favoriteCurtainSwitchers_.Clone();
    favoriteRemotes_ = other.favoriteRemotes_.Clone();
    meter_ = other.meter_.Clone();
    statusRoom_ = other.statusRoom_ != null ? other.statusRoom_.Clone() : null;
    homeId_ = other.homeId_;
    favoriteMotions_ = other.favoriteMotions_.Clone();
    favoriteHomekits_ = other.favoriteHomekits_.Clone();
    favoriteButtons_ = other.favoriteButtons_.Clone();
    favoriteGroupControls_ = other.favoriteGroupControls_.Clone();
    featureCode_ = other.featureCode_;
    statusRemotes_ = other.statusRemotes_.Clone();
    statusCurtainSwitchers_ = other.statusCurtainSwitchers_.Clone();
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetHomeTabServerResponse Clone() {
    return new GetHomeTabServerResponse(this);
  }

  /// <summary>Field number for the "statusSwitchers" field.</summary>
  public const int StatusSwitchersFieldNumber = 1;
  private static readonly pb::FieldCodec<global::Switcher> _repeated_statusSwitchers_codec
      = pb::FieldCodec.ForMessage(10, global::Switcher.Parser);
  private readonly pbc::RepeatedField<global::Switcher> statusSwitchers_ = new pbc::RepeatedField<global::Switcher>();
  /// <summary>
  /// Trạng thái công tắc
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Switcher> StatusSwitchers {
    get { return statusSwitchers_; }
  }

  /// <summary>Field number for the "scenes" field.</summary>
  public const int ScenesFieldNumber = 2;
  private static readonly pb::FieldCodec<global::Scene> _repeated_scenes_codec
      = pb::FieldCodec.ForMessage(18, global::Scene.Parser);
  private readonly pbc::RepeatedField<global::Scene> scenes_ = new pbc::RepeatedField<global::Scene>();
  /// <summary>
  /// Kịch bản
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Scene> Scenes {
    get { return scenes_; }
  }

  /// <summary>Field number for the "favoriteSwitchers" field.</summary>
  public const int FavoriteSwitchersFieldNumber = 3;
  private static readonly pb::FieldCodec<global::Switcher> _repeated_favoriteSwitchers_codec
      = pb::FieldCodec.ForMessage(26, global::Switcher.Parser);
  private readonly pbc::RepeatedField<global::Switcher> favoriteSwitchers_ = new pbc::RepeatedField<global::Switcher>();
  /// <summary>
  /// Yêu thích
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Switcher> FavoriteSwitchers {
    get { return favoriteSwitchers_; }
  }

  /// <summary>Field number for the "favoriteCurtainSwitchers" field.</summary>
  public const int FavoriteCurtainSwitchersFieldNumber = 4;
  private static readonly pb::FieldCodec<global::CurtainSwitcher> _repeated_favoriteCurtainSwitchers_codec
      = pb::FieldCodec.ForMessage(34, global::CurtainSwitcher.Parser);
  private readonly pbc::RepeatedField<global::CurtainSwitcher> favoriteCurtainSwitchers_ = new pbc::RepeatedField<global::CurtainSwitcher>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::CurtainSwitcher> FavoriteCurtainSwitchers {
    get { return favoriteCurtainSwitchers_; }
  }

  /// <summary>Field number for the "favoriteRemotes" field.</summary>
  public const int FavoriteRemotesFieldNumber = 5;
  private static readonly pb::FieldCodec<global::Remote> _repeated_favoriteRemotes_codec
      = pb::FieldCodec.ForMessage(42, global::Remote.Parser);
  private readonly pbc::RepeatedField<global::Remote> favoriteRemotes_ = new pbc::RepeatedField<global::Remote>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Remote> FavoriteRemotes {
    get { return favoriteRemotes_; }
  }

  /// <summary>Field number for the "meter" field.</summary>
  public const int MeterFieldNumber = 6;
  private static readonly pb::FieldCodec<global::Meter> _repeated_meter_codec
      = pb::FieldCodec.ForMessage(50, global::Meter.Parser);
  private readonly pbc::RepeatedField<global::Meter> meter_ = new pbc::RepeatedField<global::Meter>();
  /// <summary>
  /// Đồng hồ điện|nước
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Meter> Meter {
    get { return meter_; }
  }

  /// <summary>Field number for the "statusRoom" field.</summary>
  public const int StatusRoomFieldNumber = 7;
  private global::AirConditionerState statusRoom_;
  /// <summary>
  /// Trạng thái phòng mặc định sẽ lấy phòng khách hoặc phòng trong remote được
  /// yêu thích
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AirConditionerState StatusRoom {
    get { return statusRoom_; }
    set {
      statusRoom_ = value;
    }
  }

  /// <summary>Field number for the "homeId" field.</summary>
  public const int HomeIdFieldNumber = 8;
  private string homeId_ = "";
  /// <summary>
  /// Trả lại HomeId để App biết là nhà nào
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string HomeId {
    get { return homeId_; }
    set {
      homeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "favoriteMotions" field.</summary>
  public const int FavoriteMotionsFieldNumber = 9;
  private static readonly pb::FieldCodec<global::Motion> _repeated_favoriteMotions_codec
      = pb::FieldCodec.ForMessage(74, global::Motion.Parser);
  private readonly pbc::RepeatedField<global::Motion> favoriteMotions_ = new pbc::RepeatedField<global::Motion>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Motion> FavoriteMotions {
    get { return favoriteMotions_; }
  }

  /// <summary>Field number for the "favoriteHomekits" field.</summary>
  public const int FavoriteHomekitsFieldNumber = 10;
  private static readonly pb::FieldCodec<global::Homekit> _repeated_favoriteHomekits_codec
      = pb::FieldCodec.ForMessage(82, global::Homekit.Parser);
  private readonly pbc::RepeatedField<global::Homekit> favoriteHomekits_ = new pbc::RepeatedField<global::Homekit>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Homekit> FavoriteHomekits {
    get { return favoriteHomekits_; }
  }

  /// <summary>Field number for the "favoriteButtons" field.</summary>
  public const int FavoriteButtonsFieldNumber = 11;
  private static readonly pb::FieldCodec<global::Button> _repeated_favoriteButtons_codec
      = pb::FieldCodec.ForMessage(90, global::Button.Parser);
  private readonly pbc::RepeatedField<global::Button> favoriteButtons_ = new pbc::RepeatedField<global::Button>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Button> FavoriteButtons {
    get { return favoriteButtons_; }
  }

  /// <summary>Field number for the "favoriteGroupControls" field.</summary>
  public const int FavoriteGroupControlsFieldNumber = 12;
  private static readonly pb::FieldCodec<global::GroupControl> _repeated_favoriteGroupControls_codec
      = pb::FieldCodec.ForMessage(98, global::GroupControl.Parser);
  private readonly pbc::RepeatedField<global::GroupControl> favoriteGroupControls_ = new pbc::RepeatedField<global::GroupControl>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::GroupControl> FavoriteGroupControls {
    get { return favoriteGroupControls_; }
  }

  /// <summary>Field number for the "featureCode" field.</summary>
  public const int FeatureCodeFieldNumber = 13;
  private uint featureCode_;
  /// <summary>
  /// Tiện ích mở rộng, default = 0
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint FeatureCode {
    get { return featureCode_; }
    set {
      featureCode_ = value;
    }
  }

  /// <summary>Field number for the "statusRemotes" field.</summary>
  public const int StatusRemotesFieldNumber = 14;
  private static readonly pb::FieldCodec<global::Remote> _repeated_statusRemotes_codec
      = pb::FieldCodec.ForMessage(114, global::Remote.Parser);
  private readonly pbc::RepeatedField<global::Remote> statusRemotes_ = new pbc::RepeatedField<global::Remote>();
  /// <summary>
  /// Trạng thái máy lạnh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Remote> StatusRemotes {
    get { return statusRemotes_; }
  }

  /// <summary>Field number for the "statusCurtainSwitchers" field.</summary>
  public const int StatusCurtainSwitchersFieldNumber = 15;
  private static readonly pb::FieldCodec<global::CurtainSwitcher> _repeated_statusCurtainSwitchers_codec
      = pb::FieldCodec.ForMessage(122, global::CurtainSwitcher.Parser);
  private readonly pbc::RepeatedField<global::CurtainSwitcher> statusCurtainSwitchers_ = new pbc::RepeatedField<global::CurtainSwitcher>();
  /// <summary>
  /// Trạng thái rèm cửa
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::CurtainSwitcher> StatusCurtainSwitchers {
    get { return statusCurtainSwitchers_; }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetHomeTabServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetHomeTabServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!statusSwitchers_.Equals(other.statusSwitchers_)) return false;
    if(!scenes_.Equals(other.scenes_)) return false;
    if(!favoriteSwitchers_.Equals(other.favoriteSwitchers_)) return false;
    if(!favoriteCurtainSwitchers_.Equals(other.favoriteCurtainSwitchers_)) return false;
    if(!favoriteRemotes_.Equals(other.favoriteRemotes_)) return false;
    if(!meter_.Equals(other.meter_)) return false;
    if (!object.Equals(StatusRoom, other.StatusRoom)) return false;
    if (HomeId != other.HomeId) return false;
    if(!favoriteMotions_.Equals(other.favoriteMotions_)) return false;
    if(!favoriteHomekits_.Equals(other.favoriteHomekits_)) return false;
    if(!favoriteButtons_.Equals(other.favoriteButtons_)) return false;
    if(!favoriteGroupControls_.Equals(other.favoriteGroupControls_)) return false;
    if (FeatureCode != other.FeatureCode) return false;
    if(!statusRemotes_.Equals(other.statusRemotes_)) return false;
    if(!statusCurtainSwitchers_.Equals(other.statusCurtainSwitchers_)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= statusSwitchers_.GetHashCode();
    hash ^= scenes_.GetHashCode();
    hash ^= favoriteSwitchers_.GetHashCode();
    hash ^= favoriteCurtainSwitchers_.GetHashCode();
    hash ^= favoriteRemotes_.GetHashCode();
    hash ^= meter_.GetHashCode();
    if (statusRoom_ != null) hash ^= StatusRoom.GetHashCode();
    if (HomeId.Length != 0) hash ^= HomeId.GetHashCode();
    hash ^= favoriteMotions_.GetHashCode();
    hash ^= favoriteHomekits_.GetHashCode();
    hash ^= favoriteButtons_.GetHashCode();
    hash ^= favoriteGroupControls_.GetHashCode();
    if (FeatureCode != 0) hash ^= FeatureCode.GetHashCode();
    hash ^= statusRemotes_.GetHashCode();
    hash ^= statusCurtainSwitchers_.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    statusSwitchers_.WriteTo(output, _repeated_statusSwitchers_codec);
    scenes_.WriteTo(output, _repeated_scenes_codec);
    favoriteSwitchers_.WriteTo(output, _repeated_favoriteSwitchers_codec);
    favoriteCurtainSwitchers_.WriteTo(output, _repeated_favoriteCurtainSwitchers_codec);
    favoriteRemotes_.WriteTo(output, _repeated_favoriteRemotes_codec);
    meter_.WriteTo(output, _repeated_meter_codec);
    if (statusRoom_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(StatusRoom);
    }
    if (HomeId.Length != 0) {
      output.WriteRawTag(66);
      output.WriteString(HomeId);
    }
    favoriteMotions_.WriteTo(output, _repeated_favoriteMotions_codec);
    favoriteHomekits_.WriteTo(output, _repeated_favoriteHomekits_codec);
    favoriteButtons_.WriteTo(output, _repeated_favoriteButtons_codec);
    favoriteGroupControls_.WriteTo(output, _repeated_favoriteGroupControls_codec);
    if (FeatureCode != 0) {
      output.WriteRawTag(104);
      output.WriteUInt32(FeatureCode);
    }
    statusRemotes_.WriteTo(output, _repeated_statusRemotes_codec);
    statusCurtainSwitchers_.WriteTo(output, _repeated_statusCurtainSwitchers_codec);
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += statusSwitchers_.CalculateSize(_repeated_statusSwitchers_codec);
    size += scenes_.CalculateSize(_repeated_scenes_codec);
    size += favoriteSwitchers_.CalculateSize(_repeated_favoriteSwitchers_codec);
    size += favoriteCurtainSwitchers_.CalculateSize(_repeated_favoriteCurtainSwitchers_codec);
    size += favoriteRemotes_.CalculateSize(_repeated_favoriteRemotes_codec);
    size += meter_.CalculateSize(_repeated_meter_codec);
    if (statusRoom_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(StatusRoom);
    }
    if (HomeId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HomeId);
    }
    size += favoriteMotions_.CalculateSize(_repeated_favoriteMotions_codec);
    size += favoriteHomekits_.CalculateSize(_repeated_favoriteHomekits_codec);
    size += favoriteButtons_.CalculateSize(_repeated_favoriteButtons_codec);
    size += favoriteGroupControls_.CalculateSize(_repeated_favoriteGroupControls_codec);
    if (FeatureCode != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FeatureCode);
    }
    size += statusRemotes_.CalculateSize(_repeated_statusRemotes_codec);
    size += statusCurtainSwitchers_.CalculateSize(_repeated_statusCurtainSwitchers_codec);
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetHomeTabServerResponse other) {
    if (other == null) {
      return;
    }
    statusSwitchers_.Add(other.statusSwitchers_);
    scenes_.Add(other.scenes_);
    favoriteSwitchers_.Add(other.favoriteSwitchers_);
    favoriteCurtainSwitchers_.Add(other.favoriteCurtainSwitchers_);
    favoriteRemotes_.Add(other.favoriteRemotes_);
    meter_.Add(other.meter_);
    if (other.statusRoom_ != null) {
      if (statusRoom_ == null) {
        StatusRoom = new global::AirConditionerState();
      }
      StatusRoom.MergeFrom(other.StatusRoom);
    }
    if (other.HomeId.Length != 0) {
      HomeId = other.HomeId;
    }
    favoriteMotions_.Add(other.favoriteMotions_);
    favoriteHomekits_.Add(other.favoriteHomekits_);
    favoriteButtons_.Add(other.favoriteButtons_);
    favoriteGroupControls_.Add(other.favoriteGroupControls_);
    if (other.FeatureCode != 0) {
      FeatureCode = other.FeatureCode;
    }
    statusRemotes_.Add(other.statusRemotes_);
    statusCurtainSwitchers_.Add(other.statusCurtainSwitchers_);
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          statusSwitchers_.AddEntriesFrom(input, _repeated_statusSwitchers_codec);
          break;
        }
        case 18: {
          scenes_.AddEntriesFrom(input, _repeated_scenes_codec);
          break;
        }
        case 26: {
          favoriteSwitchers_.AddEntriesFrom(input, _repeated_favoriteSwitchers_codec);
          break;
        }
        case 34: {
          favoriteCurtainSwitchers_.AddEntriesFrom(input, _repeated_favoriteCurtainSwitchers_codec);
          break;
        }
        case 42: {
          favoriteRemotes_.AddEntriesFrom(input, _repeated_favoriteRemotes_codec);
          break;
        }
        case 50: {
          meter_.AddEntriesFrom(input, _repeated_meter_codec);
          break;
        }
        case 58: {
          if (statusRoom_ == null) {
            StatusRoom = new global::AirConditionerState();
          }
          input.ReadMessage(StatusRoom);
          break;
        }
        case 66: {
          HomeId = input.ReadString();
          break;
        }
        case 74: {
          favoriteMotions_.AddEntriesFrom(input, _repeated_favoriteMotions_codec);
          break;
        }
        case 82: {
          favoriteHomekits_.AddEntriesFrom(input, _repeated_favoriteHomekits_codec);
          break;
        }
        case 90: {
          favoriteButtons_.AddEntriesFrom(input, _repeated_favoriteButtons_codec);
          break;
        }
        case 98: {
          favoriteGroupControls_.AddEntriesFrom(input, _repeated_favoriteGroupControls_codec);
          break;
        }
        case 104: {
          FeatureCode = input.ReadUInt32();
          break;
        }
        case 114: {
          statusRemotes_.AddEntriesFrom(input, _repeated_statusRemotes_codec);
          break;
        }
        case 122: {
          statusCurtainSwitchers_.AddEntriesFrom(input, _repeated_statusCurtainSwitchers_codec);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
///----- Thiết bị điện trong nhà, nhóm theo phòng -----//
/// Nhận được yêu cầu trả về màn hình thiết bị điện
/// </summary>
public sealed partial class GetElectricTabServerRequest : pb::IMessage<GetElectricTabServerRequest> {
  private static readonly pb::MessageParser<GetElectricTabServerRequest> _parser = new pb::MessageParser<GetElectricTabServerRequest>(() => new GetElectricTabServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetElectricTabServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[250]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetElectricTabServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetElectricTabServerRequest(GetElectricTabServerRequest other) : this() {
    homeId_ = other.homeId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetElectricTabServerRequest Clone() {
    return new GetElectricTabServerRequest(this);
  }

  /// <summary>Field number for the "homeId" field.</summary>
  public const int HomeIdFieldNumber = 1;
  private string homeId_ = "";
  /// <summary>
  /// HomeId của nhà
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string HomeId {
    get { return homeId_; }
    set {
      homeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetElectricTabServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetElectricTabServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (HomeId != other.HomeId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HomeId.Length != 0) hash ^= HomeId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (HomeId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(HomeId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HomeId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HomeId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetElectricTabServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.HomeId.Length != 0) {
      HomeId = other.HomeId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          HomeId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi trả về màn hình thiết bị điện
/// </summary>
public sealed partial class GetElectricTabServerResponse : pb::IMessage<GetElectricTabServerResponse> {
  private static readonly pb::MessageParser<GetElectricTabServerResponse> _parser = new pb::MessageParser<GetElectricTabServerResponse>(() => new GetElectricTabServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetElectricTabServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[251]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetElectricTabServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetElectricTabServerResponse(GetElectricTabServerResponse other) : this() {
    rooms_ = other.rooms_.Clone();
    homeId_ = other.homeId_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetElectricTabServerResponse Clone() {
    return new GetElectricTabServerResponse(this);
  }

  /// <summary>Field number for the "rooms" field.</summary>
  public const int RoomsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::Room> _repeated_rooms_codec
      = pb::FieldCodec.ForMessage(10, global::Room.Parser);
  private readonly pbc::RepeatedField<global::Room> rooms_ = new pbc::RepeatedField<global::Room>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Room> Rooms {
    get { return rooms_; }
  }

  /// <summary>Field number for the "homeId" field.</summary>
  public const int HomeIdFieldNumber = 2;
  private string homeId_ = "";
  /// <summary>
  /// Trả về HomeId để app xử lý cho việc chọn nhà cho đúng?
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string HomeId {
    get { return homeId_; }
    set {
      homeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetElectricTabServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetElectricTabServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!rooms_.Equals(other.rooms_)) return false;
    if (HomeId != other.HomeId) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= rooms_.GetHashCode();
    if (HomeId.Length != 0) hash ^= HomeId.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    rooms_.WriteTo(output, _repeated_rooms_codec);
    if (HomeId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(HomeId);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += rooms_.CalculateSize(_repeated_rooms_codec);
    if (HomeId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HomeId);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetElectricTabServerResponse other) {
    if (other == null) {
      return;
    }
    rooms_.Add(other.rooms_);
    if (other.HomeId.Length != 0) {
      HomeId = other.HomeId;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          rooms_.AddEntriesFrom(input, _repeated_rooms_codec);
          break;
        }
        case 18: {
          HomeId = input.ReadString();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
///----- Công tắc trong nhà, nhóm theo phòng, xem như như là màn hình tổng hợp
///-----//
/// Nhận được yêu cầu trả về toàn bộ thiết bị trong nhà, nhóm theo phòng, theo
/// nhóm mặc định là công tắc
/// </summary>
public sealed partial class GetSwitcherTabServerRequest : pb::IMessage<GetSwitcherTabServerRequest> {
  private static readonly pb::MessageParser<GetSwitcherTabServerRequest> _parser = new pb::MessageParser<GetSwitcherTabServerRequest>(() => new GetSwitcherTabServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetSwitcherTabServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[252]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetSwitcherTabServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetSwitcherTabServerRequest(GetSwitcherTabServerRequest other) : this() {
    homeId_ = other.homeId_;
    group_ = other.group_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetSwitcherTabServerRequest Clone() {
    return new GetSwitcherTabServerRequest(this);
  }

  /// <summary>Field number for the "homeId" field.</summary>
  public const int HomeIdFieldNumber = 1;
  private string homeId_ = "";
  /// <summary>
  /// Id của nhà
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string HomeId {
    get { return homeId_; }
    set {
      homeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "group" field.</summary>
  public const int GroupFieldNumber = 2;
  private global::GroupDevice group_ = global::GroupDevice.SwitcherGroup;
  /// <summary>
  /// Nhóm thiết bị
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GroupDevice Group {
    get { return group_; }
    set {
      group_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetSwitcherTabServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetSwitcherTabServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (HomeId != other.HomeId) return false;
    if (Group != other.Group) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HomeId.Length != 0) hash ^= HomeId.GetHashCode();
    if (Group != global::GroupDevice.SwitcherGroup) hash ^= Group.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (HomeId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(HomeId);
    }
    if (Group != global::GroupDevice.SwitcherGroup) {
      output.WriteRawTag(16);
      output.WriteEnum((int) Group);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HomeId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HomeId);
    }
    if (Group != global::GroupDevice.SwitcherGroup) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Group);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetSwitcherTabServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.HomeId.Length != 0) {
      HomeId = other.HomeId;
    }
    if (other.Group != global::GroupDevice.SwitcherGroup) {
      Group = other.Group;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          HomeId = input.ReadString();
          break;
        }
        case 16: {
          Group = (global::GroupDevice) input.ReadEnum();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi yêu cầu trả về toàn bộ thiết bị trong nhà, nhóm theo phòng, theo
/// nhóm mặc định là công tắc
/// </summary>
public sealed partial class GetSwitcherTabServerResponse : pb::IMessage<GetSwitcherTabServerResponse> {
  private static readonly pb::MessageParser<GetSwitcherTabServerResponse> _parser = new pb::MessageParser<GetSwitcherTabServerResponse>(() => new GetSwitcherTabServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetSwitcherTabServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[253]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetSwitcherTabServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetSwitcherTabServerResponse(GetSwitcherTabServerResponse other) : this() {
    rooms_ = other.rooms_.Clone();
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetSwitcherTabServerResponse Clone() {
    return new GetSwitcherTabServerResponse(this);
  }

  /// <summary>Field number for the "rooms" field.</summary>
  public const int RoomsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::Room> _repeated_rooms_codec
      = pb::FieldCodec.ForMessage(10, global::Room.Parser);
  private readonly pbc::RepeatedField<global::Room> rooms_ = new pbc::RepeatedField<global::Room>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Room> Rooms {
    get { return rooms_; }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetSwitcherTabServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetSwitcherTabServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!rooms_.Equals(other.rooms_)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= rooms_.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    rooms_.WriteTo(output, _repeated_rooms_codec);
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += rooms_.CalculateSize(_repeated_rooms_codec);
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetSwitcherTabServerResponse other) {
    if (other == null) {
      return;
    }
    rooms_.Add(other.rooms_);
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          rooms_.AddEntriesFrom(input, _repeated_rooms_codec);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu thay đổi trạng thái của PIR
/// </summary>
public sealed partial class MotionServerRequest : pb::IMessage<MotionServerRequest> {
  private static readonly pb::MessageParser<MotionServerRequest> _parser = new pb::MessageParser<MotionServerRequest>(() => new MotionServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MotionServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[254]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MotionServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MotionServerRequest(MotionServerRequest other) : this() {
    deviceId_ = other.deviceId_;
    motionState_ = other.motionState_;
    type_ = other.type_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MotionServerRequest Clone() {
    return new MotionServerRequest(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  /// <summary>
  /// Id của thiết bị
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "motionState" field.</summary>
  public const int MotionStateFieldNumber = 2;
  private global::MotionState motionState_ = global::MotionState.MotionNone;
  /// <summary>
  /// State của PIR
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MotionState MotionState {
    get { return motionState_; }
    set {
      motionState_ = value;
    }
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 3;
  private global::MotionSensorType type_ = global::MotionSensorType.MotionSensor;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MotionSensorType Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MotionServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MotionServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    if (MotionState != other.MotionState) return false;
    if (Type != other.Type) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (MotionState != global::MotionState.MotionNone) hash ^= MotionState.GetHashCode();
    if (Type != global::MotionSensorType.MotionSensor) hash ^= Type.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (MotionState != global::MotionState.MotionNone) {
      output.WriteRawTag(16);
      output.WriteEnum((int) MotionState);
    }
    if (Type != global::MotionSensorType.MotionSensor) {
      output.WriteRawTag(24);
      output.WriteEnum((int) Type);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (MotionState != global::MotionState.MotionNone) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MotionState);
    }
    if (Type != global::MotionSensorType.MotionSensor) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MotionServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.MotionState != global::MotionState.MotionNone) {
      MotionState = other.MotionState;
    }
    if (other.Type != global::MotionSensorType.MotionSensor) {
      Type = other.Type;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
        case 16: {
          MotionState = (global::MotionState) input.ReadEnum();
          break;
        }
        case 24: {
          Type = (global::MotionSensorType) input.ReadEnum();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi trạng thái của PIR
/// </summary>
public sealed partial class MotionServerResponse : pb::IMessage<MotionServerResponse> {
  private static readonly pb::MessageParser<MotionServerResponse> _parser = new pb::MessageParser<MotionServerResponse>(() => new MotionServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MotionServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[255]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MotionServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MotionServerResponse(MotionServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MotionServerResponse Clone() {
    return new MotionServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MotionServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MotionServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MotionServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu trả về thông tin của Motion
/// </summary>
public sealed partial class GetMotionServerRequest : pb::IMessage<GetMotionServerRequest> {
  private static readonly pb::MessageParser<GetMotionServerRequest> _parser = new pb::MessageParser<GetMotionServerRequest>(() => new GetMotionServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetMotionServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[256]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMotionServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMotionServerRequest(GetMotionServerRequest other) : this() {
    motionId_ = other.motionId_;
    type_ = other.type_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMotionServerRequest Clone() {
    return new GetMotionServerRequest(this);
  }

  /// <summary>Field number for the "motionId" field.</summary>
  public const int MotionIdFieldNumber = 1;
  private string motionId_ = "";
  /// <summary>
  /// Id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string MotionId {
    get { return motionId_; }
    set {
      motionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 2;
  private global::MotionSensorType type_ = global::MotionSensorType.MotionSensor;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MotionSensorType Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetMotionServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetMotionServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MotionId != other.MotionId) return false;
    if (Type != other.Type) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (MotionId.Length != 0) hash ^= MotionId.GetHashCode();
    if (Type != global::MotionSensorType.MotionSensor) hash ^= Type.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (MotionId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(MotionId);
    }
    if (Type != global::MotionSensorType.MotionSensor) {
      output.WriteRawTag(16);
      output.WriteEnum((int) Type);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (MotionId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MotionId);
    }
    if (Type != global::MotionSensorType.MotionSensor) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetMotionServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.MotionId.Length != 0) {
      MotionId = other.MotionId;
    }
    if (other.Type != global::MotionSensorType.MotionSensor) {
      Type = other.Type;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          MotionId = input.ReadString();
          break;
        }
        case 16: {
          Type = (global::MotionSensorType) input.ReadEnum();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi trả về thông tin Motion
/// </summary>
public sealed partial class GetMotionServerResponse : pb::IMessage<GetMotionServerResponse> {
  private static readonly pb::MessageParser<GetMotionServerResponse> _parser = new pb::MessageParser<GetMotionServerResponse>(() => new GetMotionServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetMotionServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[257]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMotionServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMotionServerResponse(GetMotionServerResponse other) : this() {
    motion_ = other.motion_ != null ? other.motion_.Clone() : null;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMotionServerResponse Clone() {
    return new GetMotionServerResponse(this);
  }

  /// <summary>Field number for the "motion" field.</summary>
  public const int MotionFieldNumber = 1;
  private global::Motion motion_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Motion Motion {
    get { return motion_; }
    set {
      motion_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetMotionServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetMotionServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Motion, other.Motion)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (motion_ != null) hash ^= Motion.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (motion_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Motion);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (motion_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Motion);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetMotionServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.motion_ != null) {
      if (motion_ == null) {
        Motion = new global::Motion();
      }
      Motion.MergeFrom(other.Motion);
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (motion_ == null) {
            Motion = new global::Motion();
          }
          input.ReadMessage(Motion);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu cập nhật Motion
/// </summary>
public sealed partial class UpdateMotionServerRequest : pb::IMessage<UpdateMotionServerRequest> {
  private static readonly pb::MessageParser<UpdateMotionServerRequest> _parser = new pb::MessageParser<UpdateMotionServerRequest>(() => new UpdateMotionServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateMotionServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[258]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateMotionServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateMotionServerRequest(UpdateMotionServerRequest other) : this() {
    motion_ = other.motion_ != null ? other.motion_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateMotionServerRequest Clone() {
    return new UpdateMotionServerRequest(this);
  }

  /// <summary>Field number for the "motion" field.</summary>
  public const int MotionFieldNumber = 1;
  private global::Motion motion_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Motion Motion {
    get { return motion_; }
    set {
      motion_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateMotionServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateMotionServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Motion, other.Motion)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (motion_ != null) hash ^= Motion.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (motion_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Motion);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (motion_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Motion);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateMotionServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.motion_ != null) {
      if (motion_ == null) {
        Motion = new global::Motion();
      }
      Motion.MergeFrom(other.Motion);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (motion_ == null) {
            Motion = new global::Motion();
          }
          input.ReadMessage(Motion);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi cập nhật thông tin rèm cửa
/// </summary>
public sealed partial class UpdateMotionServerResponse : pb::IMessage<UpdateMotionServerResponse> {
  private static readonly pb::MessageParser<UpdateMotionServerResponse> _parser = new pb::MessageParser<UpdateMotionServerResponse>(() => new UpdateMotionServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateMotionServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[259]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateMotionServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateMotionServerResponse(UpdateMotionServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateMotionServerResponse Clone() {
    return new UpdateMotionServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateMotionServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateMotionServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateMotionServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu trả về thông tin của Homekit
/// </summary>
public sealed partial class GetHomekitInfoServerRequest : pb::IMessage<GetHomekitInfoServerRequest> {
  private static readonly pb::MessageParser<GetHomekitInfoServerRequest> _parser = new pb::MessageParser<GetHomekitInfoServerRequest>(() => new GetHomekitInfoServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetHomekitInfoServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[260]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetHomekitInfoServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetHomekitInfoServerRequest(GetHomekitInfoServerRequest other) : this() {
    homekitId_ = other.homekitId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetHomekitInfoServerRequest Clone() {
    return new GetHomekitInfoServerRequest(this);
  }

  /// <summary>Field number for the "homekitId" field.</summary>
  public const int HomekitIdFieldNumber = 1;
  private string homekitId_ = "";
  /// <summary>
  /// Id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string HomekitId {
    get { return homekitId_; }
    set {
      homekitId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetHomekitInfoServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetHomekitInfoServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (HomekitId != other.HomekitId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HomekitId.Length != 0) hash ^= HomekitId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (HomekitId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(HomekitId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HomekitId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HomekitId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetHomekitInfoServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.HomekitId.Length != 0) {
      HomekitId = other.HomekitId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          HomekitId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi trả về thông tin Homekit
/// </summary>
public sealed partial class GetHomekitInfoServerResponse : pb::IMessage<GetHomekitInfoServerResponse> {
  private static readonly pb::MessageParser<GetHomekitInfoServerResponse> _parser = new pb::MessageParser<GetHomekitInfoServerResponse>(() => new GetHomekitInfoServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetHomekitInfoServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[261]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetHomekitInfoServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetHomekitInfoServerResponse(GetHomekitInfoServerResponse other) : this() {
    homekit_ = other.homekit_ != null ? other.homekit_.Clone() : null;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetHomekitInfoServerResponse Clone() {
    return new GetHomekitInfoServerResponse(this);
  }

  /// <summary>Field number for the "homekit" field.</summary>
  public const int HomekitFieldNumber = 1;
  private global::Homekit homekit_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Homekit Homekit {
    get { return homekit_; }
    set {
      homekit_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetHomekitInfoServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetHomekitInfoServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Homekit, other.Homekit)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (homekit_ != null) hash ^= Homekit.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (homekit_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Homekit);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (homekit_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Homekit);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetHomekitInfoServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.homekit_ != null) {
      if (homekit_ == null) {
        Homekit = new global::Homekit();
      }
      Homekit.MergeFrom(other.Homekit);
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (homekit_ == null) {
            Homekit = new global::Homekit();
          }
          input.ReadMessage(Homekit);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu cập nhật Homekit
/// </summary>
public sealed partial class UpdateHomekitServerRequest : pb::IMessage<UpdateHomekitServerRequest> {
  private static readonly pb::MessageParser<UpdateHomekitServerRequest> _parser = new pb::MessageParser<UpdateHomekitServerRequest>(() => new UpdateHomekitServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateHomekitServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[262]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateHomekitServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateHomekitServerRequest(UpdateHomekitServerRequest other) : this() {
    homekit_ = other.homekit_ != null ? other.homekit_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateHomekitServerRequest Clone() {
    return new UpdateHomekitServerRequest(this);
  }

  /// <summary>Field number for the "homekit" field.</summary>
  public const int HomekitFieldNumber = 1;
  private global::Homekit homekit_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Homekit Homekit {
    get { return homekit_; }
    set {
      homekit_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateHomekitServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateHomekitServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Homekit, other.Homekit)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (homekit_ != null) hash ^= Homekit.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (homekit_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Homekit);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (homekit_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Homekit);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateHomekitServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.homekit_ != null) {
      if (homekit_ == null) {
        Homekit = new global::Homekit();
      }
      Homekit.MergeFrom(other.Homekit);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (homekit_ == null) {
            Homekit = new global::Homekit();
          }
          input.ReadMessage(Homekit);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi cập nhật thông tin rèm cửa
/// </summary>
public sealed partial class UpdateHomekitServerResponse : pb::IMessage<UpdateHomekitServerResponse> {
  private static readonly pb::MessageParser<UpdateHomekitServerResponse> _parser = new pb::MessageParser<UpdateHomekitServerResponse>(() => new UpdateHomekitServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateHomekitServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[263]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateHomekitServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateHomekitServerResponse(UpdateHomekitServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateHomekitServerResponse Clone() {
    return new UpdateHomekitServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateHomekitServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateHomekitServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateHomekitServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Yêu cầu chuyển mode homekit
/// </summary>
public sealed partial class SetHomekitModeServerRequest : pb::IMessage<SetHomekitModeServerRequest> {
  private static readonly pb::MessageParser<SetHomekitModeServerRequest> _parser = new pb::MessageParser<SetHomekitModeServerRequest>(() => new SetHomekitModeServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SetHomekitModeServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[264]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetHomekitModeServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetHomekitModeServerRequest(SetHomekitModeServerRequest other) : this() {
    deviceId_ = other.deviceId_;
    homekitMode_ = other.homekitMode_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetHomekitModeServerRequest Clone() {
    return new SetHomekitModeServerRequest(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "homekitMode" field.</summary>
  public const int HomekitModeFieldNumber = 2;
  private global::HomekitMode homekitMode_ = global::HomekitMode.HomekitNormalMode;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::HomekitMode HomekitMode {
    get { return homekitMode_; }
    set {
      homekitMode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SetHomekitModeServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SetHomekitModeServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    if (HomekitMode != other.HomekitMode) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (HomekitMode != global::HomekitMode.HomekitNormalMode) hash ^= HomekitMode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (HomekitMode != global::HomekitMode.HomekitNormalMode) {
      output.WriteRawTag(16);
      output.WriteEnum((int) HomekitMode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (HomekitMode != global::HomekitMode.HomekitNormalMode) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) HomekitMode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SetHomekitModeServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.HomekitMode != global::HomekitMode.HomekitNormalMode) {
      HomekitMode = other.HomekitMode;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
        case 16: {
          HomekitMode = (global::HomekitMode) input.ReadEnum();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi yêu cầu chuyển mode homekit
/// </summary>
public sealed partial class SetHomekitModeServerResponse : pb::IMessage<SetHomekitModeServerResponse> {
  private static readonly pb::MessageParser<SetHomekitModeServerResponse> _parser = new pb::MessageParser<SetHomekitModeServerResponse>(() => new SetHomekitModeServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SetHomekitModeServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[265]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetHomekitModeServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetHomekitModeServerResponse(SetHomekitModeServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SetHomekitModeServerResponse Clone() {
    return new SetHomekitModeServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SetHomekitModeServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SetHomekitModeServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SetHomekitModeServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu trả về thông tin của Button
/// </summary>
public sealed partial class GetButtonInfoServerRequest : pb::IMessage<GetButtonInfoServerRequest> {
  private static readonly pb::MessageParser<GetButtonInfoServerRequest> _parser = new pb::MessageParser<GetButtonInfoServerRequest>(() => new GetButtonInfoServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetButtonInfoServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[266]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetButtonInfoServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetButtonInfoServerRequest(GetButtonInfoServerRequest other) : this() {
    buttonId_ = other.buttonId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetButtonInfoServerRequest Clone() {
    return new GetButtonInfoServerRequest(this);
  }

  /// <summary>Field number for the "buttonId" field.</summary>
  public const int ButtonIdFieldNumber = 1;
  private string buttonId_ = "";
  /// <summary>
  /// Id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ButtonId {
    get { return buttonId_; }
    set {
      buttonId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetButtonInfoServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetButtonInfoServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ButtonId != other.ButtonId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ButtonId.Length != 0) hash ^= ButtonId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ButtonId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ButtonId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ButtonId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ButtonId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetButtonInfoServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.ButtonId.Length != 0) {
      ButtonId = other.ButtonId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ButtonId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi trả về thông tin Button
/// </summary>
public sealed partial class GetButtonInfoServerResponse : pb::IMessage<GetButtonInfoServerResponse> {
  private static readonly pb::MessageParser<GetButtonInfoServerResponse> _parser = new pb::MessageParser<GetButtonInfoServerResponse>(() => new GetButtonInfoServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetButtonInfoServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[267]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetButtonInfoServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetButtonInfoServerResponse(GetButtonInfoServerResponse other) : this() {
    button_ = other.button_ != null ? other.button_.Clone() : null;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetButtonInfoServerResponse Clone() {
    return new GetButtonInfoServerResponse(this);
  }

  /// <summary>Field number for the "button" field.</summary>
  public const int ButtonFieldNumber = 1;
  private global::Button button_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Button Button {
    get { return button_; }
    set {
      button_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetButtonInfoServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetButtonInfoServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Button, other.Button)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (button_ != null) hash ^= Button.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (button_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Button);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (button_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Button);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetButtonInfoServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.button_ != null) {
      if (button_ == null) {
        Button = new global::Button();
      }
      Button.MergeFrom(other.Button);
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (button_ == null) {
            Button = new global::Button();
          }
          input.ReadMessage(Button);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu cập nhật Button
/// </summary>
public sealed partial class UpdateButtonServerRequest : pb::IMessage<UpdateButtonServerRequest> {
  private static readonly pb::MessageParser<UpdateButtonServerRequest> _parser = new pb::MessageParser<UpdateButtonServerRequest>(() => new UpdateButtonServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateButtonServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[268]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateButtonServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateButtonServerRequest(UpdateButtonServerRequest other) : this() {
    button_ = other.button_ != null ? other.button_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateButtonServerRequest Clone() {
    return new UpdateButtonServerRequest(this);
  }

  /// <summary>Field number for the "button" field.</summary>
  public const int ButtonFieldNumber = 1;
  private global::Button button_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Button Button {
    get { return button_; }
    set {
      button_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateButtonServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateButtonServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Button, other.Button)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (button_ != null) hash ^= Button.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (button_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Button);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (button_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Button);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateButtonServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.button_ != null) {
      if (button_ == null) {
        Button = new global::Button();
      }
      Button.MergeFrom(other.Button);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (button_ == null) {
            Button = new global::Button();
          }
          input.ReadMessage(Button);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi cập nhật thông tin Button
/// </summary>
public sealed partial class UpdateButtonServerResponse : pb::IMessage<UpdateButtonServerResponse> {
  private static readonly pb::MessageParser<UpdateButtonServerResponse> _parser = new pb::MessageParser<UpdateButtonServerResponse>(() => new UpdateButtonServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateButtonServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[269]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateButtonServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateButtonServerResponse(UpdateButtonServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateButtonServerResponse Clone() {
    return new UpdateButtonServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateButtonServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateButtonServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateButtonServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu thay đổi trạng thái nhóm
/// </summary>
public sealed partial class GroupControlServerRequest : pb::IMessage<GroupControlServerRequest> {
  private static readonly pb::MessageParser<GroupControlServerRequest> _parser = new pb::MessageParser<GroupControlServerRequest>(() => new GroupControlServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GroupControlServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[270]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GroupControlServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GroupControlServerRequest(GroupControlServerRequest other) : this() {
    deviceId_ = other.deviceId_;
    state_ = other.state_ != null ? other.state_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GroupControlServerRequest Clone() {
    return new GroupControlServerRequest(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  /// <summary>
  /// Id của thiết bị
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "state" field.</summary>
  public const int StateFieldNumber = 2;
  private global::ControlState state_;
  /// <summary>
  /// Trạng thái hiện tại của nhóm
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ControlState State {
    get { return state_; }
    set {
      state_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GroupControlServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GroupControlServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    if (!object.Equals(State, other.State)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (state_ != null) hash ^= State.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (state_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(State);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (state_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(State);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GroupControlServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.state_ != null) {
      if (state_ == null) {
        State = new global::ControlState();
      }
      State.MergeFrom(other.State);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
        case 18: {
          if (state_ == null) {
            State = new global::ControlState();
          }
          input.ReadMessage(State);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thay đổi trạng thái nhóm
/// </summary>
public sealed partial class GroupControlServerResponse : pb::IMessage<GroupControlServerResponse> {
  private static readonly pb::MessageParser<GroupControlServerResponse> _parser = new pb::MessageParser<GroupControlServerResponse>(() => new GroupControlServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GroupControlServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[271]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GroupControlServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GroupControlServerResponse(GroupControlServerResponse other) : this() {
    state_ = other.state_ != null ? other.state_.Clone() : null;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GroupControlServerResponse Clone() {
    return new GroupControlServerResponse(this);
  }

  /// <summary>Field number for the "state" field.</summary>
  public const int StateFieldNumber = 1;
  private global::ControlState state_;
  /// <summary>
  /// Trạng thái hiện tại của nhóm
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ControlState State {
    get { return state_; }
    set {
      state_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GroupControlServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GroupControlServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(State, other.State)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (state_ != null) hash ^= State.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (state_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(State);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (state_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(State);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GroupControlServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.state_ != null) {
      if (state_ == null) {
        State = new global::ControlState();
      }
      State.MergeFrom(other.State);
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (state_ == null) {
            State = new global::ControlState();
          }
          input.ReadMessage(State);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu trả về thông tin của nhóm thiết bị
/// </summary>
public sealed partial class GetGroupControlInfoServerRequest : pb::IMessage<GetGroupControlInfoServerRequest> {
  private static readonly pb::MessageParser<GetGroupControlInfoServerRequest> _parser = new pb::MessageParser<GetGroupControlInfoServerRequest>(() => new GetGroupControlInfoServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetGroupControlInfoServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[272]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetGroupControlInfoServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetGroupControlInfoServerRequest(GetGroupControlInfoServerRequest other) : this() {
    id_ = other.id_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetGroupControlInfoServerRequest Clone() {
    return new GetGroupControlInfoServerRequest(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private string id_ = "";
  /// <summary>
  /// Id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Id {
    get { return id_; }
    set {
      id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetGroupControlInfoServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetGroupControlInfoServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id.Length != 0) hash ^= Id.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetGroupControlInfoServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.Id.Length != 0) {
      Id = other.Id;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi trả về thông tin nhóm thiết bị
/// </summary>
public sealed partial class GetGroupControlInfoServerResponse : pb::IMessage<GetGroupControlInfoServerResponse> {
  private static readonly pb::MessageParser<GetGroupControlInfoServerResponse> _parser = new pb::MessageParser<GetGroupControlInfoServerResponse>(() => new GetGroupControlInfoServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetGroupControlInfoServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[273]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetGroupControlInfoServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetGroupControlInfoServerResponse(GetGroupControlInfoServerResponse other) : this() {
    groupControl_ = other.groupControl_ != null ? other.groupControl_.Clone() : null;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetGroupControlInfoServerResponse Clone() {
    return new GetGroupControlInfoServerResponse(this);
  }

  /// <summary>Field number for the "groupControl" field.</summary>
  public const int GroupControlFieldNumber = 1;
  private global::GroupControl groupControl_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GroupControl GroupControl {
    get { return groupControl_; }
    set {
      groupControl_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetGroupControlInfoServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetGroupControlInfoServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(GroupControl, other.GroupControl)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (groupControl_ != null) hash ^= GroupControl.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (groupControl_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(GroupControl);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (groupControl_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroupControl);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetGroupControlInfoServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.groupControl_ != null) {
      if (groupControl_ == null) {
        GroupControl = new global::GroupControl();
      }
      GroupControl.MergeFrom(other.GroupControl);
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (groupControl_ == null) {
            GroupControl = new global::GroupControl();
          }
          input.ReadMessage(GroupControl);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu trả về danh sách thiết bị nhóm theo phòng
/// </summary>
public sealed partial class GetControlsServerRequest : pb::IMessage<GetControlsServerRequest> {
  private static readonly pb::MessageParser<GetControlsServerRequest> _parser = new pb::MessageParser<GetControlsServerRequest>(() => new GetControlsServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetControlsServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[274]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetControlsServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetControlsServerRequest(GetControlsServerRequest other) : this() {
    groupControlId_ = other.groupControlId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetControlsServerRequest Clone() {
    return new GetControlsServerRequest(this);
  }

  /// <summary>Field number for the "groupControlId" field.</summary>
  public const int GroupControlIdFieldNumber = 1;
  private string groupControlId_ = "";
  /// <summary>
  /// GroupControlId
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GroupControlId {
    get { return groupControlId_; }
    set {
      groupControlId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetControlsServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetControlsServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GroupControlId != other.GroupControlId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GroupControlId.Length != 0) hash ^= GroupControlId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GroupControlId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(GroupControlId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GroupControlId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupControlId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetControlsServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.GroupControlId.Length != 0) {
      GroupControlId = other.GroupControlId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          GroupControlId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi trả về về danh sách thiết bị nhóm theo phòng
/// </summary>
public sealed partial class GetControlsServerResponse : pb::IMessage<GetControlsServerResponse> {
  private static readonly pb::MessageParser<GetControlsServerResponse> _parser = new pb::MessageParser<GetControlsServerResponse>(() => new GetControlsServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetControlsServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[275]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetControlsServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetControlsServerResponse(GetControlsServerResponse other) : this() {
    rooms_ = other.rooms_.Clone();
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetControlsServerResponse Clone() {
    return new GetControlsServerResponse(this);
  }

  /// <summary>Field number for the "rooms" field.</summary>
  public const int RoomsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::Room> _repeated_rooms_codec
      = pb::FieldCodec.ForMessage(10, global::Room.Parser);
  private readonly pbc::RepeatedField<global::Room> rooms_ = new pbc::RepeatedField<global::Room>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Room> Rooms {
    get { return rooms_; }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetControlsServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetControlsServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!rooms_.Equals(other.rooms_)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= rooms_.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    rooms_.WriteTo(output, _repeated_rooms_codec);
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += rooms_.CalculateSize(_repeated_rooms_codec);
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetControlsServerResponse other) {
    if (other == null) {
      return;
    }
    rooms_.Add(other.rooms_);
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          rooms_.AddEntriesFrom(input, _repeated_rooms_codec);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu thêm nhóm thiết bị
/// </summary>
public sealed partial class AddGroupControlServerRequest : pb::IMessage<AddGroupControlServerRequest> {
  private static readonly pb::MessageParser<AddGroupControlServerRequest> _parser = new pb::MessageParser<AddGroupControlServerRequest>(() => new AddGroupControlServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AddGroupControlServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[276]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddGroupControlServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddGroupControlServerRequest(AddGroupControlServerRequest other) : this() {
    groupControl_ = other.groupControl_ != null ? other.groupControl_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddGroupControlServerRequest Clone() {
    return new AddGroupControlServerRequest(this);
  }

  /// <summary>Field number for the "groupControl" field.</summary>
  public const int GroupControlFieldNumber = 1;
  private global::GroupControl groupControl_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GroupControl GroupControl {
    get { return groupControl_; }
    set {
      groupControl_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AddGroupControlServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AddGroupControlServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(GroupControl, other.GroupControl)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (groupControl_ != null) hash ^= GroupControl.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (groupControl_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(GroupControl);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (groupControl_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroupControl);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AddGroupControlServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.groupControl_ != null) {
      if (groupControl_ == null) {
        GroupControl = new global::GroupControl();
      }
      GroupControl.MergeFrom(other.GroupControl);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (groupControl_ == null) {
            GroupControl = new global::GroupControl();
          }
          input.ReadMessage(GroupControl);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thêm thông tin nhóm thiết bị
/// </summary>
public sealed partial class AddGroupControlServerResponse : pb::IMessage<AddGroupControlServerResponse> {
  private static readonly pb::MessageParser<AddGroupControlServerResponse> _parser = new pb::MessageParser<AddGroupControlServerResponse>(() => new AddGroupControlServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AddGroupControlServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[277]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddGroupControlServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddGroupControlServerResponse(AddGroupControlServerResponse other) : this() {
    groupControl_ = other.groupControl_ != null ? other.groupControl_.Clone() : null;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddGroupControlServerResponse Clone() {
    return new AddGroupControlServerResponse(this);
  }

  /// <summary>Field number for the "groupControl" field.</summary>
  public const int GroupControlFieldNumber = 2;
  private global::GroupControl groupControl_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GroupControl GroupControl {
    get { return groupControl_; }
    set {
      groupControl_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AddGroupControlServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AddGroupControlServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(GroupControl, other.GroupControl)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (groupControl_ != null) hash ^= GroupControl.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (groupControl_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(GroupControl);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (groupControl_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroupControl);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AddGroupControlServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.groupControl_ != null) {
      if (groupControl_ == null) {
        GroupControl = new global::GroupControl();
      }
      GroupControl.MergeFrom(other.GroupControl);
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 18: {
          if (groupControl_ == null) {
            GroupControl = new global::GroupControl();
          }
          input.ReadMessage(GroupControl);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu sửa nhóm thiết bị
/// </summary>
public sealed partial class UpdateGroupControlServerRequest : pb::IMessage<UpdateGroupControlServerRequest> {
  private static readonly pb::MessageParser<UpdateGroupControlServerRequest> _parser = new pb::MessageParser<UpdateGroupControlServerRequest>(() => new UpdateGroupControlServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateGroupControlServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[278]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateGroupControlServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateGroupControlServerRequest(UpdateGroupControlServerRequest other) : this() {
    groupControl_ = other.groupControl_ != null ? other.groupControl_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateGroupControlServerRequest Clone() {
    return new UpdateGroupControlServerRequest(this);
  }

  /// <summary>Field number for the "groupControl" field.</summary>
  public const int GroupControlFieldNumber = 1;
  private global::GroupControl groupControl_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GroupControl GroupControl {
    get { return groupControl_; }
    set {
      groupControl_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateGroupControlServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateGroupControlServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(GroupControl, other.GroupControl)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (groupControl_ != null) hash ^= GroupControl.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (groupControl_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(GroupControl);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (groupControl_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroupControl);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateGroupControlServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.groupControl_ != null) {
      if (groupControl_ == null) {
        GroupControl = new global::GroupControl();
      }
      GroupControl.MergeFrom(other.GroupControl);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (groupControl_ == null) {
            GroupControl = new global::GroupControl();
          }
          input.ReadMessage(GroupControl);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi sửa thông tin nhóm thiết bị
/// </summary>
public sealed partial class UpdateGroupControlServerResponse : pb::IMessage<UpdateGroupControlServerResponse> {
  private static readonly pb::MessageParser<UpdateGroupControlServerResponse> _parser = new pb::MessageParser<UpdateGroupControlServerResponse>(() => new UpdateGroupControlServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateGroupControlServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[279]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateGroupControlServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateGroupControlServerResponse(UpdateGroupControlServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateGroupControlServerResponse Clone() {
    return new UpdateGroupControlServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateGroupControlServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateGroupControlServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateGroupControlServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu xóa nhóm thiết bị
/// </summary>
public sealed partial class DeleteGroupControlServerRequest : pb::IMessage<DeleteGroupControlServerRequest> {
  private static readonly pb::MessageParser<DeleteGroupControlServerRequest> _parser = new pb::MessageParser<DeleteGroupControlServerRequest>(() => new DeleteGroupControlServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeleteGroupControlServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[280]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteGroupControlServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteGroupControlServerRequest(DeleteGroupControlServerRequest other) : this() {
    id_ = other.id_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteGroupControlServerRequest Clone() {
    return new DeleteGroupControlServerRequest(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private string id_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Id {
    get { return id_; }
    set {
      id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeleteGroupControlServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeleteGroupControlServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id.Length != 0) hash ^= Id.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeleteGroupControlServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.Id.Length != 0) {
      Id = other.Id;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin xóa nhóm thiết bị
/// </summary>
public sealed partial class DeleteGroupControlServerResponse : pb::IMessage<DeleteGroupControlServerResponse> {
  private static readonly pb::MessageParser<DeleteGroupControlServerResponse> _parser = new pb::MessageParser<DeleteGroupControlServerResponse>(() => new DeleteGroupControlServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeleteGroupControlServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[281]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteGroupControlServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteGroupControlServerResponse(DeleteGroupControlServerResponse other) : this() {
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeleteGroupControlServerResponse Clone() {
    return new DeleteGroupControlServerResponse(this);
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeleteGroupControlServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeleteGroupControlServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeleteGroupControlServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhận được yêu cầu echo message
/// </summary>
public sealed partial class EchoServerRequest : pb::IMessage<EchoServerRequest> {
  private static readonly pb::MessageParser<EchoServerRequest> _parser = new pb::MessageParser<EchoServerRequest>(() => new EchoServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<EchoServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[282]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EchoServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EchoServerRequest(EchoServerRequest other) : this() {
    message_ = other.message_;
    type_ = other.type_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EchoServerRequest Clone() {
    return new EchoServerRequest(this);
  }

  /// <summary>Field number for the "message" field.</summary>
  public const int MessageFieldNumber = 1;
  private string message_ = "";
  /// <summary>
  /// Message gửi lên
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Message {
    get { return message_; }
    set {
      message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 2;
  private global::TypeEcho type_ = global::TypeEcho.Echo;
  /// <summary>
  /// Loại echo
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::TypeEcho Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as EchoServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(EchoServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Message != other.Message) return false;
    if (Type != other.Type) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Message.Length != 0) hash ^= Message.GetHashCode();
    if (Type != global::TypeEcho.Echo) hash ^= Type.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Message.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Message);
    }
    if (Type != global::TypeEcho.Echo) {
      output.WriteRawTag(16);
      output.WriteEnum((int) Type);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Message.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
    }
    if (Type != global::TypeEcho.Echo) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(EchoServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.Message.Length != 0) {
      Message = other.Message;
    }
    if (other.Type != global::TypeEcho.Echo) {
      Type = other.Type;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Message = input.ReadString();
          break;
        }
        case 16: {
          Type = (global::TypeEcho) input.ReadEnum();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi yêu cầu echo message
/// </summary>
public sealed partial class EchoServerResponse : pb::IMessage<EchoServerResponse> {
  private static readonly pb::MessageParser<EchoServerResponse> _parser = new pb::MessageParser<EchoServerResponse>(() => new EchoServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<EchoServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[283]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EchoServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EchoServerResponse(EchoServerResponse other) : this() {
    message_ = other.message_;
    type_ = other.type_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EchoServerResponse Clone() {
    return new EchoServerResponse(this);
  }

  /// <summary>Field number for the "message" field.</summary>
  public const int MessageFieldNumber = 1;
  private string message_ = "";
  /// <summary>
  /// Message gửi lên
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Message {
    get { return message_; }
    set {
      message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 2;
  private global::TypeEcho type_ = global::TypeEcho.Echo;
  /// <summary>
  /// Loại echo
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::TypeEcho Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as EchoServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(EchoServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Message != other.Message) return false;
    if (Type != other.Type) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Message.Length != 0) hash ^= Message.GetHashCode();
    if (Type != global::TypeEcho.Echo) hash ^= Type.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Message.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Message);
    }
    if (Type != global::TypeEcho.Echo) {
      output.WriteRawTag(16);
      output.WriteEnum((int) Type);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Message.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
    }
    if (Type != global::TypeEcho.Echo) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(EchoServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.Message.Length != 0) {
      Message = other.Message;
    }
    if (other.Type != global::TypeEcho.Echo) {
      Type = other.Type;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Message = input.ReadString();
          break;
        }
        case 16: {
          Type = (global::TypeEcho) input.ReadEnum();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

public sealed partial class GetUserOtpServerRequest : pb::IMessage<GetUserOtpServerRequest> {
  private static readonly pb::MessageParser<GetUserOtpServerRequest> _parser = new pb::MessageParser<GetUserOtpServerRequest>(() => new GetUserOtpServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetUserOtpServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[284]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUserOtpServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUserOtpServerRequest(GetUserOtpServerRequest other) : this() {
    phone_ = other.phone_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUserOtpServerRequest Clone() {
    return new GetUserOtpServerRequest(this);
  }

  /// <summary>Field number for the "phone" field.</summary>
  public const int PhoneFieldNumber = 1;
  private string phone_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Phone {
    get { return phone_; }
    set {
      phone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetUserOtpServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetUserOtpServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Phone != other.Phone) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Phone.Length != 0) hash ^= Phone.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Phone.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Phone);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Phone.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Phone);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetUserOtpServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.Phone.Length != 0) {
      Phone = other.Phone;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Phone = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class GetUserOtpServerResponse : pb::IMessage<GetUserOtpServerResponse> {
  private static readonly pb::MessageParser<GetUserOtpServerResponse> _parser = new pb::MessageParser<GetUserOtpServerResponse>(() => new GetUserOtpServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetUserOtpServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[285]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUserOtpServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUserOtpServerResponse(GetUserOtpServerResponse other) : this() {
    id_ = other.id_;
    phone_ = other.phone_;
    code_ = other.code_;
    active_ = other.active_;
    sendDate_ = other.sendDate_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetUserOtpServerResponse Clone() {
    return new GetUserOtpServerResponse(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private string id_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Id {
    get { return id_; }
    set {
      id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "phone" field.</summary>
  public const int PhoneFieldNumber = 2;
  private string phone_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Phone {
    get { return phone_; }
    set {
      phone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "code" field.</summary>
  public const int CodeFieldNumber = 3;
  private string code_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Code {
    get { return code_; }
    set {
      code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "active" field.</summary>
  public const int ActiveFieldNumber = 4;
  private int active_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Active {
    get { return active_; }
    set {
      active_ = value;
    }
  }

  /// <summary>Field number for the "sendDate" field.</summary>
  public const int SendDateFieldNumber = 5;
  private uint sendDate_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint SendDate {
    get { return sendDate_; }
    set {
      sendDate_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetUserOtpServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetUserOtpServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Phone != other.Phone) return false;
    if (Code != other.Code) return false;
    if (Active != other.Active) return false;
    if (SendDate != other.SendDate) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id.Length != 0) hash ^= Id.GetHashCode();
    if (Phone.Length != 0) hash ^= Phone.GetHashCode();
    if (Code.Length != 0) hash ^= Code.GetHashCode();
    if (Active != 0) hash ^= Active.GetHashCode();
    if (SendDate != 0) hash ^= SendDate.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (Phone.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Phone);
    }
    if (Code.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Code);
    }
    if (Active != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Active);
    }
    if (SendDate != 0) {
      output.WriteRawTag(40);
      output.WriteUInt32(SendDate);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
    }
    if (Phone.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Phone);
    }
    if (Code.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
    }
    if (Active != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Active);
    }
    if (SendDate != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SendDate);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetUserOtpServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.Id.Length != 0) {
      Id = other.Id;
    }
    if (other.Phone.Length != 0) {
      Phone = other.Phone;
    }
    if (other.Code.Length != 0) {
      Code = other.Code;
    }
    if (other.Active != 0) {
      Active = other.Active;
    }
    if (other.SendDate != 0) {
      SendDate = other.SendDate;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
        case 18: {
          Phone = input.ReadString();
          break;
        }
        case 26: {
          Code = input.ReadString();
          break;
        }
        case 32: {
          Active = input.ReadInt32();
          break;
        }
        case 40: {
          SendDate = input.ReadUInt32();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Auth Message Server 
/// </summary>
public sealed partial class AuthServerMessage : pb::IMessage<AuthServerMessage> {
  private static readonly pb::MessageParser<AuthServerMessage> _parser = new pb::MessageParser<AuthServerMessage>(() => new AuthServerMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AuthServerMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[286]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AuthServerMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AuthServerMessage(AuthServerMessage other) : this() {
    loginServerRequest_ = other.loginServerRequest_ != null ? other.loginServerRequest_.Clone() : null;
    loginServerResponse_ = other.loginServerResponse_ != null ? other.loginServerResponse_.Clone() : null;
    refreshTokenServerRequest_ = other.refreshTokenServerRequest_ != null ? other.refreshTokenServerRequest_.Clone() : null;
    refreshTokenServerResponse_ = other.refreshTokenServerResponse_ != null ? other.refreshTokenServerResponse_.Clone() : null;
    sendCodeServerRequest_ = other.sendCodeServerRequest_ != null ? other.sendCodeServerRequest_.Clone() : null;
    sendCodeServerResponse_ = other.sendCodeServerResponse_ != null ? other.sendCodeServerResponse_.Clone() : null;
    verifyCodeServerRequest_ = other.verifyCodeServerRequest_ != null ? other.verifyCodeServerRequest_.Clone() : null;
    verifyCodeServerResponse_ = other.verifyCodeServerResponse_ != null ? other.verifyCodeServerResponse_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AuthServerMessage Clone() {
    return new AuthServerMessage(this);
  }

  /// <summary>Field number for the "loginServerRequest" field.</summary>
  public const int LoginServerRequestFieldNumber = 1;
  private global::LoginServerRequest loginServerRequest_;
  /// <summary>
  /// Đăng nhập hệ thống 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::LoginServerRequest LoginServerRequest {
    get { return loginServerRequest_; }
    set {
      loginServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "loginServerResponse" field.</summary>
  public const int LoginServerResponseFieldNumber = 2;
  private global::LoginServerResponse loginServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::LoginServerResponse LoginServerResponse {
    get { return loginServerResponse_; }
    set {
      loginServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "refreshTokenServerRequest" field.</summary>
  public const int RefreshTokenServerRequestFieldNumber = 3;
  private global::RefreshTokenServerRequest refreshTokenServerRequest_;
  /// <summary>
  /// RefreshToken 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RefreshTokenServerRequest RefreshTokenServerRequest {
    get { return refreshTokenServerRequest_; }
    set {
      refreshTokenServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "refreshTokenServerResponse" field.</summary>
  public const int RefreshTokenServerResponseFieldNumber = 4;
  private global::RefreshTokenServerResponse refreshTokenServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RefreshTokenServerResponse RefreshTokenServerResponse {
    get { return refreshTokenServerResponse_; }
    set {
      refreshTokenServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "sendCodeServerRequest" field.</summary>
  public const int SendCodeServerRequestFieldNumber = 5;
  private global::SendCodeServerRequest sendCodeServerRequest_;
  /// <summary>
  /// Gửi mã kích hoạt 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SendCodeServerRequest SendCodeServerRequest {
    get { return sendCodeServerRequest_; }
    set {
      sendCodeServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "sendCodeServerResponse" field.</summary>
  public const int SendCodeServerResponseFieldNumber = 6;
  private global::SendCodeServerResponse sendCodeServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SendCodeServerResponse SendCodeServerResponse {
    get { return sendCodeServerResponse_; }
    set {
      sendCodeServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "verifyCodeServerRequest" field.</summary>
  public const int VerifyCodeServerRequestFieldNumber = 7;
  private global::VerifyCodeServerRequest verifyCodeServerRequest_;
  /// <summary>
  /// Kiểm tra mã kích hoạt 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::VerifyCodeServerRequest VerifyCodeServerRequest {
    get { return verifyCodeServerRequest_; }
    set {
      verifyCodeServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "verifyCodeServerResponse" field.</summary>
  public const int VerifyCodeServerResponseFieldNumber = 8;
  private global::VerifyCodeServerResponse verifyCodeServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::VerifyCodeServerResponse VerifyCodeServerResponse {
    get { return verifyCodeServerResponse_; }
    set {
      verifyCodeServerResponse_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AuthServerMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AuthServerMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(LoginServerRequest, other.LoginServerRequest)) return false;
    if (!object.Equals(LoginServerResponse, other.LoginServerResponse)) return false;
    if (!object.Equals(RefreshTokenServerRequest, other.RefreshTokenServerRequest)) return false;
    if (!object.Equals(RefreshTokenServerResponse, other.RefreshTokenServerResponse)) return false;
    if (!object.Equals(SendCodeServerRequest, other.SendCodeServerRequest)) return false;
    if (!object.Equals(SendCodeServerResponse, other.SendCodeServerResponse)) return false;
    if (!object.Equals(VerifyCodeServerRequest, other.VerifyCodeServerRequest)) return false;
    if (!object.Equals(VerifyCodeServerResponse, other.VerifyCodeServerResponse)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (loginServerRequest_ != null) hash ^= LoginServerRequest.GetHashCode();
    if (loginServerResponse_ != null) hash ^= LoginServerResponse.GetHashCode();
    if (refreshTokenServerRequest_ != null) hash ^= RefreshTokenServerRequest.GetHashCode();
    if (refreshTokenServerResponse_ != null) hash ^= RefreshTokenServerResponse.GetHashCode();
    if (sendCodeServerRequest_ != null) hash ^= SendCodeServerRequest.GetHashCode();
    if (sendCodeServerResponse_ != null) hash ^= SendCodeServerResponse.GetHashCode();
    if (verifyCodeServerRequest_ != null) hash ^= VerifyCodeServerRequest.GetHashCode();
    if (verifyCodeServerResponse_ != null) hash ^= VerifyCodeServerResponse.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (loginServerRequest_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(LoginServerRequest);
    }
    if (loginServerResponse_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(LoginServerResponse);
    }
    if (refreshTokenServerRequest_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(RefreshTokenServerRequest);
    }
    if (refreshTokenServerResponse_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(RefreshTokenServerResponse);
    }
    if (sendCodeServerRequest_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(SendCodeServerRequest);
    }
    if (sendCodeServerResponse_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(SendCodeServerResponse);
    }
    if (verifyCodeServerRequest_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(VerifyCodeServerRequest);
    }
    if (verifyCodeServerResponse_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(VerifyCodeServerResponse);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (loginServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(LoginServerRequest);
    }
    if (loginServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(LoginServerResponse);
    }
    if (refreshTokenServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(RefreshTokenServerRequest);
    }
    if (refreshTokenServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(RefreshTokenServerResponse);
    }
    if (sendCodeServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SendCodeServerRequest);
    }
    if (sendCodeServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SendCodeServerResponse);
    }
    if (verifyCodeServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(VerifyCodeServerRequest);
    }
    if (verifyCodeServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(VerifyCodeServerResponse);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AuthServerMessage other) {
    if (other == null) {
      return;
    }
    if (other.loginServerRequest_ != null) {
      if (loginServerRequest_ == null) {
        LoginServerRequest = new global::LoginServerRequest();
      }
      LoginServerRequest.MergeFrom(other.LoginServerRequest);
    }
    if (other.loginServerResponse_ != null) {
      if (loginServerResponse_ == null) {
        LoginServerResponse = new global::LoginServerResponse();
      }
      LoginServerResponse.MergeFrom(other.LoginServerResponse);
    }
    if (other.refreshTokenServerRequest_ != null) {
      if (refreshTokenServerRequest_ == null) {
        RefreshTokenServerRequest = new global::RefreshTokenServerRequest();
      }
      RefreshTokenServerRequest.MergeFrom(other.RefreshTokenServerRequest);
    }
    if (other.refreshTokenServerResponse_ != null) {
      if (refreshTokenServerResponse_ == null) {
        RefreshTokenServerResponse = new global::RefreshTokenServerResponse();
      }
      RefreshTokenServerResponse.MergeFrom(other.RefreshTokenServerResponse);
    }
    if (other.sendCodeServerRequest_ != null) {
      if (sendCodeServerRequest_ == null) {
        SendCodeServerRequest = new global::SendCodeServerRequest();
      }
      SendCodeServerRequest.MergeFrom(other.SendCodeServerRequest);
    }
    if (other.sendCodeServerResponse_ != null) {
      if (sendCodeServerResponse_ == null) {
        SendCodeServerResponse = new global::SendCodeServerResponse();
      }
      SendCodeServerResponse.MergeFrom(other.SendCodeServerResponse);
    }
    if (other.verifyCodeServerRequest_ != null) {
      if (verifyCodeServerRequest_ == null) {
        VerifyCodeServerRequest = new global::VerifyCodeServerRequest();
      }
      VerifyCodeServerRequest.MergeFrom(other.VerifyCodeServerRequest);
    }
    if (other.verifyCodeServerResponse_ != null) {
      if (verifyCodeServerResponse_ == null) {
        VerifyCodeServerResponse = new global::VerifyCodeServerResponse();
      }
      VerifyCodeServerResponse.MergeFrom(other.VerifyCodeServerResponse);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (loginServerRequest_ == null) {
            LoginServerRequest = new global::LoginServerRequest();
          }
          input.ReadMessage(LoginServerRequest);
          break;
        }
        case 18: {
          if (loginServerResponse_ == null) {
            LoginServerResponse = new global::LoginServerResponse();
          }
          input.ReadMessage(LoginServerResponse);
          break;
        }
        case 26: {
          if (refreshTokenServerRequest_ == null) {
            RefreshTokenServerRequest = new global::RefreshTokenServerRequest();
          }
          input.ReadMessage(RefreshTokenServerRequest);
          break;
        }
        case 34: {
          if (refreshTokenServerResponse_ == null) {
            RefreshTokenServerResponse = new global::RefreshTokenServerResponse();
          }
          input.ReadMessage(RefreshTokenServerResponse);
          break;
        }
        case 42: {
          if (sendCodeServerRequest_ == null) {
            SendCodeServerRequest = new global::SendCodeServerRequest();
          }
          input.ReadMessage(SendCodeServerRequest);
          break;
        }
        case 50: {
          if (sendCodeServerResponse_ == null) {
            SendCodeServerResponse = new global::SendCodeServerResponse();
          }
          input.ReadMessage(SendCodeServerResponse);
          break;
        }
        case 58: {
          if (verifyCodeServerRequest_ == null) {
            VerifyCodeServerRequest = new global::VerifyCodeServerRequest();
          }
          input.ReadMessage(VerifyCodeServerRequest);
          break;
        }
        case 66: {
          if (verifyCodeServerResponse_ == null) {
            VerifyCodeServerResponse = new global::VerifyCodeServerResponse();
          }
          input.ReadMessage(VerifyCodeServerResponse);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Tài khoản 
/// </summary>
public sealed partial class UserServerMessage : pb::IMessage<UserServerMessage> {
  private static readonly pb::MessageParser<UserServerMessage> _parser = new pb::MessageParser<UserServerMessage>(() => new UserServerMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UserServerMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[287]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UserServerMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UserServerMessage(UserServerMessage other) : this() {
    getUserInfoServerRequest_ = other.getUserInfoServerRequest_ != null ? other.getUserInfoServerRequest_.Clone() : null;
    getUserInfoServerResponse_ = other.getUserInfoServerResponse_ != null ? other.getUserInfoServerResponse_.Clone() : null;
    updateUserInfoServerRequest_ = other.updateUserInfoServerRequest_ != null ? other.updateUserInfoServerRequest_.Clone() : null;
    updateUserInfoServerResponse_ = other.updateUserInfoServerResponse_ != null ? other.updateUserInfoServerResponse_.Clone() : null;
    setOnesignalForUserServerRequest_ = other.setOnesignalForUserServerRequest_ != null ? other.setOnesignalForUserServerRequest_.Clone() : null;
    setOnesignalForUserServerResponse_ = other.setOnesignalForUserServerResponse_ != null ? other.setOnesignalForUserServerResponse_.Clone() : null;
    changedHomeForUserServerRequest_ = other.changedHomeForUserServerRequest_ != null ? other.changedHomeForUserServerRequest_.Clone() : null;
    changedHomeForUserServerResponse_ = other.changedHomeForUserServerResponse_ != null ? other.changedHomeForUserServerResponse_.Clone() : null;
    getUsersServerRequest_ = other.getUsersServerRequest_ != null ? other.getUsersServerRequest_.Clone() : null;
    getUsersServerResponse_ = other.getUsersServerResponse_ != null ? other.getUsersServerResponse_.Clone() : null;
    searchUserServerRequest_ = other.searchUserServerRequest_ != null ? other.searchUserServerRequest_.Clone() : null;
    searchUserServerResponse_ = other.searchUserServerResponse_ != null ? other.searchUserServerResponse_.Clone() : null;
    avatarUploadServerRequest_ = other.avatarUploadServerRequest_ != null ? other.avatarUploadServerRequest_.Clone() : null;
    avatarUploadServerResponse_ = other.avatarUploadServerResponse_ != null ? other.avatarUploadServerResponse_.Clone() : null;
    getUserOtpServerRequest_ = other.getUserOtpServerRequest_ != null ? other.getUserOtpServerRequest_.Clone() : null;
    getUserOtpServerResponse_ = other.getUserOtpServerResponse_ != null ? other.getUserOtpServerResponse_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UserServerMessage Clone() {
    return new UserServerMessage(this);
  }

  /// <summary>Field number for the "getUserInfoServerRequest" field.</summary>
  public const int GetUserInfoServerRequestFieldNumber = 1;
  private global::GetUserInfoServerRequest getUserInfoServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetUserInfoServerRequest GetUserInfoServerRequest {
    get { return getUserInfoServerRequest_; }
    set {
      getUserInfoServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getUserInfoServerResponse" field.</summary>
  public const int GetUserInfoServerResponseFieldNumber = 2;
  private global::GetUserInfoServerResponse getUserInfoServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetUserInfoServerResponse GetUserInfoServerResponse {
    get { return getUserInfoServerResponse_; }
    set {
      getUserInfoServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "updateUserInfoServerRequest" field.</summary>
  public const int UpdateUserInfoServerRequestFieldNumber = 3;
  private global::UpdateUserInfoServerRequest updateUserInfoServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateUserInfoServerRequest UpdateUserInfoServerRequest {
    get { return updateUserInfoServerRequest_; }
    set {
      updateUserInfoServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "updateUserInfoServerResponse" field.</summary>
  public const int UpdateUserInfoServerResponseFieldNumber = 4;
  private global::UpdateUserInfoServerResponse updateUserInfoServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateUserInfoServerResponse UpdateUserInfoServerResponse {
    get { return updateUserInfoServerResponse_; }
    set {
      updateUserInfoServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "setOnesignalForUserServerRequest" field.</summary>
  public const int SetOnesignalForUserServerRequestFieldNumber = 5;
  private global::SetOnesignalForUserServerRequest setOnesignalForUserServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SetOnesignalForUserServerRequest SetOnesignalForUserServerRequest {
    get { return setOnesignalForUserServerRequest_; }
    set {
      setOnesignalForUserServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "setOnesignalForUserServerResponse" field.</summary>
  public const int SetOnesignalForUserServerResponseFieldNumber = 6;
  private global::SetOnesignalForUserServerResponse setOnesignalForUserServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SetOnesignalForUserServerResponse SetOnesignalForUserServerResponse {
    get { return setOnesignalForUserServerResponse_; }
    set {
      setOnesignalForUserServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "changedHomeForUserServerRequest" field.</summary>
  public const int ChangedHomeForUserServerRequestFieldNumber = 7;
  private global::ChangedHomeForUserServerRequest changedHomeForUserServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ChangedHomeForUserServerRequest ChangedHomeForUserServerRequest {
    get { return changedHomeForUserServerRequest_; }
    set {
      changedHomeForUserServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "changedHomeForUserServerResponse" field.</summary>
  public const int ChangedHomeForUserServerResponseFieldNumber = 8;
  private global::ChangedHomeForUserServerResponse changedHomeForUserServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ChangedHomeForUserServerResponse ChangedHomeForUserServerResponse {
    get { return changedHomeForUserServerResponse_; }
    set {
      changedHomeForUserServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "getUsersServerRequest" field.</summary>
  public const int GetUsersServerRequestFieldNumber = 9;
  private global::GetUsersServerRequest getUsersServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetUsersServerRequest GetUsersServerRequest {
    get { return getUsersServerRequest_; }
    set {
      getUsersServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getUsersServerResponse" field.</summary>
  public const int GetUsersServerResponseFieldNumber = 10;
  private global::GetUsersServerResponse getUsersServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetUsersServerResponse GetUsersServerResponse {
    get { return getUsersServerResponse_; }
    set {
      getUsersServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "searchUserServerRequest" field.</summary>
  public const int SearchUserServerRequestFieldNumber = 11;
  private global::SearchUserServerRequest searchUserServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SearchUserServerRequest SearchUserServerRequest {
    get { return searchUserServerRequest_; }
    set {
      searchUserServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "searchUserServerResponse" field.</summary>
  public const int SearchUserServerResponseFieldNumber = 12;
  private global::SearchUserServerResponse searchUserServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SearchUserServerResponse SearchUserServerResponse {
    get { return searchUserServerResponse_; }
    set {
      searchUserServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "AvatarUploadServerRequest" field.</summary>
  public const int AvatarUploadServerRequestFieldNumber = 13;
  private global::AvatarUploadServerRequest avatarUploadServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AvatarUploadServerRequest AvatarUploadServerRequest {
    get { return avatarUploadServerRequest_; }
    set {
      avatarUploadServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "AvatarUploadServerResponse" field.</summary>
  public const int AvatarUploadServerResponseFieldNumber = 14;
  private global::AvatarUploadServerResponse avatarUploadServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AvatarUploadServerResponse AvatarUploadServerResponse {
    get { return avatarUploadServerResponse_; }
    set {
      avatarUploadServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "getUserOtpServerRequest" field.</summary>
  public const int GetUserOtpServerRequestFieldNumber = 15;
  private global::GetUserOtpServerRequest getUserOtpServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetUserOtpServerRequest GetUserOtpServerRequest {
    get { return getUserOtpServerRequest_; }
    set {
      getUserOtpServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getUserOtpServerResponse" field.</summary>
  public const int GetUserOtpServerResponseFieldNumber = 16;
  private global::GetUserOtpServerResponse getUserOtpServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetUserOtpServerResponse GetUserOtpServerResponse {
    get { return getUserOtpServerResponse_; }
    set {
      getUserOtpServerResponse_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UserServerMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UserServerMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(GetUserInfoServerRequest, other.GetUserInfoServerRequest)) return false;
    if (!object.Equals(GetUserInfoServerResponse, other.GetUserInfoServerResponse)) return false;
    if (!object.Equals(UpdateUserInfoServerRequest, other.UpdateUserInfoServerRequest)) return false;
    if (!object.Equals(UpdateUserInfoServerResponse, other.UpdateUserInfoServerResponse)) return false;
    if (!object.Equals(SetOnesignalForUserServerRequest, other.SetOnesignalForUserServerRequest)) return false;
    if (!object.Equals(SetOnesignalForUserServerResponse, other.SetOnesignalForUserServerResponse)) return false;
    if (!object.Equals(ChangedHomeForUserServerRequest, other.ChangedHomeForUserServerRequest)) return false;
    if (!object.Equals(ChangedHomeForUserServerResponse, other.ChangedHomeForUserServerResponse)) return false;
    if (!object.Equals(GetUsersServerRequest, other.GetUsersServerRequest)) return false;
    if (!object.Equals(GetUsersServerResponse, other.GetUsersServerResponse)) return false;
    if (!object.Equals(SearchUserServerRequest, other.SearchUserServerRequest)) return false;
    if (!object.Equals(SearchUserServerResponse, other.SearchUserServerResponse)) return false;
    if (!object.Equals(AvatarUploadServerRequest, other.AvatarUploadServerRequest)) return false;
    if (!object.Equals(AvatarUploadServerResponse, other.AvatarUploadServerResponse)) return false;
    if (!object.Equals(GetUserOtpServerRequest, other.GetUserOtpServerRequest)) return false;
    if (!object.Equals(GetUserOtpServerResponse, other.GetUserOtpServerResponse)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (getUserInfoServerRequest_ != null) hash ^= GetUserInfoServerRequest.GetHashCode();
    if (getUserInfoServerResponse_ != null) hash ^= GetUserInfoServerResponse.GetHashCode();
    if (updateUserInfoServerRequest_ != null) hash ^= UpdateUserInfoServerRequest.GetHashCode();
    if (updateUserInfoServerResponse_ != null) hash ^= UpdateUserInfoServerResponse.GetHashCode();
    if (setOnesignalForUserServerRequest_ != null) hash ^= SetOnesignalForUserServerRequest.GetHashCode();
    if (setOnesignalForUserServerResponse_ != null) hash ^= SetOnesignalForUserServerResponse.GetHashCode();
    if (changedHomeForUserServerRequest_ != null) hash ^= ChangedHomeForUserServerRequest.GetHashCode();
    if (changedHomeForUserServerResponse_ != null) hash ^= ChangedHomeForUserServerResponse.GetHashCode();
    if (getUsersServerRequest_ != null) hash ^= GetUsersServerRequest.GetHashCode();
    if (getUsersServerResponse_ != null) hash ^= GetUsersServerResponse.GetHashCode();
    if (searchUserServerRequest_ != null) hash ^= SearchUserServerRequest.GetHashCode();
    if (searchUserServerResponse_ != null) hash ^= SearchUserServerResponse.GetHashCode();
    if (avatarUploadServerRequest_ != null) hash ^= AvatarUploadServerRequest.GetHashCode();
    if (avatarUploadServerResponse_ != null) hash ^= AvatarUploadServerResponse.GetHashCode();
    if (getUserOtpServerRequest_ != null) hash ^= GetUserOtpServerRequest.GetHashCode();
    if (getUserOtpServerResponse_ != null) hash ^= GetUserOtpServerResponse.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (getUserInfoServerRequest_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(GetUserInfoServerRequest);
    }
    if (getUserInfoServerResponse_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(GetUserInfoServerResponse);
    }
    if (updateUserInfoServerRequest_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(UpdateUserInfoServerRequest);
    }
    if (updateUserInfoServerResponse_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(UpdateUserInfoServerResponse);
    }
    if (setOnesignalForUserServerRequest_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(SetOnesignalForUserServerRequest);
    }
    if (setOnesignalForUserServerResponse_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(SetOnesignalForUserServerResponse);
    }
    if (changedHomeForUserServerRequest_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(ChangedHomeForUserServerRequest);
    }
    if (changedHomeForUserServerResponse_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(ChangedHomeForUserServerResponse);
    }
    if (getUsersServerRequest_ != null) {
      output.WriteRawTag(74);
      output.WriteMessage(GetUsersServerRequest);
    }
    if (getUsersServerResponse_ != null) {
      output.WriteRawTag(82);
      output.WriteMessage(GetUsersServerResponse);
    }
    if (searchUserServerRequest_ != null) {
      output.WriteRawTag(90);
      output.WriteMessage(SearchUserServerRequest);
    }
    if (searchUserServerResponse_ != null) {
      output.WriteRawTag(98);
      output.WriteMessage(SearchUserServerResponse);
    }
    if (avatarUploadServerRequest_ != null) {
      output.WriteRawTag(106);
      output.WriteMessage(AvatarUploadServerRequest);
    }
    if (avatarUploadServerResponse_ != null) {
      output.WriteRawTag(114);
      output.WriteMessage(AvatarUploadServerResponse);
    }
    if (getUserOtpServerRequest_ != null) {
      output.WriteRawTag(122);
      output.WriteMessage(GetUserOtpServerRequest);
    }
    if (getUserOtpServerResponse_ != null) {
      output.WriteRawTag(130, 1);
      output.WriteMessage(GetUserOtpServerResponse);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (getUserInfoServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetUserInfoServerRequest);
    }
    if (getUserInfoServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetUserInfoServerResponse);
    }
    if (updateUserInfoServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateUserInfoServerRequest);
    }
    if (updateUserInfoServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateUserInfoServerResponse);
    }
    if (setOnesignalForUserServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SetOnesignalForUserServerRequest);
    }
    if (setOnesignalForUserServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SetOnesignalForUserServerResponse);
    }
    if (changedHomeForUserServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChangedHomeForUserServerRequest);
    }
    if (changedHomeForUserServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChangedHomeForUserServerResponse);
    }
    if (getUsersServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetUsersServerRequest);
    }
    if (getUsersServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetUsersServerResponse);
    }
    if (searchUserServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SearchUserServerRequest);
    }
    if (searchUserServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SearchUserServerResponse);
    }
    if (avatarUploadServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AvatarUploadServerRequest);
    }
    if (avatarUploadServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AvatarUploadServerResponse);
    }
    if (getUserOtpServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetUserOtpServerRequest);
    }
    if (getUserOtpServerResponse_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetUserOtpServerResponse);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UserServerMessage other) {
    if (other == null) {
      return;
    }
    if (other.getUserInfoServerRequest_ != null) {
      if (getUserInfoServerRequest_ == null) {
        GetUserInfoServerRequest = new global::GetUserInfoServerRequest();
      }
      GetUserInfoServerRequest.MergeFrom(other.GetUserInfoServerRequest);
    }
    if (other.getUserInfoServerResponse_ != null) {
      if (getUserInfoServerResponse_ == null) {
        GetUserInfoServerResponse = new global::GetUserInfoServerResponse();
      }
      GetUserInfoServerResponse.MergeFrom(other.GetUserInfoServerResponse);
    }
    if (other.updateUserInfoServerRequest_ != null) {
      if (updateUserInfoServerRequest_ == null) {
        UpdateUserInfoServerRequest = new global::UpdateUserInfoServerRequest();
      }
      UpdateUserInfoServerRequest.MergeFrom(other.UpdateUserInfoServerRequest);
    }
    if (other.updateUserInfoServerResponse_ != null) {
      if (updateUserInfoServerResponse_ == null) {
        UpdateUserInfoServerResponse = new global::UpdateUserInfoServerResponse();
      }
      UpdateUserInfoServerResponse.MergeFrom(other.UpdateUserInfoServerResponse);
    }
    if (other.setOnesignalForUserServerRequest_ != null) {
      if (setOnesignalForUserServerRequest_ == null) {
        SetOnesignalForUserServerRequest = new global::SetOnesignalForUserServerRequest();
      }
      SetOnesignalForUserServerRequest.MergeFrom(other.SetOnesignalForUserServerRequest);
    }
    if (other.setOnesignalForUserServerResponse_ != null) {
      if (setOnesignalForUserServerResponse_ == null) {
        SetOnesignalForUserServerResponse = new global::SetOnesignalForUserServerResponse();
      }
      SetOnesignalForUserServerResponse.MergeFrom(other.SetOnesignalForUserServerResponse);
    }
    if (other.changedHomeForUserServerRequest_ != null) {
      if (changedHomeForUserServerRequest_ == null) {
        ChangedHomeForUserServerRequest = new global::ChangedHomeForUserServerRequest();
      }
      ChangedHomeForUserServerRequest.MergeFrom(other.ChangedHomeForUserServerRequest);
    }
    if (other.changedHomeForUserServerResponse_ != null) {
      if (changedHomeForUserServerResponse_ == null) {
        ChangedHomeForUserServerResponse = new global::ChangedHomeForUserServerResponse();
      }
      ChangedHomeForUserServerResponse.MergeFrom(other.ChangedHomeForUserServerResponse);
    }
    if (other.getUsersServerRequest_ != null) {
      if (getUsersServerRequest_ == null) {
        GetUsersServerRequest = new global::GetUsersServerRequest();
      }
      GetUsersServerRequest.MergeFrom(other.GetUsersServerRequest);
    }
    if (other.getUsersServerResponse_ != null) {
      if (getUsersServerResponse_ == null) {
        GetUsersServerResponse = new global::GetUsersServerResponse();
      }
      GetUsersServerResponse.MergeFrom(other.GetUsersServerResponse);
    }
    if (other.searchUserServerRequest_ != null) {
      if (searchUserServerRequest_ == null) {
        SearchUserServerRequest = new global::SearchUserServerRequest();
      }
      SearchUserServerRequest.MergeFrom(other.SearchUserServerRequest);
    }
    if (other.searchUserServerResponse_ != null) {
      if (searchUserServerResponse_ == null) {
        SearchUserServerResponse = new global::SearchUserServerResponse();
      }
      SearchUserServerResponse.MergeFrom(other.SearchUserServerResponse);
    }
    if (other.avatarUploadServerRequest_ != null) {
      if (avatarUploadServerRequest_ == null) {
        AvatarUploadServerRequest = new global::AvatarUploadServerRequest();
      }
      AvatarUploadServerRequest.MergeFrom(other.AvatarUploadServerRequest);
    }
    if (other.avatarUploadServerResponse_ != null) {
      if (avatarUploadServerResponse_ == null) {
        AvatarUploadServerResponse = new global::AvatarUploadServerResponse();
      }
      AvatarUploadServerResponse.MergeFrom(other.AvatarUploadServerResponse);
    }
    if (other.getUserOtpServerRequest_ != null) {
      if (getUserOtpServerRequest_ == null) {
        GetUserOtpServerRequest = new global::GetUserOtpServerRequest();
      }
      GetUserOtpServerRequest.MergeFrom(other.GetUserOtpServerRequest);
    }
    if (other.getUserOtpServerResponse_ != null) {
      if (getUserOtpServerResponse_ == null) {
        GetUserOtpServerResponse = new global::GetUserOtpServerResponse();
      }
      GetUserOtpServerResponse.MergeFrom(other.GetUserOtpServerResponse);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (getUserInfoServerRequest_ == null) {
            GetUserInfoServerRequest = new global::GetUserInfoServerRequest();
          }
          input.ReadMessage(GetUserInfoServerRequest);
          break;
        }
        case 18: {
          if (getUserInfoServerResponse_ == null) {
            GetUserInfoServerResponse = new global::GetUserInfoServerResponse();
          }
          input.ReadMessage(GetUserInfoServerResponse);
          break;
        }
        case 26: {
          if (updateUserInfoServerRequest_ == null) {
            UpdateUserInfoServerRequest = new global::UpdateUserInfoServerRequest();
          }
          input.ReadMessage(UpdateUserInfoServerRequest);
          break;
        }
        case 34: {
          if (updateUserInfoServerResponse_ == null) {
            UpdateUserInfoServerResponse = new global::UpdateUserInfoServerResponse();
          }
          input.ReadMessage(UpdateUserInfoServerResponse);
          break;
        }
        case 42: {
          if (setOnesignalForUserServerRequest_ == null) {
            SetOnesignalForUserServerRequest = new global::SetOnesignalForUserServerRequest();
          }
          input.ReadMessage(SetOnesignalForUserServerRequest);
          break;
        }
        case 50: {
          if (setOnesignalForUserServerResponse_ == null) {
            SetOnesignalForUserServerResponse = new global::SetOnesignalForUserServerResponse();
          }
          input.ReadMessage(SetOnesignalForUserServerResponse);
          break;
        }
        case 58: {
          if (changedHomeForUserServerRequest_ == null) {
            ChangedHomeForUserServerRequest = new global::ChangedHomeForUserServerRequest();
          }
          input.ReadMessage(ChangedHomeForUserServerRequest);
          break;
        }
        case 66: {
          if (changedHomeForUserServerResponse_ == null) {
            ChangedHomeForUserServerResponse = new global::ChangedHomeForUserServerResponse();
          }
          input.ReadMessage(ChangedHomeForUserServerResponse);
          break;
        }
        case 74: {
          if (getUsersServerRequest_ == null) {
            GetUsersServerRequest = new global::GetUsersServerRequest();
          }
          input.ReadMessage(GetUsersServerRequest);
          break;
        }
        case 82: {
          if (getUsersServerResponse_ == null) {
            GetUsersServerResponse = new global::GetUsersServerResponse();
          }
          input.ReadMessage(GetUsersServerResponse);
          break;
        }
        case 90: {
          if (searchUserServerRequest_ == null) {
            SearchUserServerRequest = new global::SearchUserServerRequest();
          }
          input.ReadMessage(SearchUserServerRequest);
          break;
        }
        case 98: {
          if (searchUserServerResponse_ == null) {
            SearchUserServerResponse = new global::SearchUserServerResponse();
          }
          input.ReadMessage(SearchUserServerResponse);
          break;
        }
        case 106: {
          if (avatarUploadServerRequest_ == null) {
            AvatarUploadServerRequest = new global::AvatarUploadServerRequest();
          }
          input.ReadMessage(AvatarUploadServerRequest);
          break;
        }
        case 114: {
          if (avatarUploadServerResponse_ == null) {
            AvatarUploadServerResponse = new global::AvatarUploadServerResponse();
          }
          input.ReadMessage(AvatarUploadServerResponse);
          break;
        }
        case 122: {
          if (getUserOtpServerRequest_ == null) {
            GetUserOtpServerRequest = new global::GetUserOtpServerRequest();
          }
          input.ReadMessage(GetUserOtpServerRequest);
          break;
        }
        case 130: {
          if (getUserOtpServerResponse_ == null) {
            GetUserOtpServerResponse = new global::GetUserOtpServerResponse();
          }
          input.ReadMessage(GetUserOtpServerResponse);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhà 
/// </summary>
public sealed partial class HomeServerMessage : pb::IMessage<HomeServerMessage> {
  private static readonly pb::MessageParser<HomeServerMessage> _parser = new pb::MessageParser<HomeServerMessage>(() => new HomeServerMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<HomeServerMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[288]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public HomeServerMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public HomeServerMessage(HomeServerMessage other) : this() {
    getHomesServerRequest_ = other.getHomesServerRequest_ != null ? other.getHomesServerRequest_.Clone() : null;
    getHomesServerResponse_ = other.getHomesServerResponse_ != null ? other.getHomesServerResponse_.Clone() : null;
    addHomeServerRequest_ = other.addHomeServerRequest_ != null ? other.addHomeServerRequest_.Clone() : null;
    addHomeServerResponse_ = other.addHomeServerResponse_ != null ? other.addHomeServerResponse_.Clone() : null;
    updateHomeServerRequest_ = other.updateHomeServerRequest_ != null ? other.updateHomeServerRequest_.Clone() : null;
    updateHomeServerResponse_ = other.updateHomeServerResponse_ != null ? other.updateHomeServerResponse_.Clone() : null;
    deleteHomeServerRequest_ = other.deleteHomeServerRequest_ != null ? other.deleteHomeServerRequest_.Clone() : null;
    deleteHomeServerResponse_ = other.deleteHomeServerResponse_ != null ? other.deleteHomeServerResponse_.Clone() : null;
    getCitizenInfoServerRequest_ = other.getCitizenInfoServerRequest_ != null ? other.getCitizenInfoServerRequest_.Clone() : null;
    getCitizenInfoServerResponse_ = other.getCitizenInfoServerResponse_ != null ? other.getCitizenInfoServerResponse_.Clone() : null;
    setCitizenServerRequest_ = other.setCitizenServerRequest_ != null ? other.setCitizenServerRequest_.Clone() : null;
    setCitizenServerResponse_ = other.setCitizenServerResponse_ != null ? other.setCitizenServerResponse_.Clone() : null;
    setGpsForHomeServerRequest_ = other.setGpsForHomeServerRequest_ != null ? other.setGpsForHomeServerRequest_.Clone() : null;
    setGpsForHomeServerResponse_ = other.setGpsForHomeServerResponse_ != null ? other.setGpsForHomeServerResponse_.Clone() : null;
    getHomeInfoServerRequest_ = other.getHomeInfoServerRequest_ != null ? other.getHomeInfoServerRequest_.Clone() : null;
    getHomeInfoServerResponse_ = other.getHomeInfoServerResponse_ != null ? other.getHomeInfoServerResponse_.Clone() : null;
    getHomesByPhoneServerRequest_ = other.getHomesByPhoneServerRequest_ != null ? other.getHomesByPhoneServerRequest_.Clone() : null;
    getHomesByPhoneServerResponse_ = other.getHomesByPhoneServerResponse_ != null ? other.getHomesByPhoneServerResponse_.Clone() : null;
    uploadhomeBackgroundServerRequest_ = other.uploadhomeBackgroundServerRequest_ != null ? other.uploadhomeBackgroundServerRequest_.Clone() : null;
    uploadHomeBackgroundServerResponse_ = other.uploadHomeBackgroundServerResponse_ != null ? other.uploadHomeBackgroundServerResponse_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public HomeServerMessage Clone() {
    return new HomeServerMessage(this);
  }

  /// <summary>Field number for the "getHomesServerRequest" field.</summary>
  public const int GetHomesServerRequestFieldNumber = 1;
  private global::GetHomesServerRequest getHomesServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetHomesServerRequest GetHomesServerRequest {
    get { return getHomesServerRequest_; }
    set {
      getHomesServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getHomesServerResponse" field.</summary>
  public const int GetHomesServerResponseFieldNumber = 2;
  private global::GetHomesServerResponse getHomesServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetHomesServerResponse GetHomesServerResponse {
    get { return getHomesServerResponse_; }
    set {
      getHomesServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "addHomeServerRequest" field.</summary>
  public const int AddHomeServerRequestFieldNumber = 3;
  private global::AddHomeServerRequest addHomeServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AddHomeServerRequest AddHomeServerRequest {
    get { return addHomeServerRequest_; }
    set {
      addHomeServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "addHomeServerResponse" field.</summary>
  public const int AddHomeServerResponseFieldNumber = 4;
  private global::AddHomeServerResponse addHomeServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AddHomeServerResponse AddHomeServerResponse {
    get { return addHomeServerResponse_; }
    set {
      addHomeServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "updateHomeServerRequest" field.</summary>
  public const int UpdateHomeServerRequestFieldNumber = 5;
  private global::UpdateHomeServerRequest updateHomeServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateHomeServerRequest UpdateHomeServerRequest {
    get { return updateHomeServerRequest_; }
    set {
      updateHomeServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "updateHomeServerResponse" field.</summary>
  public const int UpdateHomeServerResponseFieldNumber = 6;
  private global::UpdateHomeServerResponse updateHomeServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateHomeServerResponse UpdateHomeServerResponse {
    get { return updateHomeServerResponse_; }
    set {
      updateHomeServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "deleteHomeServerRequest" field.</summary>
  public const int DeleteHomeServerRequestFieldNumber = 7;
  private global::DeleteHomeServerRequest deleteHomeServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DeleteHomeServerRequest DeleteHomeServerRequest {
    get { return deleteHomeServerRequest_; }
    set {
      deleteHomeServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "deleteHomeServerResponse" field.</summary>
  public const int DeleteHomeServerResponseFieldNumber = 8;
  private global::DeleteHomeServerResponse deleteHomeServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DeleteHomeServerResponse DeleteHomeServerResponse {
    get { return deleteHomeServerResponse_; }
    set {
      deleteHomeServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "getCitizenInfoServerRequest" field.</summary>
  public const int GetCitizenInfoServerRequestFieldNumber = 9;
  private global::GetCitizenInfoServerRequest getCitizenInfoServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetCitizenInfoServerRequest GetCitizenInfoServerRequest {
    get { return getCitizenInfoServerRequest_; }
    set {
      getCitizenInfoServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getCitizenInfoServerResponse" field.</summary>
  public const int GetCitizenInfoServerResponseFieldNumber = 10;
  private global::GetCitizenInfoServerResponse getCitizenInfoServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetCitizenInfoServerResponse GetCitizenInfoServerResponse {
    get { return getCitizenInfoServerResponse_; }
    set {
      getCitizenInfoServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "setCitizenServerRequest" field.</summary>
  public const int SetCitizenServerRequestFieldNumber = 11;
  private global::SetCitizenServerRequest setCitizenServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SetCitizenServerRequest SetCitizenServerRequest {
    get { return setCitizenServerRequest_; }
    set {
      setCitizenServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "setCitizenServerResponse" field.</summary>
  public const int SetCitizenServerResponseFieldNumber = 12;
  private global::SetCitizenServerResponse setCitizenServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SetCitizenServerResponse SetCitizenServerResponse {
    get { return setCitizenServerResponse_; }
    set {
      setCitizenServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "setGpsForHomeServerRequest" field.</summary>
  public const int SetGpsForHomeServerRequestFieldNumber = 13;
  private global::SetGpsForHomeServerRequest setGpsForHomeServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SetGpsForHomeServerRequest SetGpsForHomeServerRequest {
    get { return setGpsForHomeServerRequest_; }
    set {
      setGpsForHomeServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "setGpsForHomeServerResponse" field.</summary>
  public const int SetGpsForHomeServerResponseFieldNumber = 14;
  private global::SetGpsForHomeServerResponse setGpsForHomeServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SetGpsForHomeServerResponse SetGpsForHomeServerResponse {
    get { return setGpsForHomeServerResponse_; }
    set {
      setGpsForHomeServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "getHomeInfoServerRequest" field.</summary>
  public const int GetHomeInfoServerRequestFieldNumber = 15;
  private global::GetHomeInfoServerRequest getHomeInfoServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetHomeInfoServerRequest GetHomeInfoServerRequest {
    get { return getHomeInfoServerRequest_; }
    set {
      getHomeInfoServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getHomeInfoServerResponse" field.</summary>
  public const int GetHomeInfoServerResponseFieldNumber = 16;
  private global::GetHomeInfoServerResponse getHomeInfoServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetHomeInfoServerResponse GetHomeInfoServerResponse {
    get { return getHomeInfoServerResponse_; }
    set {
      getHomeInfoServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "getHomesByPhoneServerRequest" field.</summary>
  public const int GetHomesByPhoneServerRequestFieldNumber = 17;
  private global::GetHomesByPhoneServerRequest getHomesByPhoneServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetHomesByPhoneServerRequest GetHomesByPhoneServerRequest {
    get { return getHomesByPhoneServerRequest_; }
    set {
      getHomesByPhoneServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getHomesByPhoneServerResponse" field.</summary>
  public const int GetHomesByPhoneServerResponseFieldNumber = 18;
  private global::GetHomesByPhoneServerResponse getHomesByPhoneServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetHomesByPhoneServerResponse GetHomesByPhoneServerResponse {
    get { return getHomesByPhoneServerResponse_; }
    set {
      getHomesByPhoneServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "uploadhomeBackgroundServerRequest" field.</summary>
  public const int UploadhomeBackgroundServerRequestFieldNumber = 19;
  private global::UploadHomeBackgroundServerRequest uploadhomeBackgroundServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UploadHomeBackgroundServerRequest UploadhomeBackgroundServerRequest {
    get { return uploadhomeBackgroundServerRequest_; }
    set {
      uploadhomeBackgroundServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "uploadHomeBackgroundServerResponse" field.</summary>
  public const int UploadHomeBackgroundServerResponseFieldNumber = 20;
  private global::UploadHomeBackgroundServerResponse uploadHomeBackgroundServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UploadHomeBackgroundServerResponse UploadHomeBackgroundServerResponse {
    get { return uploadHomeBackgroundServerResponse_; }
    set {
      uploadHomeBackgroundServerResponse_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as HomeServerMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(HomeServerMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(GetHomesServerRequest, other.GetHomesServerRequest)) return false;
    if (!object.Equals(GetHomesServerResponse, other.GetHomesServerResponse)) return false;
    if (!object.Equals(AddHomeServerRequest, other.AddHomeServerRequest)) return false;
    if (!object.Equals(AddHomeServerResponse, other.AddHomeServerResponse)) return false;
    if (!object.Equals(UpdateHomeServerRequest, other.UpdateHomeServerRequest)) return false;
    if (!object.Equals(UpdateHomeServerResponse, other.UpdateHomeServerResponse)) return false;
    if (!object.Equals(DeleteHomeServerRequest, other.DeleteHomeServerRequest)) return false;
    if (!object.Equals(DeleteHomeServerResponse, other.DeleteHomeServerResponse)) return false;
    if (!object.Equals(GetCitizenInfoServerRequest, other.GetCitizenInfoServerRequest)) return false;
    if (!object.Equals(GetCitizenInfoServerResponse, other.GetCitizenInfoServerResponse)) return false;
    if (!object.Equals(SetCitizenServerRequest, other.SetCitizenServerRequest)) return false;
    if (!object.Equals(SetCitizenServerResponse, other.SetCitizenServerResponse)) return false;
    if (!object.Equals(SetGpsForHomeServerRequest, other.SetGpsForHomeServerRequest)) return false;
    if (!object.Equals(SetGpsForHomeServerResponse, other.SetGpsForHomeServerResponse)) return false;
    if (!object.Equals(GetHomeInfoServerRequest, other.GetHomeInfoServerRequest)) return false;
    if (!object.Equals(GetHomeInfoServerResponse, other.GetHomeInfoServerResponse)) return false;
    if (!object.Equals(GetHomesByPhoneServerRequest, other.GetHomesByPhoneServerRequest)) return false;
    if (!object.Equals(GetHomesByPhoneServerResponse, other.GetHomesByPhoneServerResponse)) return false;
    if (!object.Equals(UploadhomeBackgroundServerRequest, other.UploadhomeBackgroundServerRequest)) return false;
    if (!object.Equals(UploadHomeBackgroundServerResponse, other.UploadHomeBackgroundServerResponse)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (getHomesServerRequest_ != null) hash ^= GetHomesServerRequest.GetHashCode();
    if (getHomesServerResponse_ != null) hash ^= GetHomesServerResponse.GetHashCode();
    if (addHomeServerRequest_ != null) hash ^= AddHomeServerRequest.GetHashCode();
    if (addHomeServerResponse_ != null) hash ^= AddHomeServerResponse.GetHashCode();
    if (updateHomeServerRequest_ != null) hash ^= UpdateHomeServerRequest.GetHashCode();
    if (updateHomeServerResponse_ != null) hash ^= UpdateHomeServerResponse.GetHashCode();
    if (deleteHomeServerRequest_ != null) hash ^= DeleteHomeServerRequest.GetHashCode();
    if (deleteHomeServerResponse_ != null) hash ^= DeleteHomeServerResponse.GetHashCode();
    if (getCitizenInfoServerRequest_ != null) hash ^= GetCitizenInfoServerRequest.GetHashCode();
    if (getCitizenInfoServerResponse_ != null) hash ^= GetCitizenInfoServerResponse.GetHashCode();
    if (setCitizenServerRequest_ != null) hash ^= SetCitizenServerRequest.GetHashCode();
    if (setCitizenServerResponse_ != null) hash ^= SetCitizenServerResponse.GetHashCode();
    if (setGpsForHomeServerRequest_ != null) hash ^= SetGpsForHomeServerRequest.GetHashCode();
    if (setGpsForHomeServerResponse_ != null) hash ^= SetGpsForHomeServerResponse.GetHashCode();
    if (getHomeInfoServerRequest_ != null) hash ^= GetHomeInfoServerRequest.GetHashCode();
    if (getHomeInfoServerResponse_ != null) hash ^= GetHomeInfoServerResponse.GetHashCode();
    if (getHomesByPhoneServerRequest_ != null) hash ^= GetHomesByPhoneServerRequest.GetHashCode();
    if (getHomesByPhoneServerResponse_ != null) hash ^= GetHomesByPhoneServerResponse.GetHashCode();
    if (uploadhomeBackgroundServerRequest_ != null) hash ^= UploadhomeBackgroundServerRequest.GetHashCode();
    if (uploadHomeBackgroundServerResponse_ != null) hash ^= UploadHomeBackgroundServerResponse.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (getHomesServerRequest_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(GetHomesServerRequest);
    }
    if (getHomesServerResponse_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(GetHomesServerResponse);
    }
    if (addHomeServerRequest_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(AddHomeServerRequest);
    }
    if (addHomeServerResponse_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(AddHomeServerResponse);
    }
    if (updateHomeServerRequest_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(UpdateHomeServerRequest);
    }
    if (updateHomeServerResponse_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(UpdateHomeServerResponse);
    }
    if (deleteHomeServerRequest_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(DeleteHomeServerRequest);
    }
    if (deleteHomeServerResponse_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(DeleteHomeServerResponse);
    }
    if (getCitizenInfoServerRequest_ != null) {
      output.WriteRawTag(74);
      output.WriteMessage(GetCitizenInfoServerRequest);
    }
    if (getCitizenInfoServerResponse_ != null) {
      output.WriteRawTag(82);
      output.WriteMessage(GetCitizenInfoServerResponse);
    }
    if (setCitizenServerRequest_ != null) {
      output.WriteRawTag(90);
      output.WriteMessage(SetCitizenServerRequest);
    }
    if (setCitizenServerResponse_ != null) {
      output.WriteRawTag(98);
      output.WriteMessage(SetCitizenServerResponse);
    }
    if (setGpsForHomeServerRequest_ != null) {
      output.WriteRawTag(106);
      output.WriteMessage(SetGpsForHomeServerRequest);
    }
    if (setGpsForHomeServerResponse_ != null) {
      output.WriteRawTag(114);
      output.WriteMessage(SetGpsForHomeServerResponse);
    }
    if (getHomeInfoServerRequest_ != null) {
      output.WriteRawTag(122);
      output.WriteMessage(GetHomeInfoServerRequest);
    }
    if (getHomeInfoServerResponse_ != null) {
      output.WriteRawTag(130, 1);
      output.WriteMessage(GetHomeInfoServerResponse);
    }
    if (getHomesByPhoneServerRequest_ != null) {
      output.WriteRawTag(138, 1);
      output.WriteMessage(GetHomesByPhoneServerRequest);
    }
    if (getHomesByPhoneServerResponse_ != null) {
      output.WriteRawTag(146, 1);
      output.WriteMessage(GetHomesByPhoneServerResponse);
    }
    if (uploadhomeBackgroundServerRequest_ != null) {
      output.WriteRawTag(154, 1);
      output.WriteMessage(UploadhomeBackgroundServerRequest);
    }
    if (uploadHomeBackgroundServerResponse_ != null) {
      output.WriteRawTag(162, 1);
      output.WriteMessage(UploadHomeBackgroundServerResponse);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (getHomesServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetHomesServerRequest);
    }
    if (getHomesServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetHomesServerResponse);
    }
    if (addHomeServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddHomeServerRequest);
    }
    if (addHomeServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddHomeServerResponse);
    }
    if (updateHomeServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateHomeServerRequest);
    }
    if (updateHomeServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateHomeServerResponse);
    }
    if (deleteHomeServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeleteHomeServerRequest);
    }
    if (deleteHomeServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeleteHomeServerResponse);
    }
    if (getCitizenInfoServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetCitizenInfoServerRequest);
    }
    if (getCitizenInfoServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetCitizenInfoServerResponse);
    }
    if (setCitizenServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SetCitizenServerRequest);
    }
    if (setCitizenServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SetCitizenServerResponse);
    }
    if (setGpsForHomeServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SetGpsForHomeServerRequest);
    }
    if (setGpsForHomeServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SetGpsForHomeServerResponse);
    }
    if (getHomeInfoServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetHomeInfoServerRequest);
    }
    if (getHomeInfoServerResponse_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetHomeInfoServerResponse);
    }
    if (getHomesByPhoneServerRequest_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetHomesByPhoneServerRequest);
    }
    if (getHomesByPhoneServerResponse_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetHomesByPhoneServerResponse);
    }
    if (uploadhomeBackgroundServerRequest_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(UploadhomeBackgroundServerRequest);
    }
    if (uploadHomeBackgroundServerResponse_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(UploadHomeBackgroundServerResponse);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(HomeServerMessage other) {
    if (other == null) {
      return;
    }
    if (other.getHomesServerRequest_ != null) {
      if (getHomesServerRequest_ == null) {
        GetHomesServerRequest = new global::GetHomesServerRequest();
      }
      GetHomesServerRequest.MergeFrom(other.GetHomesServerRequest);
    }
    if (other.getHomesServerResponse_ != null) {
      if (getHomesServerResponse_ == null) {
        GetHomesServerResponse = new global::GetHomesServerResponse();
      }
      GetHomesServerResponse.MergeFrom(other.GetHomesServerResponse);
    }
    if (other.addHomeServerRequest_ != null) {
      if (addHomeServerRequest_ == null) {
        AddHomeServerRequest = new global::AddHomeServerRequest();
      }
      AddHomeServerRequest.MergeFrom(other.AddHomeServerRequest);
    }
    if (other.addHomeServerResponse_ != null) {
      if (addHomeServerResponse_ == null) {
        AddHomeServerResponse = new global::AddHomeServerResponse();
      }
      AddHomeServerResponse.MergeFrom(other.AddHomeServerResponse);
    }
    if (other.updateHomeServerRequest_ != null) {
      if (updateHomeServerRequest_ == null) {
        UpdateHomeServerRequest = new global::UpdateHomeServerRequest();
      }
      UpdateHomeServerRequest.MergeFrom(other.UpdateHomeServerRequest);
    }
    if (other.updateHomeServerResponse_ != null) {
      if (updateHomeServerResponse_ == null) {
        UpdateHomeServerResponse = new global::UpdateHomeServerResponse();
      }
      UpdateHomeServerResponse.MergeFrom(other.UpdateHomeServerResponse);
    }
    if (other.deleteHomeServerRequest_ != null) {
      if (deleteHomeServerRequest_ == null) {
        DeleteHomeServerRequest = new global::DeleteHomeServerRequest();
      }
      DeleteHomeServerRequest.MergeFrom(other.DeleteHomeServerRequest);
    }
    if (other.deleteHomeServerResponse_ != null) {
      if (deleteHomeServerResponse_ == null) {
        DeleteHomeServerResponse = new global::DeleteHomeServerResponse();
      }
      DeleteHomeServerResponse.MergeFrom(other.DeleteHomeServerResponse);
    }
    if (other.getCitizenInfoServerRequest_ != null) {
      if (getCitizenInfoServerRequest_ == null) {
        GetCitizenInfoServerRequest = new global::GetCitizenInfoServerRequest();
      }
      GetCitizenInfoServerRequest.MergeFrom(other.GetCitizenInfoServerRequest);
    }
    if (other.getCitizenInfoServerResponse_ != null) {
      if (getCitizenInfoServerResponse_ == null) {
        GetCitizenInfoServerResponse = new global::GetCitizenInfoServerResponse();
      }
      GetCitizenInfoServerResponse.MergeFrom(other.GetCitizenInfoServerResponse);
    }
    if (other.setCitizenServerRequest_ != null) {
      if (setCitizenServerRequest_ == null) {
        SetCitizenServerRequest = new global::SetCitizenServerRequest();
      }
      SetCitizenServerRequest.MergeFrom(other.SetCitizenServerRequest);
    }
    if (other.setCitizenServerResponse_ != null) {
      if (setCitizenServerResponse_ == null) {
        SetCitizenServerResponse = new global::SetCitizenServerResponse();
      }
      SetCitizenServerResponse.MergeFrom(other.SetCitizenServerResponse);
    }
    if (other.setGpsForHomeServerRequest_ != null) {
      if (setGpsForHomeServerRequest_ == null) {
        SetGpsForHomeServerRequest = new global::SetGpsForHomeServerRequest();
      }
      SetGpsForHomeServerRequest.MergeFrom(other.SetGpsForHomeServerRequest);
    }
    if (other.setGpsForHomeServerResponse_ != null) {
      if (setGpsForHomeServerResponse_ == null) {
        SetGpsForHomeServerResponse = new global::SetGpsForHomeServerResponse();
      }
      SetGpsForHomeServerResponse.MergeFrom(other.SetGpsForHomeServerResponse);
    }
    if (other.getHomeInfoServerRequest_ != null) {
      if (getHomeInfoServerRequest_ == null) {
        GetHomeInfoServerRequest = new global::GetHomeInfoServerRequest();
      }
      GetHomeInfoServerRequest.MergeFrom(other.GetHomeInfoServerRequest);
    }
    if (other.getHomeInfoServerResponse_ != null) {
      if (getHomeInfoServerResponse_ == null) {
        GetHomeInfoServerResponse = new global::GetHomeInfoServerResponse();
      }
      GetHomeInfoServerResponse.MergeFrom(other.GetHomeInfoServerResponse);
    }
    if (other.getHomesByPhoneServerRequest_ != null) {
      if (getHomesByPhoneServerRequest_ == null) {
        GetHomesByPhoneServerRequest = new global::GetHomesByPhoneServerRequest();
      }
      GetHomesByPhoneServerRequest.MergeFrom(other.GetHomesByPhoneServerRequest);
    }
    if (other.getHomesByPhoneServerResponse_ != null) {
      if (getHomesByPhoneServerResponse_ == null) {
        GetHomesByPhoneServerResponse = new global::GetHomesByPhoneServerResponse();
      }
      GetHomesByPhoneServerResponse.MergeFrom(other.GetHomesByPhoneServerResponse);
    }
    if (other.uploadhomeBackgroundServerRequest_ != null) {
      if (uploadhomeBackgroundServerRequest_ == null) {
        UploadhomeBackgroundServerRequest = new global::UploadHomeBackgroundServerRequest();
      }
      UploadhomeBackgroundServerRequest.MergeFrom(other.UploadhomeBackgroundServerRequest);
    }
    if (other.uploadHomeBackgroundServerResponse_ != null) {
      if (uploadHomeBackgroundServerResponse_ == null) {
        UploadHomeBackgroundServerResponse = new global::UploadHomeBackgroundServerResponse();
      }
      UploadHomeBackgroundServerResponse.MergeFrom(other.UploadHomeBackgroundServerResponse);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (getHomesServerRequest_ == null) {
            GetHomesServerRequest = new global::GetHomesServerRequest();
          }
          input.ReadMessage(GetHomesServerRequest);
          break;
        }
        case 18: {
          if (getHomesServerResponse_ == null) {
            GetHomesServerResponse = new global::GetHomesServerResponse();
          }
          input.ReadMessage(GetHomesServerResponse);
          break;
        }
        case 26: {
          if (addHomeServerRequest_ == null) {
            AddHomeServerRequest = new global::AddHomeServerRequest();
          }
          input.ReadMessage(AddHomeServerRequest);
          break;
        }
        case 34: {
          if (addHomeServerResponse_ == null) {
            AddHomeServerResponse = new global::AddHomeServerResponse();
          }
          input.ReadMessage(AddHomeServerResponse);
          break;
        }
        case 42: {
          if (updateHomeServerRequest_ == null) {
            UpdateHomeServerRequest = new global::UpdateHomeServerRequest();
          }
          input.ReadMessage(UpdateHomeServerRequest);
          break;
        }
        case 50: {
          if (updateHomeServerResponse_ == null) {
            UpdateHomeServerResponse = new global::UpdateHomeServerResponse();
          }
          input.ReadMessage(UpdateHomeServerResponse);
          break;
        }
        case 58: {
          if (deleteHomeServerRequest_ == null) {
            DeleteHomeServerRequest = new global::DeleteHomeServerRequest();
          }
          input.ReadMessage(DeleteHomeServerRequest);
          break;
        }
        case 66: {
          if (deleteHomeServerResponse_ == null) {
            DeleteHomeServerResponse = new global::DeleteHomeServerResponse();
          }
          input.ReadMessage(DeleteHomeServerResponse);
          break;
        }
        case 74: {
          if (getCitizenInfoServerRequest_ == null) {
            GetCitizenInfoServerRequest = new global::GetCitizenInfoServerRequest();
          }
          input.ReadMessage(GetCitizenInfoServerRequest);
          break;
        }
        case 82: {
          if (getCitizenInfoServerResponse_ == null) {
            GetCitizenInfoServerResponse = new global::GetCitizenInfoServerResponse();
          }
          input.ReadMessage(GetCitizenInfoServerResponse);
          break;
        }
        case 90: {
          if (setCitizenServerRequest_ == null) {
            SetCitizenServerRequest = new global::SetCitizenServerRequest();
          }
          input.ReadMessage(SetCitizenServerRequest);
          break;
        }
        case 98: {
          if (setCitizenServerResponse_ == null) {
            SetCitizenServerResponse = new global::SetCitizenServerResponse();
          }
          input.ReadMessage(SetCitizenServerResponse);
          break;
        }
        case 106: {
          if (setGpsForHomeServerRequest_ == null) {
            SetGpsForHomeServerRequest = new global::SetGpsForHomeServerRequest();
          }
          input.ReadMessage(SetGpsForHomeServerRequest);
          break;
        }
        case 114: {
          if (setGpsForHomeServerResponse_ == null) {
            SetGpsForHomeServerResponse = new global::SetGpsForHomeServerResponse();
          }
          input.ReadMessage(SetGpsForHomeServerResponse);
          break;
        }
        case 122: {
          if (getHomeInfoServerRequest_ == null) {
            GetHomeInfoServerRequest = new global::GetHomeInfoServerRequest();
          }
          input.ReadMessage(GetHomeInfoServerRequest);
          break;
        }
        case 130: {
          if (getHomeInfoServerResponse_ == null) {
            GetHomeInfoServerResponse = new global::GetHomeInfoServerResponse();
          }
          input.ReadMessage(GetHomeInfoServerResponse);
          break;
        }
        case 138: {
          if (getHomesByPhoneServerRequest_ == null) {
            GetHomesByPhoneServerRequest = new global::GetHomesByPhoneServerRequest();
          }
          input.ReadMessage(GetHomesByPhoneServerRequest);
          break;
        }
        case 146: {
          if (getHomesByPhoneServerResponse_ == null) {
            GetHomesByPhoneServerResponse = new global::GetHomesByPhoneServerResponse();
          }
          input.ReadMessage(GetHomesByPhoneServerResponse);
          break;
        }
        case 154: {
          if (uploadhomeBackgroundServerRequest_ == null) {
            UploadhomeBackgroundServerRequest = new global::UploadHomeBackgroundServerRequest();
          }
          input.ReadMessage(UploadhomeBackgroundServerRequest);
          break;
        }
        case 162: {
          if (uploadHomeBackgroundServerResponse_ == null) {
            UploadHomeBackgroundServerResponse = new global::UploadHomeBackgroundServerResponse();
          }
          input.ReadMessage(UploadHomeBackgroundServerResponse);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phòng 
/// </summary>
public sealed partial class RoomServerMessage : pb::IMessage<RoomServerMessage> {
  private static readonly pb::MessageParser<RoomServerMessage> _parser = new pb::MessageParser<RoomServerMessage>(() => new RoomServerMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RoomServerMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[289]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RoomServerMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RoomServerMessage(RoomServerMessage other) : this() {
    getRoomsServerRequest_ = other.getRoomsServerRequest_ != null ? other.getRoomsServerRequest_.Clone() : null;
    getRoomsServerResponse_ = other.getRoomsServerResponse_ != null ? other.getRoomsServerResponse_.Clone() : null;
    addRoomServerRequest_ = other.addRoomServerRequest_ != null ? other.addRoomServerRequest_.Clone() : null;
    addRoomServerResponse_ = other.addRoomServerResponse_ != null ? other.addRoomServerResponse_.Clone() : null;
    deleteRoomServerRequest_ = other.deleteRoomServerRequest_ != null ? other.deleteRoomServerRequest_.Clone() : null;
    deleteRoomServerResponse_ = other.deleteRoomServerResponse_ != null ? other.deleteRoomServerResponse_.Clone() : null;
    updateRoomServerRequest_ = other.updateRoomServerRequest_ != null ? other.updateRoomServerRequest_.Clone() : null;
    updateRoomServerResponse_ = other.updateRoomServerResponse_ != null ? other.updateRoomServerResponse_.Clone() : null;
    uploadRoomBackgroundServerRequest_ = other.uploadRoomBackgroundServerRequest_ != null ? other.uploadRoomBackgroundServerRequest_.Clone() : null;
    uploadRoomBackgroundServerResponse_ = other.uploadRoomBackgroundServerResponse_ != null ? other.uploadRoomBackgroundServerResponse_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RoomServerMessage Clone() {
    return new RoomServerMessage(this);
  }

  /// <summary>Field number for the "getRoomsServerRequest" field.</summary>
  public const int GetRoomsServerRequestFieldNumber = 1;
  private global::GetRoomsServerRequest getRoomsServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetRoomsServerRequest GetRoomsServerRequest {
    get { return getRoomsServerRequest_; }
    set {
      getRoomsServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getRoomsServerResponse" field.</summary>
  public const int GetRoomsServerResponseFieldNumber = 2;
  private global::GetRoomsServerResponse getRoomsServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetRoomsServerResponse GetRoomsServerResponse {
    get { return getRoomsServerResponse_; }
    set {
      getRoomsServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "addRoomServerRequest" field.</summary>
  public const int AddRoomServerRequestFieldNumber = 3;
  private global::AddRoomServerRequest addRoomServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AddRoomServerRequest AddRoomServerRequest {
    get { return addRoomServerRequest_; }
    set {
      addRoomServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "addRoomServerResponse" field.</summary>
  public const int AddRoomServerResponseFieldNumber = 4;
  private global::AddRoomServerResponse addRoomServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AddRoomServerResponse AddRoomServerResponse {
    get { return addRoomServerResponse_; }
    set {
      addRoomServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "deleteRoomServerRequest" field.</summary>
  public const int DeleteRoomServerRequestFieldNumber = 5;
  private global::DeleteRoomServerRequest deleteRoomServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DeleteRoomServerRequest DeleteRoomServerRequest {
    get { return deleteRoomServerRequest_; }
    set {
      deleteRoomServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "deleteRoomServerResponse" field.</summary>
  public const int DeleteRoomServerResponseFieldNumber = 6;
  private global::DeleteRoomServerResponse deleteRoomServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DeleteRoomServerResponse DeleteRoomServerResponse {
    get { return deleteRoomServerResponse_; }
    set {
      deleteRoomServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "updateRoomServerRequest" field.</summary>
  public const int UpdateRoomServerRequestFieldNumber = 7;
  private global::UpdateRoomServerRequest updateRoomServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateRoomServerRequest UpdateRoomServerRequest {
    get { return updateRoomServerRequest_; }
    set {
      updateRoomServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "updateRoomServerResponse" field.</summary>
  public const int UpdateRoomServerResponseFieldNumber = 8;
  private global::UpdateRoomServerResponse updateRoomServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateRoomServerResponse UpdateRoomServerResponse {
    get { return updateRoomServerResponse_; }
    set {
      updateRoomServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "uploadRoomBackgroundServerRequest" field.</summary>
  public const int UploadRoomBackgroundServerRequestFieldNumber = 9;
  private global::UploadRoomBackgroundServerRequest uploadRoomBackgroundServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UploadRoomBackgroundServerRequest UploadRoomBackgroundServerRequest {
    get { return uploadRoomBackgroundServerRequest_; }
    set {
      uploadRoomBackgroundServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "uploadRoomBackgroundServerResponse" field.</summary>
  public const int UploadRoomBackgroundServerResponseFieldNumber = 10;
  private global::UploadRoomBackgroundServerResponse uploadRoomBackgroundServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UploadRoomBackgroundServerResponse UploadRoomBackgroundServerResponse {
    get { return uploadRoomBackgroundServerResponse_; }
    set {
      uploadRoomBackgroundServerResponse_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RoomServerMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RoomServerMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(GetRoomsServerRequest, other.GetRoomsServerRequest)) return false;
    if (!object.Equals(GetRoomsServerResponse, other.GetRoomsServerResponse)) return false;
    if (!object.Equals(AddRoomServerRequest, other.AddRoomServerRequest)) return false;
    if (!object.Equals(AddRoomServerResponse, other.AddRoomServerResponse)) return false;
    if (!object.Equals(DeleteRoomServerRequest, other.DeleteRoomServerRequest)) return false;
    if (!object.Equals(DeleteRoomServerResponse, other.DeleteRoomServerResponse)) return false;
    if (!object.Equals(UpdateRoomServerRequest, other.UpdateRoomServerRequest)) return false;
    if (!object.Equals(UpdateRoomServerResponse, other.UpdateRoomServerResponse)) return false;
    if (!object.Equals(UploadRoomBackgroundServerRequest, other.UploadRoomBackgroundServerRequest)) return false;
    if (!object.Equals(UploadRoomBackgroundServerResponse, other.UploadRoomBackgroundServerResponse)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (getRoomsServerRequest_ != null) hash ^= GetRoomsServerRequest.GetHashCode();
    if (getRoomsServerResponse_ != null) hash ^= GetRoomsServerResponse.GetHashCode();
    if (addRoomServerRequest_ != null) hash ^= AddRoomServerRequest.GetHashCode();
    if (addRoomServerResponse_ != null) hash ^= AddRoomServerResponse.GetHashCode();
    if (deleteRoomServerRequest_ != null) hash ^= DeleteRoomServerRequest.GetHashCode();
    if (deleteRoomServerResponse_ != null) hash ^= DeleteRoomServerResponse.GetHashCode();
    if (updateRoomServerRequest_ != null) hash ^= UpdateRoomServerRequest.GetHashCode();
    if (updateRoomServerResponse_ != null) hash ^= UpdateRoomServerResponse.GetHashCode();
    if (uploadRoomBackgroundServerRequest_ != null) hash ^= UploadRoomBackgroundServerRequest.GetHashCode();
    if (uploadRoomBackgroundServerResponse_ != null) hash ^= UploadRoomBackgroundServerResponse.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (getRoomsServerRequest_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(GetRoomsServerRequest);
    }
    if (getRoomsServerResponse_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(GetRoomsServerResponse);
    }
    if (addRoomServerRequest_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(AddRoomServerRequest);
    }
    if (addRoomServerResponse_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(AddRoomServerResponse);
    }
    if (deleteRoomServerRequest_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(DeleteRoomServerRequest);
    }
    if (deleteRoomServerResponse_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(DeleteRoomServerResponse);
    }
    if (updateRoomServerRequest_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(UpdateRoomServerRequest);
    }
    if (updateRoomServerResponse_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(UpdateRoomServerResponse);
    }
    if (uploadRoomBackgroundServerRequest_ != null) {
      output.WriteRawTag(74);
      output.WriteMessage(UploadRoomBackgroundServerRequest);
    }
    if (uploadRoomBackgroundServerResponse_ != null) {
      output.WriteRawTag(82);
      output.WriteMessage(UploadRoomBackgroundServerResponse);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (getRoomsServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetRoomsServerRequest);
    }
    if (getRoomsServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetRoomsServerResponse);
    }
    if (addRoomServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddRoomServerRequest);
    }
    if (addRoomServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddRoomServerResponse);
    }
    if (deleteRoomServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeleteRoomServerRequest);
    }
    if (deleteRoomServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeleteRoomServerResponse);
    }
    if (updateRoomServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateRoomServerRequest);
    }
    if (updateRoomServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateRoomServerResponse);
    }
    if (uploadRoomBackgroundServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UploadRoomBackgroundServerRequest);
    }
    if (uploadRoomBackgroundServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UploadRoomBackgroundServerResponse);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RoomServerMessage other) {
    if (other == null) {
      return;
    }
    if (other.getRoomsServerRequest_ != null) {
      if (getRoomsServerRequest_ == null) {
        GetRoomsServerRequest = new global::GetRoomsServerRequest();
      }
      GetRoomsServerRequest.MergeFrom(other.GetRoomsServerRequest);
    }
    if (other.getRoomsServerResponse_ != null) {
      if (getRoomsServerResponse_ == null) {
        GetRoomsServerResponse = new global::GetRoomsServerResponse();
      }
      GetRoomsServerResponse.MergeFrom(other.GetRoomsServerResponse);
    }
    if (other.addRoomServerRequest_ != null) {
      if (addRoomServerRequest_ == null) {
        AddRoomServerRequest = new global::AddRoomServerRequest();
      }
      AddRoomServerRequest.MergeFrom(other.AddRoomServerRequest);
    }
    if (other.addRoomServerResponse_ != null) {
      if (addRoomServerResponse_ == null) {
        AddRoomServerResponse = new global::AddRoomServerResponse();
      }
      AddRoomServerResponse.MergeFrom(other.AddRoomServerResponse);
    }
    if (other.deleteRoomServerRequest_ != null) {
      if (deleteRoomServerRequest_ == null) {
        DeleteRoomServerRequest = new global::DeleteRoomServerRequest();
      }
      DeleteRoomServerRequest.MergeFrom(other.DeleteRoomServerRequest);
    }
    if (other.deleteRoomServerResponse_ != null) {
      if (deleteRoomServerResponse_ == null) {
        DeleteRoomServerResponse = new global::DeleteRoomServerResponse();
      }
      DeleteRoomServerResponse.MergeFrom(other.DeleteRoomServerResponse);
    }
    if (other.updateRoomServerRequest_ != null) {
      if (updateRoomServerRequest_ == null) {
        UpdateRoomServerRequest = new global::UpdateRoomServerRequest();
      }
      UpdateRoomServerRequest.MergeFrom(other.UpdateRoomServerRequest);
    }
    if (other.updateRoomServerResponse_ != null) {
      if (updateRoomServerResponse_ == null) {
        UpdateRoomServerResponse = new global::UpdateRoomServerResponse();
      }
      UpdateRoomServerResponse.MergeFrom(other.UpdateRoomServerResponse);
    }
    if (other.uploadRoomBackgroundServerRequest_ != null) {
      if (uploadRoomBackgroundServerRequest_ == null) {
        UploadRoomBackgroundServerRequest = new global::UploadRoomBackgroundServerRequest();
      }
      UploadRoomBackgroundServerRequest.MergeFrom(other.UploadRoomBackgroundServerRequest);
    }
    if (other.uploadRoomBackgroundServerResponse_ != null) {
      if (uploadRoomBackgroundServerResponse_ == null) {
        UploadRoomBackgroundServerResponse = new global::UploadRoomBackgroundServerResponse();
      }
      UploadRoomBackgroundServerResponse.MergeFrom(other.UploadRoomBackgroundServerResponse);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (getRoomsServerRequest_ == null) {
            GetRoomsServerRequest = new global::GetRoomsServerRequest();
          }
          input.ReadMessage(GetRoomsServerRequest);
          break;
        }
        case 18: {
          if (getRoomsServerResponse_ == null) {
            GetRoomsServerResponse = new global::GetRoomsServerResponse();
          }
          input.ReadMessage(GetRoomsServerResponse);
          break;
        }
        case 26: {
          if (addRoomServerRequest_ == null) {
            AddRoomServerRequest = new global::AddRoomServerRequest();
          }
          input.ReadMessage(AddRoomServerRequest);
          break;
        }
        case 34: {
          if (addRoomServerResponse_ == null) {
            AddRoomServerResponse = new global::AddRoomServerResponse();
          }
          input.ReadMessage(AddRoomServerResponse);
          break;
        }
        case 42: {
          if (deleteRoomServerRequest_ == null) {
            DeleteRoomServerRequest = new global::DeleteRoomServerRequest();
          }
          input.ReadMessage(DeleteRoomServerRequest);
          break;
        }
        case 50: {
          if (deleteRoomServerResponse_ == null) {
            DeleteRoomServerResponse = new global::DeleteRoomServerResponse();
          }
          input.ReadMessage(DeleteRoomServerResponse);
          break;
        }
        case 58: {
          if (updateRoomServerRequest_ == null) {
            UpdateRoomServerRequest = new global::UpdateRoomServerRequest();
          }
          input.ReadMessage(UpdateRoomServerRequest);
          break;
        }
        case 66: {
          if (updateRoomServerResponse_ == null) {
            UpdateRoomServerResponse = new global::UpdateRoomServerResponse();
          }
          input.ReadMessage(UpdateRoomServerResponse);
          break;
        }
        case 74: {
          if (uploadRoomBackgroundServerRequest_ == null) {
            UploadRoomBackgroundServerRequest = new global::UploadRoomBackgroundServerRequest();
          }
          input.ReadMessage(UploadRoomBackgroundServerRequest);
          break;
        }
        case 82: {
          if (uploadRoomBackgroundServerResponse_ == null) {
            UploadRoomBackgroundServerResponse = new global::UploadRoomBackgroundServerResponse();
          }
          input.ReadMessage(UploadRoomBackgroundServerResponse);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Dự án 
/// </summary>
public sealed partial class ProjectServerMessage : pb::IMessage<ProjectServerMessage> {
  private static readonly pb::MessageParser<ProjectServerMessage> _parser = new pb::MessageParser<ProjectServerMessage>(() => new ProjectServerMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ProjectServerMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[290]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ProjectServerMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ProjectServerMessage(ProjectServerMessage other) : this() {
    getProjectsServerRequest_ = other.getProjectsServerRequest_ != null ? other.getProjectsServerRequest_.Clone() : null;
    getProjectsServerResponse_ = other.getProjectsServerResponse_ != null ? other.getProjectsServerResponse_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ProjectServerMessage Clone() {
    return new ProjectServerMessage(this);
  }

  /// <summary>Field number for the "getProjectsServerRequest" field.</summary>
  public const int GetProjectsServerRequestFieldNumber = 1;
  private global::GetProjectsServerRequest getProjectsServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetProjectsServerRequest GetProjectsServerRequest {
    get { return getProjectsServerRequest_; }
    set {
      getProjectsServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getProjectsServerResponse" field.</summary>
  public const int GetProjectsServerResponseFieldNumber = 2;
  private global::GetProjectsServerResponse getProjectsServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetProjectsServerResponse GetProjectsServerResponse {
    get { return getProjectsServerResponse_; }
    set {
      getProjectsServerResponse_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ProjectServerMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ProjectServerMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(GetProjectsServerRequest, other.GetProjectsServerRequest)) return false;
    if (!object.Equals(GetProjectsServerResponse, other.GetProjectsServerResponse)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (getProjectsServerRequest_ != null) hash ^= GetProjectsServerRequest.GetHashCode();
    if (getProjectsServerResponse_ != null) hash ^= GetProjectsServerResponse.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (getProjectsServerRequest_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(GetProjectsServerRequest);
    }
    if (getProjectsServerResponse_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(GetProjectsServerResponse);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (getProjectsServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetProjectsServerRequest);
    }
    if (getProjectsServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetProjectsServerResponse);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ProjectServerMessage other) {
    if (other == null) {
      return;
    }
    if (other.getProjectsServerRequest_ != null) {
      if (getProjectsServerRequest_ == null) {
        GetProjectsServerRequest = new global::GetProjectsServerRequest();
      }
      GetProjectsServerRequest.MergeFrom(other.GetProjectsServerRequest);
    }
    if (other.getProjectsServerResponse_ != null) {
      if (getProjectsServerResponse_ == null) {
        GetProjectsServerResponse = new global::GetProjectsServerResponse();
      }
      GetProjectsServerResponse.MergeFrom(other.GetProjectsServerResponse);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (getProjectsServerRequest_ == null) {
            GetProjectsServerRequest = new global::GetProjectsServerRequest();
          }
          input.ReadMessage(GetProjectsServerRequest);
          break;
        }
        case 18: {
          if (getProjectsServerResponse_ == null) {
            GetProjectsServerResponse = new global::GetProjectsServerResponse();
          }
          input.ReadMessage(GetProjectsServerResponse);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Tòa 
/// </summary>
public sealed partial class BuildingServerMessage : pb::IMessage<BuildingServerMessage> {
  private static readonly pb::MessageParser<BuildingServerMessage> _parser = new pb::MessageParser<BuildingServerMessage>(() => new BuildingServerMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<BuildingServerMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[291]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BuildingServerMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BuildingServerMessage(BuildingServerMessage other) : this() {
    getBuildingsServerRequest_ = other.getBuildingsServerRequest_ != null ? other.getBuildingsServerRequest_.Clone() : null;
    getBuildingsServerResponse_ = other.getBuildingsServerResponse_ != null ? other.getBuildingsServerResponse_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BuildingServerMessage Clone() {
    return new BuildingServerMessage(this);
  }

  /// <summary>Field number for the "getBuildingsServerRequest" field.</summary>
  public const int GetBuildingsServerRequestFieldNumber = 1;
  private global::GetBuildingsServerRequest getBuildingsServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetBuildingsServerRequest GetBuildingsServerRequest {
    get { return getBuildingsServerRequest_; }
    set {
      getBuildingsServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getBuildingsServerResponse" field.</summary>
  public const int GetBuildingsServerResponseFieldNumber = 2;
  private global::GetBuildingsServerResponse getBuildingsServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetBuildingsServerResponse GetBuildingsServerResponse {
    get { return getBuildingsServerResponse_; }
    set {
      getBuildingsServerResponse_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as BuildingServerMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(BuildingServerMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(GetBuildingsServerRequest, other.GetBuildingsServerRequest)) return false;
    if (!object.Equals(GetBuildingsServerResponse, other.GetBuildingsServerResponse)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (getBuildingsServerRequest_ != null) hash ^= GetBuildingsServerRequest.GetHashCode();
    if (getBuildingsServerResponse_ != null) hash ^= GetBuildingsServerResponse.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (getBuildingsServerRequest_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(GetBuildingsServerRequest);
    }
    if (getBuildingsServerResponse_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(GetBuildingsServerResponse);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (getBuildingsServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetBuildingsServerRequest);
    }
    if (getBuildingsServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetBuildingsServerResponse);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(BuildingServerMessage other) {
    if (other == null) {
      return;
    }
    if (other.getBuildingsServerRequest_ != null) {
      if (getBuildingsServerRequest_ == null) {
        GetBuildingsServerRequest = new global::GetBuildingsServerRequest();
      }
      GetBuildingsServerRequest.MergeFrom(other.GetBuildingsServerRequest);
    }
    if (other.getBuildingsServerResponse_ != null) {
      if (getBuildingsServerResponse_ == null) {
        GetBuildingsServerResponse = new global::GetBuildingsServerResponse();
      }
      GetBuildingsServerResponse.MergeFrom(other.GetBuildingsServerResponse);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (getBuildingsServerRequest_ == null) {
            GetBuildingsServerRequest = new global::GetBuildingsServerRequest();
          }
          input.ReadMessage(GetBuildingsServerRequest);
          break;
        }
        case 18: {
          if (getBuildingsServerResponse_ == null) {
            GetBuildingsServerResponse = new global::GetBuildingsServerResponse();
          }
          input.ReadMessage(GetBuildingsServerResponse);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Tầng 
/// </summary>
public sealed partial class FloorServerMessage : pb::IMessage<FloorServerMessage> {
  private static readonly pb::MessageParser<FloorServerMessage> _parser = new pb::MessageParser<FloorServerMessage>(() => new FloorServerMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FloorServerMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[292]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FloorServerMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FloorServerMessage(FloorServerMessage other) : this() {
    getFloorsServerRequest_ = other.getFloorsServerRequest_ != null ? other.getFloorsServerRequest_.Clone() : null;
    getFloorsServerResponse_ = other.getFloorsServerResponse_ != null ? other.getFloorsServerResponse_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FloorServerMessage Clone() {
    return new FloorServerMessage(this);
  }

  /// <summary>Field number for the "getFloorsServerRequest" field.</summary>
  public const int GetFloorsServerRequestFieldNumber = 1;
  private global::GetFloorsServerRequest getFloorsServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetFloorsServerRequest GetFloorsServerRequest {
    get { return getFloorsServerRequest_; }
    set {
      getFloorsServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getFloorsServerResponse" field.</summary>
  public const int GetFloorsServerResponseFieldNumber = 2;
  private global::GetFloorsServerResponse getFloorsServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetFloorsServerResponse GetFloorsServerResponse {
    get { return getFloorsServerResponse_; }
    set {
      getFloorsServerResponse_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FloorServerMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FloorServerMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(GetFloorsServerRequest, other.GetFloorsServerRequest)) return false;
    if (!object.Equals(GetFloorsServerResponse, other.GetFloorsServerResponse)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (getFloorsServerRequest_ != null) hash ^= GetFloorsServerRequest.GetHashCode();
    if (getFloorsServerResponse_ != null) hash ^= GetFloorsServerResponse.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (getFloorsServerRequest_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(GetFloorsServerRequest);
    }
    if (getFloorsServerResponse_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(GetFloorsServerResponse);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (getFloorsServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetFloorsServerRequest);
    }
    if (getFloorsServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetFloorsServerResponse);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FloorServerMessage other) {
    if (other == null) {
      return;
    }
    if (other.getFloorsServerRequest_ != null) {
      if (getFloorsServerRequest_ == null) {
        GetFloorsServerRequest = new global::GetFloorsServerRequest();
      }
      GetFloorsServerRequest.MergeFrom(other.GetFloorsServerRequest);
    }
    if (other.getFloorsServerResponse_ != null) {
      if (getFloorsServerResponse_ == null) {
        GetFloorsServerResponse = new global::GetFloorsServerResponse();
      }
      GetFloorsServerResponse.MergeFrom(other.GetFloorsServerResponse);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (getFloorsServerRequest_ == null) {
            GetFloorsServerRequest = new global::GetFloorsServerRequest();
          }
          input.ReadMessage(GetFloorsServerRequest);
          break;
        }
        case 18: {
          if (getFloorsServerResponse_ == null) {
            GetFloorsServerResponse = new global::GetFloorsServerResponse();
          }
          input.ReadMessage(GetFloorsServerResponse);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Căn hộ 
/// </summary>
public sealed partial class ApartmentServerMessage : pb::IMessage<ApartmentServerMessage> {
  private static readonly pb::MessageParser<ApartmentServerMessage> _parser = new pb::MessageParser<ApartmentServerMessage>(() => new ApartmentServerMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ApartmentServerMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[293]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ApartmentServerMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ApartmentServerMessage(ApartmentServerMessage other) : this() {
    getApartmentsServerRequest_ = other.getApartmentsServerRequest_ != null ? other.getApartmentsServerRequest_.Clone() : null;
    getApartmentsServerResponse_ = other.getApartmentsServerResponse_ != null ? other.getApartmentsServerResponse_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ApartmentServerMessage Clone() {
    return new ApartmentServerMessage(this);
  }

  /// <summary>Field number for the "getApartmentsServerRequest" field.</summary>
  public const int GetApartmentsServerRequestFieldNumber = 1;
  private global::GetApartmentsServerRequest getApartmentsServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetApartmentsServerRequest GetApartmentsServerRequest {
    get { return getApartmentsServerRequest_; }
    set {
      getApartmentsServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getApartmentsServerResponse" field.</summary>
  public const int GetApartmentsServerResponseFieldNumber = 2;
  private global::GetApartmentsServerResponse getApartmentsServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetApartmentsServerResponse GetApartmentsServerResponse {
    get { return getApartmentsServerResponse_; }
    set {
      getApartmentsServerResponse_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ApartmentServerMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ApartmentServerMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(GetApartmentsServerRequest, other.GetApartmentsServerRequest)) return false;
    if (!object.Equals(GetApartmentsServerResponse, other.GetApartmentsServerResponse)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (getApartmentsServerRequest_ != null) hash ^= GetApartmentsServerRequest.GetHashCode();
    if (getApartmentsServerResponse_ != null) hash ^= GetApartmentsServerResponse.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (getApartmentsServerRequest_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(GetApartmentsServerRequest);
    }
    if (getApartmentsServerResponse_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(GetApartmentsServerResponse);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (getApartmentsServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetApartmentsServerRequest);
    }
    if (getApartmentsServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetApartmentsServerResponse);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ApartmentServerMessage other) {
    if (other == null) {
      return;
    }
    if (other.getApartmentsServerRequest_ != null) {
      if (getApartmentsServerRequest_ == null) {
        GetApartmentsServerRequest = new global::GetApartmentsServerRequest();
      }
      GetApartmentsServerRequest.MergeFrom(other.GetApartmentsServerRequest);
    }
    if (other.getApartmentsServerResponse_ != null) {
      if (getApartmentsServerResponse_ == null) {
        GetApartmentsServerResponse = new global::GetApartmentsServerResponse();
      }
      GetApartmentsServerResponse.MergeFrom(other.GetApartmentsServerResponse);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (getApartmentsServerRequest_ == null) {
            GetApartmentsServerRequest = new global::GetApartmentsServerRequest();
          }
          input.ReadMessage(GetApartmentsServerRequest);
          break;
        }
        case 18: {
          if (getApartmentsServerResponse_ == null) {
            GetApartmentsServerResponse = new global::GetApartmentsServerResponse();
          }
          input.ReadMessage(GetApartmentsServerResponse);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Thành viên 
/// </summary>
public sealed partial class UserHomeServerMessage : pb::IMessage<UserHomeServerMessage> {
  private static readonly pb::MessageParser<UserHomeServerMessage> _parser = new pb::MessageParser<UserHomeServerMessage>(() => new UserHomeServerMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UserHomeServerMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[294]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UserHomeServerMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UserHomeServerMessage(UserHomeServerMessage other) : this() {
    addUserHomeServerRequest_ = other.addUserHomeServerRequest_ != null ? other.addUserHomeServerRequest_.Clone() : null;
    addUserHomeServerResponse_ = other.addUserHomeServerResponse_ != null ? other.addUserHomeServerResponse_.Clone() : null;
    deleteUserHomeServerRequest_ = other.deleteUserHomeServerRequest_ != null ? other.deleteUserHomeServerRequest_.Clone() : null;
    deleteUserHomeServerResponse_ = other.deleteUserHomeServerResponse_ != null ? other.deleteUserHomeServerResponse_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UserHomeServerMessage Clone() {
    return new UserHomeServerMessage(this);
  }

  /// <summary>Field number for the "addUserHomeServerRequest" field.</summary>
  public const int AddUserHomeServerRequestFieldNumber = 1;
  private global::AddUserHomeServerRequest addUserHomeServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AddUserHomeServerRequest AddUserHomeServerRequest {
    get { return addUserHomeServerRequest_; }
    set {
      addUserHomeServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "addUserHomeServerResponse" field.</summary>
  public const int AddUserHomeServerResponseFieldNumber = 2;
  private global::AddUserHomeServerResponse addUserHomeServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AddUserHomeServerResponse AddUserHomeServerResponse {
    get { return addUserHomeServerResponse_; }
    set {
      addUserHomeServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "deleteUserHomeServerRequest" field.</summary>
  public const int DeleteUserHomeServerRequestFieldNumber = 3;
  private global::DeleteUserHomeServerRequest deleteUserHomeServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DeleteUserHomeServerRequest DeleteUserHomeServerRequest {
    get { return deleteUserHomeServerRequest_; }
    set {
      deleteUserHomeServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "deleteUserHomeServerResponse" field.</summary>
  public const int DeleteUserHomeServerResponseFieldNumber = 4;
  private global::DeleteUserHomeServerResponse deleteUserHomeServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DeleteUserHomeServerResponse DeleteUserHomeServerResponse {
    get { return deleteUserHomeServerResponse_; }
    set {
      deleteUserHomeServerResponse_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UserHomeServerMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UserHomeServerMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(AddUserHomeServerRequest, other.AddUserHomeServerRequest)) return false;
    if (!object.Equals(AddUserHomeServerResponse, other.AddUserHomeServerResponse)) return false;
    if (!object.Equals(DeleteUserHomeServerRequest, other.DeleteUserHomeServerRequest)) return false;
    if (!object.Equals(DeleteUserHomeServerResponse, other.DeleteUserHomeServerResponse)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (addUserHomeServerRequest_ != null) hash ^= AddUserHomeServerRequest.GetHashCode();
    if (addUserHomeServerResponse_ != null) hash ^= AddUserHomeServerResponse.GetHashCode();
    if (deleteUserHomeServerRequest_ != null) hash ^= DeleteUserHomeServerRequest.GetHashCode();
    if (deleteUserHomeServerResponse_ != null) hash ^= DeleteUserHomeServerResponse.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (addUserHomeServerRequest_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(AddUserHomeServerRequest);
    }
    if (addUserHomeServerResponse_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(AddUserHomeServerResponse);
    }
    if (deleteUserHomeServerRequest_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(DeleteUserHomeServerRequest);
    }
    if (deleteUserHomeServerResponse_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(DeleteUserHomeServerResponse);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (addUserHomeServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddUserHomeServerRequest);
    }
    if (addUserHomeServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddUserHomeServerResponse);
    }
    if (deleteUserHomeServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeleteUserHomeServerRequest);
    }
    if (deleteUserHomeServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeleteUserHomeServerResponse);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UserHomeServerMessage other) {
    if (other == null) {
      return;
    }
    if (other.addUserHomeServerRequest_ != null) {
      if (addUserHomeServerRequest_ == null) {
        AddUserHomeServerRequest = new global::AddUserHomeServerRequest();
      }
      AddUserHomeServerRequest.MergeFrom(other.AddUserHomeServerRequest);
    }
    if (other.addUserHomeServerResponse_ != null) {
      if (addUserHomeServerResponse_ == null) {
        AddUserHomeServerResponse = new global::AddUserHomeServerResponse();
      }
      AddUserHomeServerResponse.MergeFrom(other.AddUserHomeServerResponse);
    }
    if (other.deleteUserHomeServerRequest_ != null) {
      if (deleteUserHomeServerRequest_ == null) {
        DeleteUserHomeServerRequest = new global::DeleteUserHomeServerRequest();
      }
      DeleteUserHomeServerRequest.MergeFrom(other.DeleteUserHomeServerRequest);
    }
    if (other.deleteUserHomeServerResponse_ != null) {
      if (deleteUserHomeServerResponse_ == null) {
        DeleteUserHomeServerResponse = new global::DeleteUserHomeServerResponse();
      }
      DeleteUserHomeServerResponse.MergeFrom(other.DeleteUserHomeServerResponse);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (addUserHomeServerRequest_ == null) {
            AddUserHomeServerRequest = new global::AddUserHomeServerRequest();
          }
          input.ReadMessage(AddUserHomeServerRequest);
          break;
        }
        case 18: {
          if (addUserHomeServerResponse_ == null) {
            AddUserHomeServerResponse = new global::AddUserHomeServerResponse();
          }
          input.ReadMessage(AddUserHomeServerResponse);
          break;
        }
        case 26: {
          if (deleteUserHomeServerRequest_ == null) {
            DeleteUserHomeServerRequest = new global::DeleteUserHomeServerRequest();
          }
          input.ReadMessage(DeleteUserHomeServerRequest);
          break;
        }
        case 34: {
          if (deleteUserHomeServerResponse_ == null) {
            DeleteUserHomeServerResponse = new global::DeleteUserHomeServerResponse();
          }
          input.ReadMessage(DeleteUserHomeServerResponse);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Thông báo 
/// </summary>
public sealed partial class InboxServerMessage : pb::IMessage<InboxServerMessage> {
  private static readonly pb::MessageParser<InboxServerMessage> _parser = new pb::MessageParser<InboxServerMessage>(() => new InboxServerMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InboxServerMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[295]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InboxServerMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InboxServerMessage(InboxServerMessage other) : this() {
    getUnreadServerRequest_ = other.getUnreadServerRequest_ != null ? other.getUnreadServerRequest_.Clone() : null;
    getUnreadServerResponse_ = other.getUnreadServerResponse_ != null ? other.getUnreadServerResponse_.Clone() : null;
    setReadServerRequest_ = other.setReadServerRequest_ != null ? other.setReadServerRequest_.Clone() : null;
    setReadServerResponse_ = other.setReadServerResponse_ != null ? other.setReadServerResponse_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InboxServerMessage Clone() {
    return new InboxServerMessage(this);
  }

  /// <summary>Field number for the "getUnreadServerRequest" field.</summary>
  public const int GetUnreadServerRequestFieldNumber = 1;
  private global::GetUnreadServerRequest getUnreadServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetUnreadServerRequest GetUnreadServerRequest {
    get { return getUnreadServerRequest_; }
    set {
      getUnreadServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getUnreadServerResponse" field.</summary>
  public const int GetUnreadServerResponseFieldNumber = 2;
  private global::GetUnreadServerResponse getUnreadServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetUnreadServerResponse GetUnreadServerResponse {
    get { return getUnreadServerResponse_; }
    set {
      getUnreadServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "setReadServerRequest" field.</summary>
  public const int SetReadServerRequestFieldNumber = 3;
  private global::SetReadServerRequest setReadServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SetReadServerRequest SetReadServerRequest {
    get { return setReadServerRequest_; }
    set {
      setReadServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "setReadServerResponse" field.</summary>
  public const int SetReadServerResponseFieldNumber = 4;
  private global::SetReadServerResponse setReadServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SetReadServerResponse SetReadServerResponse {
    get { return setReadServerResponse_; }
    set {
      setReadServerResponse_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InboxServerMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InboxServerMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(GetUnreadServerRequest, other.GetUnreadServerRequest)) return false;
    if (!object.Equals(GetUnreadServerResponse, other.GetUnreadServerResponse)) return false;
    if (!object.Equals(SetReadServerRequest, other.SetReadServerRequest)) return false;
    if (!object.Equals(SetReadServerResponse, other.SetReadServerResponse)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (getUnreadServerRequest_ != null) hash ^= GetUnreadServerRequest.GetHashCode();
    if (getUnreadServerResponse_ != null) hash ^= GetUnreadServerResponse.GetHashCode();
    if (setReadServerRequest_ != null) hash ^= SetReadServerRequest.GetHashCode();
    if (setReadServerResponse_ != null) hash ^= SetReadServerResponse.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (getUnreadServerRequest_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(GetUnreadServerRequest);
    }
    if (getUnreadServerResponse_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(GetUnreadServerResponse);
    }
    if (setReadServerRequest_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(SetReadServerRequest);
    }
    if (setReadServerResponse_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(SetReadServerResponse);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (getUnreadServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetUnreadServerRequest);
    }
    if (getUnreadServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetUnreadServerResponse);
    }
    if (setReadServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SetReadServerRequest);
    }
    if (setReadServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SetReadServerResponse);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InboxServerMessage other) {
    if (other == null) {
      return;
    }
    if (other.getUnreadServerRequest_ != null) {
      if (getUnreadServerRequest_ == null) {
        GetUnreadServerRequest = new global::GetUnreadServerRequest();
      }
      GetUnreadServerRequest.MergeFrom(other.GetUnreadServerRequest);
    }
    if (other.getUnreadServerResponse_ != null) {
      if (getUnreadServerResponse_ == null) {
        GetUnreadServerResponse = new global::GetUnreadServerResponse();
      }
      GetUnreadServerResponse.MergeFrom(other.GetUnreadServerResponse);
    }
    if (other.setReadServerRequest_ != null) {
      if (setReadServerRequest_ == null) {
        SetReadServerRequest = new global::SetReadServerRequest();
      }
      SetReadServerRequest.MergeFrom(other.SetReadServerRequest);
    }
    if (other.setReadServerResponse_ != null) {
      if (setReadServerResponse_ == null) {
        SetReadServerResponse = new global::SetReadServerResponse();
      }
      SetReadServerResponse.MergeFrom(other.SetReadServerResponse);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (getUnreadServerRequest_ == null) {
            GetUnreadServerRequest = new global::GetUnreadServerRequest();
          }
          input.ReadMessage(GetUnreadServerRequest);
          break;
        }
        case 18: {
          if (getUnreadServerResponse_ == null) {
            GetUnreadServerResponse = new global::GetUnreadServerResponse();
          }
          input.ReadMessage(GetUnreadServerResponse);
          break;
        }
        case 26: {
          if (setReadServerRequest_ == null) {
            SetReadServerRequest = new global::SetReadServerRequest();
          }
          input.ReadMessage(SetReadServerRequest);
          break;
        }
        case 34: {
          if (setReadServerResponse_ == null) {
            SetReadServerResponse = new global::SetReadServerResponse();
          }
          input.ReadMessage(SetReadServerResponse);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Cài đặt chung cho hệ thống 
/// </summary>
public sealed partial class SettingServerMessage : pb::IMessage<SettingServerMessage> {
  private static readonly pb::MessageParser<SettingServerMessage> _parser = new pb::MessageParser<SettingServerMessage>(() => new SettingServerMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SettingServerMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[296]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SettingServerMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SettingServerMessage(SettingServerMessage other) : this() {
    getBackgroundsServerRequest_ = other.getBackgroundsServerRequest_ != null ? other.getBackgroundsServerRequest_.Clone() : null;
    getBackgroundsServerResponse_ = other.getBackgroundsServerResponse_ != null ? other.getBackgroundsServerResponse_.Clone() : null;
    getAutoOffsServerRequest_ = other.getAutoOffsServerRequest_ != null ? other.getAutoOffsServerRequest_.Clone() : null;
    getAutoOffsServerResponse_ = other.getAutoOffsServerResponse_ != null ? other.getAutoOffsServerResponse_.Clone() : null;
    getTypeDevicesServerRequest_ = other.getTypeDevicesServerRequest_ != null ? other.getTypeDevicesServerRequest_.Clone() : null;
    getTypeDevicesServerResponse_ = other.getTypeDevicesServerResponse_ != null ? other.getTypeDevicesServerResponse_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SettingServerMessage Clone() {
    return new SettingServerMessage(this);
  }

  /// <summary>Field number for the "getBackgroundsServerRequest" field.</summary>
  public const int GetBackgroundsServerRequestFieldNumber = 1;
  private global::GetBackgroundsServerRequest getBackgroundsServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetBackgroundsServerRequest GetBackgroundsServerRequest {
    get { return getBackgroundsServerRequest_; }
    set {
      getBackgroundsServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getBackgroundsServerResponse" field.</summary>
  public const int GetBackgroundsServerResponseFieldNumber = 2;
  private global::GetBackgroundsServerResponse getBackgroundsServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetBackgroundsServerResponse GetBackgroundsServerResponse {
    get { return getBackgroundsServerResponse_; }
    set {
      getBackgroundsServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "getAutoOffsServerRequest" field.</summary>
  public const int GetAutoOffsServerRequestFieldNumber = 3;
  private global::GetAutoOffsServerRequest getAutoOffsServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetAutoOffsServerRequest GetAutoOffsServerRequest {
    get { return getAutoOffsServerRequest_; }
    set {
      getAutoOffsServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getAutoOffsServerResponse" field.</summary>
  public const int GetAutoOffsServerResponseFieldNumber = 4;
  private global::GetAutoOffsServerResponse getAutoOffsServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetAutoOffsServerResponse GetAutoOffsServerResponse {
    get { return getAutoOffsServerResponse_; }
    set {
      getAutoOffsServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "getTypeDevicesServerRequest" field.</summary>
  public const int GetTypeDevicesServerRequestFieldNumber = 5;
  private global::GetTypeDevicesServerRequest getTypeDevicesServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetTypeDevicesServerRequest GetTypeDevicesServerRequest {
    get { return getTypeDevicesServerRequest_; }
    set {
      getTypeDevicesServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getTypeDevicesServerResponse" field.</summary>
  public const int GetTypeDevicesServerResponseFieldNumber = 6;
  private global::GetTypeDevicesServerResponse getTypeDevicesServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetTypeDevicesServerResponse GetTypeDevicesServerResponse {
    get { return getTypeDevicesServerResponse_; }
    set {
      getTypeDevicesServerResponse_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SettingServerMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SettingServerMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(GetBackgroundsServerRequest, other.GetBackgroundsServerRequest)) return false;
    if (!object.Equals(GetBackgroundsServerResponse, other.GetBackgroundsServerResponse)) return false;
    if (!object.Equals(GetAutoOffsServerRequest, other.GetAutoOffsServerRequest)) return false;
    if (!object.Equals(GetAutoOffsServerResponse, other.GetAutoOffsServerResponse)) return false;
    if (!object.Equals(GetTypeDevicesServerRequest, other.GetTypeDevicesServerRequest)) return false;
    if (!object.Equals(GetTypeDevicesServerResponse, other.GetTypeDevicesServerResponse)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (getBackgroundsServerRequest_ != null) hash ^= GetBackgroundsServerRequest.GetHashCode();
    if (getBackgroundsServerResponse_ != null) hash ^= GetBackgroundsServerResponse.GetHashCode();
    if (getAutoOffsServerRequest_ != null) hash ^= GetAutoOffsServerRequest.GetHashCode();
    if (getAutoOffsServerResponse_ != null) hash ^= GetAutoOffsServerResponse.GetHashCode();
    if (getTypeDevicesServerRequest_ != null) hash ^= GetTypeDevicesServerRequest.GetHashCode();
    if (getTypeDevicesServerResponse_ != null) hash ^= GetTypeDevicesServerResponse.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (getBackgroundsServerRequest_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(GetBackgroundsServerRequest);
    }
    if (getBackgroundsServerResponse_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(GetBackgroundsServerResponse);
    }
    if (getAutoOffsServerRequest_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(GetAutoOffsServerRequest);
    }
    if (getAutoOffsServerResponse_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(GetAutoOffsServerResponse);
    }
    if (getTypeDevicesServerRequest_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(GetTypeDevicesServerRequest);
    }
    if (getTypeDevicesServerResponse_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(GetTypeDevicesServerResponse);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (getBackgroundsServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetBackgroundsServerRequest);
    }
    if (getBackgroundsServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetBackgroundsServerResponse);
    }
    if (getAutoOffsServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetAutoOffsServerRequest);
    }
    if (getAutoOffsServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetAutoOffsServerResponse);
    }
    if (getTypeDevicesServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetTypeDevicesServerRequest);
    }
    if (getTypeDevicesServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetTypeDevicesServerResponse);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SettingServerMessage other) {
    if (other == null) {
      return;
    }
    if (other.getBackgroundsServerRequest_ != null) {
      if (getBackgroundsServerRequest_ == null) {
        GetBackgroundsServerRequest = new global::GetBackgroundsServerRequest();
      }
      GetBackgroundsServerRequest.MergeFrom(other.GetBackgroundsServerRequest);
    }
    if (other.getBackgroundsServerResponse_ != null) {
      if (getBackgroundsServerResponse_ == null) {
        GetBackgroundsServerResponse = new global::GetBackgroundsServerResponse();
      }
      GetBackgroundsServerResponse.MergeFrom(other.GetBackgroundsServerResponse);
    }
    if (other.getAutoOffsServerRequest_ != null) {
      if (getAutoOffsServerRequest_ == null) {
        GetAutoOffsServerRequest = new global::GetAutoOffsServerRequest();
      }
      GetAutoOffsServerRequest.MergeFrom(other.GetAutoOffsServerRequest);
    }
    if (other.getAutoOffsServerResponse_ != null) {
      if (getAutoOffsServerResponse_ == null) {
        GetAutoOffsServerResponse = new global::GetAutoOffsServerResponse();
      }
      GetAutoOffsServerResponse.MergeFrom(other.GetAutoOffsServerResponse);
    }
    if (other.getTypeDevicesServerRequest_ != null) {
      if (getTypeDevicesServerRequest_ == null) {
        GetTypeDevicesServerRequest = new global::GetTypeDevicesServerRequest();
      }
      GetTypeDevicesServerRequest.MergeFrom(other.GetTypeDevicesServerRequest);
    }
    if (other.getTypeDevicesServerResponse_ != null) {
      if (getTypeDevicesServerResponse_ == null) {
        GetTypeDevicesServerResponse = new global::GetTypeDevicesServerResponse();
      }
      GetTypeDevicesServerResponse.MergeFrom(other.GetTypeDevicesServerResponse);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (getBackgroundsServerRequest_ == null) {
            GetBackgroundsServerRequest = new global::GetBackgroundsServerRequest();
          }
          input.ReadMessage(GetBackgroundsServerRequest);
          break;
        }
        case 18: {
          if (getBackgroundsServerResponse_ == null) {
            GetBackgroundsServerResponse = new global::GetBackgroundsServerResponse();
          }
          input.ReadMessage(GetBackgroundsServerResponse);
          break;
        }
        case 26: {
          if (getAutoOffsServerRequest_ == null) {
            GetAutoOffsServerRequest = new global::GetAutoOffsServerRequest();
          }
          input.ReadMessage(GetAutoOffsServerRequest);
          break;
        }
        case 34: {
          if (getAutoOffsServerResponse_ == null) {
            GetAutoOffsServerResponse = new global::GetAutoOffsServerResponse();
          }
          input.ReadMessage(GetAutoOffsServerResponse);
          break;
        }
        case 42: {
          if (getTypeDevicesServerRequest_ == null) {
            GetTypeDevicesServerRequest = new global::GetTypeDevicesServerRequest();
          }
          input.ReadMessage(GetTypeDevicesServerRequest);
          break;
        }
        case 50: {
          if (getTypeDevicesServerResponse_ == null) {
            GetTypeDevicesServerResponse = new global::GetTypeDevicesServerResponse();
          }
          input.ReadMessage(GetTypeDevicesServerResponse);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Thiết bị kết nối wifi Devices 
/// </summary>
public sealed partial class DeviceServerMessage : pb::IMessage<DeviceServerMessage> {
  private static readonly pb::MessageParser<DeviceServerMessage> _parser = new pb::MessageParser<DeviceServerMessage>(() => new DeviceServerMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DeviceServerMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[297]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeviceServerMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeviceServerMessage(DeviceServerMessage other) : this() {
    getDevicesServerRequest_ = other.getDevicesServerRequest_ != null ? other.getDevicesServerRequest_.Clone() : null;
    getDevicesServerResponse_ = other.getDevicesServerResponse_ != null ? other.getDevicesServerResponse_.Clone() : null;
    getDeviceServerRequest_ = other.getDeviceServerRequest_ != null ? other.getDeviceServerRequest_.Clone() : null;
    getDeviceServerResponse_ = other.getDeviceServerResponse_ != null ? other.getDeviceServerResponse_.Clone() : null;
    addDevicesServerRequest_ = other.addDevicesServerRequest_ != null ? other.addDevicesServerRequest_.Clone() : null;
    addDevicesServerResponse_ = other.addDevicesServerResponse_ != null ? other.addDevicesServerResponse_.Clone() : null;
    updateDeviceServerRequest_ = other.updateDeviceServerRequest_ != null ? other.updateDeviceServerRequest_.Clone() : null;
    updateDeviceServerResponse_ = other.updateDeviceServerResponse_ != null ? other.updateDeviceServerResponse_.Clone() : null;
    deleteDeviceServerRequest_ = other.deleteDeviceServerRequest_ != null ? other.deleteDeviceServerRequest_.Clone() : null;
    deleteDeviceServerResponse_ = other.deleteDeviceServerResponse_ != null ? other.deleteDeviceServerResponse_.Clone() : null;
    getFirmwareLatestDeviceServerRequest_ = other.getFirmwareLatestDeviceServerRequest_ != null ? other.getFirmwareLatestDeviceServerRequest_.Clone() : null;
    getFirmwareLatestDeviceServerResponse_ = other.getFirmwareLatestDeviceServerResponse_ != null ? other.getFirmwareLatestDeviceServerResponse_.Clone() : null;
    downloadFirmwareDeviceServerRequest_ = other.downloadFirmwareDeviceServerRequest_ != null ? other.downloadFirmwareDeviceServerRequest_.Clone() : null;
    downloadFirmwareDeviceServerResponse_ = other.downloadFirmwareDeviceServerResponse_ != null ? other.downloadFirmwareDeviceServerResponse_.Clone() : null;
    forceUpdateFirmwareDeviceServerRequest_ = other.forceUpdateFirmwareDeviceServerRequest_ != null ? other.forceUpdateFirmwareDeviceServerRequest_.Clone() : null;
    forceUpdateFirmwareDeviceServerResponse_ = other.forceUpdateFirmwareDeviceServerResponse_ != null ? other.forceUpdateFirmwareDeviceServerResponse_.Clone() : null;
    registerDeviceServerRequest_ = other.registerDeviceServerRequest_ != null ? other.registerDeviceServerRequest_.Clone() : null;
    registerDeviceServerResponse_ = other.registerDeviceServerResponse_ != null ? other.registerDeviceServerResponse_.Clone() : null;
    updateWSEndpointDeviceServerRequest_ = other.updateWSEndpointDeviceServerRequest_ != null ? other.updateWSEndpointDeviceServerRequest_.Clone() : null;
    updateWSEndpointDeviceServerResponse_ = other.updateWSEndpointDeviceServerResponse_ != null ? other.updateWSEndpointDeviceServerResponse_.Clone() : null;
    forceUpdateFirmwareAllDevicesByPhoneServerRequest_ = other.forceUpdateFirmwareAllDevicesByPhoneServerRequest_ != null ? other.forceUpdateFirmwareAllDevicesByPhoneServerRequest_.Clone() : null;
    forceUpdateFirmwareAllDevicesByPhoneServerResponse_ = other.forceUpdateFirmwareAllDevicesByPhoneServerResponse_ != null ? other.forceUpdateFirmwareAllDevicesByPhoneServerResponse_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DeviceServerMessage Clone() {
    return new DeviceServerMessage(this);
  }

  /// <summary>Field number for the "getDevicesServerRequest" field.</summary>
  public const int GetDevicesServerRequestFieldNumber = 1;
  private global::GetDevicesServerRequest getDevicesServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetDevicesServerRequest GetDevicesServerRequest {
    get { return getDevicesServerRequest_; }
    set {
      getDevicesServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getDevicesServerResponse" field.</summary>
  public const int GetDevicesServerResponseFieldNumber = 2;
  private global::GetDevicesServerResponse getDevicesServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetDevicesServerResponse GetDevicesServerResponse {
    get { return getDevicesServerResponse_; }
    set {
      getDevicesServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "getDeviceServerRequest" field.</summary>
  public const int GetDeviceServerRequestFieldNumber = 3;
  private global::GetDeviceServerRequest getDeviceServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetDeviceServerRequest GetDeviceServerRequest {
    get { return getDeviceServerRequest_; }
    set {
      getDeviceServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getDeviceServerResponse" field.</summary>
  public const int GetDeviceServerResponseFieldNumber = 4;
  private global::GetDeviceServerResponse getDeviceServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetDeviceServerResponse GetDeviceServerResponse {
    get { return getDeviceServerResponse_; }
    set {
      getDeviceServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "addDevicesServerRequest" field.</summary>
  public const int AddDevicesServerRequestFieldNumber = 5;
  private global::AddDevicesServerRequest addDevicesServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AddDevicesServerRequest AddDevicesServerRequest {
    get { return addDevicesServerRequest_; }
    set {
      addDevicesServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "addDevicesServerResponse" field.</summary>
  public const int AddDevicesServerResponseFieldNumber = 6;
  private global::AddDevicesServerResponse addDevicesServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AddDevicesServerResponse AddDevicesServerResponse {
    get { return addDevicesServerResponse_; }
    set {
      addDevicesServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "updateDeviceServerRequest" field.</summary>
  public const int UpdateDeviceServerRequestFieldNumber = 7;
  private global::UpdateDeviceServerRequest updateDeviceServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateDeviceServerRequest UpdateDeviceServerRequest {
    get { return updateDeviceServerRequest_; }
    set {
      updateDeviceServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "updateDeviceServerResponse" field.</summary>
  public const int UpdateDeviceServerResponseFieldNumber = 8;
  private global::UpdateDeviceServerResponse updateDeviceServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateDeviceServerResponse UpdateDeviceServerResponse {
    get { return updateDeviceServerResponse_; }
    set {
      updateDeviceServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "deleteDeviceServerRequest" field.</summary>
  public const int DeleteDeviceServerRequestFieldNumber = 9;
  private global::DeleteDeviceServerRequest deleteDeviceServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DeleteDeviceServerRequest DeleteDeviceServerRequest {
    get { return deleteDeviceServerRequest_; }
    set {
      deleteDeviceServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "deleteDeviceServerResponse" field.</summary>
  public const int DeleteDeviceServerResponseFieldNumber = 10;
  private global::DeleteDeviceServerResponse deleteDeviceServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DeleteDeviceServerResponse DeleteDeviceServerResponse {
    get { return deleteDeviceServerResponse_; }
    set {
      deleteDeviceServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "getFirmwareLatestDeviceServerRequest" field.</summary>
  public const int GetFirmwareLatestDeviceServerRequestFieldNumber = 11;
  private global::GetFirmwareLatestDeviceServerRequest getFirmwareLatestDeviceServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetFirmwareLatestDeviceServerRequest GetFirmwareLatestDeviceServerRequest {
    get { return getFirmwareLatestDeviceServerRequest_; }
    set {
      getFirmwareLatestDeviceServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getFirmwareLatestDeviceServerResponse" field.</summary>
  public const int GetFirmwareLatestDeviceServerResponseFieldNumber = 12;
  private global::GetFirmwareLatestDeviceServerResponse getFirmwareLatestDeviceServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetFirmwareLatestDeviceServerResponse GetFirmwareLatestDeviceServerResponse {
    get { return getFirmwareLatestDeviceServerResponse_; }
    set {
      getFirmwareLatestDeviceServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "downloadFirmwareDeviceServerRequest" field.</summary>
  public const int DownloadFirmwareDeviceServerRequestFieldNumber = 13;
  private global::DownloadFirmwareDeviceServerRequest downloadFirmwareDeviceServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DownloadFirmwareDeviceServerRequest DownloadFirmwareDeviceServerRequest {
    get { return downloadFirmwareDeviceServerRequest_; }
    set {
      downloadFirmwareDeviceServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "downloadFirmwareDeviceServerResponse" field.</summary>
  public const int DownloadFirmwareDeviceServerResponseFieldNumber = 14;
  private global::DownloadFirmwareDeviceServerResponse downloadFirmwareDeviceServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DownloadFirmwareDeviceServerResponse DownloadFirmwareDeviceServerResponse {
    get { return downloadFirmwareDeviceServerResponse_; }
    set {
      downloadFirmwareDeviceServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "forceUpdateFirmwareDeviceServerRequest" field.</summary>
  public const int ForceUpdateFirmwareDeviceServerRequestFieldNumber = 15;
  private global::ForceUpdateFirmwareDeviceServerRequest forceUpdateFirmwareDeviceServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ForceUpdateFirmwareDeviceServerRequest ForceUpdateFirmwareDeviceServerRequest {
    get { return forceUpdateFirmwareDeviceServerRequest_; }
    set {
      forceUpdateFirmwareDeviceServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "forceUpdateFirmwareDeviceServerResponse" field.</summary>
  public const int ForceUpdateFirmwareDeviceServerResponseFieldNumber = 16;
  private global::ForceUpdateFirmwareDeviceServerResponse forceUpdateFirmwareDeviceServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ForceUpdateFirmwareDeviceServerResponse ForceUpdateFirmwareDeviceServerResponse {
    get { return forceUpdateFirmwareDeviceServerResponse_; }
    set {
      forceUpdateFirmwareDeviceServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "registerDeviceServerRequest" field.</summary>
  public const int RegisterDeviceServerRequestFieldNumber = 17;
  private global::RegisterDeviceServerRequest registerDeviceServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RegisterDeviceServerRequest RegisterDeviceServerRequest {
    get { return registerDeviceServerRequest_; }
    set {
      registerDeviceServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "registerDeviceServerResponse" field.</summary>
  public const int RegisterDeviceServerResponseFieldNumber = 18;
  private global::RegisterDeviceServerResponse registerDeviceServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RegisterDeviceServerResponse RegisterDeviceServerResponse {
    get { return registerDeviceServerResponse_; }
    set {
      registerDeviceServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "updateWSEndpointDeviceServerRequest" field.</summary>
  public const int UpdateWSEndpointDeviceServerRequestFieldNumber = 19;
  private global::UpdateWSEndpointDeviceServerRequest updateWSEndpointDeviceServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateWSEndpointDeviceServerRequest UpdateWSEndpointDeviceServerRequest {
    get { return updateWSEndpointDeviceServerRequest_; }
    set {
      updateWSEndpointDeviceServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "updateWSEndpointDeviceServerResponse" field.</summary>
  public const int UpdateWSEndpointDeviceServerResponseFieldNumber = 20;
  private global::UpdateWSEndpointDeviceServerResponse updateWSEndpointDeviceServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateWSEndpointDeviceServerResponse UpdateWSEndpointDeviceServerResponse {
    get { return updateWSEndpointDeviceServerResponse_; }
    set {
      updateWSEndpointDeviceServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "forceUpdateFirmwareAllDevicesByPhoneServerRequest" field.</summary>
  public const int ForceUpdateFirmwareAllDevicesByPhoneServerRequestFieldNumber = 21;
  private global::ForceUpdateFirmwareAllDevicesByPhoneServerRequest forceUpdateFirmwareAllDevicesByPhoneServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ForceUpdateFirmwareAllDevicesByPhoneServerRequest ForceUpdateFirmwareAllDevicesByPhoneServerRequest {
    get { return forceUpdateFirmwareAllDevicesByPhoneServerRequest_; }
    set {
      forceUpdateFirmwareAllDevicesByPhoneServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "forceUpdateFirmwareAllDevicesByPhoneServerResponse" field.</summary>
  public const int ForceUpdateFirmwareAllDevicesByPhoneServerResponseFieldNumber = 22;
  private global::ForceUpdateFirmwareAllDevicesByPhoneServerResponse forceUpdateFirmwareAllDevicesByPhoneServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ForceUpdateFirmwareAllDevicesByPhoneServerResponse ForceUpdateFirmwareAllDevicesByPhoneServerResponse {
    get { return forceUpdateFirmwareAllDevicesByPhoneServerResponse_; }
    set {
      forceUpdateFirmwareAllDevicesByPhoneServerResponse_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DeviceServerMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DeviceServerMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(GetDevicesServerRequest, other.GetDevicesServerRequest)) return false;
    if (!object.Equals(GetDevicesServerResponse, other.GetDevicesServerResponse)) return false;
    if (!object.Equals(GetDeviceServerRequest, other.GetDeviceServerRequest)) return false;
    if (!object.Equals(GetDeviceServerResponse, other.GetDeviceServerResponse)) return false;
    if (!object.Equals(AddDevicesServerRequest, other.AddDevicesServerRequest)) return false;
    if (!object.Equals(AddDevicesServerResponse, other.AddDevicesServerResponse)) return false;
    if (!object.Equals(UpdateDeviceServerRequest, other.UpdateDeviceServerRequest)) return false;
    if (!object.Equals(UpdateDeviceServerResponse, other.UpdateDeviceServerResponse)) return false;
    if (!object.Equals(DeleteDeviceServerRequest, other.DeleteDeviceServerRequest)) return false;
    if (!object.Equals(DeleteDeviceServerResponse, other.DeleteDeviceServerResponse)) return false;
    if (!object.Equals(GetFirmwareLatestDeviceServerRequest, other.GetFirmwareLatestDeviceServerRequest)) return false;
    if (!object.Equals(GetFirmwareLatestDeviceServerResponse, other.GetFirmwareLatestDeviceServerResponse)) return false;
    if (!object.Equals(DownloadFirmwareDeviceServerRequest, other.DownloadFirmwareDeviceServerRequest)) return false;
    if (!object.Equals(DownloadFirmwareDeviceServerResponse, other.DownloadFirmwareDeviceServerResponse)) return false;
    if (!object.Equals(ForceUpdateFirmwareDeviceServerRequest, other.ForceUpdateFirmwareDeviceServerRequest)) return false;
    if (!object.Equals(ForceUpdateFirmwareDeviceServerResponse, other.ForceUpdateFirmwareDeviceServerResponse)) return false;
    if (!object.Equals(RegisterDeviceServerRequest, other.RegisterDeviceServerRequest)) return false;
    if (!object.Equals(RegisterDeviceServerResponse, other.RegisterDeviceServerResponse)) return false;
    if (!object.Equals(UpdateWSEndpointDeviceServerRequest, other.UpdateWSEndpointDeviceServerRequest)) return false;
    if (!object.Equals(UpdateWSEndpointDeviceServerResponse, other.UpdateWSEndpointDeviceServerResponse)) return false;
    if (!object.Equals(ForceUpdateFirmwareAllDevicesByPhoneServerRequest, other.ForceUpdateFirmwareAllDevicesByPhoneServerRequest)) return false;
    if (!object.Equals(ForceUpdateFirmwareAllDevicesByPhoneServerResponse, other.ForceUpdateFirmwareAllDevicesByPhoneServerResponse)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (getDevicesServerRequest_ != null) hash ^= GetDevicesServerRequest.GetHashCode();
    if (getDevicesServerResponse_ != null) hash ^= GetDevicesServerResponse.GetHashCode();
    if (getDeviceServerRequest_ != null) hash ^= GetDeviceServerRequest.GetHashCode();
    if (getDeviceServerResponse_ != null) hash ^= GetDeviceServerResponse.GetHashCode();
    if (addDevicesServerRequest_ != null) hash ^= AddDevicesServerRequest.GetHashCode();
    if (addDevicesServerResponse_ != null) hash ^= AddDevicesServerResponse.GetHashCode();
    if (updateDeviceServerRequest_ != null) hash ^= UpdateDeviceServerRequest.GetHashCode();
    if (updateDeviceServerResponse_ != null) hash ^= UpdateDeviceServerResponse.GetHashCode();
    if (deleteDeviceServerRequest_ != null) hash ^= DeleteDeviceServerRequest.GetHashCode();
    if (deleteDeviceServerResponse_ != null) hash ^= DeleteDeviceServerResponse.GetHashCode();
    if (getFirmwareLatestDeviceServerRequest_ != null) hash ^= GetFirmwareLatestDeviceServerRequest.GetHashCode();
    if (getFirmwareLatestDeviceServerResponse_ != null) hash ^= GetFirmwareLatestDeviceServerResponse.GetHashCode();
    if (downloadFirmwareDeviceServerRequest_ != null) hash ^= DownloadFirmwareDeviceServerRequest.GetHashCode();
    if (downloadFirmwareDeviceServerResponse_ != null) hash ^= DownloadFirmwareDeviceServerResponse.GetHashCode();
    if (forceUpdateFirmwareDeviceServerRequest_ != null) hash ^= ForceUpdateFirmwareDeviceServerRequest.GetHashCode();
    if (forceUpdateFirmwareDeviceServerResponse_ != null) hash ^= ForceUpdateFirmwareDeviceServerResponse.GetHashCode();
    if (registerDeviceServerRequest_ != null) hash ^= RegisterDeviceServerRequest.GetHashCode();
    if (registerDeviceServerResponse_ != null) hash ^= RegisterDeviceServerResponse.GetHashCode();
    if (updateWSEndpointDeviceServerRequest_ != null) hash ^= UpdateWSEndpointDeviceServerRequest.GetHashCode();
    if (updateWSEndpointDeviceServerResponse_ != null) hash ^= UpdateWSEndpointDeviceServerResponse.GetHashCode();
    if (forceUpdateFirmwareAllDevicesByPhoneServerRequest_ != null) hash ^= ForceUpdateFirmwareAllDevicesByPhoneServerRequest.GetHashCode();
    if (forceUpdateFirmwareAllDevicesByPhoneServerResponse_ != null) hash ^= ForceUpdateFirmwareAllDevicesByPhoneServerResponse.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (getDevicesServerRequest_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(GetDevicesServerRequest);
    }
    if (getDevicesServerResponse_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(GetDevicesServerResponse);
    }
    if (getDeviceServerRequest_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(GetDeviceServerRequest);
    }
    if (getDeviceServerResponse_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(GetDeviceServerResponse);
    }
    if (addDevicesServerRequest_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(AddDevicesServerRequest);
    }
    if (addDevicesServerResponse_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(AddDevicesServerResponse);
    }
    if (updateDeviceServerRequest_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(UpdateDeviceServerRequest);
    }
    if (updateDeviceServerResponse_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(UpdateDeviceServerResponse);
    }
    if (deleteDeviceServerRequest_ != null) {
      output.WriteRawTag(74);
      output.WriteMessage(DeleteDeviceServerRequest);
    }
    if (deleteDeviceServerResponse_ != null) {
      output.WriteRawTag(82);
      output.WriteMessage(DeleteDeviceServerResponse);
    }
    if (getFirmwareLatestDeviceServerRequest_ != null) {
      output.WriteRawTag(90);
      output.WriteMessage(GetFirmwareLatestDeviceServerRequest);
    }
    if (getFirmwareLatestDeviceServerResponse_ != null) {
      output.WriteRawTag(98);
      output.WriteMessage(GetFirmwareLatestDeviceServerResponse);
    }
    if (downloadFirmwareDeviceServerRequest_ != null) {
      output.WriteRawTag(106);
      output.WriteMessage(DownloadFirmwareDeviceServerRequest);
    }
    if (downloadFirmwareDeviceServerResponse_ != null) {
      output.WriteRawTag(114);
      output.WriteMessage(DownloadFirmwareDeviceServerResponse);
    }
    if (forceUpdateFirmwareDeviceServerRequest_ != null) {
      output.WriteRawTag(122);
      output.WriteMessage(ForceUpdateFirmwareDeviceServerRequest);
    }
    if (forceUpdateFirmwareDeviceServerResponse_ != null) {
      output.WriteRawTag(130, 1);
      output.WriteMessage(ForceUpdateFirmwareDeviceServerResponse);
    }
    if (registerDeviceServerRequest_ != null) {
      output.WriteRawTag(138, 1);
      output.WriteMessage(RegisterDeviceServerRequest);
    }
    if (registerDeviceServerResponse_ != null) {
      output.WriteRawTag(146, 1);
      output.WriteMessage(RegisterDeviceServerResponse);
    }
    if (updateWSEndpointDeviceServerRequest_ != null) {
      output.WriteRawTag(154, 1);
      output.WriteMessage(UpdateWSEndpointDeviceServerRequest);
    }
    if (updateWSEndpointDeviceServerResponse_ != null) {
      output.WriteRawTag(162, 1);
      output.WriteMessage(UpdateWSEndpointDeviceServerResponse);
    }
    if (forceUpdateFirmwareAllDevicesByPhoneServerRequest_ != null) {
      output.WriteRawTag(170, 1);
      output.WriteMessage(ForceUpdateFirmwareAllDevicesByPhoneServerRequest);
    }
    if (forceUpdateFirmwareAllDevicesByPhoneServerResponse_ != null) {
      output.WriteRawTag(178, 1);
      output.WriteMessage(ForceUpdateFirmwareAllDevicesByPhoneServerResponse);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (getDevicesServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetDevicesServerRequest);
    }
    if (getDevicesServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetDevicesServerResponse);
    }
    if (getDeviceServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetDeviceServerRequest);
    }
    if (getDeviceServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetDeviceServerResponse);
    }
    if (addDevicesServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddDevicesServerRequest);
    }
    if (addDevicesServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddDevicesServerResponse);
    }
    if (updateDeviceServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateDeviceServerRequest);
    }
    if (updateDeviceServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateDeviceServerResponse);
    }
    if (deleteDeviceServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeleteDeviceServerRequest);
    }
    if (deleteDeviceServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeleteDeviceServerResponse);
    }
    if (getFirmwareLatestDeviceServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetFirmwareLatestDeviceServerRequest);
    }
    if (getFirmwareLatestDeviceServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetFirmwareLatestDeviceServerResponse);
    }
    if (downloadFirmwareDeviceServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(DownloadFirmwareDeviceServerRequest);
    }
    if (downloadFirmwareDeviceServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(DownloadFirmwareDeviceServerResponse);
    }
    if (forceUpdateFirmwareDeviceServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ForceUpdateFirmwareDeviceServerRequest);
    }
    if (forceUpdateFirmwareDeviceServerResponse_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(ForceUpdateFirmwareDeviceServerResponse);
    }
    if (registerDeviceServerRequest_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(RegisterDeviceServerRequest);
    }
    if (registerDeviceServerResponse_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(RegisterDeviceServerResponse);
    }
    if (updateWSEndpointDeviceServerRequest_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(UpdateWSEndpointDeviceServerRequest);
    }
    if (updateWSEndpointDeviceServerResponse_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(UpdateWSEndpointDeviceServerResponse);
    }
    if (forceUpdateFirmwareAllDevicesByPhoneServerRequest_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(ForceUpdateFirmwareAllDevicesByPhoneServerRequest);
    }
    if (forceUpdateFirmwareAllDevicesByPhoneServerResponse_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(ForceUpdateFirmwareAllDevicesByPhoneServerResponse);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DeviceServerMessage other) {
    if (other == null) {
      return;
    }
    if (other.getDevicesServerRequest_ != null) {
      if (getDevicesServerRequest_ == null) {
        GetDevicesServerRequest = new global::GetDevicesServerRequest();
      }
      GetDevicesServerRequest.MergeFrom(other.GetDevicesServerRequest);
    }
    if (other.getDevicesServerResponse_ != null) {
      if (getDevicesServerResponse_ == null) {
        GetDevicesServerResponse = new global::GetDevicesServerResponse();
      }
      GetDevicesServerResponse.MergeFrom(other.GetDevicesServerResponse);
    }
    if (other.getDeviceServerRequest_ != null) {
      if (getDeviceServerRequest_ == null) {
        GetDeviceServerRequest = new global::GetDeviceServerRequest();
      }
      GetDeviceServerRequest.MergeFrom(other.GetDeviceServerRequest);
    }
    if (other.getDeviceServerResponse_ != null) {
      if (getDeviceServerResponse_ == null) {
        GetDeviceServerResponse = new global::GetDeviceServerResponse();
      }
      GetDeviceServerResponse.MergeFrom(other.GetDeviceServerResponse);
    }
    if (other.addDevicesServerRequest_ != null) {
      if (addDevicesServerRequest_ == null) {
        AddDevicesServerRequest = new global::AddDevicesServerRequest();
      }
      AddDevicesServerRequest.MergeFrom(other.AddDevicesServerRequest);
    }
    if (other.addDevicesServerResponse_ != null) {
      if (addDevicesServerResponse_ == null) {
        AddDevicesServerResponse = new global::AddDevicesServerResponse();
      }
      AddDevicesServerResponse.MergeFrom(other.AddDevicesServerResponse);
    }
    if (other.updateDeviceServerRequest_ != null) {
      if (updateDeviceServerRequest_ == null) {
        UpdateDeviceServerRequest = new global::UpdateDeviceServerRequest();
      }
      UpdateDeviceServerRequest.MergeFrom(other.UpdateDeviceServerRequest);
    }
    if (other.updateDeviceServerResponse_ != null) {
      if (updateDeviceServerResponse_ == null) {
        UpdateDeviceServerResponse = new global::UpdateDeviceServerResponse();
      }
      UpdateDeviceServerResponse.MergeFrom(other.UpdateDeviceServerResponse);
    }
    if (other.deleteDeviceServerRequest_ != null) {
      if (deleteDeviceServerRequest_ == null) {
        DeleteDeviceServerRequest = new global::DeleteDeviceServerRequest();
      }
      DeleteDeviceServerRequest.MergeFrom(other.DeleteDeviceServerRequest);
    }
    if (other.deleteDeviceServerResponse_ != null) {
      if (deleteDeviceServerResponse_ == null) {
        DeleteDeviceServerResponse = new global::DeleteDeviceServerResponse();
      }
      DeleteDeviceServerResponse.MergeFrom(other.DeleteDeviceServerResponse);
    }
    if (other.getFirmwareLatestDeviceServerRequest_ != null) {
      if (getFirmwareLatestDeviceServerRequest_ == null) {
        GetFirmwareLatestDeviceServerRequest = new global::GetFirmwareLatestDeviceServerRequest();
      }
      GetFirmwareLatestDeviceServerRequest.MergeFrom(other.GetFirmwareLatestDeviceServerRequest);
    }
    if (other.getFirmwareLatestDeviceServerResponse_ != null) {
      if (getFirmwareLatestDeviceServerResponse_ == null) {
        GetFirmwareLatestDeviceServerResponse = new global::GetFirmwareLatestDeviceServerResponse();
      }
      GetFirmwareLatestDeviceServerResponse.MergeFrom(other.GetFirmwareLatestDeviceServerResponse);
    }
    if (other.downloadFirmwareDeviceServerRequest_ != null) {
      if (downloadFirmwareDeviceServerRequest_ == null) {
        DownloadFirmwareDeviceServerRequest = new global::DownloadFirmwareDeviceServerRequest();
      }
      DownloadFirmwareDeviceServerRequest.MergeFrom(other.DownloadFirmwareDeviceServerRequest);
    }
    if (other.downloadFirmwareDeviceServerResponse_ != null) {
      if (downloadFirmwareDeviceServerResponse_ == null) {
        DownloadFirmwareDeviceServerResponse = new global::DownloadFirmwareDeviceServerResponse();
      }
      DownloadFirmwareDeviceServerResponse.MergeFrom(other.DownloadFirmwareDeviceServerResponse);
    }
    if (other.forceUpdateFirmwareDeviceServerRequest_ != null) {
      if (forceUpdateFirmwareDeviceServerRequest_ == null) {
        ForceUpdateFirmwareDeviceServerRequest = new global::ForceUpdateFirmwareDeviceServerRequest();
      }
      ForceUpdateFirmwareDeviceServerRequest.MergeFrom(other.ForceUpdateFirmwareDeviceServerRequest);
    }
    if (other.forceUpdateFirmwareDeviceServerResponse_ != null) {
      if (forceUpdateFirmwareDeviceServerResponse_ == null) {
        ForceUpdateFirmwareDeviceServerResponse = new global::ForceUpdateFirmwareDeviceServerResponse();
      }
      ForceUpdateFirmwareDeviceServerResponse.MergeFrom(other.ForceUpdateFirmwareDeviceServerResponse);
    }
    if (other.registerDeviceServerRequest_ != null) {
      if (registerDeviceServerRequest_ == null) {
        RegisterDeviceServerRequest = new global::RegisterDeviceServerRequest();
      }
      RegisterDeviceServerRequest.MergeFrom(other.RegisterDeviceServerRequest);
    }
    if (other.registerDeviceServerResponse_ != null) {
      if (registerDeviceServerResponse_ == null) {
        RegisterDeviceServerResponse = new global::RegisterDeviceServerResponse();
      }
      RegisterDeviceServerResponse.MergeFrom(other.RegisterDeviceServerResponse);
    }
    if (other.updateWSEndpointDeviceServerRequest_ != null) {
      if (updateWSEndpointDeviceServerRequest_ == null) {
        UpdateWSEndpointDeviceServerRequest = new global::UpdateWSEndpointDeviceServerRequest();
      }
      UpdateWSEndpointDeviceServerRequest.MergeFrom(other.UpdateWSEndpointDeviceServerRequest);
    }
    if (other.updateWSEndpointDeviceServerResponse_ != null) {
      if (updateWSEndpointDeviceServerResponse_ == null) {
        UpdateWSEndpointDeviceServerResponse = new global::UpdateWSEndpointDeviceServerResponse();
      }
      UpdateWSEndpointDeviceServerResponse.MergeFrom(other.UpdateWSEndpointDeviceServerResponse);
    }
    if (other.forceUpdateFirmwareAllDevicesByPhoneServerRequest_ != null) {
      if (forceUpdateFirmwareAllDevicesByPhoneServerRequest_ == null) {
        ForceUpdateFirmwareAllDevicesByPhoneServerRequest = new global::ForceUpdateFirmwareAllDevicesByPhoneServerRequest();
      }
      ForceUpdateFirmwareAllDevicesByPhoneServerRequest.MergeFrom(other.ForceUpdateFirmwareAllDevicesByPhoneServerRequest);
    }
    if (other.forceUpdateFirmwareAllDevicesByPhoneServerResponse_ != null) {
      if (forceUpdateFirmwareAllDevicesByPhoneServerResponse_ == null) {
        ForceUpdateFirmwareAllDevicesByPhoneServerResponse = new global::ForceUpdateFirmwareAllDevicesByPhoneServerResponse();
      }
      ForceUpdateFirmwareAllDevicesByPhoneServerResponse.MergeFrom(other.ForceUpdateFirmwareAllDevicesByPhoneServerResponse);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (getDevicesServerRequest_ == null) {
            GetDevicesServerRequest = new global::GetDevicesServerRequest();
          }
          input.ReadMessage(GetDevicesServerRequest);
          break;
        }
        case 18: {
          if (getDevicesServerResponse_ == null) {
            GetDevicesServerResponse = new global::GetDevicesServerResponse();
          }
          input.ReadMessage(GetDevicesServerResponse);
          break;
        }
        case 26: {
          if (getDeviceServerRequest_ == null) {
            GetDeviceServerRequest = new global::GetDeviceServerRequest();
          }
          input.ReadMessage(GetDeviceServerRequest);
          break;
        }
        case 34: {
          if (getDeviceServerResponse_ == null) {
            GetDeviceServerResponse = new global::GetDeviceServerResponse();
          }
          input.ReadMessage(GetDeviceServerResponse);
          break;
        }
        case 42: {
          if (addDevicesServerRequest_ == null) {
            AddDevicesServerRequest = new global::AddDevicesServerRequest();
          }
          input.ReadMessage(AddDevicesServerRequest);
          break;
        }
        case 50: {
          if (addDevicesServerResponse_ == null) {
            AddDevicesServerResponse = new global::AddDevicesServerResponse();
          }
          input.ReadMessage(AddDevicesServerResponse);
          break;
        }
        case 58: {
          if (updateDeviceServerRequest_ == null) {
            UpdateDeviceServerRequest = new global::UpdateDeviceServerRequest();
          }
          input.ReadMessage(UpdateDeviceServerRequest);
          break;
        }
        case 66: {
          if (updateDeviceServerResponse_ == null) {
            UpdateDeviceServerResponse = new global::UpdateDeviceServerResponse();
          }
          input.ReadMessage(UpdateDeviceServerResponse);
          break;
        }
        case 74: {
          if (deleteDeviceServerRequest_ == null) {
            DeleteDeviceServerRequest = new global::DeleteDeviceServerRequest();
          }
          input.ReadMessage(DeleteDeviceServerRequest);
          break;
        }
        case 82: {
          if (deleteDeviceServerResponse_ == null) {
            DeleteDeviceServerResponse = new global::DeleteDeviceServerResponse();
          }
          input.ReadMessage(DeleteDeviceServerResponse);
          break;
        }
        case 90: {
          if (getFirmwareLatestDeviceServerRequest_ == null) {
            GetFirmwareLatestDeviceServerRequest = new global::GetFirmwareLatestDeviceServerRequest();
          }
          input.ReadMessage(GetFirmwareLatestDeviceServerRequest);
          break;
        }
        case 98: {
          if (getFirmwareLatestDeviceServerResponse_ == null) {
            GetFirmwareLatestDeviceServerResponse = new global::GetFirmwareLatestDeviceServerResponse();
          }
          input.ReadMessage(GetFirmwareLatestDeviceServerResponse);
          break;
        }
        case 106: {
          if (downloadFirmwareDeviceServerRequest_ == null) {
            DownloadFirmwareDeviceServerRequest = new global::DownloadFirmwareDeviceServerRequest();
          }
          input.ReadMessage(DownloadFirmwareDeviceServerRequest);
          break;
        }
        case 114: {
          if (downloadFirmwareDeviceServerResponse_ == null) {
            DownloadFirmwareDeviceServerResponse = new global::DownloadFirmwareDeviceServerResponse();
          }
          input.ReadMessage(DownloadFirmwareDeviceServerResponse);
          break;
        }
        case 122: {
          if (forceUpdateFirmwareDeviceServerRequest_ == null) {
            ForceUpdateFirmwareDeviceServerRequest = new global::ForceUpdateFirmwareDeviceServerRequest();
          }
          input.ReadMessage(ForceUpdateFirmwareDeviceServerRequest);
          break;
        }
        case 130: {
          if (forceUpdateFirmwareDeviceServerResponse_ == null) {
            ForceUpdateFirmwareDeviceServerResponse = new global::ForceUpdateFirmwareDeviceServerResponse();
          }
          input.ReadMessage(ForceUpdateFirmwareDeviceServerResponse);
          break;
        }
        case 138: {
          if (registerDeviceServerRequest_ == null) {
            RegisterDeviceServerRequest = new global::RegisterDeviceServerRequest();
          }
          input.ReadMessage(RegisterDeviceServerRequest);
          break;
        }
        case 146: {
          if (registerDeviceServerResponse_ == null) {
            RegisterDeviceServerResponse = new global::RegisterDeviceServerResponse();
          }
          input.ReadMessage(RegisterDeviceServerResponse);
          break;
        }
        case 154: {
          if (updateWSEndpointDeviceServerRequest_ == null) {
            UpdateWSEndpointDeviceServerRequest = new global::UpdateWSEndpointDeviceServerRequest();
          }
          input.ReadMessage(UpdateWSEndpointDeviceServerRequest);
          break;
        }
        case 162: {
          if (updateWSEndpointDeviceServerResponse_ == null) {
            UpdateWSEndpointDeviceServerResponse = new global::UpdateWSEndpointDeviceServerResponse();
          }
          input.ReadMessage(UpdateWSEndpointDeviceServerResponse);
          break;
        }
        case 170: {
          if (forceUpdateFirmwareAllDevicesByPhoneServerRequest_ == null) {
            ForceUpdateFirmwareAllDevicesByPhoneServerRequest = new global::ForceUpdateFirmwareAllDevicesByPhoneServerRequest();
          }
          input.ReadMessage(ForceUpdateFirmwareAllDevicesByPhoneServerRequest);
          break;
        }
        case 178: {
          if (forceUpdateFirmwareAllDevicesByPhoneServerResponse_ == null) {
            ForceUpdateFirmwareAllDevicesByPhoneServerResponse = new global::ForceUpdateFirmwareAllDevicesByPhoneServerResponse();
          }
          input.ReadMessage(ForceUpdateFirmwareAllDevicesByPhoneServerResponse);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Công tắc 
/// </summary>
public sealed partial class SwitcherServerMessage : pb::IMessage<SwitcherServerMessage> {
  private static readonly pb::MessageParser<SwitcherServerMessage> _parser = new pb::MessageParser<SwitcherServerMessage>(() => new SwitcherServerMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SwitcherServerMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[298]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SwitcherServerMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SwitcherServerMessage(SwitcherServerMessage other) : this() {
    getSwitchersServerRequest_ = other.getSwitchersServerRequest_ != null ? other.getSwitchersServerRequest_.Clone() : null;
    getSwitchersServerResponse_ = other.getSwitchersServerResponse_ != null ? other.getSwitchersServerResponse_.Clone() : null;
    getSwitcherServerRequest_ = other.getSwitcherServerRequest_ != null ? other.getSwitcherServerRequest_.Clone() : null;
    getSwitcherServerResponse_ = other.getSwitcherServerResponse_ != null ? other.getSwitcherServerResponse_.Clone() : null;
    getLogSwitcherServerRequest_ = other.getLogSwitcherServerRequest_ != null ? other.getLogSwitcherServerRequest_.Clone() : null;
    getLogSwitcherServerResponse_ = other.getLogSwitcherServerResponse_ != null ? other.getLogSwitcherServerResponse_.Clone() : null;
    getIconSwitchersServerRequest_ = other.getIconSwitchersServerRequest_ != null ? other.getIconSwitchersServerRequest_.Clone() : null;
    getIconSwitchersServerResponse_ = other.getIconSwitchersServerResponse_ != null ? other.getIconSwitchersServerResponse_.Clone() : null;
    updateSwitcherServerRequest_ = other.updateSwitcherServerRequest_ != null ? other.updateSwitcherServerRequest_.Clone() : null;
    updateSwitcherServerResponse_ = other.updateSwitcherServerResponse_ != null ? other.updateSwitcherServerResponse_.Clone() : null;
    switcherServerRequest_ = other.switcherServerRequest_ != null ? other.switcherServerRequest_.Clone() : null;
    switcherServerResponse_ = other.switcherServerResponse_ != null ? other.switcherServerResponse_.Clone() : null;
    getSwitcherSchedulesServerRequest_ = other.getSwitcherSchedulesServerRequest_ != null ? other.getSwitcherSchedulesServerRequest_.Clone() : null;
    getSwitcherSchedulesServerResponse_ = other.getSwitcherSchedulesServerResponse_ != null ? other.getSwitcherSchedulesServerResponse_.Clone() : null;
    getSwitcherScheduleServerRequest_ = other.getSwitcherScheduleServerRequest_ != null ? other.getSwitcherScheduleServerRequest_.Clone() : null;
    getSwitcherScheduleServerResponse_ = other.getSwitcherScheduleServerResponse_ != null ? other.getSwitcherScheduleServerResponse_.Clone() : null;
    getCountSwitcherScheduleServerRequest_ = other.getCountSwitcherScheduleServerRequest_ != null ? other.getCountSwitcherScheduleServerRequest_.Clone() : null;
    getCountSwitcherScheduleServerResponse_ = other.getCountSwitcherScheduleServerResponse_ != null ? other.getCountSwitcherScheduleServerResponse_.Clone() : null;
    addSwitcherScheduleServerRequest_ = other.addSwitcherScheduleServerRequest_ != null ? other.addSwitcherScheduleServerRequest_.Clone() : null;
    addSwitcherScheduleServerResponse_ = other.addSwitcherScheduleServerResponse_ != null ? other.addSwitcherScheduleServerResponse_.Clone() : null;
    updateSwitcherScheduleServerRequest_ = other.updateSwitcherScheduleServerRequest_ != null ? other.updateSwitcherScheduleServerRequest_.Clone() : null;
    updateSwitcherScheduleServerResponse_ = other.updateSwitcherScheduleServerResponse_ != null ? other.updateSwitcherScheduleServerResponse_.Clone() : null;
    deleteSwitcherScheduleServerRequest_ = other.deleteSwitcherScheduleServerRequest_ != null ? other.deleteSwitcherScheduleServerRequest_.Clone() : null;
    deleteSwitcherScheduleServerResponse_ = other.deleteSwitcherScheduleServerResponse_ != null ? other.deleteSwitcherScheduleServerResponse_.Clone() : null;
    setActiveSwitcherScheduleServerRequest_ = other.setActiveSwitcherScheduleServerRequest_ != null ? other.setActiveSwitcherScheduleServerRequest_.Clone() : null;
    setActiveSwitcherScheduleServerResponse_ = other.setActiveSwitcherScheduleServerResponse_ != null ? other.setActiveSwitcherScheduleServerResponse_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SwitcherServerMessage Clone() {
    return new SwitcherServerMessage(this);
  }

  /// <summary>Field number for the "getSwitchersServerRequest" field.</summary>
  public const int GetSwitchersServerRequestFieldNumber = 1;
  private global::GetSwitchersServerRequest getSwitchersServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetSwitchersServerRequest GetSwitchersServerRequest {
    get { return getSwitchersServerRequest_; }
    set {
      getSwitchersServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getSwitchersServerResponse" field.</summary>
  public const int GetSwitchersServerResponseFieldNumber = 2;
  private global::GetSwitchersServerResponse getSwitchersServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetSwitchersServerResponse GetSwitchersServerResponse {
    get { return getSwitchersServerResponse_; }
    set {
      getSwitchersServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "getSwitcherServerRequest" field.</summary>
  public const int GetSwitcherServerRequestFieldNumber = 3;
  private global::GetSwitcherServerRequest getSwitcherServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetSwitcherServerRequest GetSwitcherServerRequest {
    get { return getSwitcherServerRequest_; }
    set {
      getSwitcherServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getSwitcherServerResponse" field.</summary>
  public const int GetSwitcherServerResponseFieldNumber = 4;
  private global::GetSwitcherServerResponse getSwitcherServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetSwitcherServerResponse GetSwitcherServerResponse {
    get { return getSwitcherServerResponse_; }
    set {
      getSwitcherServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "getLogSwitcherServerRequest" field.</summary>
  public const int GetLogSwitcherServerRequestFieldNumber = 5;
  private global::GetLogSwitcherServerRequest getLogSwitcherServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetLogSwitcherServerRequest GetLogSwitcherServerRequest {
    get { return getLogSwitcherServerRequest_; }
    set {
      getLogSwitcherServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getLogSwitcherServerResponse" field.</summary>
  public const int GetLogSwitcherServerResponseFieldNumber = 6;
  private global::GetLogSwitcherServerResponse getLogSwitcherServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetLogSwitcherServerResponse GetLogSwitcherServerResponse {
    get { return getLogSwitcherServerResponse_; }
    set {
      getLogSwitcherServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "getIconSwitchersServerRequest" field.</summary>
  public const int GetIconSwitchersServerRequestFieldNumber = 7;
  private global::GetIconSwitchersServerRequest getIconSwitchersServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetIconSwitchersServerRequest GetIconSwitchersServerRequest {
    get { return getIconSwitchersServerRequest_; }
    set {
      getIconSwitchersServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getIconSwitchersServerResponse" field.</summary>
  public const int GetIconSwitchersServerResponseFieldNumber = 8;
  private global::GetIconSwitchersServerResponse getIconSwitchersServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetIconSwitchersServerResponse GetIconSwitchersServerResponse {
    get { return getIconSwitchersServerResponse_; }
    set {
      getIconSwitchersServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "updateSwitcherServerRequest" field.</summary>
  public const int UpdateSwitcherServerRequestFieldNumber = 9;
  private global::UpdateSwitcherServerRequest updateSwitcherServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateSwitcherServerRequest UpdateSwitcherServerRequest {
    get { return updateSwitcherServerRequest_; }
    set {
      updateSwitcherServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "updateSwitcherServerResponse" field.</summary>
  public const int UpdateSwitcherServerResponseFieldNumber = 10;
  private global::UpdateSwitcherServerResponse updateSwitcherServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateSwitcherServerResponse UpdateSwitcherServerResponse {
    get { return updateSwitcherServerResponse_; }
    set {
      updateSwitcherServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "switcherServerRequest" field.</summary>
  public const int SwitcherServerRequestFieldNumber = 11;
  private global::SwitcherServerRequest switcherServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SwitcherServerRequest SwitcherServerRequest {
    get { return switcherServerRequest_; }
    set {
      switcherServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "switcherServerResponse" field.</summary>
  public const int SwitcherServerResponseFieldNumber = 12;
  private global::SwitcherServerResponse switcherServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SwitcherServerResponse SwitcherServerResponse {
    get { return switcherServerResponse_; }
    set {
      switcherServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "getSwitcherSchedulesServerRequest" field.</summary>
  public const int GetSwitcherSchedulesServerRequestFieldNumber = 13;
  private global::GetSwitcherSchedulesServerRequest getSwitcherSchedulesServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetSwitcherSchedulesServerRequest GetSwitcherSchedulesServerRequest {
    get { return getSwitcherSchedulesServerRequest_; }
    set {
      getSwitcherSchedulesServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getSwitcherSchedulesServerResponse" field.</summary>
  public const int GetSwitcherSchedulesServerResponseFieldNumber = 14;
  private global::GetSwitcherSchedulesServerResponse getSwitcherSchedulesServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetSwitcherSchedulesServerResponse GetSwitcherSchedulesServerResponse {
    get { return getSwitcherSchedulesServerResponse_; }
    set {
      getSwitcherSchedulesServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "getSwitcherScheduleServerRequest" field.</summary>
  public const int GetSwitcherScheduleServerRequestFieldNumber = 15;
  private global::GetSwitcherScheduleServerRequest getSwitcherScheduleServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetSwitcherScheduleServerRequest GetSwitcherScheduleServerRequest {
    get { return getSwitcherScheduleServerRequest_; }
    set {
      getSwitcherScheduleServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getSwitcherScheduleServerResponse" field.</summary>
  public const int GetSwitcherScheduleServerResponseFieldNumber = 16;
  private global::GetSwitcherScheduleServerResponse getSwitcherScheduleServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetSwitcherScheduleServerResponse GetSwitcherScheduleServerResponse {
    get { return getSwitcherScheduleServerResponse_; }
    set {
      getSwitcherScheduleServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "getCountSwitcherScheduleServerRequest" field.</summary>
  public const int GetCountSwitcherScheduleServerRequestFieldNumber = 17;
  private global::GetCountSwitcherScheduleServerRequest getCountSwitcherScheduleServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetCountSwitcherScheduleServerRequest GetCountSwitcherScheduleServerRequest {
    get { return getCountSwitcherScheduleServerRequest_; }
    set {
      getCountSwitcherScheduleServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getCountSwitcherScheduleServerResponse" field.</summary>
  public const int GetCountSwitcherScheduleServerResponseFieldNumber = 18;
  private global::GetCountSwitcherScheduleServerResponse getCountSwitcherScheduleServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetCountSwitcherScheduleServerResponse GetCountSwitcherScheduleServerResponse {
    get { return getCountSwitcherScheduleServerResponse_; }
    set {
      getCountSwitcherScheduleServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "addSwitcherScheduleServerRequest" field.</summary>
  public const int AddSwitcherScheduleServerRequestFieldNumber = 19;
  private global::AddSwitcherScheduleServerRequest addSwitcherScheduleServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AddSwitcherScheduleServerRequest AddSwitcherScheduleServerRequest {
    get { return addSwitcherScheduleServerRequest_; }
    set {
      addSwitcherScheduleServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "addSwitcherScheduleServerResponse" field.</summary>
  public const int AddSwitcherScheduleServerResponseFieldNumber = 20;
  private global::AddSwitcherScheduleServerResponse addSwitcherScheduleServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AddSwitcherScheduleServerResponse AddSwitcherScheduleServerResponse {
    get { return addSwitcherScheduleServerResponse_; }
    set {
      addSwitcherScheduleServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "updateSwitcherScheduleServerRequest" field.</summary>
  public const int UpdateSwitcherScheduleServerRequestFieldNumber = 21;
  private global::UpdateSwitcherScheduleServerRequest updateSwitcherScheduleServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateSwitcherScheduleServerRequest UpdateSwitcherScheduleServerRequest {
    get { return updateSwitcherScheduleServerRequest_; }
    set {
      updateSwitcherScheduleServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "updateSwitcherScheduleServerResponse" field.</summary>
  public const int UpdateSwitcherScheduleServerResponseFieldNumber = 22;
  private global::UpdateSwitcherScheduleServerResponse updateSwitcherScheduleServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateSwitcherScheduleServerResponse UpdateSwitcherScheduleServerResponse {
    get { return updateSwitcherScheduleServerResponse_; }
    set {
      updateSwitcherScheduleServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "deleteSwitcherScheduleServerRequest" field.</summary>
  public const int DeleteSwitcherScheduleServerRequestFieldNumber = 23;
  private global::DeleteSwitcherScheduleServerRequest deleteSwitcherScheduleServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DeleteSwitcherScheduleServerRequest DeleteSwitcherScheduleServerRequest {
    get { return deleteSwitcherScheduleServerRequest_; }
    set {
      deleteSwitcherScheduleServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "deleteSwitcherScheduleServerResponse" field.</summary>
  public const int DeleteSwitcherScheduleServerResponseFieldNumber = 24;
  private global::DeleteSwitcherScheduleServerResponse deleteSwitcherScheduleServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DeleteSwitcherScheduleServerResponse DeleteSwitcherScheduleServerResponse {
    get { return deleteSwitcherScheduleServerResponse_; }
    set {
      deleteSwitcherScheduleServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "setActiveSwitcherScheduleServerRequest" field.</summary>
  public const int SetActiveSwitcherScheduleServerRequestFieldNumber = 25;
  private global::SetActiveSwitcherScheduleServerRequest setActiveSwitcherScheduleServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SetActiveSwitcherScheduleServerRequest SetActiveSwitcherScheduleServerRequest {
    get { return setActiveSwitcherScheduleServerRequest_; }
    set {
      setActiveSwitcherScheduleServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "setActiveSwitcherScheduleServerResponse" field.</summary>
  public const int SetActiveSwitcherScheduleServerResponseFieldNumber = 26;
  private global::SetActiveSwitcherScheduleServerResponse setActiveSwitcherScheduleServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SetActiveSwitcherScheduleServerResponse SetActiveSwitcherScheduleServerResponse {
    get { return setActiveSwitcherScheduleServerResponse_; }
    set {
      setActiveSwitcherScheduleServerResponse_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SwitcherServerMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SwitcherServerMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(GetSwitchersServerRequest, other.GetSwitchersServerRequest)) return false;
    if (!object.Equals(GetSwitchersServerResponse, other.GetSwitchersServerResponse)) return false;
    if (!object.Equals(GetSwitcherServerRequest, other.GetSwitcherServerRequest)) return false;
    if (!object.Equals(GetSwitcherServerResponse, other.GetSwitcherServerResponse)) return false;
    if (!object.Equals(GetLogSwitcherServerRequest, other.GetLogSwitcherServerRequest)) return false;
    if (!object.Equals(GetLogSwitcherServerResponse, other.GetLogSwitcherServerResponse)) return false;
    if (!object.Equals(GetIconSwitchersServerRequest, other.GetIconSwitchersServerRequest)) return false;
    if (!object.Equals(GetIconSwitchersServerResponse, other.GetIconSwitchersServerResponse)) return false;
    if (!object.Equals(UpdateSwitcherServerRequest, other.UpdateSwitcherServerRequest)) return false;
    if (!object.Equals(UpdateSwitcherServerResponse, other.UpdateSwitcherServerResponse)) return false;
    if (!object.Equals(SwitcherServerRequest, other.SwitcherServerRequest)) return false;
    if (!object.Equals(SwitcherServerResponse, other.SwitcherServerResponse)) return false;
    if (!object.Equals(GetSwitcherSchedulesServerRequest, other.GetSwitcherSchedulesServerRequest)) return false;
    if (!object.Equals(GetSwitcherSchedulesServerResponse, other.GetSwitcherSchedulesServerResponse)) return false;
    if (!object.Equals(GetSwitcherScheduleServerRequest, other.GetSwitcherScheduleServerRequest)) return false;
    if (!object.Equals(GetSwitcherScheduleServerResponse, other.GetSwitcherScheduleServerResponse)) return false;
    if (!object.Equals(GetCountSwitcherScheduleServerRequest, other.GetCountSwitcherScheduleServerRequest)) return false;
    if (!object.Equals(GetCountSwitcherScheduleServerResponse, other.GetCountSwitcherScheduleServerResponse)) return false;
    if (!object.Equals(AddSwitcherScheduleServerRequest, other.AddSwitcherScheduleServerRequest)) return false;
    if (!object.Equals(AddSwitcherScheduleServerResponse, other.AddSwitcherScheduleServerResponse)) return false;
    if (!object.Equals(UpdateSwitcherScheduleServerRequest, other.UpdateSwitcherScheduleServerRequest)) return false;
    if (!object.Equals(UpdateSwitcherScheduleServerResponse, other.UpdateSwitcherScheduleServerResponse)) return false;
    if (!object.Equals(DeleteSwitcherScheduleServerRequest, other.DeleteSwitcherScheduleServerRequest)) return false;
    if (!object.Equals(DeleteSwitcherScheduleServerResponse, other.DeleteSwitcherScheduleServerResponse)) return false;
    if (!object.Equals(SetActiveSwitcherScheduleServerRequest, other.SetActiveSwitcherScheduleServerRequest)) return false;
    if (!object.Equals(SetActiveSwitcherScheduleServerResponse, other.SetActiveSwitcherScheduleServerResponse)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (getSwitchersServerRequest_ != null) hash ^= GetSwitchersServerRequest.GetHashCode();
    if (getSwitchersServerResponse_ != null) hash ^= GetSwitchersServerResponse.GetHashCode();
    if (getSwitcherServerRequest_ != null) hash ^= GetSwitcherServerRequest.GetHashCode();
    if (getSwitcherServerResponse_ != null) hash ^= GetSwitcherServerResponse.GetHashCode();
    if (getLogSwitcherServerRequest_ != null) hash ^= GetLogSwitcherServerRequest.GetHashCode();
    if (getLogSwitcherServerResponse_ != null) hash ^= GetLogSwitcherServerResponse.GetHashCode();
    if (getIconSwitchersServerRequest_ != null) hash ^= GetIconSwitchersServerRequest.GetHashCode();
    if (getIconSwitchersServerResponse_ != null) hash ^= GetIconSwitchersServerResponse.GetHashCode();
    if (updateSwitcherServerRequest_ != null) hash ^= UpdateSwitcherServerRequest.GetHashCode();
    if (updateSwitcherServerResponse_ != null) hash ^= UpdateSwitcherServerResponse.GetHashCode();
    if (switcherServerRequest_ != null) hash ^= SwitcherServerRequest.GetHashCode();
    if (switcherServerResponse_ != null) hash ^= SwitcherServerResponse.GetHashCode();
    if (getSwitcherSchedulesServerRequest_ != null) hash ^= GetSwitcherSchedulesServerRequest.GetHashCode();
    if (getSwitcherSchedulesServerResponse_ != null) hash ^= GetSwitcherSchedulesServerResponse.GetHashCode();
    if (getSwitcherScheduleServerRequest_ != null) hash ^= GetSwitcherScheduleServerRequest.GetHashCode();
    if (getSwitcherScheduleServerResponse_ != null) hash ^= GetSwitcherScheduleServerResponse.GetHashCode();
    if (getCountSwitcherScheduleServerRequest_ != null) hash ^= GetCountSwitcherScheduleServerRequest.GetHashCode();
    if (getCountSwitcherScheduleServerResponse_ != null) hash ^= GetCountSwitcherScheduleServerResponse.GetHashCode();
    if (addSwitcherScheduleServerRequest_ != null) hash ^= AddSwitcherScheduleServerRequest.GetHashCode();
    if (addSwitcherScheduleServerResponse_ != null) hash ^= AddSwitcherScheduleServerResponse.GetHashCode();
    if (updateSwitcherScheduleServerRequest_ != null) hash ^= UpdateSwitcherScheduleServerRequest.GetHashCode();
    if (updateSwitcherScheduleServerResponse_ != null) hash ^= UpdateSwitcherScheduleServerResponse.GetHashCode();
    if (deleteSwitcherScheduleServerRequest_ != null) hash ^= DeleteSwitcherScheduleServerRequest.GetHashCode();
    if (deleteSwitcherScheduleServerResponse_ != null) hash ^= DeleteSwitcherScheduleServerResponse.GetHashCode();
    if (setActiveSwitcherScheduleServerRequest_ != null) hash ^= SetActiveSwitcherScheduleServerRequest.GetHashCode();
    if (setActiveSwitcherScheduleServerResponse_ != null) hash ^= SetActiveSwitcherScheduleServerResponse.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (getSwitchersServerRequest_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(GetSwitchersServerRequest);
    }
    if (getSwitchersServerResponse_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(GetSwitchersServerResponse);
    }
    if (getSwitcherServerRequest_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(GetSwitcherServerRequest);
    }
    if (getSwitcherServerResponse_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(GetSwitcherServerResponse);
    }
    if (getLogSwitcherServerRequest_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(GetLogSwitcherServerRequest);
    }
    if (getLogSwitcherServerResponse_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(GetLogSwitcherServerResponse);
    }
    if (getIconSwitchersServerRequest_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(GetIconSwitchersServerRequest);
    }
    if (getIconSwitchersServerResponse_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(GetIconSwitchersServerResponse);
    }
    if (updateSwitcherServerRequest_ != null) {
      output.WriteRawTag(74);
      output.WriteMessage(UpdateSwitcherServerRequest);
    }
    if (updateSwitcherServerResponse_ != null) {
      output.WriteRawTag(82);
      output.WriteMessage(UpdateSwitcherServerResponse);
    }
    if (switcherServerRequest_ != null) {
      output.WriteRawTag(90);
      output.WriteMessage(SwitcherServerRequest);
    }
    if (switcherServerResponse_ != null) {
      output.WriteRawTag(98);
      output.WriteMessage(SwitcherServerResponse);
    }
    if (getSwitcherSchedulesServerRequest_ != null) {
      output.WriteRawTag(106);
      output.WriteMessage(GetSwitcherSchedulesServerRequest);
    }
    if (getSwitcherSchedulesServerResponse_ != null) {
      output.WriteRawTag(114);
      output.WriteMessage(GetSwitcherSchedulesServerResponse);
    }
    if (getSwitcherScheduleServerRequest_ != null) {
      output.WriteRawTag(122);
      output.WriteMessage(GetSwitcherScheduleServerRequest);
    }
    if (getSwitcherScheduleServerResponse_ != null) {
      output.WriteRawTag(130, 1);
      output.WriteMessage(GetSwitcherScheduleServerResponse);
    }
    if (getCountSwitcherScheduleServerRequest_ != null) {
      output.WriteRawTag(138, 1);
      output.WriteMessage(GetCountSwitcherScheduleServerRequest);
    }
    if (getCountSwitcherScheduleServerResponse_ != null) {
      output.WriteRawTag(146, 1);
      output.WriteMessage(GetCountSwitcherScheduleServerResponse);
    }
    if (addSwitcherScheduleServerRequest_ != null) {
      output.WriteRawTag(154, 1);
      output.WriteMessage(AddSwitcherScheduleServerRequest);
    }
    if (addSwitcherScheduleServerResponse_ != null) {
      output.WriteRawTag(162, 1);
      output.WriteMessage(AddSwitcherScheduleServerResponse);
    }
    if (updateSwitcherScheduleServerRequest_ != null) {
      output.WriteRawTag(170, 1);
      output.WriteMessage(UpdateSwitcherScheduleServerRequest);
    }
    if (updateSwitcherScheduleServerResponse_ != null) {
      output.WriteRawTag(178, 1);
      output.WriteMessage(UpdateSwitcherScheduleServerResponse);
    }
    if (deleteSwitcherScheduleServerRequest_ != null) {
      output.WriteRawTag(186, 1);
      output.WriteMessage(DeleteSwitcherScheduleServerRequest);
    }
    if (deleteSwitcherScheduleServerResponse_ != null) {
      output.WriteRawTag(194, 1);
      output.WriteMessage(DeleteSwitcherScheduleServerResponse);
    }
    if (setActiveSwitcherScheduleServerRequest_ != null) {
      output.WriteRawTag(202, 1);
      output.WriteMessage(SetActiveSwitcherScheduleServerRequest);
    }
    if (setActiveSwitcherScheduleServerResponse_ != null) {
      output.WriteRawTag(210, 1);
      output.WriteMessage(SetActiveSwitcherScheduleServerResponse);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (getSwitchersServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetSwitchersServerRequest);
    }
    if (getSwitchersServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetSwitchersServerResponse);
    }
    if (getSwitcherServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetSwitcherServerRequest);
    }
    if (getSwitcherServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetSwitcherServerResponse);
    }
    if (getLogSwitcherServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetLogSwitcherServerRequest);
    }
    if (getLogSwitcherServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetLogSwitcherServerResponse);
    }
    if (getIconSwitchersServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetIconSwitchersServerRequest);
    }
    if (getIconSwitchersServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetIconSwitchersServerResponse);
    }
    if (updateSwitcherServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateSwitcherServerRequest);
    }
    if (updateSwitcherServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateSwitcherServerResponse);
    }
    if (switcherServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SwitcherServerRequest);
    }
    if (switcherServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SwitcherServerResponse);
    }
    if (getSwitcherSchedulesServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetSwitcherSchedulesServerRequest);
    }
    if (getSwitcherSchedulesServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetSwitcherSchedulesServerResponse);
    }
    if (getSwitcherScheduleServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetSwitcherScheduleServerRequest);
    }
    if (getSwitcherScheduleServerResponse_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetSwitcherScheduleServerResponse);
    }
    if (getCountSwitcherScheduleServerRequest_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetCountSwitcherScheduleServerRequest);
    }
    if (getCountSwitcherScheduleServerResponse_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetCountSwitcherScheduleServerResponse);
    }
    if (addSwitcherScheduleServerRequest_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(AddSwitcherScheduleServerRequest);
    }
    if (addSwitcherScheduleServerResponse_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(AddSwitcherScheduleServerResponse);
    }
    if (updateSwitcherScheduleServerRequest_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(UpdateSwitcherScheduleServerRequest);
    }
    if (updateSwitcherScheduleServerResponse_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(UpdateSwitcherScheduleServerResponse);
    }
    if (deleteSwitcherScheduleServerRequest_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(DeleteSwitcherScheduleServerRequest);
    }
    if (deleteSwitcherScheduleServerResponse_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(DeleteSwitcherScheduleServerResponse);
    }
    if (setActiveSwitcherScheduleServerRequest_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(SetActiveSwitcherScheduleServerRequest);
    }
    if (setActiveSwitcherScheduleServerResponse_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(SetActiveSwitcherScheduleServerResponse);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SwitcherServerMessage other) {
    if (other == null) {
      return;
    }
    if (other.getSwitchersServerRequest_ != null) {
      if (getSwitchersServerRequest_ == null) {
        GetSwitchersServerRequest = new global::GetSwitchersServerRequest();
      }
      GetSwitchersServerRequest.MergeFrom(other.GetSwitchersServerRequest);
    }
    if (other.getSwitchersServerResponse_ != null) {
      if (getSwitchersServerResponse_ == null) {
        GetSwitchersServerResponse = new global::GetSwitchersServerResponse();
      }
      GetSwitchersServerResponse.MergeFrom(other.GetSwitchersServerResponse);
    }
    if (other.getSwitcherServerRequest_ != null) {
      if (getSwitcherServerRequest_ == null) {
        GetSwitcherServerRequest = new global::GetSwitcherServerRequest();
      }
      GetSwitcherServerRequest.MergeFrom(other.GetSwitcherServerRequest);
    }
    if (other.getSwitcherServerResponse_ != null) {
      if (getSwitcherServerResponse_ == null) {
        GetSwitcherServerResponse = new global::GetSwitcherServerResponse();
      }
      GetSwitcherServerResponse.MergeFrom(other.GetSwitcherServerResponse);
    }
    if (other.getLogSwitcherServerRequest_ != null) {
      if (getLogSwitcherServerRequest_ == null) {
        GetLogSwitcherServerRequest = new global::GetLogSwitcherServerRequest();
      }
      GetLogSwitcherServerRequest.MergeFrom(other.GetLogSwitcherServerRequest);
    }
    if (other.getLogSwitcherServerResponse_ != null) {
      if (getLogSwitcherServerResponse_ == null) {
        GetLogSwitcherServerResponse = new global::GetLogSwitcherServerResponse();
      }
      GetLogSwitcherServerResponse.MergeFrom(other.GetLogSwitcherServerResponse);
    }
    if (other.getIconSwitchersServerRequest_ != null) {
      if (getIconSwitchersServerRequest_ == null) {
        GetIconSwitchersServerRequest = new global::GetIconSwitchersServerRequest();
      }
      GetIconSwitchersServerRequest.MergeFrom(other.GetIconSwitchersServerRequest);
    }
    if (other.getIconSwitchersServerResponse_ != null) {
      if (getIconSwitchersServerResponse_ == null) {
        GetIconSwitchersServerResponse = new global::GetIconSwitchersServerResponse();
      }
      GetIconSwitchersServerResponse.MergeFrom(other.GetIconSwitchersServerResponse);
    }
    if (other.updateSwitcherServerRequest_ != null) {
      if (updateSwitcherServerRequest_ == null) {
        UpdateSwitcherServerRequest = new global::UpdateSwitcherServerRequest();
      }
      UpdateSwitcherServerRequest.MergeFrom(other.UpdateSwitcherServerRequest);
    }
    if (other.updateSwitcherServerResponse_ != null) {
      if (updateSwitcherServerResponse_ == null) {
        UpdateSwitcherServerResponse = new global::UpdateSwitcherServerResponse();
      }
      UpdateSwitcherServerResponse.MergeFrom(other.UpdateSwitcherServerResponse);
    }
    if (other.switcherServerRequest_ != null) {
      if (switcherServerRequest_ == null) {
        SwitcherServerRequest = new global::SwitcherServerRequest();
      }
      SwitcherServerRequest.MergeFrom(other.SwitcherServerRequest);
    }
    if (other.switcherServerResponse_ != null) {
      if (switcherServerResponse_ == null) {
        SwitcherServerResponse = new global::SwitcherServerResponse();
      }
      SwitcherServerResponse.MergeFrom(other.SwitcherServerResponse);
    }
    if (other.getSwitcherSchedulesServerRequest_ != null) {
      if (getSwitcherSchedulesServerRequest_ == null) {
        GetSwitcherSchedulesServerRequest = new global::GetSwitcherSchedulesServerRequest();
      }
      GetSwitcherSchedulesServerRequest.MergeFrom(other.GetSwitcherSchedulesServerRequest);
    }
    if (other.getSwitcherSchedulesServerResponse_ != null) {
      if (getSwitcherSchedulesServerResponse_ == null) {
        GetSwitcherSchedulesServerResponse = new global::GetSwitcherSchedulesServerResponse();
      }
      GetSwitcherSchedulesServerResponse.MergeFrom(other.GetSwitcherSchedulesServerResponse);
    }
    if (other.getSwitcherScheduleServerRequest_ != null) {
      if (getSwitcherScheduleServerRequest_ == null) {
        GetSwitcherScheduleServerRequest = new global::GetSwitcherScheduleServerRequest();
      }
      GetSwitcherScheduleServerRequest.MergeFrom(other.GetSwitcherScheduleServerRequest);
    }
    if (other.getSwitcherScheduleServerResponse_ != null) {
      if (getSwitcherScheduleServerResponse_ == null) {
        GetSwitcherScheduleServerResponse = new global::GetSwitcherScheduleServerResponse();
      }
      GetSwitcherScheduleServerResponse.MergeFrom(other.GetSwitcherScheduleServerResponse);
    }
    if (other.getCountSwitcherScheduleServerRequest_ != null) {
      if (getCountSwitcherScheduleServerRequest_ == null) {
        GetCountSwitcherScheduleServerRequest = new global::GetCountSwitcherScheduleServerRequest();
      }
      GetCountSwitcherScheduleServerRequest.MergeFrom(other.GetCountSwitcherScheduleServerRequest);
    }
    if (other.getCountSwitcherScheduleServerResponse_ != null) {
      if (getCountSwitcherScheduleServerResponse_ == null) {
        GetCountSwitcherScheduleServerResponse = new global::GetCountSwitcherScheduleServerResponse();
      }
      GetCountSwitcherScheduleServerResponse.MergeFrom(other.GetCountSwitcherScheduleServerResponse);
    }
    if (other.addSwitcherScheduleServerRequest_ != null) {
      if (addSwitcherScheduleServerRequest_ == null) {
        AddSwitcherScheduleServerRequest = new global::AddSwitcherScheduleServerRequest();
      }
      AddSwitcherScheduleServerRequest.MergeFrom(other.AddSwitcherScheduleServerRequest);
    }
    if (other.addSwitcherScheduleServerResponse_ != null) {
      if (addSwitcherScheduleServerResponse_ == null) {
        AddSwitcherScheduleServerResponse = new global::AddSwitcherScheduleServerResponse();
      }
      AddSwitcherScheduleServerResponse.MergeFrom(other.AddSwitcherScheduleServerResponse);
    }
    if (other.updateSwitcherScheduleServerRequest_ != null) {
      if (updateSwitcherScheduleServerRequest_ == null) {
        UpdateSwitcherScheduleServerRequest = new global::UpdateSwitcherScheduleServerRequest();
      }
      UpdateSwitcherScheduleServerRequest.MergeFrom(other.UpdateSwitcherScheduleServerRequest);
    }
    if (other.updateSwitcherScheduleServerResponse_ != null) {
      if (updateSwitcherScheduleServerResponse_ == null) {
        UpdateSwitcherScheduleServerResponse = new global::UpdateSwitcherScheduleServerResponse();
      }
      UpdateSwitcherScheduleServerResponse.MergeFrom(other.UpdateSwitcherScheduleServerResponse);
    }
    if (other.deleteSwitcherScheduleServerRequest_ != null) {
      if (deleteSwitcherScheduleServerRequest_ == null) {
        DeleteSwitcherScheduleServerRequest = new global::DeleteSwitcherScheduleServerRequest();
      }
      DeleteSwitcherScheduleServerRequest.MergeFrom(other.DeleteSwitcherScheduleServerRequest);
    }
    if (other.deleteSwitcherScheduleServerResponse_ != null) {
      if (deleteSwitcherScheduleServerResponse_ == null) {
        DeleteSwitcherScheduleServerResponse = new global::DeleteSwitcherScheduleServerResponse();
      }
      DeleteSwitcherScheduleServerResponse.MergeFrom(other.DeleteSwitcherScheduleServerResponse);
    }
    if (other.setActiveSwitcherScheduleServerRequest_ != null) {
      if (setActiveSwitcherScheduleServerRequest_ == null) {
        SetActiveSwitcherScheduleServerRequest = new global::SetActiveSwitcherScheduleServerRequest();
      }
      SetActiveSwitcherScheduleServerRequest.MergeFrom(other.SetActiveSwitcherScheduleServerRequest);
    }
    if (other.setActiveSwitcherScheduleServerResponse_ != null) {
      if (setActiveSwitcherScheduleServerResponse_ == null) {
        SetActiveSwitcherScheduleServerResponse = new global::SetActiveSwitcherScheduleServerResponse();
      }
      SetActiveSwitcherScheduleServerResponse.MergeFrom(other.SetActiveSwitcherScheduleServerResponse);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (getSwitchersServerRequest_ == null) {
            GetSwitchersServerRequest = new global::GetSwitchersServerRequest();
          }
          input.ReadMessage(GetSwitchersServerRequest);
          break;
        }
        case 18: {
          if (getSwitchersServerResponse_ == null) {
            GetSwitchersServerResponse = new global::GetSwitchersServerResponse();
          }
          input.ReadMessage(GetSwitchersServerResponse);
          break;
        }
        case 26: {
          if (getSwitcherServerRequest_ == null) {
            GetSwitcherServerRequest = new global::GetSwitcherServerRequest();
          }
          input.ReadMessage(GetSwitcherServerRequest);
          break;
        }
        case 34: {
          if (getSwitcherServerResponse_ == null) {
            GetSwitcherServerResponse = new global::GetSwitcherServerResponse();
          }
          input.ReadMessage(GetSwitcherServerResponse);
          break;
        }
        case 42: {
          if (getLogSwitcherServerRequest_ == null) {
            GetLogSwitcherServerRequest = new global::GetLogSwitcherServerRequest();
          }
          input.ReadMessage(GetLogSwitcherServerRequest);
          break;
        }
        case 50: {
          if (getLogSwitcherServerResponse_ == null) {
            GetLogSwitcherServerResponse = new global::GetLogSwitcherServerResponse();
          }
          input.ReadMessage(GetLogSwitcherServerResponse);
          break;
        }
        case 58: {
          if (getIconSwitchersServerRequest_ == null) {
            GetIconSwitchersServerRequest = new global::GetIconSwitchersServerRequest();
          }
          input.ReadMessage(GetIconSwitchersServerRequest);
          break;
        }
        case 66: {
          if (getIconSwitchersServerResponse_ == null) {
            GetIconSwitchersServerResponse = new global::GetIconSwitchersServerResponse();
          }
          input.ReadMessage(GetIconSwitchersServerResponse);
          break;
        }
        case 74: {
          if (updateSwitcherServerRequest_ == null) {
            UpdateSwitcherServerRequest = new global::UpdateSwitcherServerRequest();
          }
          input.ReadMessage(UpdateSwitcherServerRequest);
          break;
        }
        case 82: {
          if (updateSwitcherServerResponse_ == null) {
            UpdateSwitcherServerResponse = new global::UpdateSwitcherServerResponse();
          }
          input.ReadMessage(UpdateSwitcherServerResponse);
          break;
        }
        case 90: {
          if (switcherServerRequest_ == null) {
            SwitcherServerRequest = new global::SwitcherServerRequest();
          }
          input.ReadMessage(SwitcherServerRequest);
          break;
        }
        case 98: {
          if (switcherServerResponse_ == null) {
            SwitcherServerResponse = new global::SwitcherServerResponse();
          }
          input.ReadMessage(SwitcherServerResponse);
          break;
        }
        case 106: {
          if (getSwitcherSchedulesServerRequest_ == null) {
            GetSwitcherSchedulesServerRequest = new global::GetSwitcherSchedulesServerRequest();
          }
          input.ReadMessage(GetSwitcherSchedulesServerRequest);
          break;
        }
        case 114: {
          if (getSwitcherSchedulesServerResponse_ == null) {
            GetSwitcherSchedulesServerResponse = new global::GetSwitcherSchedulesServerResponse();
          }
          input.ReadMessage(GetSwitcherSchedulesServerResponse);
          break;
        }
        case 122: {
          if (getSwitcherScheduleServerRequest_ == null) {
            GetSwitcherScheduleServerRequest = new global::GetSwitcherScheduleServerRequest();
          }
          input.ReadMessage(GetSwitcherScheduleServerRequest);
          break;
        }
        case 130: {
          if (getSwitcherScheduleServerResponse_ == null) {
            GetSwitcherScheduleServerResponse = new global::GetSwitcherScheduleServerResponse();
          }
          input.ReadMessage(GetSwitcherScheduleServerResponse);
          break;
        }
        case 138: {
          if (getCountSwitcherScheduleServerRequest_ == null) {
            GetCountSwitcherScheduleServerRequest = new global::GetCountSwitcherScheduleServerRequest();
          }
          input.ReadMessage(GetCountSwitcherScheduleServerRequest);
          break;
        }
        case 146: {
          if (getCountSwitcherScheduleServerResponse_ == null) {
            GetCountSwitcherScheduleServerResponse = new global::GetCountSwitcherScheduleServerResponse();
          }
          input.ReadMessage(GetCountSwitcherScheduleServerResponse);
          break;
        }
        case 154: {
          if (addSwitcherScheduleServerRequest_ == null) {
            AddSwitcherScheduleServerRequest = new global::AddSwitcherScheduleServerRequest();
          }
          input.ReadMessage(AddSwitcherScheduleServerRequest);
          break;
        }
        case 162: {
          if (addSwitcherScheduleServerResponse_ == null) {
            AddSwitcherScheduleServerResponse = new global::AddSwitcherScheduleServerResponse();
          }
          input.ReadMessage(AddSwitcherScheduleServerResponse);
          break;
        }
        case 170: {
          if (updateSwitcherScheduleServerRequest_ == null) {
            UpdateSwitcherScheduleServerRequest = new global::UpdateSwitcherScheduleServerRequest();
          }
          input.ReadMessage(UpdateSwitcherScheduleServerRequest);
          break;
        }
        case 178: {
          if (updateSwitcherScheduleServerResponse_ == null) {
            UpdateSwitcherScheduleServerResponse = new global::UpdateSwitcherScheduleServerResponse();
          }
          input.ReadMessage(UpdateSwitcherScheduleServerResponse);
          break;
        }
        case 186: {
          if (deleteSwitcherScheduleServerRequest_ == null) {
            DeleteSwitcherScheduleServerRequest = new global::DeleteSwitcherScheduleServerRequest();
          }
          input.ReadMessage(DeleteSwitcherScheduleServerRequest);
          break;
        }
        case 194: {
          if (deleteSwitcherScheduleServerResponse_ == null) {
            DeleteSwitcherScheduleServerResponse = new global::DeleteSwitcherScheduleServerResponse();
          }
          input.ReadMessage(DeleteSwitcherScheduleServerResponse);
          break;
        }
        case 202: {
          if (setActiveSwitcherScheduleServerRequest_ == null) {
            SetActiveSwitcherScheduleServerRequest = new global::SetActiveSwitcherScheduleServerRequest();
          }
          input.ReadMessage(SetActiveSwitcherScheduleServerRequest);
          break;
        }
        case 210: {
          if (setActiveSwitcherScheduleServerResponse_ == null) {
            SetActiveSwitcherScheduleServerResponse = new global::SetActiveSwitcherScheduleServerResponse();
          }
          input.ReadMessage(SetActiveSwitcherScheduleServerResponse);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Rèm cửa 
/// </summary>
public sealed partial class CurtainSwitcherServerMessage : pb::IMessage<CurtainSwitcherServerMessage> {
  private static readonly pb::MessageParser<CurtainSwitcherServerMessage> _parser = new pb::MessageParser<CurtainSwitcherServerMessage>(() => new CurtainSwitcherServerMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CurtainSwitcherServerMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[299]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CurtainSwitcherServerMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CurtainSwitcherServerMessage(CurtainSwitcherServerMessage other) : this() {
    getCurtainSwitcherServerRequest_ = other.getCurtainSwitcherServerRequest_ != null ? other.getCurtainSwitcherServerRequest_.Clone() : null;
    getCurtainSwitcherServerResponse_ = other.getCurtainSwitcherServerResponse_ != null ? other.getCurtainSwitcherServerResponse_.Clone() : null;
    updateCurtainSwitcherServerRequest_ = other.updateCurtainSwitcherServerRequest_ != null ? other.updateCurtainSwitcherServerRequest_.Clone() : null;
    updateCurtainSwitcherServerResponse_ = other.updateCurtainSwitcherServerResponse_ != null ? other.updateCurtainSwitcherServerResponse_.Clone() : null;
    getCurtainSwitcherStateServerRequest_ = other.getCurtainSwitcherStateServerRequest_ != null ? other.getCurtainSwitcherStateServerRequest_.Clone() : null;
    getCurtainSwitcherStateServerResponse_ = other.getCurtainSwitcherStateServerResponse_ != null ? other.getCurtainSwitcherStateServerResponse_.Clone() : null;
    curtainSwitcherServerRequest_ = other.curtainSwitcherServerRequest_ != null ? other.curtainSwitcherServerRequest_.Clone() : null;
    curtainSwitcherServerResponse_ = other.curtainSwitcherServerResponse_ != null ? other.curtainSwitcherServerResponse_.Clone() : null;
    getCurtainSwitcherSchedulesServerRequest_ = other.getCurtainSwitcherSchedulesServerRequest_ != null ? other.getCurtainSwitcherSchedulesServerRequest_.Clone() : null;
    getCurtainSwitcherSchedulesServerResponse_ = other.getCurtainSwitcherSchedulesServerResponse_ != null ? other.getCurtainSwitcherSchedulesServerResponse_.Clone() : null;
    getCurtainSwitcherScheduleServerRequest_ = other.getCurtainSwitcherScheduleServerRequest_ != null ? other.getCurtainSwitcherScheduleServerRequest_.Clone() : null;
    getCurtainSwitcherScheduleServerResponse_ = other.getCurtainSwitcherScheduleServerResponse_ != null ? other.getCurtainSwitcherScheduleServerResponse_.Clone() : null;
    getCountCurtainSwitcherScheduleServerRequest_ = other.getCountCurtainSwitcherScheduleServerRequest_ != null ? other.getCountCurtainSwitcherScheduleServerRequest_.Clone() : null;
    getCountCurtainSwitcherScheduleServerResponse_ = other.getCountCurtainSwitcherScheduleServerResponse_ != null ? other.getCountCurtainSwitcherScheduleServerResponse_.Clone() : null;
    addCurtainSwitcherScheduleServerRequest_ = other.addCurtainSwitcherScheduleServerRequest_ != null ? other.addCurtainSwitcherScheduleServerRequest_.Clone() : null;
    addCurtainSwitcherScheduleServerResponse_ = other.addCurtainSwitcherScheduleServerResponse_ != null ? other.addCurtainSwitcherScheduleServerResponse_.Clone() : null;
    updateCurtainSwitcherScheduleServerRequest_ = other.updateCurtainSwitcherScheduleServerRequest_ != null ? other.updateCurtainSwitcherScheduleServerRequest_.Clone() : null;
    updateCurtainSwitcherScheduleServerResponse_ = other.updateCurtainSwitcherScheduleServerResponse_ != null ? other.updateCurtainSwitcherScheduleServerResponse_.Clone() : null;
    deleteCurtainSwitcherScheduleServerRequest_ = other.deleteCurtainSwitcherScheduleServerRequest_ != null ? other.deleteCurtainSwitcherScheduleServerRequest_.Clone() : null;
    deleteCurtainSwitcherScheduleServerResponse_ = other.deleteCurtainSwitcherScheduleServerResponse_ != null ? other.deleteCurtainSwitcherScheduleServerResponse_.Clone() : null;
    setActiveCurtainSwitcherScheduleServerRequest_ = other.setActiveCurtainSwitcherScheduleServerRequest_ != null ? other.setActiveCurtainSwitcherScheduleServerRequest_.Clone() : null;
    setActiveCurtainSwitcherScheduleServerResponse_ = other.setActiveCurtainSwitcherScheduleServerResponse_ != null ? other.setActiveCurtainSwitcherScheduleServerResponse_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CurtainSwitcherServerMessage Clone() {
    return new CurtainSwitcherServerMessage(this);
  }

  /// <summary>Field number for the "getCurtainSwitcherServerRequest" field.</summary>
  public const int GetCurtainSwitcherServerRequestFieldNumber = 1;
  private global::GetCurtainSwitcherServerRequest getCurtainSwitcherServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetCurtainSwitcherServerRequest GetCurtainSwitcherServerRequest {
    get { return getCurtainSwitcherServerRequest_; }
    set {
      getCurtainSwitcherServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getCurtainSwitcherServerResponse" field.</summary>
  public const int GetCurtainSwitcherServerResponseFieldNumber = 2;
  private global::GetCurtainSwitcherServerResponse getCurtainSwitcherServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetCurtainSwitcherServerResponse GetCurtainSwitcherServerResponse {
    get { return getCurtainSwitcherServerResponse_; }
    set {
      getCurtainSwitcherServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "updateCurtainSwitcherServerRequest" field.</summary>
  public const int UpdateCurtainSwitcherServerRequestFieldNumber = 3;
  private global::UpdateCurtainSwitcherServerRequest updateCurtainSwitcherServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateCurtainSwitcherServerRequest UpdateCurtainSwitcherServerRequest {
    get { return updateCurtainSwitcherServerRequest_; }
    set {
      updateCurtainSwitcherServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "updateCurtainSwitcherServerResponse" field.</summary>
  public const int UpdateCurtainSwitcherServerResponseFieldNumber = 4;
  private global::UpdateCurtainSwitcherServerResponse updateCurtainSwitcherServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateCurtainSwitcherServerResponse UpdateCurtainSwitcherServerResponse {
    get { return updateCurtainSwitcherServerResponse_; }
    set {
      updateCurtainSwitcherServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "getCurtainSwitcherStateServerRequest" field.</summary>
  public const int GetCurtainSwitcherStateServerRequestFieldNumber = 5;
  private global::GetCurtainSwitcherStateServerRequest getCurtainSwitcherStateServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetCurtainSwitcherStateServerRequest GetCurtainSwitcherStateServerRequest {
    get { return getCurtainSwitcherStateServerRequest_; }
    set {
      getCurtainSwitcherStateServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getCurtainSwitcherStateServerResponse" field.</summary>
  public const int GetCurtainSwitcherStateServerResponseFieldNumber = 6;
  private global::GetCurtainSwitcherStateServerResponse getCurtainSwitcherStateServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetCurtainSwitcherStateServerResponse GetCurtainSwitcherStateServerResponse {
    get { return getCurtainSwitcherStateServerResponse_; }
    set {
      getCurtainSwitcherStateServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "curtainSwitcherServerRequest" field.</summary>
  public const int CurtainSwitcherServerRequestFieldNumber = 7;
  private global::CurtainSwitcherServerRequest curtainSwitcherServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::CurtainSwitcherServerRequest CurtainSwitcherServerRequest {
    get { return curtainSwitcherServerRequest_; }
    set {
      curtainSwitcherServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "curtainSwitcherServerResponse" field.</summary>
  public const int CurtainSwitcherServerResponseFieldNumber = 8;
  private global::CurtainSwitcherServerResponse curtainSwitcherServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::CurtainSwitcherServerResponse CurtainSwitcherServerResponse {
    get { return curtainSwitcherServerResponse_; }
    set {
      curtainSwitcherServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "getCurtainSwitcherSchedulesServerRequest" field.</summary>
  public const int GetCurtainSwitcherSchedulesServerRequestFieldNumber = 9;
  private global::GetCurtainSwitcherSchedulesServerRequest getCurtainSwitcherSchedulesServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetCurtainSwitcherSchedulesServerRequest GetCurtainSwitcherSchedulesServerRequest {
    get { return getCurtainSwitcherSchedulesServerRequest_; }
    set {
      getCurtainSwitcherSchedulesServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getCurtainSwitcherSchedulesServerResponse" field.</summary>
  public const int GetCurtainSwitcherSchedulesServerResponseFieldNumber = 10;
  private global::GetCurtainSwitcherSchedulesServerResponse getCurtainSwitcherSchedulesServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetCurtainSwitcherSchedulesServerResponse GetCurtainSwitcherSchedulesServerResponse {
    get { return getCurtainSwitcherSchedulesServerResponse_; }
    set {
      getCurtainSwitcherSchedulesServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "getCurtainSwitcherScheduleServerRequest" field.</summary>
  public const int GetCurtainSwitcherScheduleServerRequestFieldNumber = 11;
  private global::GetCurtainSwitcherScheduleServerRequest getCurtainSwitcherScheduleServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetCurtainSwitcherScheduleServerRequest GetCurtainSwitcherScheduleServerRequest {
    get { return getCurtainSwitcherScheduleServerRequest_; }
    set {
      getCurtainSwitcherScheduleServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getCurtainSwitcherScheduleServerResponse" field.</summary>
  public const int GetCurtainSwitcherScheduleServerResponseFieldNumber = 12;
  private global::GetCurtainSwitcherScheduleServerResponse getCurtainSwitcherScheduleServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetCurtainSwitcherScheduleServerResponse GetCurtainSwitcherScheduleServerResponse {
    get { return getCurtainSwitcherScheduleServerResponse_; }
    set {
      getCurtainSwitcherScheduleServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "getCountCurtainSwitcherScheduleServerRequest" field.</summary>
  public const int GetCountCurtainSwitcherScheduleServerRequestFieldNumber = 13;
  private global::GetCountCurtainSwitcherScheduleServerRequest getCountCurtainSwitcherScheduleServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetCountCurtainSwitcherScheduleServerRequest GetCountCurtainSwitcherScheduleServerRequest {
    get { return getCountCurtainSwitcherScheduleServerRequest_; }
    set {
      getCountCurtainSwitcherScheduleServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getCountCurtainSwitcherScheduleServerResponse" field.</summary>
  public const int GetCountCurtainSwitcherScheduleServerResponseFieldNumber = 14;
  private global::GetCountCurtainSwitcherScheduleServerResponse getCountCurtainSwitcherScheduleServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetCountCurtainSwitcherScheduleServerResponse GetCountCurtainSwitcherScheduleServerResponse {
    get { return getCountCurtainSwitcherScheduleServerResponse_; }
    set {
      getCountCurtainSwitcherScheduleServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "addCurtainSwitcherScheduleServerRequest" field.</summary>
  public const int AddCurtainSwitcherScheduleServerRequestFieldNumber = 15;
  private global::AddCurtainSwitcherScheduleServerRequest addCurtainSwitcherScheduleServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AddCurtainSwitcherScheduleServerRequest AddCurtainSwitcherScheduleServerRequest {
    get { return addCurtainSwitcherScheduleServerRequest_; }
    set {
      addCurtainSwitcherScheduleServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "addCurtainSwitcherScheduleServerResponse" field.</summary>
  public const int AddCurtainSwitcherScheduleServerResponseFieldNumber = 16;
  private global::AddCurtainSwitcherScheduleServerResponse addCurtainSwitcherScheduleServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AddCurtainSwitcherScheduleServerResponse AddCurtainSwitcherScheduleServerResponse {
    get { return addCurtainSwitcherScheduleServerResponse_; }
    set {
      addCurtainSwitcherScheduleServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "updateCurtainSwitcherScheduleServerRequest" field.</summary>
  public const int UpdateCurtainSwitcherScheduleServerRequestFieldNumber = 17;
  private global::UpdateCurtainSwitcherScheduleServerRequest updateCurtainSwitcherScheduleServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateCurtainSwitcherScheduleServerRequest UpdateCurtainSwitcherScheduleServerRequest {
    get { return updateCurtainSwitcherScheduleServerRequest_; }
    set {
      updateCurtainSwitcherScheduleServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "updateCurtainSwitcherScheduleServerResponse" field.</summary>
  public const int UpdateCurtainSwitcherScheduleServerResponseFieldNumber = 18;
  private global::UpdateCurtainSwitcherScheduleServerResponse updateCurtainSwitcherScheduleServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateCurtainSwitcherScheduleServerResponse UpdateCurtainSwitcherScheduleServerResponse {
    get { return updateCurtainSwitcherScheduleServerResponse_; }
    set {
      updateCurtainSwitcherScheduleServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "deleteCurtainSwitcherScheduleServerRequest" field.</summary>
  public const int DeleteCurtainSwitcherScheduleServerRequestFieldNumber = 19;
  private global::DeleteCurtainSwitcherScheduleServerRequest deleteCurtainSwitcherScheduleServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DeleteCurtainSwitcherScheduleServerRequest DeleteCurtainSwitcherScheduleServerRequest {
    get { return deleteCurtainSwitcherScheduleServerRequest_; }
    set {
      deleteCurtainSwitcherScheduleServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "deleteCurtainSwitcherScheduleServerResponse" field.</summary>
  public const int DeleteCurtainSwitcherScheduleServerResponseFieldNumber = 20;
  private global::DeleteCurtainSwitcherScheduleServerResponse deleteCurtainSwitcherScheduleServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DeleteCurtainSwitcherScheduleServerResponse DeleteCurtainSwitcherScheduleServerResponse {
    get { return deleteCurtainSwitcherScheduleServerResponse_; }
    set {
      deleteCurtainSwitcherScheduleServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "setActiveCurtainSwitcherScheduleServerRequest" field.</summary>
  public const int SetActiveCurtainSwitcherScheduleServerRequestFieldNumber = 21;
  private global::SetActiveCurtainSwitcherScheduleServerRequest setActiveCurtainSwitcherScheduleServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SetActiveCurtainSwitcherScheduleServerRequest SetActiveCurtainSwitcherScheduleServerRequest {
    get { return setActiveCurtainSwitcherScheduleServerRequest_; }
    set {
      setActiveCurtainSwitcherScheduleServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "setActiveCurtainSwitcherScheduleServerResponse" field.</summary>
  public const int SetActiveCurtainSwitcherScheduleServerResponseFieldNumber = 22;
  private global::SetActiveCurtainSwitcherScheduleServerResponse setActiveCurtainSwitcherScheduleServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SetActiveCurtainSwitcherScheduleServerResponse SetActiveCurtainSwitcherScheduleServerResponse {
    get { return setActiveCurtainSwitcherScheduleServerResponse_; }
    set {
      setActiveCurtainSwitcherScheduleServerResponse_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CurtainSwitcherServerMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CurtainSwitcherServerMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(GetCurtainSwitcherServerRequest, other.GetCurtainSwitcherServerRequest)) return false;
    if (!object.Equals(GetCurtainSwitcherServerResponse, other.GetCurtainSwitcherServerResponse)) return false;
    if (!object.Equals(UpdateCurtainSwitcherServerRequest, other.UpdateCurtainSwitcherServerRequest)) return false;
    if (!object.Equals(UpdateCurtainSwitcherServerResponse, other.UpdateCurtainSwitcherServerResponse)) return false;
    if (!object.Equals(GetCurtainSwitcherStateServerRequest, other.GetCurtainSwitcherStateServerRequest)) return false;
    if (!object.Equals(GetCurtainSwitcherStateServerResponse, other.GetCurtainSwitcherStateServerResponse)) return false;
    if (!object.Equals(CurtainSwitcherServerRequest, other.CurtainSwitcherServerRequest)) return false;
    if (!object.Equals(CurtainSwitcherServerResponse, other.CurtainSwitcherServerResponse)) return false;
    if (!object.Equals(GetCurtainSwitcherSchedulesServerRequest, other.GetCurtainSwitcherSchedulesServerRequest)) return false;
    if (!object.Equals(GetCurtainSwitcherSchedulesServerResponse, other.GetCurtainSwitcherSchedulesServerResponse)) return false;
    if (!object.Equals(GetCurtainSwitcherScheduleServerRequest, other.GetCurtainSwitcherScheduleServerRequest)) return false;
    if (!object.Equals(GetCurtainSwitcherScheduleServerResponse, other.GetCurtainSwitcherScheduleServerResponse)) return false;
    if (!object.Equals(GetCountCurtainSwitcherScheduleServerRequest, other.GetCountCurtainSwitcherScheduleServerRequest)) return false;
    if (!object.Equals(GetCountCurtainSwitcherScheduleServerResponse, other.GetCountCurtainSwitcherScheduleServerResponse)) return false;
    if (!object.Equals(AddCurtainSwitcherScheduleServerRequest, other.AddCurtainSwitcherScheduleServerRequest)) return false;
    if (!object.Equals(AddCurtainSwitcherScheduleServerResponse, other.AddCurtainSwitcherScheduleServerResponse)) return false;
    if (!object.Equals(UpdateCurtainSwitcherScheduleServerRequest, other.UpdateCurtainSwitcherScheduleServerRequest)) return false;
    if (!object.Equals(UpdateCurtainSwitcherScheduleServerResponse, other.UpdateCurtainSwitcherScheduleServerResponse)) return false;
    if (!object.Equals(DeleteCurtainSwitcherScheduleServerRequest, other.DeleteCurtainSwitcherScheduleServerRequest)) return false;
    if (!object.Equals(DeleteCurtainSwitcherScheduleServerResponse, other.DeleteCurtainSwitcherScheduleServerResponse)) return false;
    if (!object.Equals(SetActiveCurtainSwitcherScheduleServerRequest, other.SetActiveCurtainSwitcherScheduleServerRequest)) return false;
    if (!object.Equals(SetActiveCurtainSwitcherScheduleServerResponse, other.SetActiveCurtainSwitcherScheduleServerResponse)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (getCurtainSwitcherServerRequest_ != null) hash ^= GetCurtainSwitcherServerRequest.GetHashCode();
    if (getCurtainSwitcherServerResponse_ != null) hash ^= GetCurtainSwitcherServerResponse.GetHashCode();
    if (updateCurtainSwitcherServerRequest_ != null) hash ^= UpdateCurtainSwitcherServerRequest.GetHashCode();
    if (updateCurtainSwitcherServerResponse_ != null) hash ^= UpdateCurtainSwitcherServerResponse.GetHashCode();
    if (getCurtainSwitcherStateServerRequest_ != null) hash ^= GetCurtainSwitcherStateServerRequest.GetHashCode();
    if (getCurtainSwitcherStateServerResponse_ != null) hash ^= GetCurtainSwitcherStateServerResponse.GetHashCode();
    if (curtainSwitcherServerRequest_ != null) hash ^= CurtainSwitcherServerRequest.GetHashCode();
    if (curtainSwitcherServerResponse_ != null) hash ^= CurtainSwitcherServerResponse.GetHashCode();
    if (getCurtainSwitcherSchedulesServerRequest_ != null) hash ^= GetCurtainSwitcherSchedulesServerRequest.GetHashCode();
    if (getCurtainSwitcherSchedulesServerResponse_ != null) hash ^= GetCurtainSwitcherSchedulesServerResponse.GetHashCode();
    if (getCurtainSwitcherScheduleServerRequest_ != null) hash ^= GetCurtainSwitcherScheduleServerRequest.GetHashCode();
    if (getCurtainSwitcherScheduleServerResponse_ != null) hash ^= GetCurtainSwitcherScheduleServerResponse.GetHashCode();
    if (getCountCurtainSwitcherScheduleServerRequest_ != null) hash ^= GetCountCurtainSwitcherScheduleServerRequest.GetHashCode();
    if (getCountCurtainSwitcherScheduleServerResponse_ != null) hash ^= GetCountCurtainSwitcherScheduleServerResponse.GetHashCode();
    if (addCurtainSwitcherScheduleServerRequest_ != null) hash ^= AddCurtainSwitcherScheduleServerRequest.GetHashCode();
    if (addCurtainSwitcherScheduleServerResponse_ != null) hash ^= AddCurtainSwitcherScheduleServerResponse.GetHashCode();
    if (updateCurtainSwitcherScheduleServerRequest_ != null) hash ^= UpdateCurtainSwitcherScheduleServerRequest.GetHashCode();
    if (updateCurtainSwitcherScheduleServerResponse_ != null) hash ^= UpdateCurtainSwitcherScheduleServerResponse.GetHashCode();
    if (deleteCurtainSwitcherScheduleServerRequest_ != null) hash ^= DeleteCurtainSwitcherScheduleServerRequest.GetHashCode();
    if (deleteCurtainSwitcherScheduleServerResponse_ != null) hash ^= DeleteCurtainSwitcherScheduleServerResponse.GetHashCode();
    if (setActiveCurtainSwitcherScheduleServerRequest_ != null) hash ^= SetActiveCurtainSwitcherScheduleServerRequest.GetHashCode();
    if (setActiveCurtainSwitcherScheduleServerResponse_ != null) hash ^= SetActiveCurtainSwitcherScheduleServerResponse.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (getCurtainSwitcherServerRequest_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(GetCurtainSwitcherServerRequest);
    }
    if (getCurtainSwitcherServerResponse_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(GetCurtainSwitcherServerResponse);
    }
    if (updateCurtainSwitcherServerRequest_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(UpdateCurtainSwitcherServerRequest);
    }
    if (updateCurtainSwitcherServerResponse_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(UpdateCurtainSwitcherServerResponse);
    }
    if (getCurtainSwitcherStateServerRequest_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(GetCurtainSwitcherStateServerRequest);
    }
    if (getCurtainSwitcherStateServerResponse_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(GetCurtainSwitcherStateServerResponse);
    }
    if (curtainSwitcherServerRequest_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(CurtainSwitcherServerRequest);
    }
    if (curtainSwitcherServerResponse_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(CurtainSwitcherServerResponse);
    }
    if (getCurtainSwitcherSchedulesServerRequest_ != null) {
      output.WriteRawTag(74);
      output.WriteMessage(GetCurtainSwitcherSchedulesServerRequest);
    }
    if (getCurtainSwitcherSchedulesServerResponse_ != null) {
      output.WriteRawTag(82);
      output.WriteMessage(GetCurtainSwitcherSchedulesServerResponse);
    }
    if (getCurtainSwitcherScheduleServerRequest_ != null) {
      output.WriteRawTag(90);
      output.WriteMessage(GetCurtainSwitcherScheduleServerRequest);
    }
    if (getCurtainSwitcherScheduleServerResponse_ != null) {
      output.WriteRawTag(98);
      output.WriteMessage(GetCurtainSwitcherScheduleServerResponse);
    }
    if (getCountCurtainSwitcherScheduleServerRequest_ != null) {
      output.WriteRawTag(106);
      output.WriteMessage(GetCountCurtainSwitcherScheduleServerRequest);
    }
    if (getCountCurtainSwitcherScheduleServerResponse_ != null) {
      output.WriteRawTag(114);
      output.WriteMessage(GetCountCurtainSwitcherScheduleServerResponse);
    }
    if (addCurtainSwitcherScheduleServerRequest_ != null) {
      output.WriteRawTag(122);
      output.WriteMessage(AddCurtainSwitcherScheduleServerRequest);
    }
    if (addCurtainSwitcherScheduleServerResponse_ != null) {
      output.WriteRawTag(130, 1);
      output.WriteMessage(AddCurtainSwitcherScheduleServerResponse);
    }
    if (updateCurtainSwitcherScheduleServerRequest_ != null) {
      output.WriteRawTag(138, 1);
      output.WriteMessage(UpdateCurtainSwitcherScheduleServerRequest);
    }
    if (updateCurtainSwitcherScheduleServerResponse_ != null) {
      output.WriteRawTag(146, 1);
      output.WriteMessage(UpdateCurtainSwitcherScheduleServerResponse);
    }
    if (deleteCurtainSwitcherScheduleServerRequest_ != null) {
      output.WriteRawTag(154, 1);
      output.WriteMessage(DeleteCurtainSwitcherScheduleServerRequest);
    }
    if (deleteCurtainSwitcherScheduleServerResponse_ != null) {
      output.WriteRawTag(162, 1);
      output.WriteMessage(DeleteCurtainSwitcherScheduleServerResponse);
    }
    if (setActiveCurtainSwitcherScheduleServerRequest_ != null) {
      output.WriteRawTag(170, 1);
      output.WriteMessage(SetActiveCurtainSwitcherScheduleServerRequest);
    }
    if (setActiveCurtainSwitcherScheduleServerResponse_ != null) {
      output.WriteRawTag(178, 1);
      output.WriteMessage(SetActiveCurtainSwitcherScheduleServerResponse);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (getCurtainSwitcherServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetCurtainSwitcherServerRequest);
    }
    if (getCurtainSwitcherServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetCurtainSwitcherServerResponse);
    }
    if (updateCurtainSwitcherServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateCurtainSwitcherServerRequest);
    }
    if (updateCurtainSwitcherServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateCurtainSwitcherServerResponse);
    }
    if (getCurtainSwitcherStateServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetCurtainSwitcherStateServerRequest);
    }
    if (getCurtainSwitcherStateServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetCurtainSwitcherStateServerResponse);
    }
    if (curtainSwitcherServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurtainSwitcherServerRequest);
    }
    if (curtainSwitcherServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurtainSwitcherServerResponse);
    }
    if (getCurtainSwitcherSchedulesServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetCurtainSwitcherSchedulesServerRequest);
    }
    if (getCurtainSwitcherSchedulesServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetCurtainSwitcherSchedulesServerResponse);
    }
    if (getCurtainSwitcherScheduleServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetCurtainSwitcherScheduleServerRequest);
    }
    if (getCurtainSwitcherScheduleServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetCurtainSwitcherScheduleServerResponse);
    }
    if (getCountCurtainSwitcherScheduleServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetCountCurtainSwitcherScheduleServerRequest);
    }
    if (getCountCurtainSwitcherScheduleServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetCountCurtainSwitcherScheduleServerResponse);
    }
    if (addCurtainSwitcherScheduleServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddCurtainSwitcherScheduleServerRequest);
    }
    if (addCurtainSwitcherScheduleServerResponse_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(AddCurtainSwitcherScheduleServerResponse);
    }
    if (updateCurtainSwitcherScheduleServerRequest_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(UpdateCurtainSwitcherScheduleServerRequest);
    }
    if (updateCurtainSwitcherScheduleServerResponse_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(UpdateCurtainSwitcherScheduleServerResponse);
    }
    if (deleteCurtainSwitcherScheduleServerRequest_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(DeleteCurtainSwitcherScheduleServerRequest);
    }
    if (deleteCurtainSwitcherScheduleServerResponse_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(DeleteCurtainSwitcherScheduleServerResponse);
    }
    if (setActiveCurtainSwitcherScheduleServerRequest_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(SetActiveCurtainSwitcherScheduleServerRequest);
    }
    if (setActiveCurtainSwitcherScheduleServerResponse_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(SetActiveCurtainSwitcherScheduleServerResponse);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CurtainSwitcherServerMessage other) {
    if (other == null) {
      return;
    }
    if (other.getCurtainSwitcherServerRequest_ != null) {
      if (getCurtainSwitcherServerRequest_ == null) {
        GetCurtainSwitcherServerRequest = new global::GetCurtainSwitcherServerRequest();
      }
      GetCurtainSwitcherServerRequest.MergeFrom(other.GetCurtainSwitcherServerRequest);
    }
    if (other.getCurtainSwitcherServerResponse_ != null) {
      if (getCurtainSwitcherServerResponse_ == null) {
        GetCurtainSwitcherServerResponse = new global::GetCurtainSwitcherServerResponse();
      }
      GetCurtainSwitcherServerResponse.MergeFrom(other.GetCurtainSwitcherServerResponse);
    }
    if (other.updateCurtainSwitcherServerRequest_ != null) {
      if (updateCurtainSwitcherServerRequest_ == null) {
        UpdateCurtainSwitcherServerRequest = new global::UpdateCurtainSwitcherServerRequest();
      }
      UpdateCurtainSwitcherServerRequest.MergeFrom(other.UpdateCurtainSwitcherServerRequest);
    }
    if (other.updateCurtainSwitcherServerResponse_ != null) {
      if (updateCurtainSwitcherServerResponse_ == null) {
        UpdateCurtainSwitcherServerResponse = new global::UpdateCurtainSwitcherServerResponse();
      }
      UpdateCurtainSwitcherServerResponse.MergeFrom(other.UpdateCurtainSwitcherServerResponse);
    }
    if (other.getCurtainSwitcherStateServerRequest_ != null) {
      if (getCurtainSwitcherStateServerRequest_ == null) {
        GetCurtainSwitcherStateServerRequest = new global::GetCurtainSwitcherStateServerRequest();
      }
      GetCurtainSwitcherStateServerRequest.MergeFrom(other.GetCurtainSwitcherStateServerRequest);
    }
    if (other.getCurtainSwitcherStateServerResponse_ != null) {
      if (getCurtainSwitcherStateServerResponse_ == null) {
        GetCurtainSwitcherStateServerResponse = new global::GetCurtainSwitcherStateServerResponse();
      }
      GetCurtainSwitcherStateServerResponse.MergeFrom(other.GetCurtainSwitcherStateServerResponse);
    }
    if (other.curtainSwitcherServerRequest_ != null) {
      if (curtainSwitcherServerRequest_ == null) {
        CurtainSwitcherServerRequest = new global::CurtainSwitcherServerRequest();
      }
      CurtainSwitcherServerRequest.MergeFrom(other.CurtainSwitcherServerRequest);
    }
    if (other.curtainSwitcherServerResponse_ != null) {
      if (curtainSwitcherServerResponse_ == null) {
        CurtainSwitcherServerResponse = new global::CurtainSwitcherServerResponse();
      }
      CurtainSwitcherServerResponse.MergeFrom(other.CurtainSwitcherServerResponse);
    }
    if (other.getCurtainSwitcherSchedulesServerRequest_ != null) {
      if (getCurtainSwitcherSchedulesServerRequest_ == null) {
        GetCurtainSwitcherSchedulesServerRequest = new global::GetCurtainSwitcherSchedulesServerRequest();
      }
      GetCurtainSwitcherSchedulesServerRequest.MergeFrom(other.GetCurtainSwitcherSchedulesServerRequest);
    }
    if (other.getCurtainSwitcherSchedulesServerResponse_ != null) {
      if (getCurtainSwitcherSchedulesServerResponse_ == null) {
        GetCurtainSwitcherSchedulesServerResponse = new global::GetCurtainSwitcherSchedulesServerResponse();
      }
      GetCurtainSwitcherSchedulesServerResponse.MergeFrom(other.GetCurtainSwitcherSchedulesServerResponse);
    }
    if (other.getCurtainSwitcherScheduleServerRequest_ != null) {
      if (getCurtainSwitcherScheduleServerRequest_ == null) {
        GetCurtainSwitcherScheduleServerRequest = new global::GetCurtainSwitcherScheduleServerRequest();
      }
      GetCurtainSwitcherScheduleServerRequest.MergeFrom(other.GetCurtainSwitcherScheduleServerRequest);
    }
    if (other.getCurtainSwitcherScheduleServerResponse_ != null) {
      if (getCurtainSwitcherScheduleServerResponse_ == null) {
        GetCurtainSwitcherScheduleServerResponse = new global::GetCurtainSwitcherScheduleServerResponse();
      }
      GetCurtainSwitcherScheduleServerResponse.MergeFrom(other.GetCurtainSwitcherScheduleServerResponse);
    }
    if (other.getCountCurtainSwitcherScheduleServerRequest_ != null) {
      if (getCountCurtainSwitcherScheduleServerRequest_ == null) {
        GetCountCurtainSwitcherScheduleServerRequest = new global::GetCountCurtainSwitcherScheduleServerRequest();
      }
      GetCountCurtainSwitcherScheduleServerRequest.MergeFrom(other.GetCountCurtainSwitcherScheduleServerRequest);
    }
    if (other.getCountCurtainSwitcherScheduleServerResponse_ != null) {
      if (getCountCurtainSwitcherScheduleServerResponse_ == null) {
        GetCountCurtainSwitcherScheduleServerResponse = new global::GetCountCurtainSwitcherScheduleServerResponse();
      }
      GetCountCurtainSwitcherScheduleServerResponse.MergeFrom(other.GetCountCurtainSwitcherScheduleServerResponse);
    }
    if (other.addCurtainSwitcherScheduleServerRequest_ != null) {
      if (addCurtainSwitcherScheduleServerRequest_ == null) {
        AddCurtainSwitcherScheduleServerRequest = new global::AddCurtainSwitcherScheduleServerRequest();
      }
      AddCurtainSwitcherScheduleServerRequest.MergeFrom(other.AddCurtainSwitcherScheduleServerRequest);
    }
    if (other.addCurtainSwitcherScheduleServerResponse_ != null) {
      if (addCurtainSwitcherScheduleServerResponse_ == null) {
        AddCurtainSwitcherScheduleServerResponse = new global::AddCurtainSwitcherScheduleServerResponse();
      }
      AddCurtainSwitcherScheduleServerResponse.MergeFrom(other.AddCurtainSwitcherScheduleServerResponse);
    }
    if (other.updateCurtainSwitcherScheduleServerRequest_ != null) {
      if (updateCurtainSwitcherScheduleServerRequest_ == null) {
        UpdateCurtainSwitcherScheduleServerRequest = new global::UpdateCurtainSwitcherScheduleServerRequest();
      }
      UpdateCurtainSwitcherScheduleServerRequest.MergeFrom(other.UpdateCurtainSwitcherScheduleServerRequest);
    }
    if (other.updateCurtainSwitcherScheduleServerResponse_ != null) {
      if (updateCurtainSwitcherScheduleServerResponse_ == null) {
        UpdateCurtainSwitcherScheduleServerResponse = new global::UpdateCurtainSwitcherScheduleServerResponse();
      }
      UpdateCurtainSwitcherScheduleServerResponse.MergeFrom(other.UpdateCurtainSwitcherScheduleServerResponse);
    }
    if (other.deleteCurtainSwitcherScheduleServerRequest_ != null) {
      if (deleteCurtainSwitcherScheduleServerRequest_ == null) {
        DeleteCurtainSwitcherScheduleServerRequest = new global::DeleteCurtainSwitcherScheduleServerRequest();
      }
      DeleteCurtainSwitcherScheduleServerRequest.MergeFrom(other.DeleteCurtainSwitcherScheduleServerRequest);
    }
    if (other.deleteCurtainSwitcherScheduleServerResponse_ != null) {
      if (deleteCurtainSwitcherScheduleServerResponse_ == null) {
        DeleteCurtainSwitcherScheduleServerResponse = new global::DeleteCurtainSwitcherScheduleServerResponse();
      }
      DeleteCurtainSwitcherScheduleServerResponse.MergeFrom(other.DeleteCurtainSwitcherScheduleServerResponse);
    }
    if (other.setActiveCurtainSwitcherScheduleServerRequest_ != null) {
      if (setActiveCurtainSwitcherScheduleServerRequest_ == null) {
        SetActiveCurtainSwitcherScheduleServerRequest = new global::SetActiveCurtainSwitcherScheduleServerRequest();
      }
      SetActiveCurtainSwitcherScheduleServerRequest.MergeFrom(other.SetActiveCurtainSwitcherScheduleServerRequest);
    }
    if (other.setActiveCurtainSwitcherScheduleServerResponse_ != null) {
      if (setActiveCurtainSwitcherScheduleServerResponse_ == null) {
        SetActiveCurtainSwitcherScheduleServerResponse = new global::SetActiveCurtainSwitcherScheduleServerResponse();
      }
      SetActiveCurtainSwitcherScheduleServerResponse.MergeFrom(other.SetActiveCurtainSwitcherScheduleServerResponse);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (getCurtainSwitcherServerRequest_ == null) {
            GetCurtainSwitcherServerRequest = new global::GetCurtainSwitcherServerRequest();
          }
          input.ReadMessage(GetCurtainSwitcherServerRequest);
          break;
        }
        case 18: {
          if (getCurtainSwitcherServerResponse_ == null) {
            GetCurtainSwitcherServerResponse = new global::GetCurtainSwitcherServerResponse();
          }
          input.ReadMessage(GetCurtainSwitcherServerResponse);
          break;
        }
        case 26: {
          if (updateCurtainSwitcherServerRequest_ == null) {
            UpdateCurtainSwitcherServerRequest = new global::UpdateCurtainSwitcherServerRequest();
          }
          input.ReadMessage(UpdateCurtainSwitcherServerRequest);
          break;
        }
        case 34: {
          if (updateCurtainSwitcherServerResponse_ == null) {
            UpdateCurtainSwitcherServerResponse = new global::UpdateCurtainSwitcherServerResponse();
          }
          input.ReadMessage(UpdateCurtainSwitcherServerResponse);
          break;
        }
        case 42: {
          if (getCurtainSwitcherStateServerRequest_ == null) {
            GetCurtainSwitcherStateServerRequest = new global::GetCurtainSwitcherStateServerRequest();
          }
          input.ReadMessage(GetCurtainSwitcherStateServerRequest);
          break;
        }
        case 50: {
          if (getCurtainSwitcherStateServerResponse_ == null) {
            GetCurtainSwitcherStateServerResponse = new global::GetCurtainSwitcherStateServerResponse();
          }
          input.ReadMessage(GetCurtainSwitcherStateServerResponse);
          break;
        }
        case 58: {
          if (curtainSwitcherServerRequest_ == null) {
            CurtainSwitcherServerRequest = new global::CurtainSwitcherServerRequest();
          }
          input.ReadMessage(CurtainSwitcherServerRequest);
          break;
        }
        case 66: {
          if (curtainSwitcherServerResponse_ == null) {
            CurtainSwitcherServerResponse = new global::CurtainSwitcherServerResponse();
          }
          input.ReadMessage(CurtainSwitcherServerResponse);
          break;
        }
        case 74: {
          if (getCurtainSwitcherSchedulesServerRequest_ == null) {
            GetCurtainSwitcherSchedulesServerRequest = new global::GetCurtainSwitcherSchedulesServerRequest();
          }
          input.ReadMessage(GetCurtainSwitcherSchedulesServerRequest);
          break;
        }
        case 82: {
          if (getCurtainSwitcherSchedulesServerResponse_ == null) {
            GetCurtainSwitcherSchedulesServerResponse = new global::GetCurtainSwitcherSchedulesServerResponse();
          }
          input.ReadMessage(GetCurtainSwitcherSchedulesServerResponse);
          break;
        }
        case 90: {
          if (getCurtainSwitcherScheduleServerRequest_ == null) {
            GetCurtainSwitcherScheduleServerRequest = new global::GetCurtainSwitcherScheduleServerRequest();
          }
          input.ReadMessage(GetCurtainSwitcherScheduleServerRequest);
          break;
        }
        case 98: {
          if (getCurtainSwitcherScheduleServerResponse_ == null) {
            GetCurtainSwitcherScheduleServerResponse = new global::GetCurtainSwitcherScheduleServerResponse();
          }
          input.ReadMessage(GetCurtainSwitcherScheduleServerResponse);
          break;
        }
        case 106: {
          if (getCountCurtainSwitcherScheduleServerRequest_ == null) {
            GetCountCurtainSwitcherScheduleServerRequest = new global::GetCountCurtainSwitcherScheduleServerRequest();
          }
          input.ReadMessage(GetCountCurtainSwitcherScheduleServerRequest);
          break;
        }
        case 114: {
          if (getCountCurtainSwitcherScheduleServerResponse_ == null) {
            GetCountCurtainSwitcherScheduleServerResponse = new global::GetCountCurtainSwitcherScheduleServerResponse();
          }
          input.ReadMessage(GetCountCurtainSwitcherScheduleServerResponse);
          break;
        }
        case 122: {
          if (addCurtainSwitcherScheduleServerRequest_ == null) {
            AddCurtainSwitcherScheduleServerRequest = new global::AddCurtainSwitcherScheduleServerRequest();
          }
          input.ReadMessage(AddCurtainSwitcherScheduleServerRequest);
          break;
        }
        case 130: {
          if (addCurtainSwitcherScheduleServerResponse_ == null) {
            AddCurtainSwitcherScheduleServerResponse = new global::AddCurtainSwitcherScheduleServerResponse();
          }
          input.ReadMessage(AddCurtainSwitcherScheduleServerResponse);
          break;
        }
        case 138: {
          if (updateCurtainSwitcherScheduleServerRequest_ == null) {
            UpdateCurtainSwitcherScheduleServerRequest = new global::UpdateCurtainSwitcherScheduleServerRequest();
          }
          input.ReadMessage(UpdateCurtainSwitcherScheduleServerRequest);
          break;
        }
        case 146: {
          if (updateCurtainSwitcherScheduleServerResponse_ == null) {
            UpdateCurtainSwitcherScheduleServerResponse = new global::UpdateCurtainSwitcherScheduleServerResponse();
          }
          input.ReadMessage(UpdateCurtainSwitcherScheduleServerResponse);
          break;
        }
        case 154: {
          if (deleteCurtainSwitcherScheduleServerRequest_ == null) {
            DeleteCurtainSwitcherScheduleServerRequest = new global::DeleteCurtainSwitcherScheduleServerRequest();
          }
          input.ReadMessage(DeleteCurtainSwitcherScheduleServerRequest);
          break;
        }
        case 162: {
          if (deleteCurtainSwitcherScheduleServerResponse_ == null) {
            DeleteCurtainSwitcherScheduleServerResponse = new global::DeleteCurtainSwitcherScheduleServerResponse();
          }
          input.ReadMessage(DeleteCurtainSwitcherScheduleServerResponse);
          break;
        }
        case 170: {
          if (setActiveCurtainSwitcherScheduleServerRequest_ == null) {
            SetActiveCurtainSwitcherScheduleServerRequest = new global::SetActiveCurtainSwitcherScheduleServerRequest();
          }
          input.ReadMessage(SetActiveCurtainSwitcherScheduleServerRequest);
          break;
        }
        case 178: {
          if (setActiveCurtainSwitcherScheduleServerResponse_ == null) {
            SetActiveCurtainSwitcherScheduleServerResponse = new global::SetActiveCurtainSwitcherScheduleServerResponse();
          }
          input.ReadMessage(SetActiveCurtainSwitcherScheduleServerResponse);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Điều khiển từng đèn
/// </summary>
public sealed partial class LedDriverServerRequest : pb::IMessage<LedDriverServerRequest> {
  private static readonly pb::MessageParser<LedDriverServerRequest> _parser = new pb::MessageParser<LedDriverServerRequest>(() => new LedDriverServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<LedDriverServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[300]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LedDriverServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LedDriverServerRequest(LedDriverServerRequest other) : this() {
    deviceId_ = other.deviceId_;
    index_ = other.index_;
    roomId_ = other.roomId_;
    powerState_ = other.powerState_;
    brightnessPercent_ = other.brightnessPercent_;
    ledItems_ = other.ledItems_.Clone();
    groupControl_ = other.groupControl_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LedDriverServerRequest Clone() {
    return new LedDriverServerRequest(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "index" field.</summary>
  public const int IndexFieldNumber = 2;
  private int index_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Index {
    get { return index_; }
    set {
      index_ = value;
    }
  }

  /// <summary>Field number for the "roomId" field.</summary>
  public const int RoomIdFieldNumber = 3;
  private string roomId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RoomId {
    get { return roomId_; }
    set {
      roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "powerState" field.</summary>
  public const int PowerStateFieldNumber = 4;
  private global::PowerState powerState_ = global::PowerState.Off;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PowerState PowerState {
    get { return powerState_; }
    set {
      powerState_ = value;
    }
  }

  /// <summary>Field number for the "brightnessPercent" field.</summary>
  public const int BrightnessPercentFieldNumber = 5;
  private int brightnessPercent_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int BrightnessPercent {
    get { return brightnessPercent_; }
    set {
      brightnessPercent_ = value;
    }
  }

  /// <summary>Field number for the "ledItems" field.</summary>
  public const int LedItemsFieldNumber = 6;
  private static readonly pb::FieldCodec<global::LedItem> _repeated_ledItems_codec
      = pb::FieldCodec.ForMessage(50, global::LedItem.Parser);
  private readonly pbc::RepeatedField<global::LedItem> ledItems_ = new pbc::RepeatedField<global::LedItem>();
  /// <summary>
  /// Nếu muốn điều khiển nhiều thiết bị thì Index phải là 0
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::LedItem> LedItems {
    get { return ledItems_; }
  }

  /// <summary>Field number for the "groupControl" field.</summary>
  public const int GroupControlFieldNumber = 7;
  private uint groupControl_;
  /// <summary>
  /// in binary
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GroupControl {
    get { return groupControl_; }
    set {
      groupControl_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as LedDriverServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(LedDriverServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    if (Index != other.Index) return false;
    if (RoomId != other.RoomId) return false;
    if (PowerState != other.PowerState) return false;
    if (BrightnessPercent != other.BrightnessPercent) return false;
    if(!ledItems_.Equals(other.ledItems_)) return false;
    if (GroupControl != other.GroupControl) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (Index != 0) hash ^= Index.GetHashCode();
    if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
    if (PowerState != global::PowerState.Off) hash ^= PowerState.GetHashCode();
    if (BrightnessPercent != 0) hash ^= BrightnessPercent.GetHashCode();
    hash ^= ledItems_.GetHashCode();
    if (GroupControl != 0) hash ^= GroupControl.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (Index != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Index);
    }
    if (RoomId.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(RoomId);
    }
    if (PowerState != global::PowerState.Off) {
      output.WriteRawTag(32);
      output.WriteEnum((int) PowerState);
    }
    if (BrightnessPercent != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(BrightnessPercent);
    }
    ledItems_.WriteTo(output, _repeated_ledItems_codec);
    if (GroupControl != 0) {
      output.WriteRawTag(56);
      output.WriteUInt32(GroupControl);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (Index != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
    }
    if (RoomId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
    }
    if (PowerState != global::PowerState.Off) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PowerState);
    }
    if (BrightnessPercent != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(BrightnessPercent);
    }
    size += ledItems_.CalculateSize(_repeated_ledItems_codec);
    if (GroupControl != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GroupControl);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(LedDriverServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.Index != 0) {
      Index = other.Index;
    }
    if (other.RoomId.Length != 0) {
      RoomId = other.RoomId;
    }
    if (other.PowerState != global::PowerState.Off) {
      PowerState = other.PowerState;
    }
    if (other.BrightnessPercent != 0) {
      BrightnessPercent = other.BrightnessPercent;
    }
    ledItems_.Add(other.ledItems_);
    if (other.GroupControl != 0) {
      GroupControl = other.GroupControl;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
        case 16: {
          Index = input.ReadInt32();
          break;
        }
        case 26: {
          RoomId = input.ReadString();
          break;
        }
        case 32: {
          PowerState = (global::PowerState) input.ReadEnum();
          break;
        }
        case 40: {
          BrightnessPercent = input.ReadInt32();
          break;
        }
        case 50: {
          ledItems_.AddEntriesFrom(input, _repeated_ledItems_codec);
          break;
        }
        case 56: {
          GroupControl = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi điều khiển từng đèn
/// </summary>
public sealed partial class LedDriverServerResponse : pb::IMessage<LedDriverServerResponse> {
  private static readonly pb::MessageParser<LedDriverServerResponse> _parser = new pb::MessageParser<LedDriverServerResponse>(() => new LedDriverServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<LedDriverServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[301]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LedDriverServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LedDriverServerResponse(LedDriverServerResponse other) : this() {
    deviceId_ = other.deviceId_;
    roomId_ = other.roomId_;
    powerState_ = other.powerState_;
    brightnessPercess_ = other.brightnessPercess_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LedDriverServerResponse Clone() {
    return new LedDriverServerResponse(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "roomId" field.</summary>
  public const int RoomIdFieldNumber = 2;
  private string roomId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RoomId {
    get { return roomId_; }
    set {
      roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "powerState" field.</summary>
  public const int PowerStateFieldNumber = 3;
  private global::PowerState powerState_ = global::PowerState.Off;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PowerState PowerState {
    get { return powerState_; }
    set {
      powerState_ = value;
    }
  }

  /// <summary>Field number for the "brightnessPercess" field.</summary>
  public const int BrightnessPercessFieldNumber = 4;
  private int brightnessPercess_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int BrightnessPercess {
    get { return brightnessPercess_; }
    set {
      brightnessPercess_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as LedDriverServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(LedDriverServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    if (RoomId != other.RoomId) return false;
    if (PowerState != other.PowerState) return false;
    if (BrightnessPercess != other.BrightnessPercess) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
    if (PowerState != global::PowerState.Off) hash ^= PowerState.GetHashCode();
    if (BrightnessPercess != 0) hash ^= BrightnessPercess.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (RoomId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(RoomId);
    }
    if (PowerState != global::PowerState.Off) {
      output.WriteRawTag(24);
      output.WriteEnum((int) PowerState);
    }
    if (BrightnessPercess != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(BrightnessPercess);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (RoomId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
    }
    if (PowerState != global::PowerState.Off) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PowerState);
    }
    if (BrightnessPercess != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(BrightnessPercess);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(LedDriverServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.RoomId.Length != 0) {
      RoomId = other.RoomId;
    }
    if (other.PowerState != global::PowerState.Off) {
      PowerState = other.PowerState;
    }
    if (other.BrightnessPercess != 0) {
      BrightnessPercess = other.BrightnessPercess;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
        case 18: {
          RoomId = input.ReadString();
          break;
        }
        case 24: {
          PowerState = (global::PowerState) input.ReadEnum();
          break;
        }
        case 32: {
          BrightnessPercess = input.ReadInt32();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Lấy thông tin của toàn bộ các đèn
/// </summary>
public sealed partial class GetLedDriverServerRequest : pb::IMessage<GetLedDriverServerRequest> {
  private static readonly pb::MessageParser<GetLedDriverServerRequest> _parser = new pb::MessageParser<GetLedDriverServerRequest>(() => new GetLedDriverServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetLedDriverServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[302]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetLedDriverServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetLedDriverServerRequest(GetLedDriverServerRequest other) : this() {
    deviceId_ = other.deviceId_;
    roomId_ = other.roomId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetLedDriverServerRequest Clone() {
    return new GetLedDriverServerRequest(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "roomId" field.</summary>
  public const int RoomIdFieldNumber = 2;
  private string roomId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RoomId {
    get { return roomId_; }
    set {
      roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetLedDriverServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetLedDriverServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    if (RoomId != other.RoomId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (RoomId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(RoomId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (RoomId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetLedDriverServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.RoomId.Length != 0) {
      RoomId = other.RoomId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
        case 18: {
          RoomId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi thông tin tất cả các đèn
/// </summary>
public sealed partial class GetLedDriverServerResponse : pb::IMessage<GetLedDriverServerResponse> {
  private static readonly pb::MessageParser<GetLedDriverServerResponse> _parser = new pb::MessageParser<GetLedDriverServerResponse>(() => new GetLedDriverServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetLedDriverServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[303]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetLedDriverServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetLedDriverServerResponse(GetLedDriverServerResponse other) : this() {
    ledDriver_ = other.ledDriver_ != null ? other.ledDriver_.Clone() : null;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetLedDriverServerResponse Clone() {
    return new GetLedDriverServerResponse(this);
  }

  /// <summary>Field number for the "ledDriver" field.</summary>
  public const int LedDriverFieldNumber = 1;
  private global::LedDriver ledDriver_;
  /// <summary>
  ///  repeated LedItem ledItem = 1;
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::LedDriver LedDriver {
    get { return ledDriver_; }
    set {
      ledDriver_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetLedDriverServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetLedDriverServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(LedDriver, other.LedDriver)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ledDriver_ != null) hash ^= LedDriver.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ledDriver_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(LedDriver);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ledDriver_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(LedDriver);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetLedDriverServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.ledDriver_ != null) {
      if (ledDriver_ == null) {
        LedDriver = new global::LedDriver();
      }
      LedDriver.MergeFrom(other.LedDriver);
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (ledDriver_ == null) {
            LedDriver = new global::LedDriver();
          }
          input.ReadMessage(LedDriver);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Lấy thông tin của mỗi đèn
/// </summary>
public sealed partial class GetLedDriverItemServerRequest : pb::IMessage<GetLedDriverItemServerRequest> {
  private static readonly pb::MessageParser<GetLedDriverItemServerRequest> _parser = new pb::MessageParser<GetLedDriverItemServerRequest>(() => new GetLedDriverItemServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetLedDriverItemServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[304]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetLedDriverItemServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetLedDriverItemServerRequest(GetLedDriverItemServerRequest other) : this() {
    ledId_ = other.ledId_;
    roomId_ = other.roomId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetLedDriverItemServerRequest Clone() {
    return new GetLedDriverItemServerRequest(this);
  }

  /// <summary>Field number for the "ledId" field.</summary>
  public const int LedIdFieldNumber = 1;
  private string ledId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string LedId {
    get { return ledId_; }
    set {
      ledId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "roomId" field.</summary>
  public const int RoomIdFieldNumber = 2;
  private string roomId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RoomId {
    get { return roomId_; }
    set {
      roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetLedDriverItemServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetLedDriverItemServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (LedId != other.LedId) return false;
    if (RoomId != other.RoomId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (LedId.Length != 0) hash ^= LedId.GetHashCode();
    if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (LedId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(LedId);
    }
    if (RoomId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(RoomId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (LedId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(LedId);
    }
    if (RoomId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetLedDriverItemServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.LedId.Length != 0) {
      LedId = other.LedId;
    }
    if (other.RoomId.Length != 0) {
      RoomId = other.RoomId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          LedId = input.ReadString();
          break;
        }
        case 18: {
          RoomId = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
/// Trả về thông tin của mỗi đèn
/// </summary>
public sealed partial class GetLedDriverItemServerResponse : pb::IMessage<GetLedDriverItemServerResponse> {
  private static readonly pb::MessageParser<GetLedDriverItemServerResponse> _parser = new pb::MessageParser<GetLedDriverItemServerResponse>(() => new GetLedDriverItemServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetLedDriverItemServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[305]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetLedDriverItemServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetLedDriverItemServerResponse(GetLedDriverItemServerResponse other) : this() {
    ledItem_ = other.ledItem_ != null ? other.ledItem_.Clone() : null;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetLedDriverItemServerResponse Clone() {
    return new GetLedDriverItemServerResponse(this);
  }

  /// <summary>Field number for the "ledItem" field.</summary>
  public const int LedItemFieldNumber = 1;
  private global::LedItem ledItem_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::LedItem LedItem {
    get { return ledItem_; }
    set {
      ledItem_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetLedDriverItemServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetLedDriverItemServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(LedItem, other.LedItem)) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ledItem_ != null) hash ^= LedItem.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ledItem_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(LedItem);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ledItem_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(LedItem);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetLedDriverItemServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.ledItem_ != null) {
      if (ledItem_ == null) {
        LedItem = new global::LedItem();
      }
      LedItem.MergeFrom(other.LedItem);
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (ledItem_ == null) {
            LedItem = new global::LedItem();
          }
          input.ReadMessage(LedItem);
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Cập nhật thông tin từng đèn
/// </summary>
public sealed partial class UpdateLedDriverServerRequest : pb::IMessage<UpdateLedDriverServerRequest> {
  private static readonly pb::MessageParser<UpdateLedDriverServerRequest> _parser = new pb::MessageParser<UpdateLedDriverServerRequest>(() => new UpdateLedDriverServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateLedDriverServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[306]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateLedDriverServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateLedDriverServerRequest(UpdateLedDriverServerRequest other) : this() {
    deviceId_ = other.deviceId_;
    roomId_ = other.roomId_;
    ledDriver_ = other.ledDriver_ != null ? other.ledDriver_.Clone() : null;
    brightnessPercent_ = other.brightnessPercent_;
    groupControl_ = other.groupControl_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateLedDriverServerRequest Clone() {
    return new UpdateLedDriverServerRequest(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "roomId" field.</summary>
  public const int RoomIdFieldNumber = 2;
  private string roomId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RoomId {
    get { return roomId_; }
    set {
      roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "ledDriver" field.</summary>
  public const int LedDriverFieldNumber = 3;
  private global::LedDriver ledDriver_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::LedDriver LedDriver {
    get { return ledDriver_; }
    set {
      ledDriver_ = value;
    }
  }

  /// <summary>Field number for the "brightnessPercent" field.</summary>
  public const int BrightnessPercentFieldNumber = 4;
  private int brightnessPercent_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int BrightnessPercent {
    get { return brightnessPercent_; }
    set {
      brightnessPercent_ = value;
    }
  }

  /// <summary>Field number for the "groupControl" field.</summary>
  public const int GroupControlFieldNumber = 5;
  private uint groupControl_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GroupControl {
    get { return groupControl_; }
    set {
      groupControl_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateLedDriverServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateLedDriverServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    if (RoomId != other.RoomId) return false;
    if (!object.Equals(LedDriver, other.LedDriver)) return false;
    if (BrightnessPercent != other.BrightnessPercent) return false;
    if (GroupControl != other.GroupControl) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
    if (ledDriver_ != null) hash ^= LedDriver.GetHashCode();
    if (BrightnessPercent != 0) hash ^= BrightnessPercent.GetHashCode();
    if (GroupControl != 0) hash ^= GroupControl.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (RoomId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(RoomId);
    }
    if (ledDriver_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(LedDriver);
    }
    if (BrightnessPercent != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(BrightnessPercent);
    }
    if (GroupControl != 0) {
      output.WriteRawTag(40);
      output.WriteUInt32(GroupControl);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (RoomId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
    }
    if (ledDriver_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(LedDriver);
    }
    if (BrightnessPercent != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(BrightnessPercent);
    }
    if (GroupControl != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GroupControl);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateLedDriverServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.RoomId.Length != 0) {
      RoomId = other.RoomId;
    }
    if (other.ledDriver_ != null) {
      if (ledDriver_ == null) {
        LedDriver = new global::LedDriver();
      }
      LedDriver.MergeFrom(other.LedDriver);
    }
    if (other.BrightnessPercent != 0) {
      BrightnessPercent = other.BrightnessPercent;
    }
    if (other.GroupControl != 0) {
      GroupControl = other.GroupControl;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
        case 18: {
          RoomId = input.ReadString();
          break;
        }
        case 26: {
          if (ledDriver_ == null) {
            LedDriver = new global::LedDriver();
          }
          input.ReadMessage(LedDriver);
          break;
        }
        case 32: {
          BrightnessPercent = input.ReadInt32();
          break;
        }
        case 40: {
          GroupControl = input.ReadUInt32();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi cập nhật thông tin từng đèn
/// </summary>
public sealed partial class UpdateLedDriverServerResponse : pb::IMessage<UpdateLedDriverServerResponse> {
  private static readonly pb::MessageParser<UpdateLedDriverServerResponse> _parser = new pb::MessageParser<UpdateLedDriverServerResponse>(() => new UpdateLedDriverServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateLedDriverServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[307]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateLedDriverServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateLedDriverServerResponse(UpdateLedDriverServerResponse other) : this() {
    ledDriver_ = other.ledDriver_ != null ? other.ledDriver_.Clone() : null;
    roomId_ = other.roomId_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateLedDriverServerResponse Clone() {
    return new UpdateLedDriverServerResponse(this);
  }

  /// <summary>Field number for the "ledDriver" field.</summary>
  public const int LedDriverFieldNumber = 1;
  private global::LedDriver ledDriver_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::LedDriver LedDriver {
    get { return ledDriver_; }
    set {
      ledDriver_ = value;
    }
  }

  /// <summary>Field number for the "roomId" field.</summary>
  public const int RoomIdFieldNumber = 2;
  private string roomId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RoomId {
    get { return roomId_; }
    set {
      roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateLedDriverServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateLedDriverServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(LedDriver, other.LedDriver)) return false;
    if (RoomId != other.RoomId) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ledDriver_ != null) hash ^= LedDriver.GetHashCode();
    if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ledDriver_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(LedDriver);
    }
    if (RoomId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(RoomId);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ledDriver_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(LedDriver);
    }
    if (RoomId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateLedDriverServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.ledDriver_ != null) {
      if (ledDriver_ == null) {
        LedDriver = new global::LedDriver();
      }
      LedDriver.MergeFrom(other.LedDriver);
    }
    if (other.RoomId.Length != 0) {
      RoomId = other.RoomId;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (ledDriver_ == null) {
            LedDriver = new global::LedDriver();
          }
          input.ReadMessage(LedDriver);
          break;
        }
        case 18: {
          RoomId = input.ReadString();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

public sealed partial class UpdateLedDriverItemServerRequest : pb::IMessage<UpdateLedDriverItemServerRequest> {
  private static readonly pb::MessageParser<UpdateLedDriverItemServerRequest> _parser = new pb::MessageParser<UpdateLedDriverItemServerRequest>(() => new UpdateLedDriverItemServerRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateLedDriverItemServerRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[308]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateLedDriverItemServerRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateLedDriverItemServerRequest(UpdateLedDriverItemServerRequest other) : this() {
    deviceId_ = other.deviceId_;
    roomId_ = other.roomId_;
    ledItem_ = other.ledItem_ != null ? other.ledItem_.Clone() : null;
    brightnessPercent_ = other.brightnessPercent_;
    groupControl_ = other.groupControl_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateLedDriverItemServerRequest Clone() {
    return new UpdateLedDriverItemServerRequest(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "roomId" field.</summary>
  public const int RoomIdFieldNumber = 2;
  private string roomId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RoomId {
    get { return roomId_; }
    set {
      roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "ledItem" field.</summary>
  public const int LedItemFieldNumber = 3;
  private global::LedItem ledItem_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::LedItem LedItem {
    get { return ledItem_; }
    set {
      ledItem_ = value;
    }
  }

  /// <summary>Field number for the "brightnessPercent" field.</summary>
  public const int BrightnessPercentFieldNumber = 4;
  private int brightnessPercent_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int BrightnessPercent {
    get { return brightnessPercent_; }
    set {
      brightnessPercent_ = value;
    }
  }

  /// <summary>Field number for the "groupControl" field.</summary>
  public const int GroupControlFieldNumber = 5;
  private uint groupControl_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GroupControl {
    get { return groupControl_; }
    set {
      groupControl_ = value;
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateLedDriverItemServerRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateLedDriverItemServerRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    if (RoomId != other.RoomId) return false;
    if (!object.Equals(LedItem, other.LedItem)) return false;
    if (BrightnessPercent != other.BrightnessPercent) return false;
    if (GroupControl != other.GroupControl) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
    if (ledItem_ != null) hash ^= LedItem.GetHashCode();
    if (BrightnessPercent != 0) hash ^= BrightnessPercent.GetHashCode();
    if (GroupControl != 0) hash ^= GroupControl.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (RoomId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(RoomId);
    }
    if (ledItem_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(LedItem);
    }
    if (BrightnessPercent != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(BrightnessPercent);
    }
    if (GroupControl != 0) {
      output.WriteRawTag(40);
      output.WriteUInt32(GroupControl);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (RoomId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
    }
    if (ledItem_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(LedItem);
    }
    if (BrightnessPercent != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(BrightnessPercent);
    }
    if (GroupControl != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GroupControl);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateLedDriverItemServerRequest other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.RoomId.Length != 0) {
      RoomId = other.RoomId;
    }
    if (other.ledItem_ != null) {
      if (ledItem_ == null) {
        LedItem = new global::LedItem();
      }
      LedItem.MergeFrom(other.LedItem);
    }
    if (other.BrightnessPercent != 0) {
      BrightnessPercent = other.BrightnessPercent;
    }
    if (other.GroupControl != 0) {
      GroupControl = other.GroupControl;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
        case 18: {
          RoomId = input.ReadString();
          break;
        }
        case 26: {
          if (ledItem_ == null) {
            LedItem = new global::LedItem();
          }
          input.ReadMessage(LedItem);
          break;
        }
        case 32: {
          BrightnessPercent = input.ReadInt32();
          break;
        }
        case 40: {
          GroupControl = input.ReadUInt32();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Phản hồi cập nhật thông tin từng đèn
/// </summary>
public sealed partial class UpdateLedDriverItemServerResponse : pb::IMessage<UpdateLedDriverItemServerResponse> {
  private static readonly pb::MessageParser<UpdateLedDriverItemServerResponse> _parser = new pb::MessageParser<UpdateLedDriverItemServerResponse>(() => new UpdateLedDriverItemServerResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateLedDriverItemServerResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[309]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateLedDriverItemServerResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateLedDriverItemServerResponse(UpdateLedDriverItemServerResponse other) : this() {
    ledItem_ = other.ledItem_ != null ? other.ledItem_.Clone() : null;
    roomId_ = other.roomId_;
    statusCode_ = other.statusCode_ != null ? other.statusCode_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateLedDriverItemServerResponse Clone() {
    return new UpdateLedDriverItemServerResponse(this);
  }

  /// <summary>Field number for the "ledItem" field.</summary>
  public const int LedItemFieldNumber = 1;
  private global::LedItem ledItem_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::LedItem LedItem {
    get { return ledItem_; }
    set {
      ledItem_ = value;
    }
  }

  /// <summary>Field number for the "roomId" field.</summary>
  public const int RoomIdFieldNumber = 2;
  private string roomId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RoomId {
    get { return roomId_; }
    set {
      roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "statusCode" field.</summary>
  public const int StatusCodeFieldNumber = 1000;
  private global::StatusCode statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::StatusCode StatusCode {
    get { return statusCode_; }
    set {
      statusCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateLedDriverItemServerResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateLedDriverItemServerResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(LedItem, other.LedItem)) return false;
    if (RoomId != other.RoomId) return false;
    if (!object.Equals(StatusCode, other.StatusCode)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ledItem_ != null) hash ^= LedItem.GetHashCode();
    if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
    if (statusCode_ != null) hash ^= StatusCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ledItem_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(LedItem);
    }
    if (RoomId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(RoomId);
    }
    if (statusCode_ != null) {
      output.WriteRawTag(194, 62);
      output.WriteMessage(StatusCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ledItem_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(LedItem);
    }
    if (RoomId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
    }
    if (statusCode_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StatusCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateLedDriverItemServerResponse other) {
    if (other == null) {
      return;
    }
    if (other.ledItem_ != null) {
      if (ledItem_ == null) {
        LedItem = new global::LedItem();
      }
      LedItem.MergeFrom(other.LedItem);
    }
    if (other.RoomId.Length != 0) {
      RoomId = other.RoomId;
    }
    if (other.statusCode_ != null) {
      if (statusCode_ == null) {
        StatusCode = new global::StatusCode();
      }
      StatusCode.MergeFrom(other.StatusCode);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (ledItem_ == null) {
            LedItem = new global::LedItem();
          }
          input.ReadMessage(LedItem);
          break;
        }
        case 18: {
          RoomId = input.ReadString();
          break;
        }
        case 8002: {
          if (statusCode_ == null) {
            StatusCode = new global::StatusCode();
          }
          input.ReadMessage(StatusCode);
          break;
        }
      }
    }
  }

}

public sealed partial class LedDriverServerMessage : pb::IMessage<LedDriverServerMessage> {
  private static readonly pb::MessageParser<LedDriverServerMessage> _parser = new pb::MessageParser<LedDriverServerMessage>(() => new LedDriverServerMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<LedDriverServerMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[310]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LedDriverServerMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LedDriverServerMessage(LedDriverServerMessage other) : this() {
    ledDriverServerRequest_ = other.ledDriverServerRequest_ != null ? other.ledDriverServerRequest_.Clone() : null;
    ledDriverServerResponse_ = other.ledDriverServerResponse_ != null ? other.ledDriverServerResponse_.Clone() : null;
    getLedDriverServerRequest_ = other.getLedDriverServerRequest_ != null ? other.getLedDriverServerRequest_.Clone() : null;
    getLedDriverServerResponse_ = other.getLedDriverServerResponse_ != null ? other.getLedDriverServerResponse_.Clone() : null;
    getLedDriverItemServerRequest_ = other.getLedDriverItemServerRequest_ != null ? other.getLedDriverItemServerRequest_.Clone() : null;
    getLedDriverItemServerResponse_ = other.getLedDriverItemServerResponse_ != null ? other.getLedDriverItemServerResponse_.Clone() : null;
    updateLedDriverServerRequest_ = other.updateLedDriverServerRequest_ != null ? other.updateLedDriverServerRequest_.Clone() : null;
    updateLedDriverServerResponse_ = other.updateLedDriverServerResponse_ != null ? other.updateLedDriverServerResponse_.Clone() : null;
    updateLedDriverItemServerRequest_ = other.updateLedDriverItemServerRequest_ != null ? other.updateLedDriverItemServerRequest_.Clone() : null;
    updateLedDriverItemServerResponse_ = other.updateLedDriverItemServerResponse_ != null ? other.updateLedDriverItemServerResponse_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LedDriverServerMessage Clone() {
    return new LedDriverServerMessage(this);
  }

  /// <summary>Field number for the "ledDriverServerRequest" field.</summary>
  public const int LedDriverServerRequestFieldNumber = 1;
  private global::LedDriverServerRequest ledDriverServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::LedDriverServerRequest LedDriverServerRequest {
    get { return ledDriverServerRequest_; }
    set {
      ledDriverServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "ledDriverServerResponse" field.</summary>
  public const int LedDriverServerResponseFieldNumber = 2;
  private global::LedDriverServerResponse ledDriverServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::LedDriverServerResponse LedDriverServerResponse {
    get { return ledDriverServerResponse_; }
    set {
      ledDriverServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "getLedDriverServerRequest" field.</summary>
  public const int GetLedDriverServerRequestFieldNumber = 3;
  private global::GetLedDriverServerRequest getLedDriverServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetLedDriverServerRequest GetLedDriverServerRequest {
    get { return getLedDriverServerRequest_; }
    set {
      getLedDriverServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getLedDriverServerResponse" field.</summary>
  public const int GetLedDriverServerResponseFieldNumber = 4;
  private global::GetLedDriverServerResponse getLedDriverServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetLedDriverServerResponse GetLedDriverServerResponse {
    get { return getLedDriverServerResponse_; }
    set {
      getLedDriverServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "getLedDriverItemServerRequest" field.</summary>
  public const int GetLedDriverItemServerRequestFieldNumber = 5;
  private global::GetLedDriverItemServerRequest getLedDriverItemServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetLedDriverItemServerRequest GetLedDriverItemServerRequest {
    get { return getLedDriverItemServerRequest_; }
    set {
      getLedDriverItemServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getLedDriverItemServerResponse" field.</summary>
  public const int GetLedDriverItemServerResponseFieldNumber = 6;
  private global::GetLedDriverItemServerResponse getLedDriverItemServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetLedDriverItemServerResponse GetLedDriverItemServerResponse {
    get { return getLedDriverItemServerResponse_; }
    set {
      getLedDriverItemServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "updateLedDriverServerRequest" field.</summary>
  public const int UpdateLedDriverServerRequestFieldNumber = 7;
  private global::UpdateLedDriverServerRequest updateLedDriverServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateLedDriverServerRequest UpdateLedDriverServerRequest {
    get { return updateLedDriverServerRequest_; }
    set {
      updateLedDriverServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "updateLedDriverServerResponse" field.</summary>
  public const int UpdateLedDriverServerResponseFieldNumber = 8;
  private global::UpdateLedDriverServerResponse updateLedDriverServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateLedDriverServerResponse UpdateLedDriverServerResponse {
    get { return updateLedDriverServerResponse_; }
    set {
      updateLedDriverServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "updateLedDriverItemServerRequest" field.</summary>
  public const int UpdateLedDriverItemServerRequestFieldNumber = 9;
  private global::UpdateLedDriverItemServerRequest updateLedDriverItemServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateLedDriverItemServerRequest UpdateLedDriverItemServerRequest {
    get { return updateLedDriverItemServerRequest_; }
    set {
      updateLedDriverItemServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "updateLedDriverItemServerResponse" field.</summary>
  public const int UpdateLedDriverItemServerResponseFieldNumber = 10;
  private global::UpdateLedDriverItemServerResponse updateLedDriverItemServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateLedDriverItemServerResponse UpdateLedDriverItemServerResponse {
    get { return updateLedDriverItemServerResponse_; }
    set {
      updateLedDriverItemServerResponse_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as LedDriverServerMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(LedDriverServerMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(LedDriverServerRequest, other.LedDriverServerRequest)) return false;
    if (!object.Equals(LedDriverServerResponse, other.LedDriverServerResponse)) return false;
    if (!object.Equals(GetLedDriverServerRequest, other.GetLedDriverServerRequest)) return false;
    if (!object.Equals(GetLedDriverServerResponse, other.GetLedDriverServerResponse)) return false;
    if (!object.Equals(GetLedDriverItemServerRequest, other.GetLedDriverItemServerRequest)) return false;
    if (!object.Equals(GetLedDriverItemServerResponse, other.GetLedDriverItemServerResponse)) return false;
    if (!object.Equals(UpdateLedDriverServerRequest, other.UpdateLedDriverServerRequest)) return false;
    if (!object.Equals(UpdateLedDriverServerResponse, other.UpdateLedDriverServerResponse)) return false;
    if (!object.Equals(UpdateLedDriverItemServerRequest, other.UpdateLedDriverItemServerRequest)) return false;
    if (!object.Equals(UpdateLedDriverItemServerResponse, other.UpdateLedDriverItemServerResponse)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ledDriverServerRequest_ != null) hash ^= LedDriverServerRequest.GetHashCode();
    if (ledDriverServerResponse_ != null) hash ^= LedDriverServerResponse.GetHashCode();
    if (getLedDriverServerRequest_ != null) hash ^= GetLedDriverServerRequest.GetHashCode();
    if (getLedDriverServerResponse_ != null) hash ^= GetLedDriverServerResponse.GetHashCode();
    if (getLedDriverItemServerRequest_ != null) hash ^= GetLedDriverItemServerRequest.GetHashCode();
    if (getLedDriverItemServerResponse_ != null) hash ^= GetLedDriverItemServerResponse.GetHashCode();
    if (updateLedDriverServerRequest_ != null) hash ^= UpdateLedDriverServerRequest.GetHashCode();
    if (updateLedDriverServerResponse_ != null) hash ^= UpdateLedDriverServerResponse.GetHashCode();
    if (updateLedDriverItemServerRequest_ != null) hash ^= UpdateLedDriverItemServerRequest.GetHashCode();
    if (updateLedDriverItemServerResponse_ != null) hash ^= UpdateLedDriverItemServerResponse.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ledDriverServerRequest_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(LedDriverServerRequest);
    }
    if (ledDriverServerResponse_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(LedDriverServerResponse);
    }
    if (getLedDriverServerRequest_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(GetLedDriverServerRequest);
    }
    if (getLedDriverServerResponse_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(GetLedDriverServerResponse);
    }
    if (getLedDriverItemServerRequest_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(GetLedDriverItemServerRequest);
    }
    if (getLedDriverItemServerResponse_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(GetLedDriverItemServerResponse);
    }
    if (updateLedDriverServerRequest_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(UpdateLedDriverServerRequest);
    }
    if (updateLedDriverServerResponse_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(UpdateLedDriverServerResponse);
    }
    if (updateLedDriverItemServerRequest_ != null) {
      output.WriteRawTag(74);
      output.WriteMessage(UpdateLedDriverItemServerRequest);
    }
    if (updateLedDriverItemServerResponse_ != null) {
      output.WriteRawTag(82);
      output.WriteMessage(UpdateLedDriverItemServerResponse);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ledDriverServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(LedDriverServerRequest);
    }
    if (ledDriverServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(LedDriverServerResponse);
    }
    if (getLedDriverServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetLedDriverServerRequest);
    }
    if (getLedDriverServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetLedDriverServerResponse);
    }
    if (getLedDriverItemServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetLedDriverItemServerRequest);
    }
    if (getLedDriverItemServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetLedDriverItemServerResponse);
    }
    if (updateLedDriverServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateLedDriverServerRequest);
    }
    if (updateLedDriverServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateLedDriverServerResponse);
    }
    if (updateLedDriverItemServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateLedDriverItemServerRequest);
    }
    if (updateLedDriverItemServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateLedDriverItemServerResponse);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(LedDriverServerMessage other) {
    if (other == null) {
      return;
    }
    if (other.ledDriverServerRequest_ != null) {
      if (ledDriverServerRequest_ == null) {
        LedDriverServerRequest = new global::LedDriverServerRequest();
      }
      LedDriverServerRequest.MergeFrom(other.LedDriverServerRequest);
    }
    if (other.ledDriverServerResponse_ != null) {
      if (ledDriverServerResponse_ == null) {
        LedDriverServerResponse = new global::LedDriverServerResponse();
      }
      LedDriverServerResponse.MergeFrom(other.LedDriverServerResponse);
    }
    if (other.getLedDriverServerRequest_ != null) {
      if (getLedDriverServerRequest_ == null) {
        GetLedDriverServerRequest = new global::GetLedDriverServerRequest();
      }
      GetLedDriverServerRequest.MergeFrom(other.GetLedDriverServerRequest);
    }
    if (other.getLedDriverServerResponse_ != null) {
      if (getLedDriverServerResponse_ == null) {
        GetLedDriverServerResponse = new global::GetLedDriverServerResponse();
      }
      GetLedDriverServerResponse.MergeFrom(other.GetLedDriverServerResponse);
    }
    if (other.getLedDriverItemServerRequest_ != null) {
      if (getLedDriverItemServerRequest_ == null) {
        GetLedDriverItemServerRequest = new global::GetLedDriverItemServerRequest();
      }
      GetLedDriverItemServerRequest.MergeFrom(other.GetLedDriverItemServerRequest);
    }
    if (other.getLedDriverItemServerResponse_ != null) {
      if (getLedDriverItemServerResponse_ == null) {
        GetLedDriverItemServerResponse = new global::GetLedDriverItemServerResponse();
      }
      GetLedDriverItemServerResponse.MergeFrom(other.GetLedDriverItemServerResponse);
    }
    if (other.updateLedDriverServerRequest_ != null) {
      if (updateLedDriverServerRequest_ == null) {
        UpdateLedDriverServerRequest = new global::UpdateLedDriverServerRequest();
      }
      UpdateLedDriverServerRequest.MergeFrom(other.UpdateLedDriverServerRequest);
    }
    if (other.updateLedDriverServerResponse_ != null) {
      if (updateLedDriverServerResponse_ == null) {
        UpdateLedDriverServerResponse = new global::UpdateLedDriverServerResponse();
      }
      UpdateLedDriverServerResponse.MergeFrom(other.UpdateLedDriverServerResponse);
    }
    if (other.updateLedDriverItemServerRequest_ != null) {
      if (updateLedDriverItemServerRequest_ == null) {
        UpdateLedDriverItemServerRequest = new global::UpdateLedDriverItemServerRequest();
      }
      UpdateLedDriverItemServerRequest.MergeFrom(other.UpdateLedDriverItemServerRequest);
    }
    if (other.updateLedDriverItemServerResponse_ != null) {
      if (updateLedDriverItemServerResponse_ == null) {
        UpdateLedDriverItemServerResponse = new global::UpdateLedDriverItemServerResponse();
      }
      UpdateLedDriverItemServerResponse.MergeFrom(other.UpdateLedDriverItemServerResponse);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (ledDriverServerRequest_ == null) {
            LedDriverServerRequest = new global::LedDriverServerRequest();
          }
          input.ReadMessage(LedDriverServerRequest);
          break;
        }
        case 18: {
          if (ledDriverServerResponse_ == null) {
            LedDriverServerResponse = new global::LedDriverServerResponse();
          }
          input.ReadMessage(LedDriverServerResponse);
          break;
        }
        case 26: {
          if (getLedDriverServerRequest_ == null) {
            GetLedDriverServerRequest = new global::GetLedDriverServerRequest();
          }
          input.ReadMessage(GetLedDriverServerRequest);
          break;
        }
        case 34: {
          if (getLedDriverServerResponse_ == null) {
            GetLedDriverServerResponse = new global::GetLedDriverServerResponse();
          }
          input.ReadMessage(GetLedDriverServerResponse);
          break;
        }
        case 42: {
          if (getLedDriverItemServerRequest_ == null) {
            GetLedDriverItemServerRequest = new global::GetLedDriverItemServerRequest();
          }
          input.ReadMessage(GetLedDriverItemServerRequest);
          break;
        }
        case 50: {
          if (getLedDriverItemServerResponse_ == null) {
            GetLedDriverItemServerResponse = new global::GetLedDriverItemServerResponse();
          }
          input.ReadMessage(GetLedDriverItemServerResponse);
          break;
        }
        case 58: {
          if (updateLedDriverServerRequest_ == null) {
            UpdateLedDriverServerRequest = new global::UpdateLedDriverServerRequest();
          }
          input.ReadMessage(UpdateLedDriverServerRequest);
          break;
        }
        case 66: {
          if (updateLedDriverServerResponse_ == null) {
            UpdateLedDriverServerResponse = new global::UpdateLedDriverServerResponse();
          }
          input.ReadMessage(UpdateLedDriverServerResponse);
          break;
        }
        case 74: {
          if (updateLedDriverItemServerRequest_ == null) {
            UpdateLedDriverItemServerRequest = new global::UpdateLedDriverItemServerRequest();
          }
          input.ReadMessage(UpdateLedDriverItemServerRequest);
          break;
        }
        case 82: {
          if (updateLedDriverItemServerResponse_ == null) {
            UpdateLedDriverItemServerResponse = new global::UpdateLedDriverItemServerResponse();
          }
          input.ReadMessage(UpdateLedDriverItemServerResponse);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Chuyển động 
/// </summary>
public sealed partial class MotionServerMessage : pb::IMessage<MotionServerMessage> {
  private static readonly pb::MessageParser<MotionServerMessage> _parser = new pb::MessageParser<MotionServerMessage>(() => new MotionServerMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MotionServerMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[311]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MotionServerMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MotionServerMessage(MotionServerMessage other) : this() {
    motionServerRequest_ = other.motionServerRequest_ != null ? other.motionServerRequest_.Clone() : null;
    motionServerResponse_ = other.motionServerResponse_ != null ? other.motionServerResponse_.Clone() : null;
    getMotionServerRequest_ = other.getMotionServerRequest_ != null ? other.getMotionServerRequest_.Clone() : null;
    getMotionServerResponse_ = other.getMotionServerResponse_ != null ? other.getMotionServerResponse_.Clone() : null;
    updateMotionServerRequest_ = other.updateMotionServerRequest_ != null ? other.updateMotionServerRequest_.Clone() : null;
    updateMotionServerResponse_ = other.updateMotionServerResponse_ != null ? other.updateMotionServerResponse_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MotionServerMessage Clone() {
    return new MotionServerMessage(this);
  }

  /// <summary>Field number for the "motionServerRequest" field.</summary>
  public const int MotionServerRequestFieldNumber = 1;
  private global::MotionServerRequest motionServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MotionServerRequest MotionServerRequest {
    get { return motionServerRequest_; }
    set {
      motionServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "motionServerResponse" field.</summary>
  public const int MotionServerResponseFieldNumber = 2;
  private global::MotionServerResponse motionServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MotionServerResponse MotionServerResponse {
    get { return motionServerResponse_; }
    set {
      motionServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "getMotionServerRequest" field.</summary>
  public const int GetMotionServerRequestFieldNumber = 3;
  private global::GetMotionServerRequest getMotionServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetMotionServerRequest GetMotionServerRequest {
    get { return getMotionServerRequest_; }
    set {
      getMotionServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getMotionServerResponse" field.</summary>
  public const int GetMotionServerResponseFieldNumber = 4;
  private global::GetMotionServerResponse getMotionServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetMotionServerResponse GetMotionServerResponse {
    get { return getMotionServerResponse_; }
    set {
      getMotionServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "updateMotionServerRequest" field.</summary>
  public const int UpdateMotionServerRequestFieldNumber = 5;
  private global::UpdateMotionServerRequest updateMotionServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateMotionServerRequest UpdateMotionServerRequest {
    get { return updateMotionServerRequest_; }
    set {
      updateMotionServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "updateMotionServerResponse" field.</summary>
  public const int UpdateMotionServerResponseFieldNumber = 6;
  private global::UpdateMotionServerResponse updateMotionServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateMotionServerResponse UpdateMotionServerResponse {
    get { return updateMotionServerResponse_; }
    set {
      updateMotionServerResponse_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MotionServerMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MotionServerMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(MotionServerRequest, other.MotionServerRequest)) return false;
    if (!object.Equals(MotionServerResponse, other.MotionServerResponse)) return false;
    if (!object.Equals(GetMotionServerRequest, other.GetMotionServerRequest)) return false;
    if (!object.Equals(GetMotionServerResponse, other.GetMotionServerResponse)) return false;
    if (!object.Equals(UpdateMotionServerRequest, other.UpdateMotionServerRequest)) return false;
    if (!object.Equals(UpdateMotionServerResponse, other.UpdateMotionServerResponse)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (motionServerRequest_ != null) hash ^= MotionServerRequest.GetHashCode();
    if (motionServerResponse_ != null) hash ^= MotionServerResponse.GetHashCode();
    if (getMotionServerRequest_ != null) hash ^= GetMotionServerRequest.GetHashCode();
    if (getMotionServerResponse_ != null) hash ^= GetMotionServerResponse.GetHashCode();
    if (updateMotionServerRequest_ != null) hash ^= UpdateMotionServerRequest.GetHashCode();
    if (updateMotionServerResponse_ != null) hash ^= UpdateMotionServerResponse.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (motionServerRequest_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(MotionServerRequest);
    }
    if (motionServerResponse_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(MotionServerResponse);
    }
    if (getMotionServerRequest_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(GetMotionServerRequest);
    }
    if (getMotionServerResponse_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(GetMotionServerResponse);
    }
    if (updateMotionServerRequest_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(UpdateMotionServerRequest);
    }
    if (updateMotionServerResponse_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(UpdateMotionServerResponse);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (motionServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(MotionServerRequest);
    }
    if (motionServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(MotionServerResponse);
    }
    if (getMotionServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetMotionServerRequest);
    }
    if (getMotionServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetMotionServerResponse);
    }
    if (updateMotionServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateMotionServerRequest);
    }
    if (updateMotionServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateMotionServerResponse);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MotionServerMessage other) {
    if (other == null) {
      return;
    }
    if (other.motionServerRequest_ != null) {
      if (motionServerRequest_ == null) {
        MotionServerRequest = new global::MotionServerRequest();
      }
      MotionServerRequest.MergeFrom(other.MotionServerRequest);
    }
    if (other.motionServerResponse_ != null) {
      if (motionServerResponse_ == null) {
        MotionServerResponse = new global::MotionServerResponse();
      }
      MotionServerResponse.MergeFrom(other.MotionServerResponse);
    }
    if (other.getMotionServerRequest_ != null) {
      if (getMotionServerRequest_ == null) {
        GetMotionServerRequest = new global::GetMotionServerRequest();
      }
      GetMotionServerRequest.MergeFrom(other.GetMotionServerRequest);
    }
    if (other.getMotionServerResponse_ != null) {
      if (getMotionServerResponse_ == null) {
        GetMotionServerResponse = new global::GetMotionServerResponse();
      }
      GetMotionServerResponse.MergeFrom(other.GetMotionServerResponse);
    }
    if (other.updateMotionServerRequest_ != null) {
      if (updateMotionServerRequest_ == null) {
        UpdateMotionServerRequest = new global::UpdateMotionServerRequest();
      }
      UpdateMotionServerRequest.MergeFrom(other.UpdateMotionServerRequest);
    }
    if (other.updateMotionServerResponse_ != null) {
      if (updateMotionServerResponse_ == null) {
        UpdateMotionServerResponse = new global::UpdateMotionServerResponse();
      }
      UpdateMotionServerResponse.MergeFrom(other.UpdateMotionServerResponse);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (motionServerRequest_ == null) {
            MotionServerRequest = new global::MotionServerRequest();
          }
          input.ReadMessage(MotionServerRequest);
          break;
        }
        case 18: {
          if (motionServerResponse_ == null) {
            MotionServerResponse = new global::MotionServerResponse();
          }
          input.ReadMessage(MotionServerResponse);
          break;
        }
        case 26: {
          if (getMotionServerRequest_ == null) {
            GetMotionServerRequest = new global::GetMotionServerRequest();
          }
          input.ReadMessage(GetMotionServerRequest);
          break;
        }
        case 34: {
          if (getMotionServerResponse_ == null) {
            GetMotionServerResponse = new global::GetMotionServerResponse();
          }
          input.ReadMessage(GetMotionServerResponse);
          break;
        }
        case 42: {
          if (updateMotionServerRequest_ == null) {
            UpdateMotionServerRequest = new global::UpdateMotionServerRequest();
          }
          input.ReadMessage(UpdateMotionServerRequest);
          break;
        }
        case 50: {
          if (updateMotionServerResponse_ == null) {
            UpdateMotionServerResponse = new global::UpdateMotionServerResponse();
          }
          input.ReadMessage(UpdateMotionServerResponse);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Homekit 
/// </summary>
public sealed partial class HomekitServerMessage : pb::IMessage<HomekitServerMessage> {
  private static readonly pb::MessageParser<HomekitServerMessage> _parser = new pb::MessageParser<HomekitServerMessage>(() => new HomekitServerMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<HomekitServerMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[312]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public HomekitServerMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public HomekitServerMessage(HomekitServerMessage other) : this() {
    getHomekitInfoServerRequest_ = other.getHomekitInfoServerRequest_ != null ? other.getHomekitInfoServerRequest_.Clone() : null;
    getHomekitInfoServerResponse_ = other.getHomekitInfoServerResponse_ != null ? other.getHomekitInfoServerResponse_.Clone() : null;
    updateHomekitServerRequest_ = other.updateHomekitServerRequest_ != null ? other.updateHomekitServerRequest_.Clone() : null;
    updateHomekitServerResponse_ = other.updateHomekitServerResponse_ != null ? other.updateHomekitServerResponse_.Clone() : null;
    setHomekitModeServerRequest_ = other.setHomekitModeServerRequest_ != null ? other.setHomekitModeServerRequest_.Clone() : null;
    setHomekitModeServerResponse_ = other.setHomekitModeServerResponse_ != null ? other.setHomekitModeServerResponse_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public HomekitServerMessage Clone() {
    return new HomekitServerMessage(this);
  }

  /// <summary>Field number for the "getHomekitInfoServerRequest" field.</summary>
  public const int GetHomekitInfoServerRequestFieldNumber = 1;
  private global::GetHomekitInfoServerRequest getHomekitInfoServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetHomekitInfoServerRequest GetHomekitInfoServerRequest {
    get { return getHomekitInfoServerRequest_; }
    set {
      getHomekitInfoServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getHomekitInfoServerResponse" field.</summary>
  public const int GetHomekitInfoServerResponseFieldNumber = 2;
  private global::GetHomekitInfoServerResponse getHomekitInfoServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetHomekitInfoServerResponse GetHomekitInfoServerResponse {
    get { return getHomekitInfoServerResponse_; }
    set {
      getHomekitInfoServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "updateHomekitServerRequest" field.</summary>
  public const int UpdateHomekitServerRequestFieldNumber = 3;
  private global::UpdateHomekitServerRequest updateHomekitServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateHomekitServerRequest UpdateHomekitServerRequest {
    get { return updateHomekitServerRequest_; }
    set {
      updateHomekitServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "updateHomekitServerResponse" field.</summary>
  public const int UpdateHomekitServerResponseFieldNumber = 4;
  private global::UpdateHomekitServerResponse updateHomekitServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateHomekitServerResponse UpdateHomekitServerResponse {
    get { return updateHomekitServerResponse_; }
    set {
      updateHomekitServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "setHomekitModeServerRequest" field.</summary>
  public const int SetHomekitModeServerRequestFieldNumber = 5;
  private global::SetHomekitModeServerRequest setHomekitModeServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SetHomekitModeServerRequest SetHomekitModeServerRequest {
    get { return setHomekitModeServerRequest_; }
    set {
      setHomekitModeServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "setHomekitModeServerResponse" field.</summary>
  public const int SetHomekitModeServerResponseFieldNumber = 6;
  private global::SetHomekitModeServerResponse setHomekitModeServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SetHomekitModeServerResponse SetHomekitModeServerResponse {
    get { return setHomekitModeServerResponse_; }
    set {
      setHomekitModeServerResponse_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as HomekitServerMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(HomekitServerMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(GetHomekitInfoServerRequest, other.GetHomekitInfoServerRequest)) return false;
    if (!object.Equals(GetHomekitInfoServerResponse, other.GetHomekitInfoServerResponse)) return false;
    if (!object.Equals(UpdateHomekitServerRequest, other.UpdateHomekitServerRequest)) return false;
    if (!object.Equals(UpdateHomekitServerResponse, other.UpdateHomekitServerResponse)) return false;
    if (!object.Equals(SetHomekitModeServerRequest, other.SetHomekitModeServerRequest)) return false;
    if (!object.Equals(SetHomekitModeServerResponse, other.SetHomekitModeServerResponse)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (getHomekitInfoServerRequest_ != null) hash ^= GetHomekitInfoServerRequest.GetHashCode();
    if (getHomekitInfoServerResponse_ != null) hash ^= GetHomekitInfoServerResponse.GetHashCode();
    if (updateHomekitServerRequest_ != null) hash ^= UpdateHomekitServerRequest.GetHashCode();
    if (updateHomekitServerResponse_ != null) hash ^= UpdateHomekitServerResponse.GetHashCode();
    if (setHomekitModeServerRequest_ != null) hash ^= SetHomekitModeServerRequest.GetHashCode();
    if (setHomekitModeServerResponse_ != null) hash ^= SetHomekitModeServerResponse.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (getHomekitInfoServerRequest_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(GetHomekitInfoServerRequest);
    }
    if (getHomekitInfoServerResponse_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(GetHomekitInfoServerResponse);
    }
    if (updateHomekitServerRequest_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(UpdateHomekitServerRequest);
    }
    if (updateHomekitServerResponse_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(UpdateHomekitServerResponse);
    }
    if (setHomekitModeServerRequest_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(SetHomekitModeServerRequest);
    }
    if (setHomekitModeServerResponse_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(SetHomekitModeServerResponse);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (getHomekitInfoServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetHomekitInfoServerRequest);
    }
    if (getHomekitInfoServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetHomekitInfoServerResponse);
    }
    if (updateHomekitServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateHomekitServerRequest);
    }
    if (updateHomekitServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateHomekitServerResponse);
    }
    if (setHomekitModeServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SetHomekitModeServerRequest);
    }
    if (setHomekitModeServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SetHomekitModeServerResponse);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(HomekitServerMessage other) {
    if (other == null) {
      return;
    }
    if (other.getHomekitInfoServerRequest_ != null) {
      if (getHomekitInfoServerRequest_ == null) {
        GetHomekitInfoServerRequest = new global::GetHomekitInfoServerRequest();
      }
      GetHomekitInfoServerRequest.MergeFrom(other.GetHomekitInfoServerRequest);
    }
    if (other.getHomekitInfoServerResponse_ != null) {
      if (getHomekitInfoServerResponse_ == null) {
        GetHomekitInfoServerResponse = new global::GetHomekitInfoServerResponse();
      }
      GetHomekitInfoServerResponse.MergeFrom(other.GetHomekitInfoServerResponse);
    }
    if (other.updateHomekitServerRequest_ != null) {
      if (updateHomekitServerRequest_ == null) {
        UpdateHomekitServerRequest = new global::UpdateHomekitServerRequest();
      }
      UpdateHomekitServerRequest.MergeFrom(other.UpdateHomekitServerRequest);
    }
    if (other.updateHomekitServerResponse_ != null) {
      if (updateHomekitServerResponse_ == null) {
        UpdateHomekitServerResponse = new global::UpdateHomekitServerResponse();
      }
      UpdateHomekitServerResponse.MergeFrom(other.UpdateHomekitServerResponse);
    }
    if (other.setHomekitModeServerRequest_ != null) {
      if (setHomekitModeServerRequest_ == null) {
        SetHomekitModeServerRequest = new global::SetHomekitModeServerRequest();
      }
      SetHomekitModeServerRequest.MergeFrom(other.SetHomekitModeServerRequest);
    }
    if (other.setHomekitModeServerResponse_ != null) {
      if (setHomekitModeServerResponse_ == null) {
        SetHomekitModeServerResponse = new global::SetHomekitModeServerResponse();
      }
      SetHomekitModeServerResponse.MergeFrom(other.SetHomekitModeServerResponse);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (getHomekitInfoServerRequest_ == null) {
            GetHomekitInfoServerRequest = new global::GetHomekitInfoServerRequest();
          }
          input.ReadMessage(GetHomekitInfoServerRequest);
          break;
        }
        case 18: {
          if (getHomekitInfoServerResponse_ == null) {
            GetHomekitInfoServerResponse = new global::GetHomekitInfoServerResponse();
          }
          input.ReadMessage(GetHomekitInfoServerResponse);
          break;
        }
        case 26: {
          if (updateHomekitServerRequest_ == null) {
            UpdateHomekitServerRequest = new global::UpdateHomekitServerRequest();
          }
          input.ReadMessage(UpdateHomekitServerRequest);
          break;
        }
        case 34: {
          if (updateHomekitServerResponse_ == null) {
            UpdateHomekitServerResponse = new global::UpdateHomekitServerResponse();
          }
          input.ReadMessage(UpdateHomekitServerResponse);
          break;
        }
        case 42: {
          if (setHomekitModeServerRequest_ == null) {
            SetHomekitModeServerRequest = new global::SetHomekitModeServerRequest();
          }
          input.ReadMessage(SetHomekitModeServerRequest);
          break;
        }
        case 50: {
          if (setHomekitModeServerResponse_ == null) {
            SetHomekitModeServerResponse = new global::SetHomekitModeServerResponse();
          }
          input.ReadMessage(SetHomekitModeServerResponse);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nút nhấn 
/// </summary>
public sealed partial class ButtonServerMessage : pb::IMessage<ButtonServerMessage> {
  private static readonly pb::MessageParser<ButtonServerMessage> _parser = new pb::MessageParser<ButtonServerMessage>(() => new ButtonServerMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ButtonServerMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[313]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ButtonServerMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ButtonServerMessage(ButtonServerMessage other) : this() {
    getButtonInfoServerRequest_ = other.getButtonInfoServerRequest_ != null ? other.getButtonInfoServerRequest_.Clone() : null;
    getButtonInfoServerResponse_ = other.getButtonInfoServerResponse_ != null ? other.getButtonInfoServerResponse_.Clone() : null;
    updateButtonServerRequest_ = other.updateButtonServerRequest_ != null ? other.updateButtonServerRequest_.Clone() : null;
    updateButtonServerResponse_ = other.updateButtonServerResponse_ != null ? other.updateButtonServerResponse_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ButtonServerMessage Clone() {
    return new ButtonServerMessage(this);
  }

  /// <summary>Field number for the "getButtonInfoServerRequest" field.</summary>
  public const int GetButtonInfoServerRequestFieldNumber = 1;
  private global::GetButtonInfoServerRequest getButtonInfoServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetButtonInfoServerRequest GetButtonInfoServerRequest {
    get { return getButtonInfoServerRequest_; }
    set {
      getButtonInfoServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getButtonInfoServerResponse" field.</summary>
  public const int GetButtonInfoServerResponseFieldNumber = 2;
  private global::GetButtonInfoServerResponse getButtonInfoServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetButtonInfoServerResponse GetButtonInfoServerResponse {
    get { return getButtonInfoServerResponse_; }
    set {
      getButtonInfoServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "updateButtonServerRequest" field.</summary>
  public const int UpdateButtonServerRequestFieldNumber = 3;
  private global::UpdateButtonServerRequest updateButtonServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateButtonServerRequest UpdateButtonServerRequest {
    get { return updateButtonServerRequest_; }
    set {
      updateButtonServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "updateButtonServerResponse" field.</summary>
  public const int UpdateButtonServerResponseFieldNumber = 4;
  private global::UpdateButtonServerResponse updateButtonServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateButtonServerResponse UpdateButtonServerResponse {
    get { return updateButtonServerResponse_; }
    set {
      updateButtonServerResponse_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ButtonServerMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ButtonServerMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(GetButtonInfoServerRequest, other.GetButtonInfoServerRequest)) return false;
    if (!object.Equals(GetButtonInfoServerResponse, other.GetButtonInfoServerResponse)) return false;
    if (!object.Equals(UpdateButtonServerRequest, other.UpdateButtonServerRequest)) return false;
    if (!object.Equals(UpdateButtonServerResponse, other.UpdateButtonServerResponse)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (getButtonInfoServerRequest_ != null) hash ^= GetButtonInfoServerRequest.GetHashCode();
    if (getButtonInfoServerResponse_ != null) hash ^= GetButtonInfoServerResponse.GetHashCode();
    if (updateButtonServerRequest_ != null) hash ^= UpdateButtonServerRequest.GetHashCode();
    if (updateButtonServerResponse_ != null) hash ^= UpdateButtonServerResponse.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (getButtonInfoServerRequest_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(GetButtonInfoServerRequest);
    }
    if (getButtonInfoServerResponse_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(GetButtonInfoServerResponse);
    }
    if (updateButtonServerRequest_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(UpdateButtonServerRequest);
    }
    if (updateButtonServerResponse_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(UpdateButtonServerResponse);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (getButtonInfoServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetButtonInfoServerRequest);
    }
    if (getButtonInfoServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetButtonInfoServerResponse);
    }
    if (updateButtonServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateButtonServerRequest);
    }
    if (updateButtonServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateButtonServerResponse);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ButtonServerMessage other) {
    if (other == null) {
      return;
    }
    if (other.getButtonInfoServerRequest_ != null) {
      if (getButtonInfoServerRequest_ == null) {
        GetButtonInfoServerRequest = new global::GetButtonInfoServerRequest();
      }
      GetButtonInfoServerRequest.MergeFrom(other.GetButtonInfoServerRequest);
    }
    if (other.getButtonInfoServerResponse_ != null) {
      if (getButtonInfoServerResponse_ == null) {
        GetButtonInfoServerResponse = new global::GetButtonInfoServerResponse();
      }
      GetButtonInfoServerResponse.MergeFrom(other.GetButtonInfoServerResponse);
    }
    if (other.updateButtonServerRequest_ != null) {
      if (updateButtonServerRequest_ == null) {
        UpdateButtonServerRequest = new global::UpdateButtonServerRequest();
      }
      UpdateButtonServerRequest.MergeFrom(other.UpdateButtonServerRequest);
    }
    if (other.updateButtonServerResponse_ != null) {
      if (updateButtonServerResponse_ == null) {
        UpdateButtonServerResponse = new global::UpdateButtonServerResponse();
      }
      UpdateButtonServerResponse.MergeFrom(other.UpdateButtonServerResponse);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (getButtonInfoServerRequest_ == null) {
            GetButtonInfoServerRequest = new global::GetButtonInfoServerRequest();
          }
          input.ReadMessage(GetButtonInfoServerRequest);
          break;
        }
        case 18: {
          if (getButtonInfoServerResponse_ == null) {
            GetButtonInfoServerResponse = new global::GetButtonInfoServerResponse();
          }
          input.ReadMessage(GetButtonInfoServerResponse);
          break;
        }
        case 26: {
          if (updateButtonServerRequest_ == null) {
            UpdateButtonServerRequest = new global::UpdateButtonServerRequest();
          }
          input.ReadMessage(UpdateButtonServerRequest);
          break;
        }
        case 34: {
          if (updateButtonServerResponse_ == null) {
            UpdateButtonServerResponse = new global::UpdateButtonServerResponse();
          }
          input.ReadMessage(UpdateButtonServerResponse);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Nhóm thiết bị 
/// </summary>
public sealed partial class GroupControlServerMessage : pb::IMessage<GroupControlServerMessage> {
  private static readonly pb::MessageParser<GroupControlServerMessage> _parser = new pb::MessageParser<GroupControlServerMessage>(() => new GroupControlServerMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GroupControlServerMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[314]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GroupControlServerMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GroupControlServerMessage(GroupControlServerMessage other) : this() {
    groupControlServerRequest_ = other.groupControlServerRequest_ != null ? other.groupControlServerRequest_.Clone() : null;
    groupControlServerResponse_ = other.groupControlServerResponse_ != null ? other.groupControlServerResponse_.Clone() : null;
    getGroupControlInfoServerRequest_ = other.getGroupControlInfoServerRequest_ != null ? other.getGroupControlInfoServerRequest_.Clone() : null;
    getGroupControlInfoServerResponse_ = other.getGroupControlInfoServerResponse_ != null ? other.getGroupControlInfoServerResponse_.Clone() : null;
    getControlsServerRequest_ = other.getControlsServerRequest_ != null ? other.getControlsServerRequest_.Clone() : null;
    getControlsServerResponse_ = other.getControlsServerResponse_ != null ? other.getControlsServerResponse_.Clone() : null;
    addGroupControlServerRequest_ = other.addGroupControlServerRequest_ != null ? other.addGroupControlServerRequest_.Clone() : null;
    addGroupControlServerResponse_ = other.addGroupControlServerResponse_ != null ? other.addGroupControlServerResponse_.Clone() : null;
    updateGroupControlServerRequest_ = other.updateGroupControlServerRequest_ != null ? other.updateGroupControlServerRequest_.Clone() : null;
    updateGroupControlServerResponse_ = other.updateGroupControlServerResponse_ != null ? other.updateGroupControlServerResponse_.Clone() : null;
    deleteGroupControlServerRequest_ = other.deleteGroupControlServerRequest_ != null ? other.deleteGroupControlServerRequest_.Clone() : null;
    deleteGroupControlServerResponse_ = other.deleteGroupControlServerResponse_ != null ? other.deleteGroupControlServerResponse_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GroupControlServerMessage Clone() {
    return new GroupControlServerMessage(this);
  }

  /// <summary>Field number for the "groupControlServerRequest" field.</summary>
  public const int GroupControlServerRequestFieldNumber = 1;
  private global::GroupControlServerRequest groupControlServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GroupControlServerRequest GroupControlServerRequest {
    get { return groupControlServerRequest_; }
    set {
      groupControlServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "groupControlServerResponse" field.</summary>
  public const int GroupControlServerResponseFieldNumber = 2;
  private global::GroupControlServerResponse groupControlServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GroupControlServerResponse GroupControlServerResponse {
    get { return groupControlServerResponse_; }
    set {
      groupControlServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "getGroupControlInfoServerRequest" field.</summary>
  public const int GetGroupControlInfoServerRequestFieldNumber = 3;
  private global::GetGroupControlInfoServerRequest getGroupControlInfoServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetGroupControlInfoServerRequest GetGroupControlInfoServerRequest {
    get { return getGroupControlInfoServerRequest_; }
    set {
      getGroupControlInfoServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getGroupControlInfoServerResponse" field.</summary>
  public const int GetGroupControlInfoServerResponseFieldNumber = 4;
  private global::GetGroupControlInfoServerResponse getGroupControlInfoServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetGroupControlInfoServerResponse GetGroupControlInfoServerResponse {
    get { return getGroupControlInfoServerResponse_; }
    set {
      getGroupControlInfoServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "getControlsServerRequest" field.</summary>
  public const int GetControlsServerRequestFieldNumber = 5;
  private global::GetControlsServerRequest getControlsServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetControlsServerRequest GetControlsServerRequest {
    get { return getControlsServerRequest_; }
    set {
      getControlsServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getControlsServerResponse" field.</summary>
  public const int GetControlsServerResponseFieldNumber = 6;
  private global::GetControlsServerResponse getControlsServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetControlsServerResponse GetControlsServerResponse {
    get { return getControlsServerResponse_; }
    set {
      getControlsServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "addGroupControlServerRequest" field.</summary>
  public const int AddGroupControlServerRequestFieldNumber = 7;
  private global::AddGroupControlServerRequest addGroupControlServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AddGroupControlServerRequest AddGroupControlServerRequest {
    get { return addGroupControlServerRequest_; }
    set {
      addGroupControlServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "addGroupControlServerResponse" field.</summary>
  public const int AddGroupControlServerResponseFieldNumber = 8;
  private global::AddGroupControlServerResponse addGroupControlServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AddGroupControlServerResponse AddGroupControlServerResponse {
    get { return addGroupControlServerResponse_; }
    set {
      addGroupControlServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "updateGroupControlServerRequest" field.</summary>
  public const int UpdateGroupControlServerRequestFieldNumber = 9;
  private global::UpdateGroupControlServerRequest updateGroupControlServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateGroupControlServerRequest UpdateGroupControlServerRequest {
    get { return updateGroupControlServerRequest_; }
    set {
      updateGroupControlServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "updateGroupControlServerResponse" field.</summary>
  public const int UpdateGroupControlServerResponseFieldNumber = 10;
  private global::UpdateGroupControlServerResponse updateGroupControlServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateGroupControlServerResponse UpdateGroupControlServerResponse {
    get { return updateGroupControlServerResponse_; }
    set {
      updateGroupControlServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "deleteGroupControlServerRequest" field.</summary>
  public const int DeleteGroupControlServerRequestFieldNumber = 11;
  private global::DeleteGroupControlServerRequest deleteGroupControlServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DeleteGroupControlServerRequest DeleteGroupControlServerRequest {
    get { return deleteGroupControlServerRequest_; }
    set {
      deleteGroupControlServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "deleteGroupControlServerResponse" field.</summary>
  public const int DeleteGroupControlServerResponseFieldNumber = 12;
  private global::DeleteGroupControlServerResponse deleteGroupControlServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DeleteGroupControlServerResponse DeleteGroupControlServerResponse {
    get { return deleteGroupControlServerResponse_; }
    set {
      deleteGroupControlServerResponse_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GroupControlServerMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GroupControlServerMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(GroupControlServerRequest, other.GroupControlServerRequest)) return false;
    if (!object.Equals(GroupControlServerResponse, other.GroupControlServerResponse)) return false;
    if (!object.Equals(GetGroupControlInfoServerRequest, other.GetGroupControlInfoServerRequest)) return false;
    if (!object.Equals(GetGroupControlInfoServerResponse, other.GetGroupControlInfoServerResponse)) return false;
    if (!object.Equals(GetControlsServerRequest, other.GetControlsServerRequest)) return false;
    if (!object.Equals(GetControlsServerResponse, other.GetControlsServerResponse)) return false;
    if (!object.Equals(AddGroupControlServerRequest, other.AddGroupControlServerRequest)) return false;
    if (!object.Equals(AddGroupControlServerResponse, other.AddGroupControlServerResponse)) return false;
    if (!object.Equals(UpdateGroupControlServerRequest, other.UpdateGroupControlServerRequest)) return false;
    if (!object.Equals(UpdateGroupControlServerResponse, other.UpdateGroupControlServerResponse)) return false;
    if (!object.Equals(DeleteGroupControlServerRequest, other.DeleteGroupControlServerRequest)) return false;
    if (!object.Equals(DeleteGroupControlServerResponse, other.DeleteGroupControlServerResponse)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (groupControlServerRequest_ != null) hash ^= GroupControlServerRequest.GetHashCode();
    if (groupControlServerResponse_ != null) hash ^= GroupControlServerResponse.GetHashCode();
    if (getGroupControlInfoServerRequest_ != null) hash ^= GetGroupControlInfoServerRequest.GetHashCode();
    if (getGroupControlInfoServerResponse_ != null) hash ^= GetGroupControlInfoServerResponse.GetHashCode();
    if (getControlsServerRequest_ != null) hash ^= GetControlsServerRequest.GetHashCode();
    if (getControlsServerResponse_ != null) hash ^= GetControlsServerResponse.GetHashCode();
    if (addGroupControlServerRequest_ != null) hash ^= AddGroupControlServerRequest.GetHashCode();
    if (addGroupControlServerResponse_ != null) hash ^= AddGroupControlServerResponse.GetHashCode();
    if (updateGroupControlServerRequest_ != null) hash ^= UpdateGroupControlServerRequest.GetHashCode();
    if (updateGroupControlServerResponse_ != null) hash ^= UpdateGroupControlServerResponse.GetHashCode();
    if (deleteGroupControlServerRequest_ != null) hash ^= DeleteGroupControlServerRequest.GetHashCode();
    if (deleteGroupControlServerResponse_ != null) hash ^= DeleteGroupControlServerResponse.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (groupControlServerRequest_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(GroupControlServerRequest);
    }
    if (groupControlServerResponse_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(GroupControlServerResponse);
    }
    if (getGroupControlInfoServerRequest_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(GetGroupControlInfoServerRequest);
    }
    if (getGroupControlInfoServerResponse_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(GetGroupControlInfoServerResponse);
    }
    if (getControlsServerRequest_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(GetControlsServerRequest);
    }
    if (getControlsServerResponse_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(GetControlsServerResponse);
    }
    if (addGroupControlServerRequest_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(AddGroupControlServerRequest);
    }
    if (addGroupControlServerResponse_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(AddGroupControlServerResponse);
    }
    if (updateGroupControlServerRequest_ != null) {
      output.WriteRawTag(74);
      output.WriteMessage(UpdateGroupControlServerRequest);
    }
    if (updateGroupControlServerResponse_ != null) {
      output.WriteRawTag(82);
      output.WriteMessage(UpdateGroupControlServerResponse);
    }
    if (deleteGroupControlServerRequest_ != null) {
      output.WriteRawTag(90);
      output.WriteMessage(DeleteGroupControlServerRequest);
    }
    if (deleteGroupControlServerResponse_ != null) {
      output.WriteRawTag(98);
      output.WriteMessage(DeleteGroupControlServerResponse);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (groupControlServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroupControlServerRequest);
    }
    if (groupControlServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroupControlServerResponse);
    }
    if (getGroupControlInfoServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetGroupControlInfoServerRequest);
    }
    if (getGroupControlInfoServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetGroupControlInfoServerResponse);
    }
    if (getControlsServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetControlsServerRequest);
    }
    if (getControlsServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetControlsServerResponse);
    }
    if (addGroupControlServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddGroupControlServerRequest);
    }
    if (addGroupControlServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddGroupControlServerResponse);
    }
    if (updateGroupControlServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateGroupControlServerRequest);
    }
    if (updateGroupControlServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateGroupControlServerResponse);
    }
    if (deleteGroupControlServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeleteGroupControlServerRequest);
    }
    if (deleteGroupControlServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeleteGroupControlServerResponse);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GroupControlServerMessage other) {
    if (other == null) {
      return;
    }
    if (other.groupControlServerRequest_ != null) {
      if (groupControlServerRequest_ == null) {
        GroupControlServerRequest = new global::GroupControlServerRequest();
      }
      GroupControlServerRequest.MergeFrom(other.GroupControlServerRequest);
    }
    if (other.groupControlServerResponse_ != null) {
      if (groupControlServerResponse_ == null) {
        GroupControlServerResponse = new global::GroupControlServerResponse();
      }
      GroupControlServerResponse.MergeFrom(other.GroupControlServerResponse);
    }
    if (other.getGroupControlInfoServerRequest_ != null) {
      if (getGroupControlInfoServerRequest_ == null) {
        GetGroupControlInfoServerRequest = new global::GetGroupControlInfoServerRequest();
      }
      GetGroupControlInfoServerRequest.MergeFrom(other.GetGroupControlInfoServerRequest);
    }
    if (other.getGroupControlInfoServerResponse_ != null) {
      if (getGroupControlInfoServerResponse_ == null) {
        GetGroupControlInfoServerResponse = new global::GetGroupControlInfoServerResponse();
      }
      GetGroupControlInfoServerResponse.MergeFrom(other.GetGroupControlInfoServerResponse);
    }
    if (other.getControlsServerRequest_ != null) {
      if (getControlsServerRequest_ == null) {
        GetControlsServerRequest = new global::GetControlsServerRequest();
      }
      GetControlsServerRequest.MergeFrom(other.GetControlsServerRequest);
    }
    if (other.getControlsServerResponse_ != null) {
      if (getControlsServerResponse_ == null) {
        GetControlsServerResponse = new global::GetControlsServerResponse();
      }
      GetControlsServerResponse.MergeFrom(other.GetControlsServerResponse);
    }
    if (other.addGroupControlServerRequest_ != null) {
      if (addGroupControlServerRequest_ == null) {
        AddGroupControlServerRequest = new global::AddGroupControlServerRequest();
      }
      AddGroupControlServerRequest.MergeFrom(other.AddGroupControlServerRequest);
    }
    if (other.addGroupControlServerResponse_ != null) {
      if (addGroupControlServerResponse_ == null) {
        AddGroupControlServerResponse = new global::AddGroupControlServerResponse();
      }
      AddGroupControlServerResponse.MergeFrom(other.AddGroupControlServerResponse);
    }
    if (other.updateGroupControlServerRequest_ != null) {
      if (updateGroupControlServerRequest_ == null) {
        UpdateGroupControlServerRequest = new global::UpdateGroupControlServerRequest();
      }
      UpdateGroupControlServerRequest.MergeFrom(other.UpdateGroupControlServerRequest);
    }
    if (other.updateGroupControlServerResponse_ != null) {
      if (updateGroupControlServerResponse_ == null) {
        UpdateGroupControlServerResponse = new global::UpdateGroupControlServerResponse();
      }
      UpdateGroupControlServerResponse.MergeFrom(other.UpdateGroupControlServerResponse);
    }
    if (other.deleteGroupControlServerRequest_ != null) {
      if (deleteGroupControlServerRequest_ == null) {
        DeleteGroupControlServerRequest = new global::DeleteGroupControlServerRequest();
      }
      DeleteGroupControlServerRequest.MergeFrom(other.DeleteGroupControlServerRequest);
    }
    if (other.deleteGroupControlServerResponse_ != null) {
      if (deleteGroupControlServerResponse_ == null) {
        DeleteGroupControlServerResponse = new global::DeleteGroupControlServerResponse();
      }
      DeleteGroupControlServerResponse.MergeFrom(other.DeleteGroupControlServerResponse);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (groupControlServerRequest_ == null) {
            GroupControlServerRequest = new global::GroupControlServerRequest();
          }
          input.ReadMessage(GroupControlServerRequest);
          break;
        }
        case 18: {
          if (groupControlServerResponse_ == null) {
            GroupControlServerResponse = new global::GroupControlServerResponse();
          }
          input.ReadMessage(GroupControlServerResponse);
          break;
        }
        case 26: {
          if (getGroupControlInfoServerRequest_ == null) {
            GetGroupControlInfoServerRequest = new global::GetGroupControlInfoServerRequest();
          }
          input.ReadMessage(GetGroupControlInfoServerRequest);
          break;
        }
        case 34: {
          if (getGroupControlInfoServerResponse_ == null) {
            GetGroupControlInfoServerResponse = new global::GetGroupControlInfoServerResponse();
          }
          input.ReadMessage(GetGroupControlInfoServerResponse);
          break;
        }
        case 42: {
          if (getControlsServerRequest_ == null) {
            GetControlsServerRequest = new global::GetControlsServerRequest();
          }
          input.ReadMessage(GetControlsServerRequest);
          break;
        }
        case 50: {
          if (getControlsServerResponse_ == null) {
            GetControlsServerResponse = new global::GetControlsServerResponse();
          }
          input.ReadMessage(GetControlsServerResponse);
          break;
        }
        case 58: {
          if (addGroupControlServerRequest_ == null) {
            AddGroupControlServerRequest = new global::AddGroupControlServerRequest();
          }
          input.ReadMessage(AddGroupControlServerRequest);
          break;
        }
        case 66: {
          if (addGroupControlServerResponse_ == null) {
            AddGroupControlServerResponse = new global::AddGroupControlServerResponse();
          }
          input.ReadMessage(AddGroupControlServerResponse);
          break;
        }
        case 74: {
          if (updateGroupControlServerRequest_ == null) {
            UpdateGroupControlServerRequest = new global::UpdateGroupControlServerRequest();
          }
          input.ReadMessage(UpdateGroupControlServerRequest);
          break;
        }
        case 82: {
          if (updateGroupControlServerResponse_ == null) {
            UpdateGroupControlServerResponse = new global::UpdateGroupControlServerResponse();
          }
          input.ReadMessage(UpdateGroupControlServerResponse);
          break;
        }
        case 90: {
          if (deleteGroupControlServerRequest_ == null) {
            DeleteGroupControlServerRequest = new global::DeleteGroupControlServerRequest();
          }
          input.ReadMessage(DeleteGroupControlServerRequest);
          break;
        }
        case 98: {
          if (deleteGroupControlServerResponse_ == null) {
            DeleteGroupControlServerResponse = new global::DeleteGroupControlServerResponse();
          }
          input.ReadMessage(DeleteGroupControlServerResponse);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Đồng hồ điện/nước 
/// </summary>
public sealed partial class MeterServerMessage : pb::IMessage<MeterServerMessage> {
  private static readonly pb::MessageParser<MeterServerMessage> _parser = new pb::MessageParser<MeterServerMessage>(() => new MeterServerMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MeterServerMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[315]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MeterServerMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MeterServerMessage(MeterServerMessage other) : this() {
    getMeterServerRequest_ = other.getMeterServerRequest_ != null ? other.getMeterServerRequest_.Clone() : null;
    getMeterServerResponse_ = other.getMeterServerResponse_ != null ? other.getMeterServerResponse_.Clone() : null;
    updateMeterServerRequest_ = other.updateMeterServerRequest_ != null ? other.updateMeterServerRequest_.Clone() : null;
    updateMeterServerResponse_ = other.updateMeterServerResponse_ != null ? other.updateMeterServerResponse_.Clone() : null;
    getMeterEstimatesDayInMonthServerRequest_ = other.getMeterEstimatesDayInMonthServerRequest_ != null ? other.getMeterEstimatesDayInMonthServerRequest_.Clone() : null;
    getMeterEstimatesDayInMonthServerResponse_ = other.getMeterEstimatesDayInMonthServerResponse_ != null ? other.getMeterEstimatesDayInMonthServerResponse_.Clone() : null;
    getMeterEstimatesHourInDayServerRequest_ = other.getMeterEstimatesHourInDayServerRequest_ != null ? other.getMeterEstimatesHourInDayServerRequest_.Clone() : null;
    getMeterEstimatesHourInDayServerResponse_ = other.getMeterEstimatesHourInDayServerResponse_ != null ? other.getMeterEstimatesHourInDayServerResponse_.Clone() : null;
    getMetersByHomeIdServerRequest_ = other.getMetersByHomeIdServerRequest_ != null ? other.getMetersByHomeIdServerRequest_.Clone() : null;
    getMetersByHomeIdServerResponse_ = other.getMetersByHomeIdServerResponse_ != null ? other.getMetersByHomeIdServerResponse_.Clone() : null;
    getMeterMissingInDayServerRequest_ = other.getMeterMissingInDayServerRequest_ != null ? other.getMeterMissingInDayServerRequest_.Clone() : null;
    getMeterMissingInDayServerResponse_ = other.getMeterMissingInDayServerResponse_ != null ? other.getMeterMissingInDayServerResponse_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MeterServerMessage Clone() {
    return new MeterServerMessage(this);
  }

  /// <summary>Field number for the "getMeterServerRequest" field.</summary>
  public const int GetMeterServerRequestFieldNumber = 1;
  private global::GetMeterServerRequest getMeterServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetMeterServerRequest GetMeterServerRequest {
    get { return getMeterServerRequest_; }
    set {
      getMeterServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getMeterServerResponse" field.</summary>
  public const int GetMeterServerResponseFieldNumber = 2;
  private global::GetMeterServerResponse getMeterServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetMeterServerResponse GetMeterServerResponse {
    get { return getMeterServerResponse_; }
    set {
      getMeterServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "updateMeterServerRequest" field.</summary>
  public const int UpdateMeterServerRequestFieldNumber = 3;
  private global::UpdateMeterServerRequest updateMeterServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateMeterServerRequest UpdateMeterServerRequest {
    get { return updateMeterServerRequest_; }
    set {
      updateMeterServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "updateMeterServerResponse" field.</summary>
  public const int UpdateMeterServerResponseFieldNumber = 4;
  private global::UpdateMeterServerResponse updateMeterServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateMeterServerResponse UpdateMeterServerResponse {
    get { return updateMeterServerResponse_; }
    set {
      updateMeterServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "getMeterEstimatesDayInMonthServerRequest" field.</summary>
  public const int GetMeterEstimatesDayInMonthServerRequestFieldNumber = 5;
  private global::GetMeterEstimatesDayInMonthServerRequest getMeterEstimatesDayInMonthServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetMeterEstimatesDayInMonthServerRequest GetMeterEstimatesDayInMonthServerRequest {
    get { return getMeterEstimatesDayInMonthServerRequest_; }
    set {
      getMeterEstimatesDayInMonthServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getMeterEstimatesDayInMonthServerResponse" field.</summary>
  public const int GetMeterEstimatesDayInMonthServerResponseFieldNumber = 6;
  private global::GetMeterEstimatesDayInMonthServerResponse getMeterEstimatesDayInMonthServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetMeterEstimatesDayInMonthServerResponse GetMeterEstimatesDayInMonthServerResponse {
    get { return getMeterEstimatesDayInMonthServerResponse_; }
    set {
      getMeterEstimatesDayInMonthServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "getMeterEstimatesHourInDayServerRequest" field.</summary>
  public const int GetMeterEstimatesHourInDayServerRequestFieldNumber = 7;
  private global::GetMeterEstimatesHourInDayServerRequest getMeterEstimatesHourInDayServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetMeterEstimatesHourInDayServerRequest GetMeterEstimatesHourInDayServerRequest {
    get { return getMeterEstimatesHourInDayServerRequest_; }
    set {
      getMeterEstimatesHourInDayServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getMeterEstimatesHourInDayServerResponse" field.</summary>
  public const int GetMeterEstimatesHourInDayServerResponseFieldNumber = 8;
  private global::GetMeterEstimatesHourInDayServerResponse getMeterEstimatesHourInDayServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetMeterEstimatesHourInDayServerResponse GetMeterEstimatesHourInDayServerResponse {
    get { return getMeterEstimatesHourInDayServerResponse_; }
    set {
      getMeterEstimatesHourInDayServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "getMetersByHomeIdServerRequest" field.</summary>
  public const int GetMetersByHomeIdServerRequestFieldNumber = 9;
  private global::GetMetersByHomeIdServerRequest getMetersByHomeIdServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetMetersByHomeIdServerRequest GetMetersByHomeIdServerRequest {
    get { return getMetersByHomeIdServerRequest_; }
    set {
      getMetersByHomeIdServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getMetersByHomeIdServerResponse" field.</summary>
  public const int GetMetersByHomeIdServerResponseFieldNumber = 10;
  private global::GetMetersByHomeIdServerResponse getMetersByHomeIdServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetMetersByHomeIdServerResponse GetMetersByHomeIdServerResponse {
    get { return getMetersByHomeIdServerResponse_; }
    set {
      getMetersByHomeIdServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "getMeterMissingInDayServerRequest" field.</summary>
  public const int GetMeterMissingInDayServerRequestFieldNumber = 11;
  private global::GetMeterMissingInDayServerRequest getMeterMissingInDayServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetMeterMissingInDayServerRequest GetMeterMissingInDayServerRequest {
    get { return getMeterMissingInDayServerRequest_; }
    set {
      getMeterMissingInDayServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getMeterMissingInDayServerResponse" field.</summary>
  public const int GetMeterMissingInDayServerResponseFieldNumber = 12;
  private global::GetMeterMissingInDayServerResponse getMeterMissingInDayServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetMeterMissingInDayServerResponse GetMeterMissingInDayServerResponse {
    get { return getMeterMissingInDayServerResponse_; }
    set {
      getMeterMissingInDayServerResponse_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MeterServerMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MeterServerMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(GetMeterServerRequest, other.GetMeterServerRequest)) return false;
    if (!object.Equals(GetMeterServerResponse, other.GetMeterServerResponse)) return false;
    if (!object.Equals(UpdateMeterServerRequest, other.UpdateMeterServerRequest)) return false;
    if (!object.Equals(UpdateMeterServerResponse, other.UpdateMeterServerResponse)) return false;
    if (!object.Equals(GetMeterEstimatesDayInMonthServerRequest, other.GetMeterEstimatesDayInMonthServerRequest)) return false;
    if (!object.Equals(GetMeterEstimatesDayInMonthServerResponse, other.GetMeterEstimatesDayInMonthServerResponse)) return false;
    if (!object.Equals(GetMeterEstimatesHourInDayServerRequest, other.GetMeterEstimatesHourInDayServerRequest)) return false;
    if (!object.Equals(GetMeterEstimatesHourInDayServerResponse, other.GetMeterEstimatesHourInDayServerResponse)) return false;
    if (!object.Equals(GetMetersByHomeIdServerRequest, other.GetMetersByHomeIdServerRequest)) return false;
    if (!object.Equals(GetMetersByHomeIdServerResponse, other.GetMetersByHomeIdServerResponse)) return false;
    if (!object.Equals(GetMeterMissingInDayServerRequest, other.GetMeterMissingInDayServerRequest)) return false;
    if (!object.Equals(GetMeterMissingInDayServerResponse, other.GetMeterMissingInDayServerResponse)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (getMeterServerRequest_ != null) hash ^= GetMeterServerRequest.GetHashCode();
    if (getMeterServerResponse_ != null) hash ^= GetMeterServerResponse.GetHashCode();
    if (updateMeterServerRequest_ != null) hash ^= UpdateMeterServerRequest.GetHashCode();
    if (updateMeterServerResponse_ != null) hash ^= UpdateMeterServerResponse.GetHashCode();
    if (getMeterEstimatesDayInMonthServerRequest_ != null) hash ^= GetMeterEstimatesDayInMonthServerRequest.GetHashCode();
    if (getMeterEstimatesDayInMonthServerResponse_ != null) hash ^= GetMeterEstimatesDayInMonthServerResponse.GetHashCode();
    if (getMeterEstimatesHourInDayServerRequest_ != null) hash ^= GetMeterEstimatesHourInDayServerRequest.GetHashCode();
    if (getMeterEstimatesHourInDayServerResponse_ != null) hash ^= GetMeterEstimatesHourInDayServerResponse.GetHashCode();
    if (getMetersByHomeIdServerRequest_ != null) hash ^= GetMetersByHomeIdServerRequest.GetHashCode();
    if (getMetersByHomeIdServerResponse_ != null) hash ^= GetMetersByHomeIdServerResponse.GetHashCode();
    if (getMeterMissingInDayServerRequest_ != null) hash ^= GetMeterMissingInDayServerRequest.GetHashCode();
    if (getMeterMissingInDayServerResponse_ != null) hash ^= GetMeterMissingInDayServerResponse.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (getMeterServerRequest_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(GetMeterServerRequest);
    }
    if (getMeterServerResponse_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(GetMeterServerResponse);
    }
    if (updateMeterServerRequest_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(UpdateMeterServerRequest);
    }
    if (updateMeterServerResponse_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(UpdateMeterServerResponse);
    }
    if (getMeterEstimatesDayInMonthServerRequest_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(GetMeterEstimatesDayInMonthServerRequest);
    }
    if (getMeterEstimatesDayInMonthServerResponse_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(GetMeterEstimatesDayInMonthServerResponse);
    }
    if (getMeterEstimatesHourInDayServerRequest_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(GetMeterEstimatesHourInDayServerRequest);
    }
    if (getMeterEstimatesHourInDayServerResponse_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(GetMeterEstimatesHourInDayServerResponse);
    }
    if (getMetersByHomeIdServerRequest_ != null) {
      output.WriteRawTag(74);
      output.WriteMessage(GetMetersByHomeIdServerRequest);
    }
    if (getMetersByHomeIdServerResponse_ != null) {
      output.WriteRawTag(82);
      output.WriteMessage(GetMetersByHomeIdServerResponse);
    }
    if (getMeterMissingInDayServerRequest_ != null) {
      output.WriteRawTag(90);
      output.WriteMessage(GetMeterMissingInDayServerRequest);
    }
    if (getMeterMissingInDayServerResponse_ != null) {
      output.WriteRawTag(98);
      output.WriteMessage(GetMeterMissingInDayServerResponse);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (getMeterServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetMeterServerRequest);
    }
    if (getMeterServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetMeterServerResponse);
    }
    if (updateMeterServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateMeterServerRequest);
    }
    if (updateMeterServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateMeterServerResponse);
    }
    if (getMeterEstimatesDayInMonthServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetMeterEstimatesDayInMonthServerRequest);
    }
    if (getMeterEstimatesDayInMonthServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetMeterEstimatesDayInMonthServerResponse);
    }
    if (getMeterEstimatesHourInDayServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetMeterEstimatesHourInDayServerRequest);
    }
    if (getMeterEstimatesHourInDayServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetMeterEstimatesHourInDayServerResponse);
    }
    if (getMetersByHomeIdServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetMetersByHomeIdServerRequest);
    }
    if (getMetersByHomeIdServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetMetersByHomeIdServerResponse);
    }
    if (getMeterMissingInDayServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetMeterMissingInDayServerRequest);
    }
    if (getMeterMissingInDayServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetMeterMissingInDayServerResponse);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MeterServerMessage other) {
    if (other == null) {
      return;
    }
    if (other.getMeterServerRequest_ != null) {
      if (getMeterServerRequest_ == null) {
        GetMeterServerRequest = new global::GetMeterServerRequest();
      }
      GetMeterServerRequest.MergeFrom(other.GetMeterServerRequest);
    }
    if (other.getMeterServerResponse_ != null) {
      if (getMeterServerResponse_ == null) {
        GetMeterServerResponse = new global::GetMeterServerResponse();
      }
      GetMeterServerResponse.MergeFrom(other.GetMeterServerResponse);
    }
    if (other.updateMeterServerRequest_ != null) {
      if (updateMeterServerRequest_ == null) {
        UpdateMeterServerRequest = new global::UpdateMeterServerRequest();
      }
      UpdateMeterServerRequest.MergeFrom(other.UpdateMeterServerRequest);
    }
    if (other.updateMeterServerResponse_ != null) {
      if (updateMeterServerResponse_ == null) {
        UpdateMeterServerResponse = new global::UpdateMeterServerResponse();
      }
      UpdateMeterServerResponse.MergeFrom(other.UpdateMeterServerResponse);
    }
    if (other.getMeterEstimatesDayInMonthServerRequest_ != null) {
      if (getMeterEstimatesDayInMonthServerRequest_ == null) {
        GetMeterEstimatesDayInMonthServerRequest = new global::GetMeterEstimatesDayInMonthServerRequest();
      }
      GetMeterEstimatesDayInMonthServerRequest.MergeFrom(other.GetMeterEstimatesDayInMonthServerRequest);
    }
    if (other.getMeterEstimatesDayInMonthServerResponse_ != null) {
      if (getMeterEstimatesDayInMonthServerResponse_ == null) {
        GetMeterEstimatesDayInMonthServerResponse = new global::GetMeterEstimatesDayInMonthServerResponse();
      }
      GetMeterEstimatesDayInMonthServerResponse.MergeFrom(other.GetMeterEstimatesDayInMonthServerResponse);
    }
    if (other.getMeterEstimatesHourInDayServerRequest_ != null) {
      if (getMeterEstimatesHourInDayServerRequest_ == null) {
        GetMeterEstimatesHourInDayServerRequest = new global::GetMeterEstimatesHourInDayServerRequest();
      }
      GetMeterEstimatesHourInDayServerRequest.MergeFrom(other.GetMeterEstimatesHourInDayServerRequest);
    }
    if (other.getMeterEstimatesHourInDayServerResponse_ != null) {
      if (getMeterEstimatesHourInDayServerResponse_ == null) {
        GetMeterEstimatesHourInDayServerResponse = new global::GetMeterEstimatesHourInDayServerResponse();
      }
      GetMeterEstimatesHourInDayServerResponse.MergeFrom(other.GetMeterEstimatesHourInDayServerResponse);
    }
    if (other.getMetersByHomeIdServerRequest_ != null) {
      if (getMetersByHomeIdServerRequest_ == null) {
        GetMetersByHomeIdServerRequest = new global::GetMetersByHomeIdServerRequest();
      }
      GetMetersByHomeIdServerRequest.MergeFrom(other.GetMetersByHomeIdServerRequest);
    }
    if (other.getMetersByHomeIdServerResponse_ != null) {
      if (getMetersByHomeIdServerResponse_ == null) {
        GetMetersByHomeIdServerResponse = new global::GetMetersByHomeIdServerResponse();
      }
      GetMetersByHomeIdServerResponse.MergeFrom(other.GetMetersByHomeIdServerResponse);
    }
    if (other.getMeterMissingInDayServerRequest_ != null) {
      if (getMeterMissingInDayServerRequest_ == null) {
        GetMeterMissingInDayServerRequest = new global::GetMeterMissingInDayServerRequest();
      }
      GetMeterMissingInDayServerRequest.MergeFrom(other.GetMeterMissingInDayServerRequest);
    }
    if (other.getMeterMissingInDayServerResponse_ != null) {
      if (getMeterMissingInDayServerResponse_ == null) {
        GetMeterMissingInDayServerResponse = new global::GetMeterMissingInDayServerResponse();
      }
      GetMeterMissingInDayServerResponse.MergeFrom(other.GetMeterMissingInDayServerResponse);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (getMeterServerRequest_ == null) {
            GetMeterServerRequest = new global::GetMeterServerRequest();
          }
          input.ReadMessage(GetMeterServerRequest);
          break;
        }
        case 18: {
          if (getMeterServerResponse_ == null) {
            GetMeterServerResponse = new global::GetMeterServerResponse();
          }
          input.ReadMessage(GetMeterServerResponse);
          break;
        }
        case 26: {
          if (updateMeterServerRequest_ == null) {
            UpdateMeterServerRequest = new global::UpdateMeterServerRequest();
          }
          input.ReadMessage(UpdateMeterServerRequest);
          break;
        }
        case 34: {
          if (updateMeterServerResponse_ == null) {
            UpdateMeterServerResponse = new global::UpdateMeterServerResponse();
          }
          input.ReadMessage(UpdateMeterServerResponse);
          break;
        }
        case 42: {
          if (getMeterEstimatesDayInMonthServerRequest_ == null) {
            GetMeterEstimatesDayInMonthServerRequest = new global::GetMeterEstimatesDayInMonthServerRequest();
          }
          input.ReadMessage(GetMeterEstimatesDayInMonthServerRequest);
          break;
        }
        case 50: {
          if (getMeterEstimatesDayInMonthServerResponse_ == null) {
            GetMeterEstimatesDayInMonthServerResponse = new global::GetMeterEstimatesDayInMonthServerResponse();
          }
          input.ReadMessage(GetMeterEstimatesDayInMonthServerResponse);
          break;
        }
        case 58: {
          if (getMeterEstimatesHourInDayServerRequest_ == null) {
            GetMeterEstimatesHourInDayServerRequest = new global::GetMeterEstimatesHourInDayServerRequest();
          }
          input.ReadMessage(GetMeterEstimatesHourInDayServerRequest);
          break;
        }
        case 66: {
          if (getMeterEstimatesHourInDayServerResponse_ == null) {
            GetMeterEstimatesHourInDayServerResponse = new global::GetMeterEstimatesHourInDayServerResponse();
          }
          input.ReadMessage(GetMeterEstimatesHourInDayServerResponse);
          break;
        }
        case 74: {
          if (getMetersByHomeIdServerRequest_ == null) {
            GetMetersByHomeIdServerRequest = new global::GetMetersByHomeIdServerRequest();
          }
          input.ReadMessage(GetMetersByHomeIdServerRequest);
          break;
        }
        case 82: {
          if (getMetersByHomeIdServerResponse_ == null) {
            GetMetersByHomeIdServerResponse = new global::GetMetersByHomeIdServerResponse();
          }
          input.ReadMessage(GetMetersByHomeIdServerResponse);
          break;
        }
        case 90: {
          if (getMeterMissingInDayServerRequest_ == null) {
            GetMeterMissingInDayServerRequest = new global::GetMeterMissingInDayServerRequest();
          }
          input.ReadMessage(GetMeterMissingInDayServerRequest);
          break;
        }
        case 98: {
          if (getMeterMissingInDayServerResponse_ == null) {
            GetMeterMissingInDayServerResponse = new global::GetMeterMissingInDayServerResponse();
          }
          input.ReadMessage(GetMeterMissingInDayServerResponse);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Điều hòa 
/// </summary>
public sealed partial class AirConditionerServerMessage : pb::IMessage<AirConditionerServerMessage> {
  private static readonly pb::MessageParser<AirConditionerServerMessage> _parser = new pb::MessageParser<AirConditionerServerMessage>(() => new AirConditionerServerMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AirConditionerServerMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[316]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AirConditionerServerMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AirConditionerServerMessage(AirConditionerServerMessage other) : this() {
    getAirConditionerStateServerRequest_ = other.getAirConditionerStateServerRequest_ != null ? other.getAirConditionerStateServerRequest_.Clone() : null;
    getAirConditionerStateServerResponse_ = other.getAirConditionerStateServerResponse_ != null ? other.getAirConditionerStateServerResponse_.Clone() : null;
    airConditionerServerRequest_ = other.airConditionerServerRequest_ != null ? other.airConditionerServerRequest_.Clone() : null;
    airConditionerServerResponse_ = other.airConditionerServerResponse_ != null ? other.airConditionerServerResponse_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AirConditionerServerMessage Clone() {
    return new AirConditionerServerMessage(this);
  }

  /// <summary>Field number for the "getAirConditionerStateServerRequest" field.</summary>
  public const int GetAirConditionerStateServerRequestFieldNumber = 1;
  private global::GetAirConditionerStateServerRequest getAirConditionerStateServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetAirConditionerStateServerRequest GetAirConditionerStateServerRequest {
    get { return getAirConditionerStateServerRequest_; }
    set {
      getAirConditionerStateServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getAirConditionerStateServerResponse" field.</summary>
  public const int GetAirConditionerStateServerResponseFieldNumber = 2;
  private global::GetAirConditionerStateServerResponse getAirConditionerStateServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetAirConditionerStateServerResponse GetAirConditionerStateServerResponse {
    get { return getAirConditionerStateServerResponse_; }
    set {
      getAirConditionerStateServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "airConditionerServerRequest" field.</summary>
  public const int AirConditionerServerRequestFieldNumber = 3;
  private global::AirConditionerServerRequest airConditionerServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AirConditionerServerRequest AirConditionerServerRequest {
    get { return airConditionerServerRequest_; }
    set {
      airConditionerServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "airConditionerServerResponse" field.</summary>
  public const int AirConditionerServerResponseFieldNumber = 4;
  private global::AirConditionerServerResponse airConditionerServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AirConditionerServerResponse AirConditionerServerResponse {
    get { return airConditionerServerResponse_; }
    set {
      airConditionerServerResponse_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AirConditionerServerMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AirConditionerServerMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(GetAirConditionerStateServerRequest, other.GetAirConditionerStateServerRequest)) return false;
    if (!object.Equals(GetAirConditionerStateServerResponse, other.GetAirConditionerStateServerResponse)) return false;
    if (!object.Equals(AirConditionerServerRequest, other.AirConditionerServerRequest)) return false;
    if (!object.Equals(AirConditionerServerResponse, other.AirConditionerServerResponse)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (getAirConditionerStateServerRequest_ != null) hash ^= GetAirConditionerStateServerRequest.GetHashCode();
    if (getAirConditionerStateServerResponse_ != null) hash ^= GetAirConditionerStateServerResponse.GetHashCode();
    if (airConditionerServerRequest_ != null) hash ^= AirConditionerServerRequest.GetHashCode();
    if (airConditionerServerResponse_ != null) hash ^= AirConditionerServerResponse.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (getAirConditionerStateServerRequest_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(GetAirConditionerStateServerRequest);
    }
    if (getAirConditionerStateServerResponse_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(GetAirConditionerStateServerResponse);
    }
    if (airConditionerServerRequest_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(AirConditionerServerRequest);
    }
    if (airConditionerServerResponse_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(AirConditionerServerResponse);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (getAirConditionerStateServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetAirConditionerStateServerRequest);
    }
    if (getAirConditionerStateServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetAirConditionerStateServerResponse);
    }
    if (airConditionerServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AirConditionerServerRequest);
    }
    if (airConditionerServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AirConditionerServerResponse);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AirConditionerServerMessage other) {
    if (other == null) {
      return;
    }
    if (other.getAirConditionerStateServerRequest_ != null) {
      if (getAirConditionerStateServerRequest_ == null) {
        GetAirConditionerStateServerRequest = new global::GetAirConditionerStateServerRequest();
      }
      GetAirConditionerStateServerRequest.MergeFrom(other.GetAirConditionerStateServerRequest);
    }
    if (other.getAirConditionerStateServerResponse_ != null) {
      if (getAirConditionerStateServerResponse_ == null) {
        GetAirConditionerStateServerResponse = new global::GetAirConditionerStateServerResponse();
      }
      GetAirConditionerStateServerResponse.MergeFrom(other.GetAirConditionerStateServerResponse);
    }
    if (other.airConditionerServerRequest_ != null) {
      if (airConditionerServerRequest_ == null) {
        AirConditionerServerRequest = new global::AirConditionerServerRequest();
      }
      AirConditionerServerRequest.MergeFrom(other.AirConditionerServerRequest);
    }
    if (other.airConditionerServerResponse_ != null) {
      if (airConditionerServerResponse_ == null) {
        AirConditionerServerResponse = new global::AirConditionerServerResponse();
      }
      AirConditionerServerResponse.MergeFrom(other.AirConditionerServerResponse);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (getAirConditionerStateServerRequest_ == null) {
            GetAirConditionerStateServerRequest = new global::GetAirConditionerStateServerRequest();
          }
          input.ReadMessage(GetAirConditionerStateServerRequest);
          break;
        }
        case 18: {
          if (getAirConditionerStateServerResponse_ == null) {
            GetAirConditionerStateServerResponse = new global::GetAirConditionerStateServerResponse();
          }
          input.ReadMessage(GetAirConditionerStateServerResponse);
          break;
        }
        case 26: {
          if (airConditionerServerRequest_ == null) {
            AirConditionerServerRequest = new global::AirConditionerServerRequest();
          }
          input.ReadMessage(AirConditionerServerRequest);
          break;
        }
        case 34: {
          if (airConditionerServerResponse_ == null) {
            AirConditionerServerResponse = new global::AirConditionerServerResponse();
          }
          input.ReadMessage(AirConditionerServerResponse);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Remote các lệnh chung 
/// </summary>
public sealed partial class RemoteServerMessage : pb::IMessage<RemoteServerMessage> {
  private static readonly pb::MessageParser<RemoteServerMessage> _parser = new pb::MessageParser<RemoteServerMessage>(() => new RemoteServerMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RemoteServerMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[317]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RemoteServerMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RemoteServerMessage(RemoteServerMessage other) : this() {
    getRemotesServerRequest_ = other.getRemotesServerRequest_ != null ? other.getRemotesServerRequest_.Clone() : null;
    getRemotesServerResponse_ = other.getRemotesServerResponse_ != null ? other.getRemotesServerResponse_.Clone() : null;
    getRemoteServerRequest_ = other.getRemoteServerRequest_ != null ? other.getRemoteServerRequest_.Clone() : null;
    getRemoteServerResponse_ = other.getRemoteServerResponse_ != null ? other.getRemoteServerResponse_.Clone() : null;
    getRemoteLibrariesServerRequest_ = other.getRemoteLibrariesServerRequest_ != null ? other.getRemoteLibrariesServerRequest_.Clone() : null;
    getRemoteLibrariesServerResponse_ = other.getRemoteLibrariesServerResponse_ != null ? other.getRemoteLibrariesServerResponse_.Clone() : null;
    getCommandsRemoteServerRequest_ = other.getCommandsRemoteServerRequest_ != null ? other.getCommandsRemoteServerRequest_.Clone() : null;
    getCommandsRemoteServerResponse_ = other.getCommandsRemoteServerResponse_ != null ? other.getCommandsRemoteServerResponse_.Clone() : null;
    sendCommandRemoteServerRequest_ = other.sendCommandRemoteServerRequest_ != null ? other.sendCommandRemoteServerRequest_.Clone() : null;
    sendCommandRemoteServerResponse_ = other.sendCommandRemoteServerResponse_ != null ? other.sendCommandRemoteServerResponse_.Clone() : null;
    learnCommandRemoteServerRequest_ = other.learnCommandRemoteServerRequest_ != null ? other.learnCommandRemoteServerRequest_.Clone() : null;
    learnCommandRemoteServerResponse_ = other.learnCommandRemoteServerResponse_ != null ? other.learnCommandRemoteServerResponse_.Clone() : null;
    restoreCommandRemoteServerRequest_ = other.restoreCommandRemoteServerRequest_ != null ? other.restoreCommandRemoteServerRequest_.Clone() : null;
    restoreCommandRemoteServerResponse_ = other.restoreCommandRemoteServerResponse_ != null ? other.restoreCommandRemoteServerResponse_.Clone() : null;
    addRemoteServerRequest_ = other.addRemoteServerRequest_ != null ? other.addRemoteServerRequest_.Clone() : null;
    addRemoteServerResponse_ = other.addRemoteServerResponse_ != null ? other.addRemoteServerResponse_.Clone() : null;
    updateRemoteServerRequest_ = other.updateRemoteServerRequest_ != null ? other.updateRemoteServerRequest_.Clone() : null;
    updateRemoteServerResponse_ = other.updateRemoteServerResponse_ != null ? other.updateRemoteServerResponse_.Clone() : null;
    deleteRemoteServerRequest_ = other.deleteRemoteServerRequest_ != null ? other.deleteRemoteServerRequest_.Clone() : null;
    deleteRemoteServerResponse_ = other.deleteRemoteServerResponse_ != null ? other.deleteRemoteServerResponse_.Clone() : null;
    getRemoteSchedulesServerRequest_ = other.getRemoteSchedulesServerRequest_ != null ? other.getRemoteSchedulesServerRequest_.Clone() : null;
    getRemoteSchedulesServerResponse_ = other.getRemoteSchedulesServerResponse_ != null ? other.getRemoteSchedulesServerResponse_.Clone() : null;
    getCountRemoteScheduleServerRequest_ = other.getCountRemoteScheduleServerRequest_ != null ? other.getCountRemoteScheduleServerRequest_.Clone() : null;
    getCountRemoteScheduleServerResponse_ = other.getCountRemoteScheduleServerResponse_ != null ? other.getCountRemoteScheduleServerResponse_.Clone() : null;
    getRemoteScheduleServerRequest_ = other.getRemoteScheduleServerRequest_ != null ? other.getRemoteScheduleServerRequest_.Clone() : null;
    getRemoteScheduleServerResponse_ = other.getRemoteScheduleServerResponse_ != null ? other.getRemoteScheduleServerResponse_.Clone() : null;
    addRemoteScheduleServerRequest_ = other.addRemoteScheduleServerRequest_ != null ? other.addRemoteScheduleServerRequest_.Clone() : null;
    addRemoteScheduleServerResponse_ = other.addRemoteScheduleServerResponse_ != null ? other.addRemoteScheduleServerResponse_.Clone() : null;
    updateRemoteScheduleServerRequest_ = other.updateRemoteScheduleServerRequest_ != null ? other.updateRemoteScheduleServerRequest_.Clone() : null;
    updateRemoteScheduleServerResponse_ = other.updateRemoteScheduleServerResponse_ != null ? other.updateRemoteScheduleServerResponse_.Clone() : null;
    deleteRemoteScheduleServerRequest_ = other.deleteRemoteScheduleServerRequest_ != null ? other.deleteRemoteScheduleServerRequest_.Clone() : null;
    deleteRemoteScheduleServerResponse_ = other.deleteRemoteScheduleServerResponse_ != null ? other.deleteRemoteScheduleServerResponse_.Clone() : null;
    setActiveRemoteScheduleServerRequest_ = other.setActiveRemoteScheduleServerRequest_ != null ? other.setActiveRemoteScheduleServerRequest_.Clone() : null;
    setActiveRemoteScheduleServerResponse_ = other.setActiveRemoteScheduleServerResponse_ != null ? other.setActiveRemoteScheduleServerResponse_.Clone() : null;
    getRemoteMultisServerRequest_ = other.getRemoteMultisServerRequest_ != null ? other.getRemoteMultisServerRequest_.Clone() : null;
    getRemoteMultisServerResponse_ = other.getRemoteMultisServerResponse_ != null ? other.getRemoteMultisServerResponse_.Clone() : null;
    addRemoteMultiServerRequest_ = other.addRemoteMultiServerRequest_ != null ? other.addRemoteMultiServerRequest_.Clone() : null;
    addRemoteMultiServerResponse_ = other.addRemoteMultiServerResponse_ != null ? other.addRemoteMultiServerResponse_.Clone() : null;
    deleteRemoteMultiServerRequest_ = other.deleteRemoteMultiServerRequest_ != null ? other.deleteRemoteMultiServerRequest_.Clone() : null;
    deleteRemoteMultiServerResponse_ = other.deleteRemoteMultiServerResponse_ != null ? other.deleteRemoteMultiServerResponse_.Clone() : null;
    addRemoteMultiLibraryCmdServerRequest_ = other.addRemoteMultiLibraryCmdServerRequest_ != null ? other.addRemoteMultiLibraryCmdServerRequest_.Clone() : null;
    addRemoteMultiLibraryCmdServerResponse_ = other.addRemoteMultiLibraryCmdServerResponse_ != null ? other.addRemoteMultiLibraryCmdServerResponse_.Clone() : null;
    deleteRemoteMultiLibraryCmdServerRequest_ = other.deleteRemoteMultiLibraryCmdServerRequest_ != null ? other.deleteRemoteMultiLibraryCmdServerRequest_.Clone() : null;
    deleteRemoteMultiLibraryCmdServerResponse_ = other.deleteRemoteMultiLibraryCmdServerResponse_ != null ? other.deleteRemoteMultiLibraryCmdServerResponse_.Clone() : null;
    updateRemoteMultiLibraryCmdServerRequest_ = other.updateRemoteMultiLibraryCmdServerRequest_ != null ? other.updateRemoteMultiLibraryCmdServerRequest_.Clone() : null;
    updateRemoteMultiLibraryCmdServerResponse_ = other.updateRemoteMultiLibraryCmdServerResponse_ != null ? other.updateRemoteMultiLibraryCmdServerResponse_.Clone() : null;
    updateGroupRemoteMultiLibraryCmdServerRequest_ = other.updateGroupRemoteMultiLibraryCmdServerRequest_ != null ? other.updateGroupRemoteMultiLibraryCmdServerRequest_.Clone() : null;
    updateGroupRemoteMultiLibraryCmdServerResponse_ = other.updateGroupRemoteMultiLibraryCmdServerResponse_ != null ? other.updateGroupRemoteMultiLibraryCmdServerResponse_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RemoteServerMessage Clone() {
    return new RemoteServerMessage(this);
  }

  /// <summary>Field number for the "getRemotesServerRequest" field.</summary>
  public const int GetRemotesServerRequestFieldNumber = 1;
  private global::GetRemotesServerRequest getRemotesServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetRemotesServerRequest GetRemotesServerRequest {
    get { return getRemotesServerRequest_; }
    set {
      getRemotesServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getRemotesServerResponse" field.</summary>
  public const int GetRemotesServerResponseFieldNumber = 2;
  private global::GetRemotesServerResponse getRemotesServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetRemotesServerResponse GetRemotesServerResponse {
    get { return getRemotesServerResponse_; }
    set {
      getRemotesServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "getRemoteServerRequest" field.</summary>
  public const int GetRemoteServerRequestFieldNumber = 3;
  private global::GetRemoteServerRequest getRemoteServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetRemoteServerRequest GetRemoteServerRequest {
    get { return getRemoteServerRequest_; }
    set {
      getRemoteServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getRemoteServerResponse" field.</summary>
  public const int GetRemoteServerResponseFieldNumber = 4;
  private global::GetRemoteServerResponse getRemoteServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetRemoteServerResponse GetRemoteServerResponse {
    get { return getRemoteServerResponse_; }
    set {
      getRemoteServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "getRemoteLibrariesServerRequest" field.</summary>
  public const int GetRemoteLibrariesServerRequestFieldNumber = 5;
  private global::GetRemoteLibrariesServerRequest getRemoteLibrariesServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetRemoteLibrariesServerRequest GetRemoteLibrariesServerRequest {
    get { return getRemoteLibrariesServerRequest_; }
    set {
      getRemoteLibrariesServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getRemoteLibrariesServerResponse" field.</summary>
  public const int GetRemoteLibrariesServerResponseFieldNumber = 6;
  private global::GetRemoteLibrariesServerResponse getRemoteLibrariesServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetRemoteLibrariesServerResponse GetRemoteLibrariesServerResponse {
    get { return getRemoteLibrariesServerResponse_; }
    set {
      getRemoteLibrariesServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "getCommandsRemoteServerRequest" field.</summary>
  public const int GetCommandsRemoteServerRequestFieldNumber = 7;
  private global::GetCommandsRemoteServerRequest getCommandsRemoteServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetCommandsRemoteServerRequest GetCommandsRemoteServerRequest {
    get { return getCommandsRemoteServerRequest_; }
    set {
      getCommandsRemoteServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getCommandsRemoteServerResponse" field.</summary>
  public const int GetCommandsRemoteServerResponseFieldNumber = 8;
  private global::GetCommandsRemoteServerResponse getCommandsRemoteServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetCommandsRemoteServerResponse GetCommandsRemoteServerResponse {
    get { return getCommandsRemoteServerResponse_; }
    set {
      getCommandsRemoteServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "sendCommandRemoteServerRequest" field.</summary>
  public const int SendCommandRemoteServerRequestFieldNumber = 9;
  private global::SendCommandRemoteServerRequest sendCommandRemoteServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SendCommandRemoteServerRequest SendCommandRemoteServerRequest {
    get { return sendCommandRemoteServerRequest_; }
    set {
      sendCommandRemoteServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "sendCommandRemoteServerResponse" field.</summary>
  public const int SendCommandRemoteServerResponseFieldNumber = 10;
  private global::SendCommandRemoteServerResponse sendCommandRemoteServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SendCommandRemoteServerResponse SendCommandRemoteServerResponse {
    get { return sendCommandRemoteServerResponse_; }
    set {
      sendCommandRemoteServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "learnCommandRemoteServerRequest" field.</summary>
  public const int LearnCommandRemoteServerRequestFieldNumber = 11;
  private global::LearnCommandRemoteServerRequest learnCommandRemoteServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::LearnCommandRemoteServerRequest LearnCommandRemoteServerRequest {
    get { return learnCommandRemoteServerRequest_; }
    set {
      learnCommandRemoteServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "learnCommandRemoteServerResponse" field.</summary>
  public const int LearnCommandRemoteServerResponseFieldNumber = 12;
  private global::LearnCommandRemoteServerResponse learnCommandRemoteServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::LearnCommandRemoteServerResponse LearnCommandRemoteServerResponse {
    get { return learnCommandRemoteServerResponse_; }
    set {
      learnCommandRemoteServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "restoreCommandRemoteServerRequest" field.</summary>
  public const int RestoreCommandRemoteServerRequestFieldNumber = 13;
  private global::RestoreCommandRemoteServerRequest restoreCommandRemoteServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RestoreCommandRemoteServerRequest RestoreCommandRemoteServerRequest {
    get { return restoreCommandRemoteServerRequest_; }
    set {
      restoreCommandRemoteServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "restoreCommandRemoteServerResponse" field.</summary>
  public const int RestoreCommandRemoteServerResponseFieldNumber = 14;
  private global::RestoreCommandRemoteServerResponse restoreCommandRemoteServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RestoreCommandRemoteServerResponse RestoreCommandRemoteServerResponse {
    get { return restoreCommandRemoteServerResponse_; }
    set {
      restoreCommandRemoteServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "addRemoteServerRequest" field.</summary>
  public const int AddRemoteServerRequestFieldNumber = 15;
  private global::AddRemoteServerRequest addRemoteServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AddRemoteServerRequest AddRemoteServerRequest {
    get { return addRemoteServerRequest_; }
    set {
      addRemoteServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "addRemoteServerResponse" field.</summary>
  public const int AddRemoteServerResponseFieldNumber = 16;
  private global::AddRemoteServerResponse addRemoteServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AddRemoteServerResponse AddRemoteServerResponse {
    get { return addRemoteServerResponse_; }
    set {
      addRemoteServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "updateRemoteServerRequest" field.</summary>
  public const int UpdateRemoteServerRequestFieldNumber = 17;
  private global::UpdateRemoteServerRequest updateRemoteServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateRemoteServerRequest UpdateRemoteServerRequest {
    get { return updateRemoteServerRequest_; }
    set {
      updateRemoteServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "updateRemoteServerResponse" field.</summary>
  public const int UpdateRemoteServerResponseFieldNumber = 18;
  private global::UpdateRemoteServerResponse updateRemoteServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateRemoteServerResponse UpdateRemoteServerResponse {
    get { return updateRemoteServerResponse_; }
    set {
      updateRemoteServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "deleteRemoteServerRequest" field.</summary>
  public const int DeleteRemoteServerRequestFieldNumber = 19;
  private global::DeleteRemoteServerRequest deleteRemoteServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DeleteRemoteServerRequest DeleteRemoteServerRequest {
    get { return deleteRemoteServerRequest_; }
    set {
      deleteRemoteServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "deleteRemoteServerResponse" field.</summary>
  public const int DeleteRemoteServerResponseFieldNumber = 20;
  private global::DeleteRemoteServerResponse deleteRemoteServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DeleteRemoteServerResponse DeleteRemoteServerResponse {
    get { return deleteRemoteServerResponse_; }
    set {
      deleteRemoteServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "getRemoteSchedulesServerRequest" field.</summary>
  public const int GetRemoteSchedulesServerRequestFieldNumber = 21;
  private global::GetRemoteSchedulesServerRequest getRemoteSchedulesServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetRemoteSchedulesServerRequest GetRemoteSchedulesServerRequest {
    get { return getRemoteSchedulesServerRequest_; }
    set {
      getRemoteSchedulesServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getRemoteSchedulesServerResponse" field.</summary>
  public const int GetRemoteSchedulesServerResponseFieldNumber = 22;
  private global::GetRemoteSchedulesServerResponse getRemoteSchedulesServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetRemoteSchedulesServerResponse GetRemoteSchedulesServerResponse {
    get { return getRemoteSchedulesServerResponse_; }
    set {
      getRemoteSchedulesServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "getCountRemoteScheduleServerRequest" field.</summary>
  public const int GetCountRemoteScheduleServerRequestFieldNumber = 23;
  private global::GetCountRemoteScheduleServerRequest getCountRemoteScheduleServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetCountRemoteScheduleServerRequest GetCountRemoteScheduleServerRequest {
    get { return getCountRemoteScheduleServerRequest_; }
    set {
      getCountRemoteScheduleServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getCountRemoteScheduleServerResponse" field.</summary>
  public const int GetCountRemoteScheduleServerResponseFieldNumber = 24;
  private global::GetCountRemoteScheduleServerResponse getCountRemoteScheduleServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetCountRemoteScheduleServerResponse GetCountRemoteScheduleServerResponse {
    get { return getCountRemoteScheduleServerResponse_; }
    set {
      getCountRemoteScheduleServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "getRemoteScheduleServerRequest" field.</summary>
  public const int GetRemoteScheduleServerRequestFieldNumber = 25;
  private global::GetRemoteScheduleServerRequest getRemoteScheduleServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetRemoteScheduleServerRequest GetRemoteScheduleServerRequest {
    get { return getRemoteScheduleServerRequest_; }
    set {
      getRemoteScheduleServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getRemoteScheduleServerResponse" field.</summary>
  public const int GetRemoteScheduleServerResponseFieldNumber = 26;
  private global::GetRemoteScheduleServerResponse getRemoteScheduleServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetRemoteScheduleServerResponse GetRemoteScheduleServerResponse {
    get { return getRemoteScheduleServerResponse_; }
    set {
      getRemoteScheduleServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "addRemoteScheduleServerRequest" field.</summary>
  public const int AddRemoteScheduleServerRequestFieldNumber = 27;
  private global::AddRemoteScheduleServerRequest addRemoteScheduleServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AddRemoteScheduleServerRequest AddRemoteScheduleServerRequest {
    get { return addRemoteScheduleServerRequest_; }
    set {
      addRemoteScheduleServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "addRemoteScheduleServerResponse" field.</summary>
  public const int AddRemoteScheduleServerResponseFieldNumber = 28;
  private global::AddRemoteScheduleServerResponse addRemoteScheduleServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AddRemoteScheduleServerResponse AddRemoteScheduleServerResponse {
    get { return addRemoteScheduleServerResponse_; }
    set {
      addRemoteScheduleServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "updateRemoteScheduleServerRequest" field.</summary>
  public const int UpdateRemoteScheduleServerRequestFieldNumber = 29;
  private global::UpdateRemoteScheduleServerRequest updateRemoteScheduleServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateRemoteScheduleServerRequest UpdateRemoteScheduleServerRequest {
    get { return updateRemoteScheduleServerRequest_; }
    set {
      updateRemoteScheduleServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "updateRemoteScheduleServerResponse" field.</summary>
  public const int UpdateRemoteScheduleServerResponseFieldNumber = 30;
  private global::UpdateRemoteScheduleServerResponse updateRemoteScheduleServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateRemoteScheduleServerResponse UpdateRemoteScheduleServerResponse {
    get { return updateRemoteScheduleServerResponse_; }
    set {
      updateRemoteScheduleServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "deleteRemoteScheduleServerRequest" field.</summary>
  public const int DeleteRemoteScheduleServerRequestFieldNumber = 31;
  private global::DeleteRemoteScheduleServerRequest deleteRemoteScheduleServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DeleteRemoteScheduleServerRequest DeleteRemoteScheduleServerRequest {
    get { return deleteRemoteScheduleServerRequest_; }
    set {
      deleteRemoteScheduleServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "deleteRemoteScheduleServerResponse" field.</summary>
  public const int DeleteRemoteScheduleServerResponseFieldNumber = 32;
  private global::DeleteRemoteScheduleServerResponse deleteRemoteScheduleServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DeleteRemoteScheduleServerResponse DeleteRemoteScheduleServerResponse {
    get { return deleteRemoteScheduleServerResponse_; }
    set {
      deleteRemoteScheduleServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "setActiveRemoteScheduleServerRequest" field.</summary>
  public const int SetActiveRemoteScheduleServerRequestFieldNumber = 33;
  private global::SetActiveRemoteScheduleServerRequest setActiveRemoteScheduleServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SetActiveRemoteScheduleServerRequest SetActiveRemoteScheduleServerRequest {
    get { return setActiveRemoteScheduleServerRequest_; }
    set {
      setActiveRemoteScheduleServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "setActiveRemoteScheduleServerResponse" field.</summary>
  public const int SetActiveRemoteScheduleServerResponseFieldNumber = 34;
  private global::SetActiveRemoteScheduleServerResponse setActiveRemoteScheduleServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SetActiveRemoteScheduleServerResponse SetActiveRemoteScheduleServerResponse {
    get { return setActiveRemoteScheduleServerResponse_; }
    set {
      setActiveRemoteScheduleServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "getRemoteMultisServerRequest" field.</summary>
  public const int GetRemoteMultisServerRequestFieldNumber = 35;
  private global::GetRemoteMultisServerRequest getRemoteMultisServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetRemoteMultisServerRequest GetRemoteMultisServerRequest {
    get { return getRemoteMultisServerRequest_; }
    set {
      getRemoteMultisServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getRemoteMultisServerResponse" field.</summary>
  public const int GetRemoteMultisServerResponseFieldNumber = 36;
  private global::GetRemoteMultisServerResponse getRemoteMultisServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetRemoteMultisServerResponse GetRemoteMultisServerResponse {
    get { return getRemoteMultisServerResponse_; }
    set {
      getRemoteMultisServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "addRemoteMultiServerRequest" field.</summary>
  public const int AddRemoteMultiServerRequestFieldNumber = 37;
  private global::AddRemoteMultiServerRequest addRemoteMultiServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AddRemoteMultiServerRequest AddRemoteMultiServerRequest {
    get { return addRemoteMultiServerRequest_; }
    set {
      addRemoteMultiServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "addRemoteMultiServerResponse" field.</summary>
  public const int AddRemoteMultiServerResponseFieldNumber = 38;
  private global::AddRemoteMultiServerResponse addRemoteMultiServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AddRemoteMultiServerResponse AddRemoteMultiServerResponse {
    get { return addRemoteMultiServerResponse_; }
    set {
      addRemoteMultiServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "deleteRemoteMultiServerRequest" field.</summary>
  public const int DeleteRemoteMultiServerRequestFieldNumber = 39;
  private global::DeleteRemoteMultiServerRequest deleteRemoteMultiServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DeleteRemoteMultiServerRequest DeleteRemoteMultiServerRequest {
    get { return deleteRemoteMultiServerRequest_; }
    set {
      deleteRemoteMultiServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "deleteRemoteMultiServerResponse" field.</summary>
  public const int DeleteRemoteMultiServerResponseFieldNumber = 40;
  private global::DeleteRemoteMultiServerResponse deleteRemoteMultiServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DeleteRemoteMultiServerResponse DeleteRemoteMultiServerResponse {
    get { return deleteRemoteMultiServerResponse_; }
    set {
      deleteRemoteMultiServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "addRemoteMultiLibraryCmdServerRequest" field.</summary>
  public const int AddRemoteMultiLibraryCmdServerRequestFieldNumber = 41;
  private global::AddRemoteMultiLibraryCmdServerRequest addRemoteMultiLibraryCmdServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AddRemoteMultiLibraryCmdServerRequest AddRemoteMultiLibraryCmdServerRequest {
    get { return addRemoteMultiLibraryCmdServerRequest_; }
    set {
      addRemoteMultiLibraryCmdServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "addRemoteMultiLibraryCmdServerResponse" field.</summary>
  public const int AddRemoteMultiLibraryCmdServerResponseFieldNumber = 42;
  private global::AddRemoteMultiLibraryCmdServerResponse addRemoteMultiLibraryCmdServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AddRemoteMultiLibraryCmdServerResponse AddRemoteMultiLibraryCmdServerResponse {
    get { return addRemoteMultiLibraryCmdServerResponse_; }
    set {
      addRemoteMultiLibraryCmdServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "deleteRemoteMultiLibraryCmdServerRequest" field.</summary>
  public const int DeleteRemoteMultiLibraryCmdServerRequestFieldNumber = 43;
  private global::DeleteRemoteMultiLibraryCmdServerRequest deleteRemoteMultiLibraryCmdServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DeleteRemoteMultiLibraryCmdServerRequest DeleteRemoteMultiLibraryCmdServerRequest {
    get { return deleteRemoteMultiLibraryCmdServerRequest_; }
    set {
      deleteRemoteMultiLibraryCmdServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "deleteRemoteMultiLibraryCmdServerResponse" field.</summary>
  public const int DeleteRemoteMultiLibraryCmdServerResponseFieldNumber = 44;
  private global::DeleteRemoteMultiLibraryCmdServerResponse deleteRemoteMultiLibraryCmdServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DeleteRemoteMultiLibraryCmdServerResponse DeleteRemoteMultiLibraryCmdServerResponse {
    get { return deleteRemoteMultiLibraryCmdServerResponse_; }
    set {
      deleteRemoteMultiLibraryCmdServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "updateRemoteMultiLibraryCmdServerRequest" field.</summary>
  public const int UpdateRemoteMultiLibraryCmdServerRequestFieldNumber = 45;
  private global::UpdateRemoteMultiLibraryCmdServerRequest updateRemoteMultiLibraryCmdServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateRemoteMultiLibraryCmdServerRequest UpdateRemoteMultiLibraryCmdServerRequest {
    get { return updateRemoteMultiLibraryCmdServerRequest_; }
    set {
      updateRemoteMultiLibraryCmdServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "updateRemoteMultiLibraryCmdServerResponse" field.</summary>
  public const int UpdateRemoteMultiLibraryCmdServerResponseFieldNumber = 46;
  private global::UpdateRemoteMultiLibraryCmdServerResponse updateRemoteMultiLibraryCmdServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateRemoteMultiLibraryCmdServerResponse UpdateRemoteMultiLibraryCmdServerResponse {
    get { return updateRemoteMultiLibraryCmdServerResponse_; }
    set {
      updateRemoteMultiLibraryCmdServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "updateGroupRemoteMultiLibraryCmdServerRequest" field.</summary>
  public const int UpdateGroupRemoteMultiLibraryCmdServerRequestFieldNumber = 47;
  private global::UpdateGroupRemoteMultiLibraryCmdServerRequest updateGroupRemoteMultiLibraryCmdServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateGroupRemoteMultiLibraryCmdServerRequest UpdateGroupRemoteMultiLibraryCmdServerRequest {
    get { return updateGroupRemoteMultiLibraryCmdServerRequest_; }
    set {
      updateGroupRemoteMultiLibraryCmdServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "updateGroupRemoteMultiLibraryCmdServerResponse" field.</summary>
  public const int UpdateGroupRemoteMultiLibraryCmdServerResponseFieldNumber = 48;
  private global::UpdateGroupRemoteMultiLibraryCmdServerResponse updateGroupRemoteMultiLibraryCmdServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateGroupRemoteMultiLibraryCmdServerResponse UpdateGroupRemoteMultiLibraryCmdServerResponse {
    get { return updateGroupRemoteMultiLibraryCmdServerResponse_; }
    set {
      updateGroupRemoteMultiLibraryCmdServerResponse_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RemoteServerMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RemoteServerMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(GetRemotesServerRequest, other.GetRemotesServerRequest)) return false;
    if (!object.Equals(GetRemotesServerResponse, other.GetRemotesServerResponse)) return false;
    if (!object.Equals(GetRemoteServerRequest, other.GetRemoteServerRequest)) return false;
    if (!object.Equals(GetRemoteServerResponse, other.GetRemoteServerResponse)) return false;
    if (!object.Equals(GetRemoteLibrariesServerRequest, other.GetRemoteLibrariesServerRequest)) return false;
    if (!object.Equals(GetRemoteLibrariesServerResponse, other.GetRemoteLibrariesServerResponse)) return false;
    if (!object.Equals(GetCommandsRemoteServerRequest, other.GetCommandsRemoteServerRequest)) return false;
    if (!object.Equals(GetCommandsRemoteServerResponse, other.GetCommandsRemoteServerResponse)) return false;
    if (!object.Equals(SendCommandRemoteServerRequest, other.SendCommandRemoteServerRequest)) return false;
    if (!object.Equals(SendCommandRemoteServerResponse, other.SendCommandRemoteServerResponse)) return false;
    if (!object.Equals(LearnCommandRemoteServerRequest, other.LearnCommandRemoteServerRequest)) return false;
    if (!object.Equals(LearnCommandRemoteServerResponse, other.LearnCommandRemoteServerResponse)) return false;
    if (!object.Equals(RestoreCommandRemoteServerRequest, other.RestoreCommandRemoteServerRequest)) return false;
    if (!object.Equals(RestoreCommandRemoteServerResponse, other.RestoreCommandRemoteServerResponse)) return false;
    if (!object.Equals(AddRemoteServerRequest, other.AddRemoteServerRequest)) return false;
    if (!object.Equals(AddRemoteServerResponse, other.AddRemoteServerResponse)) return false;
    if (!object.Equals(UpdateRemoteServerRequest, other.UpdateRemoteServerRequest)) return false;
    if (!object.Equals(UpdateRemoteServerResponse, other.UpdateRemoteServerResponse)) return false;
    if (!object.Equals(DeleteRemoteServerRequest, other.DeleteRemoteServerRequest)) return false;
    if (!object.Equals(DeleteRemoteServerResponse, other.DeleteRemoteServerResponse)) return false;
    if (!object.Equals(GetRemoteSchedulesServerRequest, other.GetRemoteSchedulesServerRequest)) return false;
    if (!object.Equals(GetRemoteSchedulesServerResponse, other.GetRemoteSchedulesServerResponse)) return false;
    if (!object.Equals(GetCountRemoteScheduleServerRequest, other.GetCountRemoteScheduleServerRequest)) return false;
    if (!object.Equals(GetCountRemoteScheduleServerResponse, other.GetCountRemoteScheduleServerResponse)) return false;
    if (!object.Equals(GetRemoteScheduleServerRequest, other.GetRemoteScheduleServerRequest)) return false;
    if (!object.Equals(GetRemoteScheduleServerResponse, other.GetRemoteScheduleServerResponse)) return false;
    if (!object.Equals(AddRemoteScheduleServerRequest, other.AddRemoteScheduleServerRequest)) return false;
    if (!object.Equals(AddRemoteScheduleServerResponse, other.AddRemoteScheduleServerResponse)) return false;
    if (!object.Equals(UpdateRemoteScheduleServerRequest, other.UpdateRemoteScheduleServerRequest)) return false;
    if (!object.Equals(UpdateRemoteScheduleServerResponse, other.UpdateRemoteScheduleServerResponse)) return false;
    if (!object.Equals(DeleteRemoteScheduleServerRequest, other.DeleteRemoteScheduleServerRequest)) return false;
    if (!object.Equals(DeleteRemoteScheduleServerResponse, other.DeleteRemoteScheduleServerResponse)) return false;
    if (!object.Equals(SetActiveRemoteScheduleServerRequest, other.SetActiveRemoteScheduleServerRequest)) return false;
    if (!object.Equals(SetActiveRemoteScheduleServerResponse, other.SetActiveRemoteScheduleServerResponse)) return false;
    if (!object.Equals(GetRemoteMultisServerRequest, other.GetRemoteMultisServerRequest)) return false;
    if (!object.Equals(GetRemoteMultisServerResponse, other.GetRemoteMultisServerResponse)) return false;
    if (!object.Equals(AddRemoteMultiServerRequest, other.AddRemoteMultiServerRequest)) return false;
    if (!object.Equals(AddRemoteMultiServerResponse, other.AddRemoteMultiServerResponse)) return false;
    if (!object.Equals(DeleteRemoteMultiServerRequest, other.DeleteRemoteMultiServerRequest)) return false;
    if (!object.Equals(DeleteRemoteMultiServerResponse, other.DeleteRemoteMultiServerResponse)) return false;
    if (!object.Equals(AddRemoteMultiLibraryCmdServerRequest, other.AddRemoteMultiLibraryCmdServerRequest)) return false;
    if (!object.Equals(AddRemoteMultiLibraryCmdServerResponse, other.AddRemoteMultiLibraryCmdServerResponse)) return false;
    if (!object.Equals(DeleteRemoteMultiLibraryCmdServerRequest, other.DeleteRemoteMultiLibraryCmdServerRequest)) return false;
    if (!object.Equals(DeleteRemoteMultiLibraryCmdServerResponse, other.DeleteRemoteMultiLibraryCmdServerResponse)) return false;
    if (!object.Equals(UpdateRemoteMultiLibraryCmdServerRequest, other.UpdateRemoteMultiLibraryCmdServerRequest)) return false;
    if (!object.Equals(UpdateRemoteMultiLibraryCmdServerResponse, other.UpdateRemoteMultiLibraryCmdServerResponse)) return false;
    if (!object.Equals(UpdateGroupRemoteMultiLibraryCmdServerRequest, other.UpdateGroupRemoteMultiLibraryCmdServerRequest)) return false;
    if (!object.Equals(UpdateGroupRemoteMultiLibraryCmdServerResponse, other.UpdateGroupRemoteMultiLibraryCmdServerResponse)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (getRemotesServerRequest_ != null) hash ^= GetRemotesServerRequest.GetHashCode();
    if (getRemotesServerResponse_ != null) hash ^= GetRemotesServerResponse.GetHashCode();
    if (getRemoteServerRequest_ != null) hash ^= GetRemoteServerRequest.GetHashCode();
    if (getRemoteServerResponse_ != null) hash ^= GetRemoteServerResponse.GetHashCode();
    if (getRemoteLibrariesServerRequest_ != null) hash ^= GetRemoteLibrariesServerRequest.GetHashCode();
    if (getRemoteLibrariesServerResponse_ != null) hash ^= GetRemoteLibrariesServerResponse.GetHashCode();
    if (getCommandsRemoteServerRequest_ != null) hash ^= GetCommandsRemoteServerRequest.GetHashCode();
    if (getCommandsRemoteServerResponse_ != null) hash ^= GetCommandsRemoteServerResponse.GetHashCode();
    if (sendCommandRemoteServerRequest_ != null) hash ^= SendCommandRemoteServerRequest.GetHashCode();
    if (sendCommandRemoteServerResponse_ != null) hash ^= SendCommandRemoteServerResponse.GetHashCode();
    if (learnCommandRemoteServerRequest_ != null) hash ^= LearnCommandRemoteServerRequest.GetHashCode();
    if (learnCommandRemoteServerResponse_ != null) hash ^= LearnCommandRemoteServerResponse.GetHashCode();
    if (restoreCommandRemoteServerRequest_ != null) hash ^= RestoreCommandRemoteServerRequest.GetHashCode();
    if (restoreCommandRemoteServerResponse_ != null) hash ^= RestoreCommandRemoteServerResponse.GetHashCode();
    if (addRemoteServerRequest_ != null) hash ^= AddRemoteServerRequest.GetHashCode();
    if (addRemoteServerResponse_ != null) hash ^= AddRemoteServerResponse.GetHashCode();
    if (updateRemoteServerRequest_ != null) hash ^= UpdateRemoteServerRequest.GetHashCode();
    if (updateRemoteServerResponse_ != null) hash ^= UpdateRemoteServerResponse.GetHashCode();
    if (deleteRemoteServerRequest_ != null) hash ^= DeleteRemoteServerRequest.GetHashCode();
    if (deleteRemoteServerResponse_ != null) hash ^= DeleteRemoteServerResponse.GetHashCode();
    if (getRemoteSchedulesServerRequest_ != null) hash ^= GetRemoteSchedulesServerRequest.GetHashCode();
    if (getRemoteSchedulesServerResponse_ != null) hash ^= GetRemoteSchedulesServerResponse.GetHashCode();
    if (getCountRemoteScheduleServerRequest_ != null) hash ^= GetCountRemoteScheduleServerRequest.GetHashCode();
    if (getCountRemoteScheduleServerResponse_ != null) hash ^= GetCountRemoteScheduleServerResponse.GetHashCode();
    if (getRemoteScheduleServerRequest_ != null) hash ^= GetRemoteScheduleServerRequest.GetHashCode();
    if (getRemoteScheduleServerResponse_ != null) hash ^= GetRemoteScheduleServerResponse.GetHashCode();
    if (addRemoteScheduleServerRequest_ != null) hash ^= AddRemoteScheduleServerRequest.GetHashCode();
    if (addRemoteScheduleServerResponse_ != null) hash ^= AddRemoteScheduleServerResponse.GetHashCode();
    if (updateRemoteScheduleServerRequest_ != null) hash ^= UpdateRemoteScheduleServerRequest.GetHashCode();
    if (updateRemoteScheduleServerResponse_ != null) hash ^= UpdateRemoteScheduleServerResponse.GetHashCode();
    if (deleteRemoteScheduleServerRequest_ != null) hash ^= DeleteRemoteScheduleServerRequest.GetHashCode();
    if (deleteRemoteScheduleServerResponse_ != null) hash ^= DeleteRemoteScheduleServerResponse.GetHashCode();
    if (setActiveRemoteScheduleServerRequest_ != null) hash ^= SetActiveRemoteScheduleServerRequest.GetHashCode();
    if (setActiveRemoteScheduleServerResponse_ != null) hash ^= SetActiveRemoteScheduleServerResponse.GetHashCode();
    if (getRemoteMultisServerRequest_ != null) hash ^= GetRemoteMultisServerRequest.GetHashCode();
    if (getRemoteMultisServerResponse_ != null) hash ^= GetRemoteMultisServerResponse.GetHashCode();
    if (addRemoteMultiServerRequest_ != null) hash ^= AddRemoteMultiServerRequest.GetHashCode();
    if (addRemoteMultiServerResponse_ != null) hash ^= AddRemoteMultiServerResponse.GetHashCode();
    if (deleteRemoteMultiServerRequest_ != null) hash ^= DeleteRemoteMultiServerRequest.GetHashCode();
    if (deleteRemoteMultiServerResponse_ != null) hash ^= DeleteRemoteMultiServerResponse.GetHashCode();
    if (addRemoteMultiLibraryCmdServerRequest_ != null) hash ^= AddRemoteMultiLibraryCmdServerRequest.GetHashCode();
    if (addRemoteMultiLibraryCmdServerResponse_ != null) hash ^= AddRemoteMultiLibraryCmdServerResponse.GetHashCode();
    if (deleteRemoteMultiLibraryCmdServerRequest_ != null) hash ^= DeleteRemoteMultiLibraryCmdServerRequest.GetHashCode();
    if (deleteRemoteMultiLibraryCmdServerResponse_ != null) hash ^= DeleteRemoteMultiLibraryCmdServerResponse.GetHashCode();
    if (updateRemoteMultiLibraryCmdServerRequest_ != null) hash ^= UpdateRemoteMultiLibraryCmdServerRequest.GetHashCode();
    if (updateRemoteMultiLibraryCmdServerResponse_ != null) hash ^= UpdateRemoteMultiLibraryCmdServerResponse.GetHashCode();
    if (updateGroupRemoteMultiLibraryCmdServerRequest_ != null) hash ^= UpdateGroupRemoteMultiLibraryCmdServerRequest.GetHashCode();
    if (updateGroupRemoteMultiLibraryCmdServerResponse_ != null) hash ^= UpdateGroupRemoteMultiLibraryCmdServerResponse.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (getRemotesServerRequest_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(GetRemotesServerRequest);
    }
    if (getRemotesServerResponse_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(GetRemotesServerResponse);
    }
    if (getRemoteServerRequest_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(GetRemoteServerRequest);
    }
    if (getRemoteServerResponse_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(GetRemoteServerResponse);
    }
    if (getRemoteLibrariesServerRequest_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(GetRemoteLibrariesServerRequest);
    }
    if (getRemoteLibrariesServerResponse_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(GetRemoteLibrariesServerResponse);
    }
    if (getCommandsRemoteServerRequest_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(GetCommandsRemoteServerRequest);
    }
    if (getCommandsRemoteServerResponse_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(GetCommandsRemoteServerResponse);
    }
    if (sendCommandRemoteServerRequest_ != null) {
      output.WriteRawTag(74);
      output.WriteMessage(SendCommandRemoteServerRequest);
    }
    if (sendCommandRemoteServerResponse_ != null) {
      output.WriteRawTag(82);
      output.WriteMessage(SendCommandRemoteServerResponse);
    }
    if (learnCommandRemoteServerRequest_ != null) {
      output.WriteRawTag(90);
      output.WriteMessage(LearnCommandRemoteServerRequest);
    }
    if (learnCommandRemoteServerResponse_ != null) {
      output.WriteRawTag(98);
      output.WriteMessage(LearnCommandRemoteServerResponse);
    }
    if (restoreCommandRemoteServerRequest_ != null) {
      output.WriteRawTag(106);
      output.WriteMessage(RestoreCommandRemoteServerRequest);
    }
    if (restoreCommandRemoteServerResponse_ != null) {
      output.WriteRawTag(114);
      output.WriteMessage(RestoreCommandRemoteServerResponse);
    }
    if (addRemoteServerRequest_ != null) {
      output.WriteRawTag(122);
      output.WriteMessage(AddRemoteServerRequest);
    }
    if (addRemoteServerResponse_ != null) {
      output.WriteRawTag(130, 1);
      output.WriteMessage(AddRemoteServerResponse);
    }
    if (updateRemoteServerRequest_ != null) {
      output.WriteRawTag(138, 1);
      output.WriteMessage(UpdateRemoteServerRequest);
    }
    if (updateRemoteServerResponse_ != null) {
      output.WriteRawTag(146, 1);
      output.WriteMessage(UpdateRemoteServerResponse);
    }
    if (deleteRemoteServerRequest_ != null) {
      output.WriteRawTag(154, 1);
      output.WriteMessage(DeleteRemoteServerRequest);
    }
    if (deleteRemoteServerResponse_ != null) {
      output.WriteRawTag(162, 1);
      output.WriteMessage(DeleteRemoteServerResponse);
    }
    if (getRemoteSchedulesServerRequest_ != null) {
      output.WriteRawTag(170, 1);
      output.WriteMessage(GetRemoteSchedulesServerRequest);
    }
    if (getRemoteSchedulesServerResponse_ != null) {
      output.WriteRawTag(178, 1);
      output.WriteMessage(GetRemoteSchedulesServerResponse);
    }
    if (getCountRemoteScheduleServerRequest_ != null) {
      output.WriteRawTag(186, 1);
      output.WriteMessage(GetCountRemoteScheduleServerRequest);
    }
    if (getCountRemoteScheduleServerResponse_ != null) {
      output.WriteRawTag(194, 1);
      output.WriteMessage(GetCountRemoteScheduleServerResponse);
    }
    if (getRemoteScheduleServerRequest_ != null) {
      output.WriteRawTag(202, 1);
      output.WriteMessage(GetRemoteScheduleServerRequest);
    }
    if (getRemoteScheduleServerResponse_ != null) {
      output.WriteRawTag(210, 1);
      output.WriteMessage(GetRemoteScheduleServerResponse);
    }
    if (addRemoteScheduleServerRequest_ != null) {
      output.WriteRawTag(218, 1);
      output.WriteMessage(AddRemoteScheduleServerRequest);
    }
    if (addRemoteScheduleServerResponse_ != null) {
      output.WriteRawTag(226, 1);
      output.WriteMessage(AddRemoteScheduleServerResponse);
    }
    if (updateRemoteScheduleServerRequest_ != null) {
      output.WriteRawTag(234, 1);
      output.WriteMessage(UpdateRemoteScheduleServerRequest);
    }
    if (updateRemoteScheduleServerResponse_ != null) {
      output.WriteRawTag(242, 1);
      output.WriteMessage(UpdateRemoteScheduleServerResponse);
    }
    if (deleteRemoteScheduleServerRequest_ != null) {
      output.WriteRawTag(250, 1);
      output.WriteMessage(DeleteRemoteScheduleServerRequest);
    }
    if (deleteRemoteScheduleServerResponse_ != null) {
      output.WriteRawTag(130, 2);
      output.WriteMessage(DeleteRemoteScheduleServerResponse);
    }
    if (setActiveRemoteScheduleServerRequest_ != null) {
      output.WriteRawTag(138, 2);
      output.WriteMessage(SetActiveRemoteScheduleServerRequest);
    }
    if (setActiveRemoteScheduleServerResponse_ != null) {
      output.WriteRawTag(146, 2);
      output.WriteMessage(SetActiveRemoteScheduleServerResponse);
    }
    if (getRemoteMultisServerRequest_ != null) {
      output.WriteRawTag(154, 2);
      output.WriteMessage(GetRemoteMultisServerRequest);
    }
    if (getRemoteMultisServerResponse_ != null) {
      output.WriteRawTag(162, 2);
      output.WriteMessage(GetRemoteMultisServerResponse);
    }
    if (addRemoteMultiServerRequest_ != null) {
      output.WriteRawTag(170, 2);
      output.WriteMessage(AddRemoteMultiServerRequest);
    }
    if (addRemoteMultiServerResponse_ != null) {
      output.WriteRawTag(178, 2);
      output.WriteMessage(AddRemoteMultiServerResponse);
    }
    if (deleteRemoteMultiServerRequest_ != null) {
      output.WriteRawTag(186, 2);
      output.WriteMessage(DeleteRemoteMultiServerRequest);
    }
    if (deleteRemoteMultiServerResponse_ != null) {
      output.WriteRawTag(194, 2);
      output.WriteMessage(DeleteRemoteMultiServerResponse);
    }
    if (addRemoteMultiLibraryCmdServerRequest_ != null) {
      output.WriteRawTag(202, 2);
      output.WriteMessage(AddRemoteMultiLibraryCmdServerRequest);
    }
    if (addRemoteMultiLibraryCmdServerResponse_ != null) {
      output.WriteRawTag(210, 2);
      output.WriteMessage(AddRemoteMultiLibraryCmdServerResponse);
    }
    if (deleteRemoteMultiLibraryCmdServerRequest_ != null) {
      output.WriteRawTag(218, 2);
      output.WriteMessage(DeleteRemoteMultiLibraryCmdServerRequest);
    }
    if (deleteRemoteMultiLibraryCmdServerResponse_ != null) {
      output.WriteRawTag(226, 2);
      output.WriteMessage(DeleteRemoteMultiLibraryCmdServerResponse);
    }
    if (updateRemoteMultiLibraryCmdServerRequest_ != null) {
      output.WriteRawTag(234, 2);
      output.WriteMessage(UpdateRemoteMultiLibraryCmdServerRequest);
    }
    if (updateRemoteMultiLibraryCmdServerResponse_ != null) {
      output.WriteRawTag(242, 2);
      output.WriteMessage(UpdateRemoteMultiLibraryCmdServerResponse);
    }
    if (updateGroupRemoteMultiLibraryCmdServerRequest_ != null) {
      output.WriteRawTag(250, 2);
      output.WriteMessage(UpdateGroupRemoteMultiLibraryCmdServerRequest);
    }
    if (updateGroupRemoteMultiLibraryCmdServerResponse_ != null) {
      output.WriteRawTag(130, 3);
      output.WriteMessage(UpdateGroupRemoteMultiLibraryCmdServerResponse);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (getRemotesServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetRemotesServerRequest);
    }
    if (getRemotesServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetRemotesServerResponse);
    }
    if (getRemoteServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetRemoteServerRequest);
    }
    if (getRemoteServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetRemoteServerResponse);
    }
    if (getRemoteLibrariesServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetRemoteLibrariesServerRequest);
    }
    if (getRemoteLibrariesServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetRemoteLibrariesServerResponse);
    }
    if (getCommandsRemoteServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetCommandsRemoteServerRequest);
    }
    if (getCommandsRemoteServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetCommandsRemoteServerResponse);
    }
    if (sendCommandRemoteServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SendCommandRemoteServerRequest);
    }
    if (sendCommandRemoteServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SendCommandRemoteServerResponse);
    }
    if (learnCommandRemoteServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(LearnCommandRemoteServerRequest);
    }
    if (learnCommandRemoteServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(LearnCommandRemoteServerResponse);
    }
    if (restoreCommandRemoteServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(RestoreCommandRemoteServerRequest);
    }
    if (restoreCommandRemoteServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(RestoreCommandRemoteServerResponse);
    }
    if (addRemoteServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddRemoteServerRequest);
    }
    if (addRemoteServerResponse_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(AddRemoteServerResponse);
    }
    if (updateRemoteServerRequest_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(UpdateRemoteServerRequest);
    }
    if (updateRemoteServerResponse_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(UpdateRemoteServerResponse);
    }
    if (deleteRemoteServerRequest_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(DeleteRemoteServerRequest);
    }
    if (deleteRemoteServerResponse_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(DeleteRemoteServerResponse);
    }
    if (getRemoteSchedulesServerRequest_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetRemoteSchedulesServerRequest);
    }
    if (getRemoteSchedulesServerResponse_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetRemoteSchedulesServerResponse);
    }
    if (getCountRemoteScheduleServerRequest_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetCountRemoteScheduleServerRequest);
    }
    if (getCountRemoteScheduleServerResponse_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetCountRemoteScheduleServerResponse);
    }
    if (getRemoteScheduleServerRequest_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetRemoteScheduleServerRequest);
    }
    if (getRemoteScheduleServerResponse_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetRemoteScheduleServerResponse);
    }
    if (addRemoteScheduleServerRequest_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(AddRemoteScheduleServerRequest);
    }
    if (addRemoteScheduleServerResponse_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(AddRemoteScheduleServerResponse);
    }
    if (updateRemoteScheduleServerRequest_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(UpdateRemoteScheduleServerRequest);
    }
    if (updateRemoteScheduleServerResponse_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(UpdateRemoteScheduleServerResponse);
    }
    if (deleteRemoteScheduleServerRequest_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(DeleteRemoteScheduleServerRequest);
    }
    if (deleteRemoteScheduleServerResponse_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(DeleteRemoteScheduleServerResponse);
    }
    if (setActiveRemoteScheduleServerRequest_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(SetActiveRemoteScheduleServerRequest);
    }
    if (setActiveRemoteScheduleServerResponse_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(SetActiveRemoteScheduleServerResponse);
    }
    if (getRemoteMultisServerRequest_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetRemoteMultisServerRequest);
    }
    if (getRemoteMultisServerResponse_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetRemoteMultisServerResponse);
    }
    if (addRemoteMultiServerRequest_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(AddRemoteMultiServerRequest);
    }
    if (addRemoteMultiServerResponse_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(AddRemoteMultiServerResponse);
    }
    if (deleteRemoteMultiServerRequest_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(DeleteRemoteMultiServerRequest);
    }
    if (deleteRemoteMultiServerResponse_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(DeleteRemoteMultiServerResponse);
    }
    if (addRemoteMultiLibraryCmdServerRequest_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(AddRemoteMultiLibraryCmdServerRequest);
    }
    if (addRemoteMultiLibraryCmdServerResponse_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(AddRemoteMultiLibraryCmdServerResponse);
    }
    if (deleteRemoteMultiLibraryCmdServerRequest_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(DeleteRemoteMultiLibraryCmdServerRequest);
    }
    if (deleteRemoteMultiLibraryCmdServerResponse_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(DeleteRemoteMultiLibraryCmdServerResponse);
    }
    if (updateRemoteMultiLibraryCmdServerRequest_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(UpdateRemoteMultiLibraryCmdServerRequest);
    }
    if (updateRemoteMultiLibraryCmdServerResponse_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(UpdateRemoteMultiLibraryCmdServerResponse);
    }
    if (updateGroupRemoteMultiLibraryCmdServerRequest_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(UpdateGroupRemoteMultiLibraryCmdServerRequest);
    }
    if (updateGroupRemoteMultiLibraryCmdServerResponse_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(UpdateGroupRemoteMultiLibraryCmdServerResponse);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RemoteServerMessage other) {
    if (other == null) {
      return;
    }
    if (other.getRemotesServerRequest_ != null) {
      if (getRemotesServerRequest_ == null) {
        GetRemotesServerRequest = new global::GetRemotesServerRequest();
      }
      GetRemotesServerRequest.MergeFrom(other.GetRemotesServerRequest);
    }
    if (other.getRemotesServerResponse_ != null) {
      if (getRemotesServerResponse_ == null) {
        GetRemotesServerResponse = new global::GetRemotesServerResponse();
      }
      GetRemotesServerResponse.MergeFrom(other.GetRemotesServerResponse);
    }
    if (other.getRemoteServerRequest_ != null) {
      if (getRemoteServerRequest_ == null) {
        GetRemoteServerRequest = new global::GetRemoteServerRequest();
      }
      GetRemoteServerRequest.MergeFrom(other.GetRemoteServerRequest);
    }
    if (other.getRemoteServerResponse_ != null) {
      if (getRemoteServerResponse_ == null) {
        GetRemoteServerResponse = new global::GetRemoteServerResponse();
      }
      GetRemoteServerResponse.MergeFrom(other.GetRemoteServerResponse);
    }
    if (other.getRemoteLibrariesServerRequest_ != null) {
      if (getRemoteLibrariesServerRequest_ == null) {
        GetRemoteLibrariesServerRequest = new global::GetRemoteLibrariesServerRequest();
      }
      GetRemoteLibrariesServerRequest.MergeFrom(other.GetRemoteLibrariesServerRequest);
    }
    if (other.getRemoteLibrariesServerResponse_ != null) {
      if (getRemoteLibrariesServerResponse_ == null) {
        GetRemoteLibrariesServerResponse = new global::GetRemoteLibrariesServerResponse();
      }
      GetRemoteLibrariesServerResponse.MergeFrom(other.GetRemoteLibrariesServerResponse);
    }
    if (other.getCommandsRemoteServerRequest_ != null) {
      if (getCommandsRemoteServerRequest_ == null) {
        GetCommandsRemoteServerRequest = new global::GetCommandsRemoteServerRequest();
      }
      GetCommandsRemoteServerRequest.MergeFrom(other.GetCommandsRemoteServerRequest);
    }
    if (other.getCommandsRemoteServerResponse_ != null) {
      if (getCommandsRemoteServerResponse_ == null) {
        GetCommandsRemoteServerResponse = new global::GetCommandsRemoteServerResponse();
      }
      GetCommandsRemoteServerResponse.MergeFrom(other.GetCommandsRemoteServerResponse);
    }
    if (other.sendCommandRemoteServerRequest_ != null) {
      if (sendCommandRemoteServerRequest_ == null) {
        SendCommandRemoteServerRequest = new global::SendCommandRemoteServerRequest();
      }
      SendCommandRemoteServerRequest.MergeFrom(other.SendCommandRemoteServerRequest);
    }
    if (other.sendCommandRemoteServerResponse_ != null) {
      if (sendCommandRemoteServerResponse_ == null) {
        SendCommandRemoteServerResponse = new global::SendCommandRemoteServerResponse();
      }
      SendCommandRemoteServerResponse.MergeFrom(other.SendCommandRemoteServerResponse);
    }
    if (other.learnCommandRemoteServerRequest_ != null) {
      if (learnCommandRemoteServerRequest_ == null) {
        LearnCommandRemoteServerRequest = new global::LearnCommandRemoteServerRequest();
      }
      LearnCommandRemoteServerRequest.MergeFrom(other.LearnCommandRemoteServerRequest);
    }
    if (other.learnCommandRemoteServerResponse_ != null) {
      if (learnCommandRemoteServerResponse_ == null) {
        LearnCommandRemoteServerResponse = new global::LearnCommandRemoteServerResponse();
      }
      LearnCommandRemoteServerResponse.MergeFrom(other.LearnCommandRemoteServerResponse);
    }
    if (other.restoreCommandRemoteServerRequest_ != null) {
      if (restoreCommandRemoteServerRequest_ == null) {
        RestoreCommandRemoteServerRequest = new global::RestoreCommandRemoteServerRequest();
      }
      RestoreCommandRemoteServerRequest.MergeFrom(other.RestoreCommandRemoteServerRequest);
    }
    if (other.restoreCommandRemoteServerResponse_ != null) {
      if (restoreCommandRemoteServerResponse_ == null) {
        RestoreCommandRemoteServerResponse = new global::RestoreCommandRemoteServerResponse();
      }
      RestoreCommandRemoteServerResponse.MergeFrom(other.RestoreCommandRemoteServerResponse);
    }
    if (other.addRemoteServerRequest_ != null) {
      if (addRemoteServerRequest_ == null) {
        AddRemoteServerRequest = new global::AddRemoteServerRequest();
      }
      AddRemoteServerRequest.MergeFrom(other.AddRemoteServerRequest);
    }
    if (other.addRemoteServerResponse_ != null) {
      if (addRemoteServerResponse_ == null) {
        AddRemoteServerResponse = new global::AddRemoteServerResponse();
      }
      AddRemoteServerResponse.MergeFrom(other.AddRemoteServerResponse);
    }
    if (other.updateRemoteServerRequest_ != null) {
      if (updateRemoteServerRequest_ == null) {
        UpdateRemoteServerRequest = new global::UpdateRemoteServerRequest();
      }
      UpdateRemoteServerRequest.MergeFrom(other.UpdateRemoteServerRequest);
    }
    if (other.updateRemoteServerResponse_ != null) {
      if (updateRemoteServerResponse_ == null) {
        UpdateRemoteServerResponse = new global::UpdateRemoteServerResponse();
      }
      UpdateRemoteServerResponse.MergeFrom(other.UpdateRemoteServerResponse);
    }
    if (other.deleteRemoteServerRequest_ != null) {
      if (deleteRemoteServerRequest_ == null) {
        DeleteRemoteServerRequest = new global::DeleteRemoteServerRequest();
      }
      DeleteRemoteServerRequest.MergeFrom(other.DeleteRemoteServerRequest);
    }
    if (other.deleteRemoteServerResponse_ != null) {
      if (deleteRemoteServerResponse_ == null) {
        DeleteRemoteServerResponse = new global::DeleteRemoteServerResponse();
      }
      DeleteRemoteServerResponse.MergeFrom(other.DeleteRemoteServerResponse);
    }
    if (other.getRemoteSchedulesServerRequest_ != null) {
      if (getRemoteSchedulesServerRequest_ == null) {
        GetRemoteSchedulesServerRequest = new global::GetRemoteSchedulesServerRequest();
      }
      GetRemoteSchedulesServerRequest.MergeFrom(other.GetRemoteSchedulesServerRequest);
    }
    if (other.getRemoteSchedulesServerResponse_ != null) {
      if (getRemoteSchedulesServerResponse_ == null) {
        GetRemoteSchedulesServerResponse = new global::GetRemoteSchedulesServerResponse();
      }
      GetRemoteSchedulesServerResponse.MergeFrom(other.GetRemoteSchedulesServerResponse);
    }
    if (other.getCountRemoteScheduleServerRequest_ != null) {
      if (getCountRemoteScheduleServerRequest_ == null) {
        GetCountRemoteScheduleServerRequest = new global::GetCountRemoteScheduleServerRequest();
      }
      GetCountRemoteScheduleServerRequest.MergeFrom(other.GetCountRemoteScheduleServerRequest);
    }
    if (other.getCountRemoteScheduleServerResponse_ != null) {
      if (getCountRemoteScheduleServerResponse_ == null) {
        GetCountRemoteScheduleServerResponse = new global::GetCountRemoteScheduleServerResponse();
      }
      GetCountRemoteScheduleServerResponse.MergeFrom(other.GetCountRemoteScheduleServerResponse);
    }
    if (other.getRemoteScheduleServerRequest_ != null) {
      if (getRemoteScheduleServerRequest_ == null) {
        GetRemoteScheduleServerRequest = new global::GetRemoteScheduleServerRequest();
      }
      GetRemoteScheduleServerRequest.MergeFrom(other.GetRemoteScheduleServerRequest);
    }
    if (other.getRemoteScheduleServerResponse_ != null) {
      if (getRemoteScheduleServerResponse_ == null) {
        GetRemoteScheduleServerResponse = new global::GetRemoteScheduleServerResponse();
      }
      GetRemoteScheduleServerResponse.MergeFrom(other.GetRemoteScheduleServerResponse);
    }
    if (other.addRemoteScheduleServerRequest_ != null) {
      if (addRemoteScheduleServerRequest_ == null) {
        AddRemoteScheduleServerRequest = new global::AddRemoteScheduleServerRequest();
      }
      AddRemoteScheduleServerRequest.MergeFrom(other.AddRemoteScheduleServerRequest);
    }
    if (other.addRemoteScheduleServerResponse_ != null) {
      if (addRemoteScheduleServerResponse_ == null) {
        AddRemoteScheduleServerResponse = new global::AddRemoteScheduleServerResponse();
      }
      AddRemoteScheduleServerResponse.MergeFrom(other.AddRemoteScheduleServerResponse);
    }
    if (other.updateRemoteScheduleServerRequest_ != null) {
      if (updateRemoteScheduleServerRequest_ == null) {
        UpdateRemoteScheduleServerRequest = new global::UpdateRemoteScheduleServerRequest();
      }
      UpdateRemoteScheduleServerRequest.MergeFrom(other.UpdateRemoteScheduleServerRequest);
    }
    if (other.updateRemoteScheduleServerResponse_ != null) {
      if (updateRemoteScheduleServerResponse_ == null) {
        UpdateRemoteScheduleServerResponse = new global::UpdateRemoteScheduleServerResponse();
      }
      UpdateRemoteScheduleServerResponse.MergeFrom(other.UpdateRemoteScheduleServerResponse);
    }
    if (other.deleteRemoteScheduleServerRequest_ != null) {
      if (deleteRemoteScheduleServerRequest_ == null) {
        DeleteRemoteScheduleServerRequest = new global::DeleteRemoteScheduleServerRequest();
      }
      DeleteRemoteScheduleServerRequest.MergeFrom(other.DeleteRemoteScheduleServerRequest);
    }
    if (other.deleteRemoteScheduleServerResponse_ != null) {
      if (deleteRemoteScheduleServerResponse_ == null) {
        DeleteRemoteScheduleServerResponse = new global::DeleteRemoteScheduleServerResponse();
      }
      DeleteRemoteScheduleServerResponse.MergeFrom(other.DeleteRemoteScheduleServerResponse);
    }
    if (other.setActiveRemoteScheduleServerRequest_ != null) {
      if (setActiveRemoteScheduleServerRequest_ == null) {
        SetActiveRemoteScheduleServerRequest = new global::SetActiveRemoteScheduleServerRequest();
      }
      SetActiveRemoteScheduleServerRequest.MergeFrom(other.SetActiveRemoteScheduleServerRequest);
    }
    if (other.setActiveRemoteScheduleServerResponse_ != null) {
      if (setActiveRemoteScheduleServerResponse_ == null) {
        SetActiveRemoteScheduleServerResponse = new global::SetActiveRemoteScheduleServerResponse();
      }
      SetActiveRemoteScheduleServerResponse.MergeFrom(other.SetActiveRemoteScheduleServerResponse);
    }
    if (other.getRemoteMultisServerRequest_ != null) {
      if (getRemoteMultisServerRequest_ == null) {
        GetRemoteMultisServerRequest = new global::GetRemoteMultisServerRequest();
      }
      GetRemoteMultisServerRequest.MergeFrom(other.GetRemoteMultisServerRequest);
    }
    if (other.getRemoteMultisServerResponse_ != null) {
      if (getRemoteMultisServerResponse_ == null) {
        GetRemoteMultisServerResponse = new global::GetRemoteMultisServerResponse();
      }
      GetRemoteMultisServerResponse.MergeFrom(other.GetRemoteMultisServerResponse);
    }
    if (other.addRemoteMultiServerRequest_ != null) {
      if (addRemoteMultiServerRequest_ == null) {
        AddRemoteMultiServerRequest = new global::AddRemoteMultiServerRequest();
      }
      AddRemoteMultiServerRequest.MergeFrom(other.AddRemoteMultiServerRequest);
    }
    if (other.addRemoteMultiServerResponse_ != null) {
      if (addRemoteMultiServerResponse_ == null) {
        AddRemoteMultiServerResponse = new global::AddRemoteMultiServerResponse();
      }
      AddRemoteMultiServerResponse.MergeFrom(other.AddRemoteMultiServerResponse);
    }
    if (other.deleteRemoteMultiServerRequest_ != null) {
      if (deleteRemoteMultiServerRequest_ == null) {
        DeleteRemoteMultiServerRequest = new global::DeleteRemoteMultiServerRequest();
      }
      DeleteRemoteMultiServerRequest.MergeFrom(other.DeleteRemoteMultiServerRequest);
    }
    if (other.deleteRemoteMultiServerResponse_ != null) {
      if (deleteRemoteMultiServerResponse_ == null) {
        DeleteRemoteMultiServerResponse = new global::DeleteRemoteMultiServerResponse();
      }
      DeleteRemoteMultiServerResponse.MergeFrom(other.DeleteRemoteMultiServerResponse);
    }
    if (other.addRemoteMultiLibraryCmdServerRequest_ != null) {
      if (addRemoteMultiLibraryCmdServerRequest_ == null) {
        AddRemoteMultiLibraryCmdServerRequest = new global::AddRemoteMultiLibraryCmdServerRequest();
      }
      AddRemoteMultiLibraryCmdServerRequest.MergeFrom(other.AddRemoteMultiLibraryCmdServerRequest);
    }
    if (other.addRemoteMultiLibraryCmdServerResponse_ != null) {
      if (addRemoteMultiLibraryCmdServerResponse_ == null) {
        AddRemoteMultiLibraryCmdServerResponse = new global::AddRemoteMultiLibraryCmdServerResponse();
      }
      AddRemoteMultiLibraryCmdServerResponse.MergeFrom(other.AddRemoteMultiLibraryCmdServerResponse);
    }
    if (other.deleteRemoteMultiLibraryCmdServerRequest_ != null) {
      if (deleteRemoteMultiLibraryCmdServerRequest_ == null) {
        DeleteRemoteMultiLibraryCmdServerRequest = new global::DeleteRemoteMultiLibraryCmdServerRequest();
      }
      DeleteRemoteMultiLibraryCmdServerRequest.MergeFrom(other.DeleteRemoteMultiLibraryCmdServerRequest);
    }
    if (other.deleteRemoteMultiLibraryCmdServerResponse_ != null) {
      if (deleteRemoteMultiLibraryCmdServerResponse_ == null) {
        DeleteRemoteMultiLibraryCmdServerResponse = new global::DeleteRemoteMultiLibraryCmdServerResponse();
      }
      DeleteRemoteMultiLibraryCmdServerResponse.MergeFrom(other.DeleteRemoteMultiLibraryCmdServerResponse);
    }
    if (other.updateRemoteMultiLibraryCmdServerRequest_ != null) {
      if (updateRemoteMultiLibraryCmdServerRequest_ == null) {
        UpdateRemoteMultiLibraryCmdServerRequest = new global::UpdateRemoteMultiLibraryCmdServerRequest();
      }
      UpdateRemoteMultiLibraryCmdServerRequest.MergeFrom(other.UpdateRemoteMultiLibraryCmdServerRequest);
    }
    if (other.updateRemoteMultiLibraryCmdServerResponse_ != null) {
      if (updateRemoteMultiLibraryCmdServerResponse_ == null) {
        UpdateRemoteMultiLibraryCmdServerResponse = new global::UpdateRemoteMultiLibraryCmdServerResponse();
      }
      UpdateRemoteMultiLibraryCmdServerResponse.MergeFrom(other.UpdateRemoteMultiLibraryCmdServerResponse);
    }
    if (other.updateGroupRemoteMultiLibraryCmdServerRequest_ != null) {
      if (updateGroupRemoteMultiLibraryCmdServerRequest_ == null) {
        UpdateGroupRemoteMultiLibraryCmdServerRequest = new global::UpdateGroupRemoteMultiLibraryCmdServerRequest();
      }
      UpdateGroupRemoteMultiLibraryCmdServerRequest.MergeFrom(other.UpdateGroupRemoteMultiLibraryCmdServerRequest);
    }
    if (other.updateGroupRemoteMultiLibraryCmdServerResponse_ != null) {
      if (updateGroupRemoteMultiLibraryCmdServerResponse_ == null) {
        UpdateGroupRemoteMultiLibraryCmdServerResponse = new global::UpdateGroupRemoteMultiLibraryCmdServerResponse();
      }
      UpdateGroupRemoteMultiLibraryCmdServerResponse.MergeFrom(other.UpdateGroupRemoteMultiLibraryCmdServerResponse);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (getRemotesServerRequest_ == null) {
            GetRemotesServerRequest = new global::GetRemotesServerRequest();
          }
          input.ReadMessage(GetRemotesServerRequest);
          break;
        }
        case 18: {
          if (getRemotesServerResponse_ == null) {
            GetRemotesServerResponse = new global::GetRemotesServerResponse();
          }
          input.ReadMessage(GetRemotesServerResponse);
          break;
        }
        case 26: {
          if (getRemoteServerRequest_ == null) {
            GetRemoteServerRequest = new global::GetRemoteServerRequest();
          }
          input.ReadMessage(GetRemoteServerRequest);
          break;
        }
        case 34: {
          if (getRemoteServerResponse_ == null) {
            GetRemoteServerResponse = new global::GetRemoteServerResponse();
          }
          input.ReadMessage(GetRemoteServerResponse);
          break;
        }
        case 42: {
          if (getRemoteLibrariesServerRequest_ == null) {
            GetRemoteLibrariesServerRequest = new global::GetRemoteLibrariesServerRequest();
          }
          input.ReadMessage(GetRemoteLibrariesServerRequest);
          break;
        }
        case 50: {
          if (getRemoteLibrariesServerResponse_ == null) {
            GetRemoteLibrariesServerResponse = new global::GetRemoteLibrariesServerResponse();
          }
          input.ReadMessage(GetRemoteLibrariesServerResponse);
          break;
        }
        case 58: {
          if (getCommandsRemoteServerRequest_ == null) {
            GetCommandsRemoteServerRequest = new global::GetCommandsRemoteServerRequest();
          }
          input.ReadMessage(GetCommandsRemoteServerRequest);
          break;
        }
        case 66: {
          if (getCommandsRemoteServerResponse_ == null) {
            GetCommandsRemoteServerResponse = new global::GetCommandsRemoteServerResponse();
          }
          input.ReadMessage(GetCommandsRemoteServerResponse);
          break;
        }
        case 74: {
          if (sendCommandRemoteServerRequest_ == null) {
            SendCommandRemoteServerRequest = new global::SendCommandRemoteServerRequest();
          }
          input.ReadMessage(SendCommandRemoteServerRequest);
          break;
        }
        case 82: {
          if (sendCommandRemoteServerResponse_ == null) {
            SendCommandRemoteServerResponse = new global::SendCommandRemoteServerResponse();
          }
          input.ReadMessage(SendCommandRemoteServerResponse);
          break;
        }
        case 90: {
          if (learnCommandRemoteServerRequest_ == null) {
            LearnCommandRemoteServerRequest = new global::LearnCommandRemoteServerRequest();
          }
          input.ReadMessage(LearnCommandRemoteServerRequest);
          break;
        }
        case 98: {
          if (learnCommandRemoteServerResponse_ == null) {
            LearnCommandRemoteServerResponse = new global::LearnCommandRemoteServerResponse();
          }
          input.ReadMessage(LearnCommandRemoteServerResponse);
          break;
        }
        case 106: {
          if (restoreCommandRemoteServerRequest_ == null) {
            RestoreCommandRemoteServerRequest = new global::RestoreCommandRemoteServerRequest();
          }
          input.ReadMessage(RestoreCommandRemoteServerRequest);
          break;
        }
        case 114: {
          if (restoreCommandRemoteServerResponse_ == null) {
            RestoreCommandRemoteServerResponse = new global::RestoreCommandRemoteServerResponse();
          }
          input.ReadMessage(RestoreCommandRemoteServerResponse);
          break;
        }
        case 122: {
          if (addRemoteServerRequest_ == null) {
            AddRemoteServerRequest = new global::AddRemoteServerRequest();
          }
          input.ReadMessage(AddRemoteServerRequest);
          break;
        }
        case 130: {
          if (addRemoteServerResponse_ == null) {
            AddRemoteServerResponse = new global::AddRemoteServerResponse();
          }
          input.ReadMessage(AddRemoteServerResponse);
          break;
        }
        case 138: {
          if (updateRemoteServerRequest_ == null) {
            UpdateRemoteServerRequest = new global::UpdateRemoteServerRequest();
          }
          input.ReadMessage(UpdateRemoteServerRequest);
          break;
        }
        case 146: {
          if (updateRemoteServerResponse_ == null) {
            UpdateRemoteServerResponse = new global::UpdateRemoteServerResponse();
          }
          input.ReadMessage(UpdateRemoteServerResponse);
          break;
        }
        case 154: {
          if (deleteRemoteServerRequest_ == null) {
            DeleteRemoteServerRequest = new global::DeleteRemoteServerRequest();
          }
          input.ReadMessage(DeleteRemoteServerRequest);
          break;
        }
        case 162: {
          if (deleteRemoteServerResponse_ == null) {
            DeleteRemoteServerResponse = new global::DeleteRemoteServerResponse();
          }
          input.ReadMessage(DeleteRemoteServerResponse);
          break;
        }
        case 170: {
          if (getRemoteSchedulesServerRequest_ == null) {
            GetRemoteSchedulesServerRequest = new global::GetRemoteSchedulesServerRequest();
          }
          input.ReadMessage(GetRemoteSchedulesServerRequest);
          break;
        }
        case 178: {
          if (getRemoteSchedulesServerResponse_ == null) {
            GetRemoteSchedulesServerResponse = new global::GetRemoteSchedulesServerResponse();
          }
          input.ReadMessage(GetRemoteSchedulesServerResponse);
          break;
        }
        case 186: {
          if (getCountRemoteScheduleServerRequest_ == null) {
            GetCountRemoteScheduleServerRequest = new global::GetCountRemoteScheduleServerRequest();
          }
          input.ReadMessage(GetCountRemoteScheduleServerRequest);
          break;
        }
        case 194: {
          if (getCountRemoteScheduleServerResponse_ == null) {
            GetCountRemoteScheduleServerResponse = new global::GetCountRemoteScheduleServerResponse();
          }
          input.ReadMessage(GetCountRemoteScheduleServerResponse);
          break;
        }
        case 202: {
          if (getRemoteScheduleServerRequest_ == null) {
            GetRemoteScheduleServerRequest = new global::GetRemoteScheduleServerRequest();
          }
          input.ReadMessage(GetRemoteScheduleServerRequest);
          break;
        }
        case 210: {
          if (getRemoteScheduleServerResponse_ == null) {
            GetRemoteScheduleServerResponse = new global::GetRemoteScheduleServerResponse();
          }
          input.ReadMessage(GetRemoteScheduleServerResponse);
          break;
        }
        case 218: {
          if (addRemoteScheduleServerRequest_ == null) {
            AddRemoteScheduleServerRequest = new global::AddRemoteScheduleServerRequest();
          }
          input.ReadMessage(AddRemoteScheduleServerRequest);
          break;
        }
        case 226: {
          if (addRemoteScheduleServerResponse_ == null) {
            AddRemoteScheduleServerResponse = new global::AddRemoteScheduleServerResponse();
          }
          input.ReadMessage(AddRemoteScheduleServerResponse);
          break;
        }
        case 234: {
          if (updateRemoteScheduleServerRequest_ == null) {
            UpdateRemoteScheduleServerRequest = new global::UpdateRemoteScheduleServerRequest();
          }
          input.ReadMessage(UpdateRemoteScheduleServerRequest);
          break;
        }
        case 242: {
          if (updateRemoteScheduleServerResponse_ == null) {
            UpdateRemoteScheduleServerResponse = new global::UpdateRemoteScheduleServerResponse();
          }
          input.ReadMessage(UpdateRemoteScheduleServerResponse);
          break;
        }
        case 250: {
          if (deleteRemoteScheduleServerRequest_ == null) {
            DeleteRemoteScheduleServerRequest = new global::DeleteRemoteScheduleServerRequest();
          }
          input.ReadMessage(DeleteRemoteScheduleServerRequest);
          break;
        }
        case 258: {
          if (deleteRemoteScheduleServerResponse_ == null) {
            DeleteRemoteScheduleServerResponse = new global::DeleteRemoteScheduleServerResponse();
          }
          input.ReadMessage(DeleteRemoteScheduleServerResponse);
          break;
        }
        case 266: {
          if (setActiveRemoteScheduleServerRequest_ == null) {
            SetActiveRemoteScheduleServerRequest = new global::SetActiveRemoteScheduleServerRequest();
          }
          input.ReadMessage(SetActiveRemoteScheduleServerRequest);
          break;
        }
        case 274: {
          if (setActiveRemoteScheduleServerResponse_ == null) {
            SetActiveRemoteScheduleServerResponse = new global::SetActiveRemoteScheduleServerResponse();
          }
          input.ReadMessage(SetActiveRemoteScheduleServerResponse);
          break;
        }
        case 282: {
          if (getRemoteMultisServerRequest_ == null) {
            GetRemoteMultisServerRequest = new global::GetRemoteMultisServerRequest();
          }
          input.ReadMessage(GetRemoteMultisServerRequest);
          break;
        }
        case 290: {
          if (getRemoteMultisServerResponse_ == null) {
            GetRemoteMultisServerResponse = new global::GetRemoteMultisServerResponse();
          }
          input.ReadMessage(GetRemoteMultisServerResponse);
          break;
        }
        case 298: {
          if (addRemoteMultiServerRequest_ == null) {
            AddRemoteMultiServerRequest = new global::AddRemoteMultiServerRequest();
          }
          input.ReadMessage(AddRemoteMultiServerRequest);
          break;
        }
        case 306: {
          if (addRemoteMultiServerResponse_ == null) {
            AddRemoteMultiServerResponse = new global::AddRemoteMultiServerResponse();
          }
          input.ReadMessage(AddRemoteMultiServerResponse);
          break;
        }
        case 314: {
          if (deleteRemoteMultiServerRequest_ == null) {
            DeleteRemoteMultiServerRequest = new global::DeleteRemoteMultiServerRequest();
          }
          input.ReadMessage(DeleteRemoteMultiServerRequest);
          break;
        }
        case 322: {
          if (deleteRemoteMultiServerResponse_ == null) {
            DeleteRemoteMultiServerResponse = new global::DeleteRemoteMultiServerResponse();
          }
          input.ReadMessage(DeleteRemoteMultiServerResponse);
          break;
        }
        case 330: {
          if (addRemoteMultiLibraryCmdServerRequest_ == null) {
            AddRemoteMultiLibraryCmdServerRequest = new global::AddRemoteMultiLibraryCmdServerRequest();
          }
          input.ReadMessage(AddRemoteMultiLibraryCmdServerRequest);
          break;
        }
        case 338: {
          if (addRemoteMultiLibraryCmdServerResponse_ == null) {
            AddRemoteMultiLibraryCmdServerResponse = new global::AddRemoteMultiLibraryCmdServerResponse();
          }
          input.ReadMessage(AddRemoteMultiLibraryCmdServerResponse);
          break;
        }
        case 346: {
          if (deleteRemoteMultiLibraryCmdServerRequest_ == null) {
            DeleteRemoteMultiLibraryCmdServerRequest = new global::DeleteRemoteMultiLibraryCmdServerRequest();
          }
          input.ReadMessage(DeleteRemoteMultiLibraryCmdServerRequest);
          break;
        }
        case 354: {
          if (deleteRemoteMultiLibraryCmdServerResponse_ == null) {
            DeleteRemoteMultiLibraryCmdServerResponse = new global::DeleteRemoteMultiLibraryCmdServerResponse();
          }
          input.ReadMessage(DeleteRemoteMultiLibraryCmdServerResponse);
          break;
        }
        case 362: {
          if (updateRemoteMultiLibraryCmdServerRequest_ == null) {
            UpdateRemoteMultiLibraryCmdServerRequest = new global::UpdateRemoteMultiLibraryCmdServerRequest();
          }
          input.ReadMessage(UpdateRemoteMultiLibraryCmdServerRequest);
          break;
        }
        case 370: {
          if (updateRemoteMultiLibraryCmdServerResponse_ == null) {
            UpdateRemoteMultiLibraryCmdServerResponse = new global::UpdateRemoteMultiLibraryCmdServerResponse();
          }
          input.ReadMessage(UpdateRemoteMultiLibraryCmdServerResponse);
          break;
        }
        case 378: {
          if (updateGroupRemoteMultiLibraryCmdServerRequest_ == null) {
            UpdateGroupRemoteMultiLibraryCmdServerRequest = new global::UpdateGroupRemoteMultiLibraryCmdServerRequest();
          }
          input.ReadMessage(UpdateGroupRemoteMultiLibraryCmdServerRequest);
          break;
        }
        case 386: {
          if (updateGroupRemoteMultiLibraryCmdServerResponse_ == null) {
            UpdateGroupRemoteMultiLibraryCmdServerResponse = new global::UpdateGroupRemoteMultiLibraryCmdServerResponse();
          }
          input.ReadMessage(UpdateGroupRemoteMultiLibraryCmdServerResponse);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Kịch bản 
/// </summary>
public sealed partial class SceneServerMessage : pb::IMessage<SceneServerMessage> {
  private static readonly pb::MessageParser<SceneServerMessage> _parser = new pb::MessageParser<SceneServerMessage>(() => new SceneServerMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SceneServerMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[318]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SceneServerMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SceneServerMessage(SceneServerMessage other) : this() {
    getScenesServerRequest_ = other.getScenesServerRequest_ != null ? other.getScenesServerRequest_.Clone() : null;
    getScenesServerResponse_ = other.getScenesServerResponse_ != null ? other.getScenesServerResponse_.Clone() : null;
    getSceneServerRequest_ = other.getSceneServerRequest_ != null ? other.getSceneServerRequest_.Clone() : null;
    getSceneServerResponse_ = other.getSceneServerResponse_ != null ? other.getSceneServerResponse_.Clone() : null;
    addSceneServerRequest_ = other.addSceneServerRequest_ != null ? other.addSceneServerRequest_.Clone() : null;
    addSceneServerResponse_ = other.addSceneServerResponse_ != null ? other.addSceneServerResponse_.Clone() : null;
    updateSceneServerRequest_ = other.updateSceneServerRequest_ != null ? other.updateSceneServerRequest_.Clone() : null;
    updateSceneServerResponse_ = other.updateSceneServerResponse_ != null ? other.updateSceneServerResponse_.Clone() : null;
    deleteSceneServerRequest_ = other.deleteSceneServerRequest_ != null ? other.deleteSceneServerRequest_.Clone() : null;
    deleteSceneServerResponse_ = other.deleteSceneServerResponse_ != null ? other.deleteSceneServerResponse_.Clone() : null;
    deleteSwitcherConditionServerRequest_ = other.deleteSwitcherConditionServerRequest_ != null ? other.deleteSwitcherConditionServerRequest_.Clone() : null;
    deleteSwitcherConditionServerResponse_ = other.deleteSwitcherConditionServerResponse_ != null ? other.deleteSwitcherConditionServerResponse_.Clone() : null;
    deleteSceneActionServerRequest_ = other.deleteSceneActionServerRequest_ != null ? other.deleteSceneActionServerRequest_.Clone() : null;
    deleteSceneActionServerResponse_ = other.deleteSceneActionServerResponse_ != null ? other.deleteSceneActionServerResponse_.Clone() : null;
    runSceneServerRequest_ = other.runSceneServerRequest_ != null ? other.runSceneServerRequest_.Clone() : null;
    runSceneServerResponse_ = other.runSceneServerResponse_ != null ? other.runSceneServerResponse_.Clone() : null;
    sceneServerRequest_ = other.sceneServerRequest_ != null ? other.sceneServerRequest_.Clone() : null;
    sceneServerResponse_ = other.sceneServerResponse_ != null ? other.sceneServerResponse_.Clone() : null;
    sceneRetryConfirmServerRequest_ = other.sceneRetryConfirmServerRequest_ != null ? other.sceneRetryConfirmServerRequest_.Clone() : null;
    sceneRetryConfirmServerResponse_ = other.sceneRetryConfirmServerResponse_ != null ? other.sceneRetryConfirmServerResponse_.Clone() : null;
    setSceneStatusServerRequest_ = other.setSceneStatusServerRequest_ != null ? other.setSceneStatusServerRequest_.Clone() : null;
    setSceneStatusServerResponse_ = other.setSceneStatusServerResponse_ != null ? other.setSceneStatusServerResponse_.Clone() : null;
    testSceneServerRequest_ = other.testSceneServerRequest_ != null ? other.testSceneServerRequest_.Clone() : null;
    testSceneServerResponse_ = other.testSceneServerResponse_ != null ? other.testSceneServerResponse_.Clone() : null;
    sceneTriggerRequest_ = other.sceneTriggerRequest_ != null ? other.sceneTriggerRequest_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SceneServerMessage Clone() {
    return new SceneServerMessage(this);
  }

  /// <summary>Field number for the "getScenesServerRequest" field.</summary>
  public const int GetScenesServerRequestFieldNumber = 1;
  private global::GetScenesServerRequest getScenesServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetScenesServerRequest GetScenesServerRequest {
    get { return getScenesServerRequest_; }
    set {
      getScenesServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getScenesServerResponse" field.</summary>
  public const int GetScenesServerResponseFieldNumber = 2;
  private global::GetScenesServerResponse getScenesServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetScenesServerResponse GetScenesServerResponse {
    get { return getScenesServerResponse_; }
    set {
      getScenesServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "getSceneServerRequest" field.</summary>
  public const int GetSceneServerRequestFieldNumber = 3;
  private global::GetSceneServerRequest getSceneServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetSceneServerRequest GetSceneServerRequest {
    get { return getSceneServerRequest_; }
    set {
      getSceneServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getSceneServerResponse" field.</summary>
  public const int GetSceneServerResponseFieldNumber = 4;
  private global::GetSceneServerResponse getSceneServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetSceneServerResponse GetSceneServerResponse {
    get { return getSceneServerResponse_; }
    set {
      getSceneServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "addSceneServerRequest" field.</summary>
  public const int AddSceneServerRequestFieldNumber = 5;
  private global::AddSceneServerRequest addSceneServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AddSceneServerRequest AddSceneServerRequest {
    get { return addSceneServerRequest_; }
    set {
      addSceneServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "addSceneServerResponse" field.</summary>
  public const int AddSceneServerResponseFieldNumber = 6;
  private global::AddSceneServerResponse addSceneServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AddSceneServerResponse AddSceneServerResponse {
    get { return addSceneServerResponse_; }
    set {
      addSceneServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "updateSceneServerRequest" field.</summary>
  public const int UpdateSceneServerRequestFieldNumber = 7;
  private global::UpdateSceneServerRequest updateSceneServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateSceneServerRequest UpdateSceneServerRequest {
    get { return updateSceneServerRequest_; }
    set {
      updateSceneServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "updateSceneServerResponse" field.</summary>
  public const int UpdateSceneServerResponseFieldNumber = 8;
  private global::UpdateSceneServerResponse updateSceneServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UpdateSceneServerResponse UpdateSceneServerResponse {
    get { return updateSceneServerResponse_; }
    set {
      updateSceneServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "deleteSceneServerRequest" field.</summary>
  public const int DeleteSceneServerRequestFieldNumber = 9;
  private global::DeleteSceneServerRequest deleteSceneServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DeleteSceneServerRequest DeleteSceneServerRequest {
    get { return deleteSceneServerRequest_; }
    set {
      deleteSceneServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "deleteSceneServerResponse" field.</summary>
  public const int DeleteSceneServerResponseFieldNumber = 10;
  private global::DeleteSceneServerResponse deleteSceneServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DeleteSceneServerResponse DeleteSceneServerResponse {
    get { return deleteSceneServerResponse_; }
    set {
      deleteSceneServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "deleteSwitcherConditionServerRequest" field.</summary>
  public const int DeleteSwitcherConditionServerRequestFieldNumber = 11;
  private global::DeleteSwitcherConditionServerRequest deleteSwitcherConditionServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DeleteSwitcherConditionServerRequest DeleteSwitcherConditionServerRequest {
    get { return deleteSwitcherConditionServerRequest_; }
    set {
      deleteSwitcherConditionServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "deleteSwitcherConditionServerResponse" field.</summary>
  public const int DeleteSwitcherConditionServerResponseFieldNumber = 12;
  private global::DeleteSwitcherConditionServerResponse deleteSwitcherConditionServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DeleteSwitcherConditionServerResponse DeleteSwitcherConditionServerResponse {
    get { return deleteSwitcherConditionServerResponse_; }
    set {
      deleteSwitcherConditionServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "deleteSceneActionServerRequest" field.</summary>
  public const int DeleteSceneActionServerRequestFieldNumber = 13;
  private global::DeleteSceneActionServerRequest deleteSceneActionServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DeleteSceneActionServerRequest DeleteSceneActionServerRequest {
    get { return deleteSceneActionServerRequest_; }
    set {
      deleteSceneActionServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "deleteSceneActionServerResponse" field.</summary>
  public const int DeleteSceneActionServerResponseFieldNumber = 14;
  private global::DeleteSceneActionServerResponse deleteSceneActionServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DeleteSceneActionServerResponse DeleteSceneActionServerResponse {
    get { return deleteSceneActionServerResponse_; }
    set {
      deleteSceneActionServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "runSceneServerRequest" field.</summary>
  public const int RunSceneServerRequestFieldNumber = 15;
  private global::RunSceneServerRequest runSceneServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RunSceneServerRequest RunSceneServerRequest {
    get { return runSceneServerRequest_; }
    set {
      runSceneServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "runSceneServerResponse" field.</summary>
  public const int RunSceneServerResponseFieldNumber = 16;
  private global::RunSceneServerResponse runSceneServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RunSceneServerResponse RunSceneServerResponse {
    get { return runSceneServerResponse_; }
    set {
      runSceneServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "sceneServerRequest" field.</summary>
  public const int SceneServerRequestFieldNumber = 17;
  private global::SceneServerRequest sceneServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SceneServerRequest SceneServerRequest {
    get { return sceneServerRequest_; }
    set {
      sceneServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "sceneServerResponse" field.</summary>
  public const int SceneServerResponseFieldNumber = 18;
  private global::SceneServerResponse sceneServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SceneServerResponse SceneServerResponse {
    get { return sceneServerResponse_; }
    set {
      sceneServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "sceneRetryConfirmServerRequest" field.</summary>
  public const int SceneRetryConfirmServerRequestFieldNumber = 19;
  private global::SceneRetryConfirmServerRequest sceneRetryConfirmServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SceneRetryConfirmServerRequest SceneRetryConfirmServerRequest {
    get { return sceneRetryConfirmServerRequest_; }
    set {
      sceneRetryConfirmServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "sceneRetryConfirmServerResponse" field.</summary>
  public const int SceneRetryConfirmServerResponseFieldNumber = 20;
  private global::SceneRetryConfirmServerResponse sceneRetryConfirmServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SceneRetryConfirmServerResponse SceneRetryConfirmServerResponse {
    get { return sceneRetryConfirmServerResponse_; }
    set {
      sceneRetryConfirmServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "setSceneStatusServerRequest" field.</summary>
  public const int SetSceneStatusServerRequestFieldNumber = 21;
  private global::SetSceneStatusServerRequest setSceneStatusServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SetSceneStatusServerRequest SetSceneStatusServerRequest {
    get { return setSceneStatusServerRequest_; }
    set {
      setSceneStatusServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "setSceneStatusServerResponse" field.</summary>
  public const int SetSceneStatusServerResponseFieldNumber = 22;
  private global::SetSceneStatusServerResponse setSceneStatusServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SetSceneStatusServerResponse SetSceneStatusServerResponse {
    get { return setSceneStatusServerResponse_; }
    set {
      setSceneStatusServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "testSceneServerRequest" field.</summary>
  public const int TestSceneServerRequestFieldNumber = 23;
  private global::TestSceneServerRequest testSceneServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::TestSceneServerRequest TestSceneServerRequest {
    get { return testSceneServerRequest_; }
    set {
      testSceneServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "testSceneServerResponse" field.</summary>
  public const int TestSceneServerResponseFieldNumber = 24;
  private global::TestSceneServerResponse testSceneServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::TestSceneServerResponse TestSceneServerResponse {
    get { return testSceneServerResponse_; }
    set {
      testSceneServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "sceneTriggerRequest" field.</summary>
  public const int SceneTriggerRequestFieldNumber = 25;
  private global::SceneTriggerClientRequest sceneTriggerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SceneTriggerClientRequest SceneTriggerRequest {
    get { return sceneTriggerRequest_; }
    set {
      sceneTriggerRequest_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SceneServerMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SceneServerMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(GetScenesServerRequest, other.GetScenesServerRequest)) return false;
    if (!object.Equals(GetScenesServerResponse, other.GetScenesServerResponse)) return false;
    if (!object.Equals(GetSceneServerRequest, other.GetSceneServerRequest)) return false;
    if (!object.Equals(GetSceneServerResponse, other.GetSceneServerResponse)) return false;
    if (!object.Equals(AddSceneServerRequest, other.AddSceneServerRequest)) return false;
    if (!object.Equals(AddSceneServerResponse, other.AddSceneServerResponse)) return false;
    if (!object.Equals(UpdateSceneServerRequest, other.UpdateSceneServerRequest)) return false;
    if (!object.Equals(UpdateSceneServerResponse, other.UpdateSceneServerResponse)) return false;
    if (!object.Equals(DeleteSceneServerRequest, other.DeleteSceneServerRequest)) return false;
    if (!object.Equals(DeleteSceneServerResponse, other.DeleteSceneServerResponse)) return false;
    if (!object.Equals(DeleteSwitcherConditionServerRequest, other.DeleteSwitcherConditionServerRequest)) return false;
    if (!object.Equals(DeleteSwitcherConditionServerResponse, other.DeleteSwitcherConditionServerResponse)) return false;
    if (!object.Equals(DeleteSceneActionServerRequest, other.DeleteSceneActionServerRequest)) return false;
    if (!object.Equals(DeleteSceneActionServerResponse, other.DeleteSceneActionServerResponse)) return false;
    if (!object.Equals(RunSceneServerRequest, other.RunSceneServerRequest)) return false;
    if (!object.Equals(RunSceneServerResponse, other.RunSceneServerResponse)) return false;
    if (!object.Equals(SceneServerRequest, other.SceneServerRequest)) return false;
    if (!object.Equals(SceneServerResponse, other.SceneServerResponse)) return false;
    if (!object.Equals(SceneRetryConfirmServerRequest, other.SceneRetryConfirmServerRequest)) return false;
    if (!object.Equals(SceneRetryConfirmServerResponse, other.SceneRetryConfirmServerResponse)) return false;
    if (!object.Equals(SetSceneStatusServerRequest, other.SetSceneStatusServerRequest)) return false;
    if (!object.Equals(SetSceneStatusServerResponse, other.SetSceneStatusServerResponse)) return false;
    if (!object.Equals(TestSceneServerRequest, other.TestSceneServerRequest)) return false;
    if (!object.Equals(TestSceneServerResponse, other.TestSceneServerResponse)) return false;
    if (!object.Equals(SceneTriggerRequest, other.SceneTriggerRequest)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (getScenesServerRequest_ != null) hash ^= GetScenesServerRequest.GetHashCode();
    if (getScenesServerResponse_ != null) hash ^= GetScenesServerResponse.GetHashCode();
    if (getSceneServerRequest_ != null) hash ^= GetSceneServerRequest.GetHashCode();
    if (getSceneServerResponse_ != null) hash ^= GetSceneServerResponse.GetHashCode();
    if (addSceneServerRequest_ != null) hash ^= AddSceneServerRequest.GetHashCode();
    if (addSceneServerResponse_ != null) hash ^= AddSceneServerResponse.GetHashCode();
    if (updateSceneServerRequest_ != null) hash ^= UpdateSceneServerRequest.GetHashCode();
    if (updateSceneServerResponse_ != null) hash ^= UpdateSceneServerResponse.GetHashCode();
    if (deleteSceneServerRequest_ != null) hash ^= DeleteSceneServerRequest.GetHashCode();
    if (deleteSceneServerResponse_ != null) hash ^= DeleteSceneServerResponse.GetHashCode();
    if (deleteSwitcherConditionServerRequest_ != null) hash ^= DeleteSwitcherConditionServerRequest.GetHashCode();
    if (deleteSwitcherConditionServerResponse_ != null) hash ^= DeleteSwitcherConditionServerResponse.GetHashCode();
    if (deleteSceneActionServerRequest_ != null) hash ^= DeleteSceneActionServerRequest.GetHashCode();
    if (deleteSceneActionServerResponse_ != null) hash ^= DeleteSceneActionServerResponse.GetHashCode();
    if (runSceneServerRequest_ != null) hash ^= RunSceneServerRequest.GetHashCode();
    if (runSceneServerResponse_ != null) hash ^= RunSceneServerResponse.GetHashCode();
    if (sceneServerRequest_ != null) hash ^= SceneServerRequest.GetHashCode();
    if (sceneServerResponse_ != null) hash ^= SceneServerResponse.GetHashCode();
    if (sceneRetryConfirmServerRequest_ != null) hash ^= SceneRetryConfirmServerRequest.GetHashCode();
    if (sceneRetryConfirmServerResponse_ != null) hash ^= SceneRetryConfirmServerResponse.GetHashCode();
    if (setSceneStatusServerRequest_ != null) hash ^= SetSceneStatusServerRequest.GetHashCode();
    if (setSceneStatusServerResponse_ != null) hash ^= SetSceneStatusServerResponse.GetHashCode();
    if (testSceneServerRequest_ != null) hash ^= TestSceneServerRequest.GetHashCode();
    if (testSceneServerResponse_ != null) hash ^= TestSceneServerResponse.GetHashCode();
    if (sceneTriggerRequest_ != null) hash ^= SceneTriggerRequest.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (getScenesServerRequest_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(GetScenesServerRequest);
    }
    if (getScenesServerResponse_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(GetScenesServerResponse);
    }
    if (getSceneServerRequest_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(GetSceneServerRequest);
    }
    if (getSceneServerResponse_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(GetSceneServerResponse);
    }
    if (addSceneServerRequest_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(AddSceneServerRequest);
    }
    if (addSceneServerResponse_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(AddSceneServerResponse);
    }
    if (updateSceneServerRequest_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(UpdateSceneServerRequest);
    }
    if (updateSceneServerResponse_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(UpdateSceneServerResponse);
    }
    if (deleteSceneServerRequest_ != null) {
      output.WriteRawTag(74);
      output.WriteMessage(DeleteSceneServerRequest);
    }
    if (deleteSceneServerResponse_ != null) {
      output.WriteRawTag(82);
      output.WriteMessage(DeleteSceneServerResponse);
    }
    if (deleteSwitcherConditionServerRequest_ != null) {
      output.WriteRawTag(90);
      output.WriteMessage(DeleteSwitcherConditionServerRequest);
    }
    if (deleteSwitcherConditionServerResponse_ != null) {
      output.WriteRawTag(98);
      output.WriteMessage(DeleteSwitcherConditionServerResponse);
    }
    if (deleteSceneActionServerRequest_ != null) {
      output.WriteRawTag(106);
      output.WriteMessage(DeleteSceneActionServerRequest);
    }
    if (deleteSceneActionServerResponse_ != null) {
      output.WriteRawTag(114);
      output.WriteMessage(DeleteSceneActionServerResponse);
    }
    if (runSceneServerRequest_ != null) {
      output.WriteRawTag(122);
      output.WriteMessage(RunSceneServerRequest);
    }
    if (runSceneServerResponse_ != null) {
      output.WriteRawTag(130, 1);
      output.WriteMessage(RunSceneServerResponse);
    }
    if (sceneServerRequest_ != null) {
      output.WriteRawTag(138, 1);
      output.WriteMessage(SceneServerRequest);
    }
    if (sceneServerResponse_ != null) {
      output.WriteRawTag(146, 1);
      output.WriteMessage(SceneServerResponse);
    }
    if (sceneRetryConfirmServerRequest_ != null) {
      output.WriteRawTag(154, 1);
      output.WriteMessage(SceneRetryConfirmServerRequest);
    }
    if (sceneRetryConfirmServerResponse_ != null) {
      output.WriteRawTag(162, 1);
      output.WriteMessage(SceneRetryConfirmServerResponse);
    }
    if (setSceneStatusServerRequest_ != null) {
      output.WriteRawTag(170, 1);
      output.WriteMessage(SetSceneStatusServerRequest);
    }
    if (setSceneStatusServerResponse_ != null) {
      output.WriteRawTag(178, 1);
      output.WriteMessage(SetSceneStatusServerResponse);
    }
    if (testSceneServerRequest_ != null) {
      output.WriteRawTag(186, 1);
      output.WriteMessage(TestSceneServerRequest);
    }
    if (testSceneServerResponse_ != null) {
      output.WriteRawTag(194, 1);
      output.WriteMessage(TestSceneServerResponse);
    }
    if (sceneTriggerRequest_ != null) {
      output.WriteRawTag(202, 1);
      output.WriteMessage(SceneTriggerRequest);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (getScenesServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetScenesServerRequest);
    }
    if (getScenesServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetScenesServerResponse);
    }
    if (getSceneServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetSceneServerRequest);
    }
    if (getSceneServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetSceneServerResponse);
    }
    if (addSceneServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddSceneServerRequest);
    }
    if (addSceneServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddSceneServerResponse);
    }
    if (updateSceneServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateSceneServerRequest);
    }
    if (updateSceneServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateSceneServerResponse);
    }
    if (deleteSceneServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeleteSceneServerRequest);
    }
    if (deleteSceneServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeleteSceneServerResponse);
    }
    if (deleteSwitcherConditionServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeleteSwitcherConditionServerRequest);
    }
    if (deleteSwitcherConditionServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeleteSwitcherConditionServerResponse);
    }
    if (deleteSceneActionServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeleteSceneActionServerRequest);
    }
    if (deleteSceneActionServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeleteSceneActionServerResponse);
    }
    if (runSceneServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(RunSceneServerRequest);
    }
    if (runSceneServerResponse_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(RunSceneServerResponse);
    }
    if (sceneServerRequest_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(SceneServerRequest);
    }
    if (sceneServerResponse_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(SceneServerResponse);
    }
    if (sceneRetryConfirmServerRequest_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(SceneRetryConfirmServerRequest);
    }
    if (sceneRetryConfirmServerResponse_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(SceneRetryConfirmServerResponse);
    }
    if (setSceneStatusServerRequest_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(SetSceneStatusServerRequest);
    }
    if (setSceneStatusServerResponse_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(SetSceneStatusServerResponse);
    }
    if (testSceneServerRequest_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(TestSceneServerRequest);
    }
    if (testSceneServerResponse_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(TestSceneServerResponse);
    }
    if (sceneTriggerRequest_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(SceneTriggerRequest);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SceneServerMessage other) {
    if (other == null) {
      return;
    }
    if (other.getScenesServerRequest_ != null) {
      if (getScenesServerRequest_ == null) {
        GetScenesServerRequest = new global::GetScenesServerRequest();
      }
      GetScenesServerRequest.MergeFrom(other.GetScenesServerRequest);
    }
    if (other.getScenesServerResponse_ != null) {
      if (getScenesServerResponse_ == null) {
        GetScenesServerResponse = new global::GetScenesServerResponse();
      }
      GetScenesServerResponse.MergeFrom(other.GetScenesServerResponse);
    }
    if (other.getSceneServerRequest_ != null) {
      if (getSceneServerRequest_ == null) {
        GetSceneServerRequest = new global::GetSceneServerRequest();
      }
      GetSceneServerRequest.MergeFrom(other.GetSceneServerRequest);
    }
    if (other.getSceneServerResponse_ != null) {
      if (getSceneServerResponse_ == null) {
        GetSceneServerResponse = new global::GetSceneServerResponse();
      }
      GetSceneServerResponse.MergeFrom(other.GetSceneServerResponse);
    }
    if (other.addSceneServerRequest_ != null) {
      if (addSceneServerRequest_ == null) {
        AddSceneServerRequest = new global::AddSceneServerRequest();
      }
      AddSceneServerRequest.MergeFrom(other.AddSceneServerRequest);
    }
    if (other.addSceneServerResponse_ != null) {
      if (addSceneServerResponse_ == null) {
        AddSceneServerResponse = new global::AddSceneServerResponse();
      }
      AddSceneServerResponse.MergeFrom(other.AddSceneServerResponse);
    }
    if (other.updateSceneServerRequest_ != null) {
      if (updateSceneServerRequest_ == null) {
        UpdateSceneServerRequest = new global::UpdateSceneServerRequest();
      }
      UpdateSceneServerRequest.MergeFrom(other.UpdateSceneServerRequest);
    }
    if (other.updateSceneServerResponse_ != null) {
      if (updateSceneServerResponse_ == null) {
        UpdateSceneServerResponse = new global::UpdateSceneServerResponse();
      }
      UpdateSceneServerResponse.MergeFrom(other.UpdateSceneServerResponse);
    }
    if (other.deleteSceneServerRequest_ != null) {
      if (deleteSceneServerRequest_ == null) {
        DeleteSceneServerRequest = new global::DeleteSceneServerRequest();
      }
      DeleteSceneServerRequest.MergeFrom(other.DeleteSceneServerRequest);
    }
    if (other.deleteSceneServerResponse_ != null) {
      if (deleteSceneServerResponse_ == null) {
        DeleteSceneServerResponse = new global::DeleteSceneServerResponse();
      }
      DeleteSceneServerResponse.MergeFrom(other.DeleteSceneServerResponse);
    }
    if (other.deleteSwitcherConditionServerRequest_ != null) {
      if (deleteSwitcherConditionServerRequest_ == null) {
        DeleteSwitcherConditionServerRequest = new global::DeleteSwitcherConditionServerRequest();
      }
      DeleteSwitcherConditionServerRequest.MergeFrom(other.DeleteSwitcherConditionServerRequest);
    }
    if (other.deleteSwitcherConditionServerResponse_ != null) {
      if (deleteSwitcherConditionServerResponse_ == null) {
        DeleteSwitcherConditionServerResponse = new global::DeleteSwitcherConditionServerResponse();
      }
      DeleteSwitcherConditionServerResponse.MergeFrom(other.DeleteSwitcherConditionServerResponse);
    }
    if (other.deleteSceneActionServerRequest_ != null) {
      if (deleteSceneActionServerRequest_ == null) {
        DeleteSceneActionServerRequest = new global::DeleteSceneActionServerRequest();
      }
      DeleteSceneActionServerRequest.MergeFrom(other.DeleteSceneActionServerRequest);
    }
    if (other.deleteSceneActionServerResponse_ != null) {
      if (deleteSceneActionServerResponse_ == null) {
        DeleteSceneActionServerResponse = new global::DeleteSceneActionServerResponse();
      }
      DeleteSceneActionServerResponse.MergeFrom(other.DeleteSceneActionServerResponse);
    }
    if (other.runSceneServerRequest_ != null) {
      if (runSceneServerRequest_ == null) {
        RunSceneServerRequest = new global::RunSceneServerRequest();
      }
      RunSceneServerRequest.MergeFrom(other.RunSceneServerRequest);
    }
    if (other.runSceneServerResponse_ != null) {
      if (runSceneServerResponse_ == null) {
        RunSceneServerResponse = new global::RunSceneServerResponse();
      }
      RunSceneServerResponse.MergeFrom(other.RunSceneServerResponse);
    }
    if (other.sceneServerRequest_ != null) {
      if (sceneServerRequest_ == null) {
        SceneServerRequest = new global::SceneServerRequest();
      }
      SceneServerRequest.MergeFrom(other.SceneServerRequest);
    }
    if (other.sceneServerResponse_ != null) {
      if (sceneServerResponse_ == null) {
        SceneServerResponse = new global::SceneServerResponse();
      }
      SceneServerResponse.MergeFrom(other.SceneServerResponse);
    }
    if (other.sceneRetryConfirmServerRequest_ != null) {
      if (sceneRetryConfirmServerRequest_ == null) {
        SceneRetryConfirmServerRequest = new global::SceneRetryConfirmServerRequest();
      }
      SceneRetryConfirmServerRequest.MergeFrom(other.SceneRetryConfirmServerRequest);
    }
    if (other.sceneRetryConfirmServerResponse_ != null) {
      if (sceneRetryConfirmServerResponse_ == null) {
        SceneRetryConfirmServerResponse = new global::SceneRetryConfirmServerResponse();
      }
      SceneRetryConfirmServerResponse.MergeFrom(other.SceneRetryConfirmServerResponse);
    }
    if (other.setSceneStatusServerRequest_ != null) {
      if (setSceneStatusServerRequest_ == null) {
        SetSceneStatusServerRequest = new global::SetSceneStatusServerRequest();
      }
      SetSceneStatusServerRequest.MergeFrom(other.SetSceneStatusServerRequest);
    }
    if (other.setSceneStatusServerResponse_ != null) {
      if (setSceneStatusServerResponse_ == null) {
        SetSceneStatusServerResponse = new global::SetSceneStatusServerResponse();
      }
      SetSceneStatusServerResponse.MergeFrom(other.SetSceneStatusServerResponse);
    }
    if (other.testSceneServerRequest_ != null) {
      if (testSceneServerRequest_ == null) {
        TestSceneServerRequest = new global::TestSceneServerRequest();
      }
      TestSceneServerRequest.MergeFrom(other.TestSceneServerRequest);
    }
    if (other.testSceneServerResponse_ != null) {
      if (testSceneServerResponse_ == null) {
        TestSceneServerResponse = new global::TestSceneServerResponse();
      }
      TestSceneServerResponse.MergeFrom(other.TestSceneServerResponse);
    }
    if (other.sceneTriggerRequest_ != null) {
      if (sceneTriggerRequest_ == null) {
        SceneTriggerRequest = new global::SceneTriggerClientRequest();
      }
      SceneTriggerRequest.MergeFrom(other.SceneTriggerRequest);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (getScenesServerRequest_ == null) {
            GetScenesServerRequest = new global::GetScenesServerRequest();
          }
          input.ReadMessage(GetScenesServerRequest);
          break;
        }
        case 18: {
          if (getScenesServerResponse_ == null) {
            GetScenesServerResponse = new global::GetScenesServerResponse();
          }
          input.ReadMessage(GetScenesServerResponse);
          break;
        }
        case 26: {
          if (getSceneServerRequest_ == null) {
            GetSceneServerRequest = new global::GetSceneServerRequest();
          }
          input.ReadMessage(GetSceneServerRequest);
          break;
        }
        case 34: {
          if (getSceneServerResponse_ == null) {
            GetSceneServerResponse = new global::GetSceneServerResponse();
          }
          input.ReadMessage(GetSceneServerResponse);
          break;
        }
        case 42: {
          if (addSceneServerRequest_ == null) {
            AddSceneServerRequest = new global::AddSceneServerRequest();
          }
          input.ReadMessage(AddSceneServerRequest);
          break;
        }
        case 50: {
          if (addSceneServerResponse_ == null) {
            AddSceneServerResponse = new global::AddSceneServerResponse();
          }
          input.ReadMessage(AddSceneServerResponse);
          break;
        }
        case 58: {
          if (updateSceneServerRequest_ == null) {
            UpdateSceneServerRequest = new global::UpdateSceneServerRequest();
          }
          input.ReadMessage(UpdateSceneServerRequest);
          break;
        }
        case 66: {
          if (updateSceneServerResponse_ == null) {
            UpdateSceneServerResponse = new global::UpdateSceneServerResponse();
          }
          input.ReadMessage(UpdateSceneServerResponse);
          break;
        }
        case 74: {
          if (deleteSceneServerRequest_ == null) {
            DeleteSceneServerRequest = new global::DeleteSceneServerRequest();
          }
          input.ReadMessage(DeleteSceneServerRequest);
          break;
        }
        case 82: {
          if (deleteSceneServerResponse_ == null) {
            DeleteSceneServerResponse = new global::DeleteSceneServerResponse();
          }
          input.ReadMessage(DeleteSceneServerResponse);
          break;
        }
        case 90: {
          if (deleteSwitcherConditionServerRequest_ == null) {
            DeleteSwitcherConditionServerRequest = new global::DeleteSwitcherConditionServerRequest();
          }
          input.ReadMessage(DeleteSwitcherConditionServerRequest);
          break;
        }
        case 98: {
          if (deleteSwitcherConditionServerResponse_ == null) {
            DeleteSwitcherConditionServerResponse = new global::DeleteSwitcherConditionServerResponse();
          }
          input.ReadMessage(DeleteSwitcherConditionServerResponse);
          break;
        }
        case 106: {
          if (deleteSceneActionServerRequest_ == null) {
            DeleteSceneActionServerRequest = new global::DeleteSceneActionServerRequest();
          }
          input.ReadMessage(DeleteSceneActionServerRequest);
          break;
        }
        case 114: {
          if (deleteSceneActionServerResponse_ == null) {
            DeleteSceneActionServerResponse = new global::DeleteSceneActionServerResponse();
          }
          input.ReadMessage(DeleteSceneActionServerResponse);
          break;
        }
        case 122: {
          if (runSceneServerRequest_ == null) {
            RunSceneServerRequest = new global::RunSceneServerRequest();
          }
          input.ReadMessage(RunSceneServerRequest);
          break;
        }
        case 130: {
          if (runSceneServerResponse_ == null) {
            RunSceneServerResponse = new global::RunSceneServerResponse();
          }
          input.ReadMessage(RunSceneServerResponse);
          break;
        }
        case 138: {
          if (sceneServerRequest_ == null) {
            SceneServerRequest = new global::SceneServerRequest();
          }
          input.ReadMessage(SceneServerRequest);
          break;
        }
        case 146: {
          if (sceneServerResponse_ == null) {
            SceneServerResponse = new global::SceneServerResponse();
          }
          input.ReadMessage(SceneServerResponse);
          break;
        }
        case 154: {
          if (sceneRetryConfirmServerRequest_ == null) {
            SceneRetryConfirmServerRequest = new global::SceneRetryConfirmServerRequest();
          }
          input.ReadMessage(SceneRetryConfirmServerRequest);
          break;
        }
        case 162: {
          if (sceneRetryConfirmServerResponse_ == null) {
            SceneRetryConfirmServerResponse = new global::SceneRetryConfirmServerResponse();
          }
          input.ReadMessage(SceneRetryConfirmServerResponse);
          break;
        }
        case 170: {
          if (setSceneStatusServerRequest_ == null) {
            SetSceneStatusServerRequest = new global::SetSceneStatusServerRequest();
          }
          input.ReadMessage(SetSceneStatusServerRequest);
          break;
        }
        case 178: {
          if (setSceneStatusServerResponse_ == null) {
            SetSceneStatusServerResponse = new global::SetSceneStatusServerResponse();
          }
          input.ReadMessage(SetSceneStatusServerResponse);
          break;
        }
        case 186: {
          if (testSceneServerRequest_ == null) {
            TestSceneServerRequest = new global::TestSceneServerRequest();
          }
          input.ReadMessage(TestSceneServerRequest);
          break;
        }
        case 194: {
          if (testSceneServerResponse_ == null) {
            TestSceneServerResponse = new global::TestSceneServerResponse();
          }
          input.ReadMessage(TestSceneServerResponse);
          break;
        }
        case 202: {
          if (sceneTriggerRequest_ == null) {
            SceneTriggerRequest = new global::SceneTriggerClientRequest();
          }
          input.ReadMessage(SceneTriggerRequest);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Các màn hình tổng hợp 
/// </summary>
public sealed partial class GeneralTabServerMessage : pb::IMessage<GeneralTabServerMessage> {
  private static readonly pb::MessageParser<GeneralTabServerMessage> _parser = new pb::MessageParser<GeneralTabServerMessage>(() => new GeneralTabServerMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GeneralTabServerMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[319]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GeneralTabServerMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GeneralTabServerMessage(GeneralTabServerMessage other) : this() {
    getHomeTabServerRequest_ = other.getHomeTabServerRequest_ != null ? other.getHomeTabServerRequest_.Clone() : null;
    getHomeTabServerResponse_ = other.getHomeTabServerResponse_ != null ? other.getHomeTabServerResponse_.Clone() : null;
    getElectricTabServerRequest_ = other.getElectricTabServerRequest_ != null ? other.getElectricTabServerRequest_.Clone() : null;
    getElectricTabServerResponse_ = other.getElectricTabServerResponse_ != null ? other.getElectricTabServerResponse_.Clone() : null;
    getSwitcherTabServerRequest_ = other.getSwitcherTabServerRequest_ != null ? other.getSwitcherTabServerRequest_.Clone() : null;
    getSwitcherTabServerResponse_ = other.getSwitcherTabServerResponse_ != null ? other.getSwitcherTabServerResponse_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GeneralTabServerMessage Clone() {
    return new GeneralTabServerMessage(this);
  }

  /// <summary>Field number for the "getHomeTabServerRequest" field.</summary>
  public const int GetHomeTabServerRequestFieldNumber = 1;
  private global::GetHomeTabServerRequest getHomeTabServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetHomeTabServerRequest GetHomeTabServerRequest {
    get { return getHomeTabServerRequest_; }
    set {
      getHomeTabServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getHomeTabServerResponse" field.</summary>
  public const int GetHomeTabServerResponseFieldNumber = 2;
  private global::GetHomeTabServerResponse getHomeTabServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetHomeTabServerResponse GetHomeTabServerResponse {
    get { return getHomeTabServerResponse_; }
    set {
      getHomeTabServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "getElectricTabServerRequest" field.</summary>
  public const int GetElectricTabServerRequestFieldNumber = 3;
  private global::GetElectricTabServerRequest getElectricTabServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetElectricTabServerRequest GetElectricTabServerRequest {
    get { return getElectricTabServerRequest_; }
    set {
      getElectricTabServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getElectricTabServerResponse" field.</summary>
  public const int GetElectricTabServerResponseFieldNumber = 4;
  private global::GetElectricTabServerResponse getElectricTabServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetElectricTabServerResponse GetElectricTabServerResponse {
    get { return getElectricTabServerResponse_; }
    set {
      getElectricTabServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "getSwitcherTabServerRequest" field.</summary>
  public const int GetSwitcherTabServerRequestFieldNumber = 5;
  private global::GetSwitcherTabServerRequest getSwitcherTabServerRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetSwitcherTabServerRequest GetSwitcherTabServerRequest {
    get { return getSwitcherTabServerRequest_; }
    set {
      getSwitcherTabServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "getSwitcherTabServerResponse" field.</summary>
  public const int GetSwitcherTabServerResponseFieldNumber = 6;
  private global::GetSwitcherTabServerResponse getSwitcherTabServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GetSwitcherTabServerResponse GetSwitcherTabServerResponse {
    get { return getSwitcherTabServerResponse_; }
    set {
      getSwitcherTabServerResponse_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GeneralTabServerMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GeneralTabServerMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(GetHomeTabServerRequest, other.GetHomeTabServerRequest)) return false;
    if (!object.Equals(GetHomeTabServerResponse, other.GetHomeTabServerResponse)) return false;
    if (!object.Equals(GetElectricTabServerRequest, other.GetElectricTabServerRequest)) return false;
    if (!object.Equals(GetElectricTabServerResponse, other.GetElectricTabServerResponse)) return false;
    if (!object.Equals(GetSwitcherTabServerRequest, other.GetSwitcherTabServerRequest)) return false;
    if (!object.Equals(GetSwitcherTabServerResponse, other.GetSwitcherTabServerResponse)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (getHomeTabServerRequest_ != null) hash ^= GetHomeTabServerRequest.GetHashCode();
    if (getHomeTabServerResponse_ != null) hash ^= GetHomeTabServerResponse.GetHashCode();
    if (getElectricTabServerRequest_ != null) hash ^= GetElectricTabServerRequest.GetHashCode();
    if (getElectricTabServerResponse_ != null) hash ^= GetElectricTabServerResponse.GetHashCode();
    if (getSwitcherTabServerRequest_ != null) hash ^= GetSwitcherTabServerRequest.GetHashCode();
    if (getSwitcherTabServerResponse_ != null) hash ^= GetSwitcherTabServerResponse.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (getHomeTabServerRequest_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(GetHomeTabServerRequest);
    }
    if (getHomeTabServerResponse_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(GetHomeTabServerResponse);
    }
    if (getElectricTabServerRequest_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(GetElectricTabServerRequest);
    }
    if (getElectricTabServerResponse_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(GetElectricTabServerResponse);
    }
    if (getSwitcherTabServerRequest_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(GetSwitcherTabServerRequest);
    }
    if (getSwitcherTabServerResponse_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(GetSwitcherTabServerResponse);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (getHomeTabServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetHomeTabServerRequest);
    }
    if (getHomeTabServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetHomeTabServerResponse);
    }
    if (getElectricTabServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetElectricTabServerRequest);
    }
    if (getElectricTabServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetElectricTabServerResponse);
    }
    if (getSwitcherTabServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetSwitcherTabServerRequest);
    }
    if (getSwitcherTabServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetSwitcherTabServerResponse);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GeneralTabServerMessage other) {
    if (other == null) {
      return;
    }
    if (other.getHomeTabServerRequest_ != null) {
      if (getHomeTabServerRequest_ == null) {
        GetHomeTabServerRequest = new global::GetHomeTabServerRequest();
      }
      GetHomeTabServerRequest.MergeFrom(other.GetHomeTabServerRequest);
    }
    if (other.getHomeTabServerResponse_ != null) {
      if (getHomeTabServerResponse_ == null) {
        GetHomeTabServerResponse = new global::GetHomeTabServerResponse();
      }
      GetHomeTabServerResponse.MergeFrom(other.GetHomeTabServerResponse);
    }
    if (other.getElectricTabServerRequest_ != null) {
      if (getElectricTabServerRequest_ == null) {
        GetElectricTabServerRequest = new global::GetElectricTabServerRequest();
      }
      GetElectricTabServerRequest.MergeFrom(other.GetElectricTabServerRequest);
    }
    if (other.getElectricTabServerResponse_ != null) {
      if (getElectricTabServerResponse_ == null) {
        GetElectricTabServerResponse = new global::GetElectricTabServerResponse();
      }
      GetElectricTabServerResponse.MergeFrom(other.GetElectricTabServerResponse);
    }
    if (other.getSwitcherTabServerRequest_ != null) {
      if (getSwitcherTabServerRequest_ == null) {
        GetSwitcherTabServerRequest = new global::GetSwitcherTabServerRequest();
      }
      GetSwitcherTabServerRequest.MergeFrom(other.GetSwitcherTabServerRequest);
    }
    if (other.getSwitcherTabServerResponse_ != null) {
      if (getSwitcherTabServerResponse_ == null) {
        GetSwitcherTabServerResponse = new global::GetSwitcherTabServerResponse();
      }
      GetSwitcherTabServerResponse.MergeFrom(other.GetSwitcherTabServerResponse);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (getHomeTabServerRequest_ == null) {
            GetHomeTabServerRequest = new global::GetHomeTabServerRequest();
          }
          input.ReadMessage(GetHomeTabServerRequest);
          break;
        }
        case 18: {
          if (getHomeTabServerResponse_ == null) {
            GetHomeTabServerResponse = new global::GetHomeTabServerResponse();
          }
          input.ReadMessage(GetHomeTabServerResponse);
          break;
        }
        case 26: {
          if (getElectricTabServerRequest_ == null) {
            GetElectricTabServerRequest = new global::GetElectricTabServerRequest();
          }
          input.ReadMessage(GetElectricTabServerRequest);
          break;
        }
        case 34: {
          if (getElectricTabServerResponse_ == null) {
            GetElectricTabServerResponse = new global::GetElectricTabServerResponse();
          }
          input.ReadMessage(GetElectricTabServerResponse);
          break;
        }
        case 42: {
          if (getSwitcherTabServerRequest_ == null) {
            GetSwitcherTabServerRequest = new global::GetSwitcherTabServerRequest();
          }
          input.ReadMessage(GetSwitcherTabServerRequest);
          break;
        }
        case 50: {
          if (getSwitcherTabServerResponse_ == null) {
            GetSwitcherTabServerResponse = new global::GetSwitcherTabServerResponse();
          }
          input.ReadMessage(GetSwitcherTabServerResponse);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Events runtime 
/// </summary>
public sealed partial class OnChangedServerMessage : pb::IMessage<OnChangedServerMessage> {
  private static readonly pb::MessageParser<OnChangedServerMessage> _parser = new pb::MessageParser<OnChangedServerMessage>(() => new OnChangedServerMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<OnChangedServerMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[320]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public OnChangedServerMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public OnChangedServerMessage(OnChangedServerMessage other) : this() {
    switcherOnChangedServerResponse_ = other.switcherOnChangedServerResponse_ != null ? other.switcherOnChangedServerResponse_.Clone() : null;
    curtainSwitcherOnChangedServerResponse_ = other.curtainSwitcherOnChangedServerResponse_ != null ? other.curtainSwitcherOnChangedServerResponse_.Clone() : null;
    airConditionerOnChangedServerResponse_ = other.airConditionerOnChangedServerResponse_ != null ? other.airConditionerOnChangedServerResponse_.Clone() : null;
    remoteOnChangedServerResponse_ = other.remoteOnChangedServerResponse_ != null ? other.remoteOnChangedServerResponse_.Clone() : null;
    meterOnChangedServerResponse_ = other.meterOnChangedServerResponse_ != null ? other.meterOnChangedServerResponse_.Clone() : null;
    deviceOnChangedDeviceServerResponse_ = other.deviceOnChangedDeviceServerResponse_ != null ? other.deviceOnChangedDeviceServerResponse_.Clone() : null;
    progressUpdateFirmwareOnChangedDeviceServerResponse_ = other.progressUpdateFirmwareOnChangedDeviceServerResponse_ != null ? other.progressUpdateFirmwareOnChangedDeviceServerResponse_.Clone() : null;
    downloadFirmwareOnChangedDeviceServerResponse_ = other.downloadFirmwareOnChangedDeviceServerResponse_ != null ? other.downloadFirmwareOnChangedDeviceServerResponse_.Clone() : null;
    motionOnChangedServerResponse_ = other.motionOnChangedServerResponse_ != null ? other.motionOnChangedServerResponse_.Clone() : null;
    sceneOnChangedServerResponse_ = other.sceneOnChangedServerResponse_ != null ? other.sceneOnChangedServerResponse_.Clone() : null;
    homekitOnChangedServerResponse_ = other.homekitOnChangedServerResponse_ != null ? other.homekitOnChangedServerResponse_.Clone() : null;
    buttonOnChangedServerResponse_ = other.buttonOnChangedServerResponse_ != null ? other.buttonOnChangedServerResponse_.Clone() : null;
    groupControlOnChangedServerResponse_ = other.groupControlOnChangedServerResponse_ != null ? other.groupControlOnChangedServerResponse_.Clone() : null;
    ledDriverOnChangedServerResponse_ = other.ledDriverOnChangedServerResponse_ != null ? other.ledDriverOnChangedServerResponse_.Clone() : null;
    environmentSensorOnChangedServerResponse_ = other.environmentSensorOnChangedServerResponse_ != null ? other.environmentSensorOnChangedServerResponse_.Clone() : null;
    smartPlugOnChangedServerResponse_ = other.smartPlugOnChangedServerResponse_ != null ? other.smartPlugOnChangedServerResponse_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public OnChangedServerMessage Clone() {
    return new OnChangedServerMessage(this);
  }

  /// <summary>Field number for the "switcherOnChangedServerResponse" field.</summary>
  public const int SwitcherOnChangedServerResponseFieldNumber = 1;
  private global::SwitcherOnChangedServerResponse switcherOnChangedServerResponse_;
  /// <summary>
  /// Công tắc thay đổi On/Off
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SwitcherOnChangedServerResponse SwitcherOnChangedServerResponse {
    get { return switcherOnChangedServerResponse_; }
    set {
      switcherOnChangedServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "curtainSwitcherOnChangedServerResponse" field.</summary>
  public const int CurtainSwitcherOnChangedServerResponseFieldNumber = 2;
  private global::CurtainSwitcherOnChangedServerResponse curtainSwitcherOnChangedServerResponse_;
  /// <summary>
  /// Rèm cửa
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::CurtainSwitcherOnChangedServerResponse CurtainSwitcherOnChangedServerResponse {
    get { return curtainSwitcherOnChangedServerResponse_; }
    set {
      curtainSwitcherOnChangedServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "airConditionerOnChangedServerResponse" field.</summary>
  public const int AirConditionerOnChangedServerResponseFieldNumber = 3;
  private global::AirConditionerOnChangedServerResponse airConditionerOnChangedServerResponse_;
  /// <summary>
  /// Điều hòa thay đổi trạng thái điều khiển State
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AirConditionerOnChangedServerResponse AirConditionerOnChangedServerResponse {
    get { return airConditionerOnChangedServerResponse_; }
    set {
      airConditionerOnChangedServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "remoteOnChangedServerResponse" field.</summary>
  public const int RemoteOnChangedServerResponseFieldNumber = 4;
  private global::RemoteOnChangedServerResponse remoteOnChangedServerResponse_;
  /// <summary>
  /// Remote chung để phản hồi kết quả thực hiện lệnh
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RemoteOnChangedServerResponse RemoteOnChangedServerResponse {
    get { return remoteOnChangedServerResponse_; }
    set {
      remoteOnChangedServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "meterOnChangedServerResponse" field.</summary>
  public const int MeterOnChangedServerResponseFieldNumber = 5;
  private global::MeterOnChangedServerResponse meterOnChangedServerResponse_;
  /// <summary>
  /// thành công hay thất bị, ngoại lệ
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MeterOnChangedServerResponse MeterOnChangedServerResponse {
    get { return meterOnChangedServerResponse_; }
    set {
      meterOnChangedServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "deviceOnChangedDeviceServerResponse" field.</summary>
  public const int DeviceOnChangedDeviceServerResponseFieldNumber = 6;
  private global::DeviceOnChangedDeviceServerResponse deviceOnChangedDeviceServerResponse_;
  /// <summary>
  /// Thiết bị thay đổi kết nối
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DeviceOnChangedDeviceServerResponse DeviceOnChangedDeviceServerResponse {
    get { return deviceOnChangedDeviceServerResponse_; }
    set {
      deviceOnChangedDeviceServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "progressUpdateFirmwareOnChangedDeviceServerResponse" field.</summary>
  public const int ProgressUpdateFirmwareOnChangedDeviceServerResponseFieldNumber = 7;
  private global::ProgressUpdateFirmwareOnChangedDeviceServerResponse progressUpdateFirmwareOnChangedDeviceServerResponse_;
  /// <summary>
  /// [Deprecated]
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ProgressUpdateFirmwareOnChangedDeviceServerResponse ProgressUpdateFirmwareOnChangedDeviceServerResponse {
    get { return progressUpdateFirmwareOnChangedDeviceServerResponse_; }
    set {
      progressUpdateFirmwareOnChangedDeviceServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "downloadFirmwareOnChangedDeviceServerResponse" field.</summary>
  public const int DownloadFirmwareOnChangedDeviceServerResponseFieldNumber = 8;
  private global::DownloadFirmwareOnChangedDeviceServerResponse downloadFirmwareOnChangedDeviceServerResponse_;
  /// <summary>
  /// [Deprecated]
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DownloadFirmwareOnChangedDeviceServerResponse DownloadFirmwareOnChangedDeviceServerResponse {
    get { return downloadFirmwareOnChangedDeviceServerResponse_; }
    set {
      downloadFirmwareOnChangedDeviceServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "motionOnChangedServerResponse" field.</summary>
  public const int MotionOnChangedServerResponseFieldNumber = 9;
  private global::MotionOnChangedServerResponse motionOnChangedServerResponse_;
  /// <summary>
  /// Thiết bị chuyển động
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MotionOnChangedServerResponse MotionOnChangedServerResponse {
    get { return motionOnChangedServerResponse_; }
    set {
      motionOnChangedServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "sceneOnChangedServerResponse" field.</summary>
  public const int SceneOnChangedServerResponseFieldNumber = 10;
  private global::SceneOnChangedServerResponse sceneOnChangedServerResponse_;
  /// <summary>
  /// Kịch bản xác nhận runtime
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SceneOnChangedServerResponse SceneOnChangedServerResponse {
    get { return sceneOnChangedServerResponse_; }
    set {
      sceneOnChangedServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "homekitOnChangedServerResponse" field.</summary>
  public const int HomekitOnChangedServerResponseFieldNumber = 11;
  private global::HomekitOnChangedServerResponse homekitOnChangedServerResponse_;
  /// <summary>
  /// Thiết bị homekit
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::HomekitOnChangedServerResponse HomekitOnChangedServerResponse {
    get { return homekitOnChangedServerResponse_; }
    set {
      homekitOnChangedServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "buttonOnChangedServerResponse" field.</summary>
  public const int ButtonOnChangedServerResponseFieldNumber = 12;
  private global::ButtonOnChangedServerResponse buttonOnChangedServerResponse_;
  /// <summary>
  /// Nút nhấn
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ButtonOnChangedServerResponse ButtonOnChangedServerResponse {
    get { return buttonOnChangedServerResponse_; }
    set {
      buttonOnChangedServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "groupControlOnChangedServerResponse" field.</summary>
  public const int GroupControlOnChangedServerResponseFieldNumber = 13;
  private global::GroupControlOnChangedServerResponse groupControlOnChangedServerResponse_;
  /// <summary>
  /// Thiết bị nhóm
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GroupControlOnChangedServerResponse GroupControlOnChangedServerResponse {
    get { return groupControlOnChangedServerResponse_; }
    set {
      groupControlOnChangedServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "ledDriverOnChangedServerResponse" field.</summary>
  public const int LedDriverOnChangedServerResponseFieldNumber = 14;
  private global::LedDriverOnChangedServerResponse ledDriverOnChangedServerResponse_;
  /// <summary>
  /// Onchange thiết bị Led Driver
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::LedDriverOnChangedServerResponse LedDriverOnChangedServerResponse {
    get { return ledDriverOnChangedServerResponse_; }
    set {
      ledDriverOnChangedServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "environmentSensorOnChangedServerResponse" field.</summary>
  public const int EnvironmentSensorOnChangedServerResponseFieldNumber = 15;
  private global::EnvironmentSensorOnChangedServerResponse environmentSensorOnChangedServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::EnvironmentSensorOnChangedServerResponse EnvironmentSensorOnChangedServerResponse {
    get { return environmentSensorOnChangedServerResponse_; }
    set {
      environmentSensorOnChangedServerResponse_ = value;
    }
  }

  /// <summary>Field number for the "smartPlugOnChangedServerResponse" field.</summary>
  public const int SmartPlugOnChangedServerResponseFieldNumber = 16;
  private global::SmartPlugOnChangedServerResponse smartPlugOnChangedServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SmartPlugOnChangedServerResponse SmartPlugOnChangedServerResponse {
    get { return smartPlugOnChangedServerResponse_; }
    set {
      smartPlugOnChangedServerResponse_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as OnChangedServerMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(OnChangedServerMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(SwitcherOnChangedServerResponse, other.SwitcherOnChangedServerResponse)) return false;
    if (!object.Equals(CurtainSwitcherOnChangedServerResponse, other.CurtainSwitcherOnChangedServerResponse)) return false;
    if (!object.Equals(AirConditionerOnChangedServerResponse, other.AirConditionerOnChangedServerResponse)) return false;
    if (!object.Equals(RemoteOnChangedServerResponse, other.RemoteOnChangedServerResponse)) return false;
    if (!object.Equals(MeterOnChangedServerResponse, other.MeterOnChangedServerResponse)) return false;
    if (!object.Equals(DeviceOnChangedDeviceServerResponse, other.DeviceOnChangedDeviceServerResponse)) return false;
    if (!object.Equals(ProgressUpdateFirmwareOnChangedDeviceServerResponse, other.ProgressUpdateFirmwareOnChangedDeviceServerResponse)) return false;
    if (!object.Equals(DownloadFirmwareOnChangedDeviceServerResponse, other.DownloadFirmwareOnChangedDeviceServerResponse)) return false;
    if (!object.Equals(MotionOnChangedServerResponse, other.MotionOnChangedServerResponse)) return false;
    if (!object.Equals(SceneOnChangedServerResponse, other.SceneOnChangedServerResponse)) return false;
    if (!object.Equals(HomekitOnChangedServerResponse, other.HomekitOnChangedServerResponse)) return false;
    if (!object.Equals(ButtonOnChangedServerResponse, other.ButtonOnChangedServerResponse)) return false;
    if (!object.Equals(GroupControlOnChangedServerResponse, other.GroupControlOnChangedServerResponse)) return false;
    if (!object.Equals(LedDriverOnChangedServerResponse, other.LedDriverOnChangedServerResponse)) return false;
    if (!object.Equals(EnvironmentSensorOnChangedServerResponse, other.EnvironmentSensorOnChangedServerResponse)) return false;
    if (!object.Equals(SmartPlugOnChangedServerResponse, other.SmartPlugOnChangedServerResponse)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (switcherOnChangedServerResponse_ != null) hash ^= SwitcherOnChangedServerResponse.GetHashCode();
    if (curtainSwitcherOnChangedServerResponse_ != null) hash ^= CurtainSwitcherOnChangedServerResponse.GetHashCode();
    if (airConditionerOnChangedServerResponse_ != null) hash ^= AirConditionerOnChangedServerResponse.GetHashCode();
    if (remoteOnChangedServerResponse_ != null) hash ^= RemoteOnChangedServerResponse.GetHashCode();
    if (meterOnChangedServerResponse_ != null) hash ^= MeterOnChangedServerResponse.GetHashCode();
    if (deviceOnChangedDeviceServerResponse_ != null) hash ^= DeviceOnChangedDeviceServerResponse.GetHashCode();
    if (progressUpdateFirmwareOnChangedDeviceServerResponse_ != null) hash ^= ProgressUpdateFirmwareOnChangedDeviceServerResponse.GetHashCode();
    if (downloadFirmwareOnChangedDeviceServerResponse_ != null) hash ^= DownloadFirmwareOnChangedDeviceServerResponse.GetHashCode();
    if (motionOnChangedServerResponse_ != null) hash ^= MotionOnChangedServerResponse.GetHashCode();
    if (sceneOnChangedServerResponse_ != null) hash ^= SceneOnChangedServerResponse.GetHashCode();
    if (homekitOnChangedServerResponse_ != null) hash ^= HomekitOnChangedServerResponse.GetHashCode();
    if (buttonOnChangedServerResponse_ != null) hash ^= ButtonOnChangedServerResponse.GetHashCode();
    if (groupControlOnChangedServerResponse_ != null) hash ^= GroupControlOnChangedServerResponse.GetHashCode();
    if (ledDriverOnChangedServerResponse_ != null) hash ^= LedDriverOnChangedServerResponse.GetHashCode();
    if (environmentSensorOnChangedServerResponse_ != null) hash ^= EnvironmentSensorOnChangedServerResponse.GetHashCode();
    if (smartPlugOnChangedServerResponse_ != null) hash ^= SmartPlugOnChangedServerResponse.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (switcherOnChangedServerResponse_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(SwitcherOnChangedServerResponse);
    }
    if (curtainSwitcherOnChangedServerResponse_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(CurtainSwitcherOnChangedServerResponse);
    }
    if (airConditionerOnChangedServerResponse_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(AirConditionerOnChangedServerResponse);
    }
    if (remoteOnChangedServerResponse_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(RemoteOnChangedServerResponse);
    }
    if (meterOnChangedServerResponse_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(MeterOnChangedServerResponse);
    }
    if (deviceOnChangedDeviceServerResponse_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(DeviceOnChangedDeviceServerResponse);
    }
    if (progressUpdateFirmwareOnChangedDeviceServerResponse_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(ProgressUpdateFirmwareOnChangedDeviceServerResponse);
    }
    if (downloadFirmwareOnChangedDeviceServerResponse_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(DownloadFirmwareOnChangedDeviceServerResponse);
    }
    if (motionOnChangedServerResponse_ != null) {
      output.WriteRawTag(74);
      output.WriteMessage(MotionOnChangedServerResponse);
    }
    if (sceneOnChangedServerResponse_ != null) {
      output.WriteRawTag(82);
      output.WriteMessage(SceneOnChangedServerResponse);
    }
    if (homekitOnChangedServerResponse_ != null) {
      output.WriteRawTag(90);
      output.WriteMessage(HomekitOnChangedServerResponse);
    }
    if (buttonOnChangedServerResponse_ != null) {
      output.WriteRawTag(98);
      output.WriteMessage(ButtonOnChangedServerResponse);
    }
    if (groupControlOnChangedServerResponse_ != null) {
      output.WriteRawTag(106);
      output.WriteMessage(GroupControlOnChangedServerResponse);
    }
    if (ledDriverOnChangedServerResponse_ != null) {
      output.WriteRawTag(114);
      output.WriteMessage(LedDriverOnChangedServerResponse);
    }
    if (environmentSensorOnChangedServerResponse_ != null) {
      output.WriteRawTag(122);
      output.WriteMessage(EnvironmentSensorOnChangedServerResponse);
    }
    if (smartPlugOnChangedServerResponse_ != null) {
      output.WriteRawTag(130, 1);
      output.WriteMessage(SmartPlugOnChangedServerResponse);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (switcherOnChangedServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SwitcherOnChangedServerResponse);
    }
    if (curtainSwitcherOnChangedServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurtainSwitcherOnChangedServerResponse);
    }
    if (airConditionerOnChangedServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AirConditionerOnChangedServerResponse);
    }
    if (remoteOnChangedServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(RemoteOnChangedServerResponse);
    }
    if (meterOnChangedServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(MeterOnChangedServerResponse);
    }
    if (deviceOnChangedDeviceServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeviceOnChangedDeviceServerResponse);
    }
    if (progressUpdateFirmwareOnChangedDeviceServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProgressUpdateFirmwareOnChangedDeviceServerResponse);
    }
    if (downloadFirmwareOnChangedDeviceServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(DownloadFirmwareOnChangedDeviceServerResponse);
    }
    if (motionOnChangedServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(MotionOnChangedServerResponse);
    }
    if (sceneOnChangedServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SceneOnChangedServerResponse);
    }
    if (homekitOnChangedServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(HomekitOnChangedServerResponse);
    }
    if (buttonOnChangedServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ButtonOnChangedServerResponse);
    }
    if (groupControlOnChangedServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroupControlOnChangedServerResponse);
    }
    if (ledDriverOnChangedServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(LedDriverOnChangedServerResponse);
    }
    if (environmentSensorOnChangedServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(EnvironmentSensorOnChangedServerResponse);
    }
    if (smartPlugOnChangedServerResponse_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(SmartPlugOnChangedServerResponse);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(OnChangedServerMessage other) {
    if (other == null) {
      return;
    }
    if (other.switcherOnChangedServerResponse_ != null) {
      if (switcherOnChangedServerResponse_ == null) {
        SwitcherOnChangedServerResponse = new global::SwitcherOnChangedServerResponse();
      }
      SwitcherOnChangedServerResponse.MergeFrom(other.SwitcherOnChangedServerResponse);
    }
    if (other.curtainSwitcherOnChangedServerResponse_ != null) {
      if (curtainSwitcherOnChangedServerResponse_ == null) {
        CurtainSwitcherOnChangedServerResponse = new global::CurtainSwitcherOnChangedServerResponse();
      }
      CurtainSwitcherOnChangedServerResponse.MergeFrom(other.CurtainSwitcherOnChangedServerResponse);
    }
    if (other.airConditionerOnChangedServerResponse_ != null) {
      if (airConditionerOnChangedServerResponse_ == null) {
        AirConditionerOnChangedServerResponse = new global::AirConditionerOnChangedServerResponse();
      }
      AirConditionerOnChangedServerResponse.MergeFrom(other.AirConditionerOnChangedServerResponse);
    }
    if (other.remoteOnChangedServerResponse_ != null) {
      if (remoteOnChangedServerResponse_ == null) {
        RemoteOnChangedServerResponse = new global::RemoteOnChangedServerResponse();
      }
      RemoteOnChangedServerResponse.MergeFrom(other.RemoteOnChangedServerResponse);
    }
    if (other.meterOnChangedServerResponse_ != null) {
      if (meterOnChangedServerResponse_ == null) {
        MeterOnChangedServerResponse = new global::MeterOnChangedServerResponse();
      }
      MeterOnChangedServerResponse.MergeFrom(other.MeterOnChangedServerResponse);
    }
    if (other.deviceOnChangedDeviceServerResponse_ != null) {
      if (deviceOnChangedDeviceServerResponse_ == null) {
        DeviceOnChangedDeviceServerResponse = new global::DeviceOnChangedDeviceServerResponse();
      }
      DeviceOnChangedDeviceServerResponse.MergeFrom(other.DeviceOnChangedDeviceServerResponse);
    }
    if (other.progressUpdateFirmwareOnChangedDeviceServerResponse_ != null) {
      if (progressUpdateFirmwareOnChangedDeviceServerResponse_ == null) {
        ProgressUpdateFirmwareOnChangedDeviceServerResponse = new global::ProgressUpdateFirmwareOnChangedDeviceServerResponse();
      }
      ProgressUpdateFirmwareOnChangedDeviceServerResponse.MergeFrom(other.ProgressUpdateFirmwareOnChangedDeviceServerResponse);
    }
    if (other.downloadFirmwareOnChangedDeviceServerResponse_ != null) {
      if (downloadFirmwareOnChangedDeviceServerResponse_ == null) {
        DownloadFirmwareOnChangedDeviceServerResponse = new global::DownloadFirmwareOnChangedDeviceServerResponse();
      }
      DownloadFirmwareOnChangedDeviceServerResponse.MergeFrom(other.DownloadFirmwareOnChangedDeviceServerResponse);
    }
    if (other.motionOnChangedServerResponse_ != null) {
      if (motionOnChangedServerResponse_ == null) {
        MotionOnChangedServerResponse = new global::MotionOnChangedServerResponse();
      }
      MotionOnChangedServerResponse.MergeFrom(other.MotionOnChangedServerResponse);
    }
    if (other.sceneOnChangedServerResponse_ != null) {
      if (sceneOnChangedServerResponse_ == null) {
        SceneOnChangedServerResponse = new global::SceneOnChangedServerResponse();
      }
      SceneOnChangedServerResponse.MergeFrom(other.SceneOnChangedServerResponse);
    }
    if (other.homekitOnChangedServerResponse_ != null) {
      if (homekitOnChangedServerResponse_ == null) {
        HomekitOnChangedServerResponse = new global::HomekitOnChangedServerResponse();
      }
      HomekitOnChangedServerResponse.MergeFrom(other.HomekitOnChangedServerResponse);
    }
    if (other.buttonOnChangedServerResponse_ != null) {
      if (buttonOnChangedServerResponse_ == null) {
        ButtonOnChangedServerResponse = new global::ButtonOnChangedServerResponse();
      }
      ButtonOnChangedServerResponse.MergeFrom(other.ButtonOnChangedServerResponse);
    }
    if (other.groupControlOnChangedServerResponse_ != null) {
      if (groupControlOnChangedServerResponse_ == null) {
        GroupControlOnChangedServerResponse = new global::GroupControlOnChangedServerResponse();
      }
      GroupControlOnChangedServerResponse.MergeFrom(other.GroupControlOnChangedServerResponse);
    }
    if (other.ledDriverOnChangedServerResponse_ != null) {
      if (ledDriverOnChangedServerResponse_ == null) {
        LedDriverOnChangedServerResponse = new global::LedDriverOnChangedServerResponse();
      }
      LedDriverOnChangedServerResponse.MergeFrom(other.LedDriverOnChangedServerResponse);
    }
    if (other.environmentSensorOnChangedServerResponse_ != null) {
      if (environmentSensorOnChangedServerResponse_ == null) {
        EnvironmentSensorOnChangedServerResponse = new global::EnvironmentSensorOnChangedServerResponse();
      }
      EnvironmentSensorOnChangedServerResponse.MergeFrom(other.EnvironmentSensorOnChangedServerResponse);
    }
    if (other.smartPlugOnChangedServerResponse_ != null) {
      if (smartPlugOnChangedServerResponse_ == null) {
        SmartPlugOnChangedServerResponse = new global::SmartPlugOnChangedServerResponse();
      }
      SmartPlugOnChangedServerResponse.MergeFrom(other.SmartPlugOnChangedServerResponse);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (switcherOnChangedServerResponse_ == null) {
            SwitcherOnChangedServerResponse = new global::SwitcherOnChangedServerResponse();
          }
          input.ReadMessage(SwitcherOnChangedServerResponse);
          break;
        }
        case 18: {
          if (curtainSwitcherOnChangedServerResponse_ == null) {
            CurtainSwitcherOnChangedServerResponse = new global::CurtainSwitcherOnChangedServerResponse();
          }
          input.ReadMessage(CurtainSwitcherOnChangedServerResponse);
          break;
        }
        case 26: {
          if (airConditionerOnChangedServerResponse_ == null) {
            AirConditionerOnChangedServerResponse = new global::AirConditionerOnChangedServerResponse();
          }
          input.ReadMessage(AirConditionerOnChangedServerResponse);
          break;
        }
        case 34: {
          if (remoteOnChangedServerResponse_ == null) {
            RemoteOnChangedServerResponse = new global::RemoteOnChangedServerResponse();
          }
          input.ReadMessage(RemoteOnChangedServerResponse);
          break;
        }
        case 42: {
          if (meterOnChangedServerResponse_ == null) {
            MeterOnChangedServerResponse = new global::MeterOnChangedServerResponse();
          }
          input.ReadMessage(MeterOnChangedServerResponse);
          break;
        }
        case 50: {
          if (deviceOnChangedDeviceServerResponse_ == null) {
            DeviceOnChangedDeviceServerResponse = new global::DeviceOnChangedDeviceServerResponse();
          }
          input.ReadMessage(DeviceOnChangedDeviceServerResponse);
          break;
        }
        case 58: {
          if (progressUpdateFirmwareOnChangedDeviceServerResponse_ == null) {
            ProgressUpdateFirmwareOnChangedDeviceServerResponse = new global::ProgressUpdateFirmwareOnChangedDeviceServerResponse();
          }
          input.ReadMessage(ProgressUpdateFirmwareOnChangedDeviceServerResponse);
          break;
        }
        case 66: {
          if (downloadFirmwareOnChangedDeviceServerResponse_ == null) {
            DownloadFirmwareOnChangedDeviceServerResponse = new global::DownloadFirmwareOnChangedDeviceServerResponse();
          }
          input.ReadMessage(DownloadFirmwareOnChangedDeviceServerResponse);
          break;
        }
        case 74: {
          if (motionOnChangedServerResponse_ == null) {
            MotionOnChangedServerResponse = new global::MotionOnChangedServerResponse();
          }
          input.ReadMessage(MotionOnChangedServerResponse);
          break;
        }
        case 82: {
          if (sceneOnChangedServerResponse_ == null) {
            SceneOnChangedServerResponse = new global::SceneOnChangedServerResponse();
          }
          input.ReadMessage(SceneOnChangedServerResponse);
          break;
        }
        case 90: {
          if (homekitOnChangedServerResponse_ == null) {
            HomekitOnChangedServerResponse = new global::HomekitOnChangedServerResponse();
          }
          input.ReadMessage(HomekitOnChangedServerResponse);
          break;
        }
        case 98: {
          if (buttonOnChangedServerResponse_ == null) {
            ButtonOnChangedServerResponse = new global::ButtonOnChangedServerResponse();
          }
          input.ReadMessage(ButtonOnChangedServerResponse);
          break;
        }
        case 106: {
          if (groupControlOnChangedServerResponse_ == null) {
            GroupControlOnChangedServerResponse = new global::GroupControlOnChangedServerResponse();
          }
          input.ReadMessage(GroupControlOnChangedServerResponse);
          break;
        }
        case 114: {
          if (ledDriverOnChangedServerResponse_ == null) {
            LedDriverOnChangedServerResponse = new global::LedDriverOnChangedServerResponse();
          }
          input.ReadMessage(LedDriverOnChangedServerResponse);
          break;
        }
        case 122: {
          if (environmentSensorOnChangedServerResponse_ == null) {
            EnvironmentSensorOnChangedServerResponse = new global::EnvironmentSensorOnChangedServerResponse();
          }
          input.ReadMessage(EnvironmentSensorOnChangedServerResponse);
          break;
        }
        case 130: {
          if (smartPlugOnChangedServerResponse_ == null) {
            SmartPlugOnChangedServerResponse = new global::SmartPlugOnChangedServerResponse();
          }
          input.ReadMessage(SmartPlugOnChangedServerResponse);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Messages simulators 
/// </summary>
public sealed partial class SimulatorServerMessage : pb::IMessage<SimulatorServerMessage> {
  private static readonly pb::MessageParser<SimulatorServerMessage> _parser = new pb::MessageParser<SimulatorServerMessage>(() => new SimulatorServerMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SimulatorServerMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[321]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SimulatorServerMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SimulatorServerMessage(SimulatorServerMessage other) : this() {
    echoServerRequest_ = other.echoServerRequest_ != null ? other.echoServerRequest_.Clone() : null;
    echoServerResponse_ = other.echoServerResponse_ != null ? other.echoServerResponse_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SimulatorServerMessage Clone() {
    return new SimulatorServerMessage(this);
  }

  /// <summary>Field number for the "echoServerRequest" field.</summary>
  public const int EchoServerRequestFieldNumber = 1;
  private global::EchoServerRequest echoServerRequest_;
  /// <summary>
  /// Echo message
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::EchoServerRequest EchoServerRequest {
    get { return echoServerRequest_; }
    set {
      echoServerRequest_ = value;
    }
  }

  /// <summary>Field number for the "echoServerResponse" field.</summary>
  public const int EchoServerResponseFieldNumber = 2;
  private global::EchoServerResponse echoServerResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::EchoServerResponse EchoServerResponse {
    get { return echoServerResponse_; }
    set {
      echoServerResponse_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SimulatorServerMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SimulatorServerMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(EchoServerRequest, other.EchoServerRequest)) return false;
    if (!object.Equals(EchoServerResponse, other.EchoServerResponse)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (echoServerRequest_ != null) hash ^= EchoServerRequest.GetHashCode();
    if (echoServerResponse_ != null) hash ^= EchoServerResponse.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (echoServerRequest_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(EchoServerRequest);
    }
    if (echoServerResponse_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(EchoServerResponse);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (echoServerRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(EchoServerRequest);
    }
    if (echoServerResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(EchoServerResponse);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SimulatorServerMessage other) {
    if (other == null) {
      return;
    }
    if (other.echoServerRequest_ != null) {
      if (echoServerRequest_ == null) {
        EchoServerRequest = new global::EchoServerRequest();
      }
      EchoServerRequest.MergeFrom(other.EchoServerRequest);
    }
    if (other.echoServerResponse_ != null) {
      if (echoServerResponse_ == null) {
        EchoServerResponse = new global::EchoServerResponse();
      }
      EchoServerResponse.MergeFrom(other.EchoServerResponse);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (echoServerRequest_ == null) {
            EchoServerRequest = new global::EchoServerRequest();
          }
          input.ReadMessage(EchoServerRequest);
          break;
        }
        case 18: {
          if (echoServerResponse_ == null) {
            EchoServerResponse = new global::EchoServerResponse();
          }
          input.ReadMessage(EchoServerResponse);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Server Message 
/// </summary>
public sealed partial class ServerMessage : pb::IMessage<ServerMessage> {
  private static readonly pb::MessageParser<ServerMessage> _parser = new pb::MessageParser<ServerMessage>(() => new ServerMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ServerMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ServerMessageReflection.Descriptor.MessageTypes[322]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerMessage(ServerMessage other) : this() {
    authServerMessage_ = other.authServerMessage_ != null ? other.authServerMessage_.Clone() : null;
    userServerMessage_ = other.userServerMessage_ != null ? other.userServerMessage_.Clone() : null;
    homeServerMessage_ = other.homeServerMessage_ != null ? other.homeServerMessage_.Clone() : null;
    roomServerMessage_ = other.roomServerMessage_ != null ? other.roomServerMessage_.Clone() : null;
    deviceServerMessage_ = other.deviceServerMessage_ != null ? other.deviceServerMessage_.Clone() : null;
    switcherServerMessage_ = other.switcherServerMessage_ != null ? other.switcherServerMessage_.Clone() : null;
    curtainSwitcherServerMessage_ = other.curtainSwitcherServerMessage_ != null ? other.curtainSwitcherServerMessage_.Clone() : null;
    meterServerMessage_ = other.meterServerMessage_ != null ? other.meterServerMessage_.Clone() : null;
    airConditionerServerMessage_ = other.airConditionerServerMessage_ != null ? other.airConditionerServerMessage_.Clone() : null;
    remoteServerMessage_ = other.remoteServerMessage_ != null ? other.remoteServerMessage_.Clone() : null;
    sceneServerMessage_ = other.sceneServerMessage_ != null ? other.sceneServerMessage_.Clone() : null;
    generalTabServerMessage_ = other.generalTabServerMessage_ != null ? other.generalTabServerMessage_.Clone() : null;
    onChangedServerMessage_ = other.onChangedServerMessage_ != null ? other.onChangedServerMessage_.Clone() : null;
    simulatorServerMessage_ = other.simulatorServerMessage_ != null ? other.simulatorServerMessage_.Clone() : null;
    motionServerMessage_ = other.motionServerMessage_ != null ? other.motionServerMessage_.Clone() : null;
    homekitServerMessage_ = other.homekitServerMessage_ != null ? other.homekitServerMessage_.Clone() : null;
    projectServerMessage_ = other.projectServerMessage_ != null ? other.projectServerMessage_.Clone() : null;
    buildingServerMessage_ = other.buildingServerMessage_ != null ? other.buildingServerMessage_.Clone() : null;
    floorServerMessage_ = other.floorServerMessage_ != null ? other.floorServerMessage_.Clone() : null;
    apartmentServerMessage_ = other.apartmentServerMessage_ != null ? other.apartmentServerMessage_.Clone() : null;
    userHomeServerMessage_ = other.userHomeServerMessage_ != null ? other.userHomeServerMessage_.Clone() : null;
    inboxServerMessage_ = other.inboxServerMessage_ != null ? other.inboxServerMessage_.Clone() : null;
    settingServerMessage_ = other.settingServerMessage_ != null ? other.settingServerMessage_.Clone() : null;
    buttonServerMessage_ = other.buttonServerMessage_ != null ? other.buttonServerMessage_.Clone() : null;
    groupControlServerMessage_ = other.groupControlServerMessage_ != null ? other.groupControlServerMessage_.Clone() : null;
    ledDriverServerMessage_ = other.ledDriverServerMessage_ != null ? other.ledDriverServerMessage_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerMessage Clone() {
    return new ServerMessage(this);
  }

  /// <summary>Field number for the "authServerMessage" field.</summary>
  public const int AuthServerMessageFieldNumber = 1;
  private global::AuthServerMessage authServerMessage_;
  /// <summary>
  /// AuthMessage 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AuthServerMessage AuthServerMessage {
    get { return authServerMessage_; }
    set {
      authServerMessage_ = value;
    }
  }

  /// <summary>Field number for the "userServerMessage" field.</summary>
  public const int UserServerMessageFieldNumber = 2;
  private global::UserServerMessage userServerMessage_;
  /// <summary>
  /// Tài khoản 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UserServerMessage UserServerMessage {
    get { return userServerMessage_; }
    set {
      userServerMessage_ = value;
    }
  }

  /// <summary>Field number for the "homeServerMessage" field.</summary>
  public const int HomeServerMessageFieldNumber = 3;
  private global::HomeServerMessage homeServerMessage_;
  /// <summary>
  /// Nhà 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::HomeServerMessage HomeServerMessage {
    get { return homeServerMessage_; }
    set {
      homeServerMessage_ = value;
    }
  }

  /// <summary>Field number for the "roomServerMessage" field.</summary>
  public const int RoomServerMessageFieldNumber = 4;
  private global::RoomServerMessage roomServerMessage_;
  /// <summary>
  /// Phòng 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RoomServerMessage RoomServerMessage {
    get { return roomServerMessage_; }
    set {
      roomServerMessage_ = value;
    }
  }

  /// <summary>Field number for the "deviceServerMessage" field.</summary>
  public const int DeviceServerMessageFieldNumber = 5;
  private global::DeviceServerMessage deviceServerMessage_;
  /// <summary>
  /// Thiết bị kết nối wifi Devices 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DeviceServerMessage DeviceServerMessage {
    get { return deviceServerMessage_; }
    set {
      deviceServerMessage_ = value;
    }
  }

  /// <summary>Field number for the "switcherServerMessage" field.</summary>
  public const int SwitcherServerMessageFieldNumber = 6;
  private global::SwitcherServerMessage switcherServerMessage_;
  /// <summary>
  /// Công tắc 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SwitcherServerMessage SwitcherServerMessage {
    get { return switcherServerMessage_; }
    set {
      switcherServerMessage_ = value;
    }
  }

  /// <summary>Field number for the "curtainSwitcherServerMessage" field.</summary>
  public const int CurtainSwitcherServerMessageFieldNumber = 7;
  private global::CurtainSwitcherServerMessage curtainSwitcherServerMessage_;
  /// <summary>
  /// Rèm cửa 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::CurtainSwitcherServerMessage CurtainSwitcherServerMessage {
    get { return curtainSwitcherServerMessage_; }
    set {
      curtainSwitcherServerMessage_ = value;
    }
  }

  /// <summary>Field number for the "meterServerMessage" field.</summary>
  public const int MeterServerMessageFieldNumber = 8;
  private global::MeterServerMessage meterServerMessage_;
  /// <summary>
  /// Điện nước 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MeterServerMessage MeterServerMessage {
    get { return meterServerMessage_; }
    set {
      meterServerMessage_ = value;
    }
  }

  /// <summary>Field number for the "airConditionerServerMessage" field.</summary>
  public const int AirConditionerServerMessageFieldNumber = 9;
  private global::AirConditionerServerMessage airConditionerServerMessage_;
  /// <summary>
  /// Điều hòa 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AirConditionerServerMessage AirConditionerServerMessage {
    get { return airConditionerServerMessage_; }
    set {
      airConditionerServerMessage_ = value;
    }
  }

  /// <summary>Field number for the "remoteServerMessage" field.</summary>
  public const int RemoteServerMessageFieldNumber = 10;
  private global::RemoteServerMessage remoteServerMessage_;
  /// <summary>
  /// Remote chung cho tất cả thiết bị Remote 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RemoteServerMessage RemoteServerMessage {
    get { return remoteServerMessage_; }
    set {
      remoteServerMessage_ = value;
    }
  }

  /// <summary>Field number for the "sceneServerMessage" field.</summary>
  public const int SceneServerMessageFieldNumber = 11;
  private global::SceneServerMessage sceneServerMessage_;
  /// <summary>
  /// Kịch bản 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SceneServerMessage SceneServerMessage {
    get { return sceneServerMessage_; }
    set {
      sceneServerMessage_ = value;
    }
  }

  /// <summary>Field number for the "generalTabServerMessage" field.</summary>
  public const int GeneralTabServerMessageFieldNumber = 12;
  private global::GeneralTabServerMessage generalTabServerMessage_;
  /// <summary>
  /// Các màn hình tổng hợp 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GeneralTabServerMessage GeneralTabServerMessage {
    get { return generalTabServerMessage_; }
    set {
      generalTabServerMessage_ = value;
    }
  }

  /// <summary>Field number for the "onChangedServerMessage" field.</summary>
  public const int OnChangedServerMessageFieldNumber = 13;
  private global::OnChangedServerMessage onChangedServerMessage_;
  /// <summary>
  /// Events runtime 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::OnChangedServerMessage OnChangedServerMessage {
    get { return onChangedServerMessage_; }
    set {
      onChangedServerMessage_ = value;
    }
  }

  /// <summary>Field number for the "simulatorServerMessage" field.</summary>
  public const int SimulatorServerMessageFieldNumber = 14;
  private global::SimulatorServerMessage simulatorServerMessage_;
  /// <summary>
  /// Simulator 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SimulatorServerMessage SimulatorServerMessage {
    get { return simulatorServerMessage_; }
    set {
      simulatorServerMessage_ = value;
    }
  }

  /// <summary>Field number for the "motionServerMessage" field.</summary>
  public const int MotionServerMessageFieldNumber = 15;
  private global::MotionServerMessage motionServerMessage_;
  /// <summary>
  /// Thiết bị chuyển động 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MotionServerMessage MotionServerMessage {
    get { return motionServerMessage_; }
    set {
      motionServerMessage_ = value;
    }
  }

  /// <summary>Field number for the "homekitServerMessage" field.</summary>
  public const int HomekitServerMessageFieldNumber = 16;
  private global::HomekitServerMessage homekitServerMessage_;
  /// <summary>
  /// Thiết bị Homekit 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::HomekitServerMessage HomekitServerMessage {
    get { return homekitServerMessage_; }
    set {
      homekitServerMessage_ = value;
    }
  }

  /// <summary>Field number for the "projectServerMessage" field.</summary>
  public const int ProjectServerMessageFieldNumber = 17;
  private global::ProjectServerMessage projectServerMessage_;
  /// <summary>
  /// Dự án 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ProjectServerMessage ProjectServerMessage {
    get { return projectServerMessage_; }
    set {
      projectServerMessage_ = value;
    }
  }

  /// <summary>Field number for the "buildingServerMessage" field.</summary>
  public const int BuildingServerMessageFieldNumber = 18;
  private global::BuildingServerMessage buildingServerMessage_;
  /// <summary>
  /// Tòa 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::BuildingServerMessage BuildingServerMessage {
    get { return buildingServerMessage_; }
    set {
      buildingServerMessage_ = value;
    }
  }

  /// <summary>Field number for the "floorServerMessage" field.</summary>
  public const int FloorServerMessageFieldNumber = 19;
  private global::FloorServerMessage floorServerMessage_;
  /// <summary>
  /// Tầng 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::FloorServerMessage FloorServerMessage {
    get { return floorServerMessage_; }
    set {
      floorServerMessage_ = value;
    }
  }

  /// <summary>Field number for the "apartmentServerMessage" field.</summary>
  public const int ApartmentServerMessageFieldNumber = 20;
  private global::ApartmentServerMessage apartmentServerMessage_;
  /// <summary>
  /// Căn hộ 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ApartmentServerMessage ApartmentServerMessage {
    get { return apartmentServerMessage_; }
    set {
      apartmentServerMessage_ = value;
    }
  }

  /// <summary>Field number for the "userHomeServerMessage" field.</summary>
  public const int UserHomeServerMessageFieldNumber = 21;
  private global::UserHomeServerMessage userHomeServerMessage_;
  /// <summary>
  /// Thành viên 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UserHomeServerMessage UserHomeServerMessage {
    get { return userHomeServerMessage_; }
    set {
      userHomeServerMessage_ = value;
    }
  }

  /// <summary>Field number for the "inboxServerMessage" field.</summary>
  public const int InboxServerMessageFieldNumber = 22;
  private global::InboxServerMessage inboxServerMessage_;
  /// <summary>
  /// Thông báo 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InboxServerMessage InboxServerMessage {
    get { return inboxServerMessage_; }
    set {
      inboxServerMessage_ = value;
    }
  }

  /// <summary>Field number for the "settingServerMessage" field.</summary>
  public const int SettingServerMessageFieldNumber = 23;
  private global::SettingServerMessage settingServerMessage_;
  /// <summary>
  /// Cài đặt chung cho hệ thống 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SettingServerMessage SettingServerMessage {
    get { return settingServerMessage_; }
    set {
      settingServerMessage_ = value;
    }
  }

  /// <summary>Field number for the "buttonServerMessage" field.</summary>
  public const int ButtonServerMessageFieldNumber = 24;
  private global::ButtonServerMessage buttonServerMessage_;
  /// <summary>
  /// Thiết bị nút nhấn 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ButtonServerMessage ButtonServerMessage {
    get { return buttonServerMessage_; }
    set {
      buttonServerMessage_ = value;
    }
  }

  /// <summary>Field number for the "groupControlServerMessage" field.</summary>
  public const int GroupControlServerMessageFieldNumber = 25;
  private global::GroupControlServerMessage groupControlServerMessage_;
  /// <summary>
  /// Thiết bị nhóm 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GroupControlServerMessage GroupControlServerMessage {
    get { return groupControlServerMessage_; }
    set {
      groupControlServerMessage_ = value;
    }
  }

  /// <summary>Field number for the "ledDriverServerMessage" field.</summary>
  public const int LedDriverServerMessageFieldNumber = 26;
  private global::LedDriverServerMessage ledDriverServerMessage_;
  /// <summary>
  /// Thiết bị led driver 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::LedDriverServerMessage LedDriverServerMessage {
    get { return ledDriverServerMessage_; }
    set {
      ledDriverServerMessage_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ServerMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ServerMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(AuthServerMessage, other.AuthServerMessage)) return false;
    if (!object.Equals(UserServerMessage, other.UserServerMessage)) return false;
    if (!object.Equals(HomeServerMessage, other.HomeServerMessage)) return false;
    if (!object.Equals(RoomServerMessage, other.RoomServerMessage)) return false;
    if (!object.Equals(DeviceServerMessage, other.DeviceServerMessage)) return false;
    if (!object.Equals(SwitcherServerMessage, other.SwitcherServerMessage)) return false;
    if (!object.Equals(CurtainSwitcherServerMessage, other.CurtainSwitcherServerMessage)) return false;
    if (!object.Equals(MeterServerMessage, other.MeterServerMessage)) return false;
    if (!object.Equals(AirConditionerServerMessage, other.AirConditionerServerMessage)) return false;
    if (!object.Equals(RemoteServerMessage, other.RemoteServerMessage)) return false;
    if (!object.Equals(SceneServerMessage, other.SceneServerMessage)) return false;
    if (!object.Equals(GeneralTabServerMessage, other.GeneralTabServerMessage)) return false;
    if (!object.Equals(OnChangedServerMessage, other.OnChangedServerMessage)) return false;
    if (!object.Equals(SimulatorServerMessage, other.SimulatorServerMessage)) return false;
    if (!object.Equals(MotionServerMessage, other.MotionServerMessage)) return false;
    if (!object.Equals(HomekitServerMessage, other.HomekitServerMessage)) return false;
    if (!object.Equals(ProjectServerMessage, other.ProjectServerMessage)) return false;
    if (!object.Equals(BuildingServerMessage, other.BuildingServerMessage)) return false;
    if (!object.Equals(FloorServerMessage, other.FloorServerMessage)) return false;
    if (!object.Equals(ApartmentServerMessage, other.ApartmentServerMessage)) return false;
    if (!object.Equals(UserHomeServerMessage, other.UserHomeServerMessage)) return false;
    if (!object.Equals(InboxServerMessage, other.InboxServerMessage)) return false;
    if (!object.Equals(SettingServerMessage, other.SettingServerMessage)) return false;
    if (!object.Equals(ButtonServerMessage, other.ButtonServerMessage)) return false;
    if (!object.Equals(GroupControlServerMessage, other.GroupControlServerMessage)) return false;
    if (!object.Equals(LedDriverServerMessage, other.LedDriverServerMessage)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (authServerMessage_ != null) hash ^= AuthServerMessage.GetHashCode();
    if (userServerMessage_ != null) hash ^= UserServerMessage.GetHashCode();
    if (homeServerMessage_ != null) hash ^= HomeServerMessage.GetHashCode();
    if (roomServerMessage_ != null) hash ^= RoomServerMessage.GetHashCode();
    if (deviceServerMessage_ != null) hash ^= DeviceServerMessage.GetHashCode();
    if (switcherServerMessage_ != null) hash ^= SwitcherServerMessage.GetHashCode();
    if (curtainSwitcherServerMessage_ != null) hash ^= CurtainSwitcherServerMessage.GetHashCode();
    if (meterServerMessage_ != null) hash ^= MeterServerMessage.GetHashCode();
    if (airConditionerServerMessage_ != null) hash ^= AirConditionerServerMessage.GetHashCode();
    if (remoteServerMessage_ != null) hash ^= RemoteServerMessage.GetHashCode();
    if (sceneServerMessage_ != null) hash ^= SceneServerMessage.GetHashCode();
    if (generalTabServerMessage_ != null) hash ^= GeneralTabServerMessage.GetHashCode();
    if (onChangedServerMessage_ != null) hash ^= OnChangedServerMessage.GetHashCode();
    if (simulatorServerMessage_ != null) hash ^= SimulatorServerMessage.GetHashCode();
    if (motionServerMessage_ != null) hash ^= MotionServerMessage.GetHashCode();
    if (homekitServerMessage_ != null) hash ^= HomekitServerMessage.GetHashCode();
    if (projectServerMessage_ != null) hash ^= ProjectServerMessage.GetHashCode();
    if (buildingServerMessage_ != null) hash ^= BuildingServerMessage.GetHashCode();
    if (floorServerMessage_ != null) hash ^= FloorServerMessage.GetHashCode();
    if (apartmentServerMessage_ != null) hash ^= ApartmentServerMessage.GetHashCode();
    if (userHomeServerMessage_ != null) hash ^= UserHomeServerMessage.GetHashCode();
    if (inboxServerMessage_ != null) hash ^= InboxServerMessage.GetHashCode();
    if (settingServerMessage_ != null) hash ^= SettingServerMessage.GetHashCode();
    if (buttonServerMessage_ != null) hash ^= ButtonServerMessage.GetHashCode();
    if (groupControlServerMessage_ != null) hash ^= GroupControlServerMessage.GetHashCode();
    if (ledDriverServerMessage_ != null) hash ^= LedDriverServerMessage.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (authServerMessage_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(AuthServerMessage);
    }
    if (userServerMessage_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(UserServerMessage);
    }
    if (homeServerMessage_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(HomeServerMessage);
    }
    if (roomServerMessage_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(RoomServerMessage);
    }
    if (deviceServerMessage_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(DeviceServerMessage);
    }
    if (switcherServerMessage_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(SwitcherServerMessage);
    }
    if (curtainSwitcherServerMessage_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(CurtainSwitcherServerMessage);
    }
    if (meterServerMessage_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(MeterServerMessage);
    }
    if (airConditionerServerMessage_ != null) {
      output.WriteRawTag(74);
      output.WriteMessage(AirConditionerServerMessage);
    }
    if (remoteServerMessage_ != null) {
      output.WriteRawTag(82);
      output.WriteMessage(RemoteServerMessage);
    }
    if (sceneServerMessage_ != null) {
      output.WriteRawTag(90);
      output.WriteMessage(SceneServerMessage);
    }
    if (generalTabServerMessage_ != null) {
      output.WriteRawTag(98);
      output.WriteMessage(GeneralTabServerMessage);
    }
    if (onChangedServerMessage_ != null) {
      output.WriteRawTag(106);
      output.WriteMessage(OnChangedServerMessage);
    }
    if (simulatorServerMessage_ != null) {
      output.WriteRawTag(114);
      output.WriteMessage(SimulatorServerMessage);
    }
    if (motionServerMessage_ != null) {
      output.WriteRawTag(122);
      output.WriteMessage(MotionServerMessage);
    }
    if (homekitServerMessage_ != null) {
      output.WriteRawTag(130, 1);
      output.WriteMessage(HomekitServerMessage);
    }
    if (projectServerMessage_ != null) {
      output.WriteRawTag(138, 1);
      output.WriteMessage(ProjectServerMessage);
    }
    if (buildingServerMessage_ != null) {
      output.WriteRawTag(146, 1);
      output.WriteMessage(BuildingServerMessage);
    }
    if (floorServerMessage_ != null) {
      output.WriteRawTag(154, 1);
      output.WriteMessage(FloorServerMessage);
    }
    if (apartmentServerMessage_ != null) {
      output.WriteRawTag(162, 1);
      output.WriteMessage(ApartmentServerMessage);
    }
    if (userHomeServerMessage_ != null) {
      output.WriteRawTag(170, 1);
      output.WriteMessage(UserHomeServerMessage);
    }
    if (inboxServerMessage_ != null) {
      output.WriteRawTag(178, 1);
      output.WriteMessage(InboxServerMessage);
    }
    if (settingServerMessage_ != null) {
      output.WriteRawTag(186, 1);
      output.WriteMessage(SettingServerMessage);
    }
    if (buttonServerMessage_ != null) {
      output.WriteRawTag(194, 1);
      output.WriteMessage(ButtonServerMessage);
    }
    if (groupControlServerMessage_ != null) {
      output.WriteRawTag(202, 1);
      output.WriteMessage(GroupControlServerMessage);
    }
    if (ledDriverServerMessage_ != null) {
      output.WriteRawTag(210, 1);
      output.WriteMessage(LedDriverServerMessage);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (authServerMessage_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AuthServerMessage);
    }
    if (userServerMessage_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserServerMessage);
    }
    if (homeServerMessage_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(HomeServerMessage);
    }
    if (roomServerMessage_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoomServerMessage);
    }
    if (deviceServerMessage_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeviceServerMessage);
    }
    if (switcherServerMessage_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SwitcherServerMessage);
    }
    if (curtainSwitcherServerMessage_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurtainSwitcherServerMessage);
    }
    if (meterServerMessage_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(MeterServerMessage);
    }
    if (airConditionerServerMessage_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AirConditionerServerMessage);
    }
    if (remoteServerMessage_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(RemoteServerMessage);
    }
    if (sceneServerMessage_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SceneServerMessage);
    }
    if (generalTabServerMessage_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GeneralTabServerMessage);
    }
    if (onChangedServerMessage_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(OnChangedServerMessage);
    }
    if (simulatorServerMessage_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SimulatorServerMessage);
    }
    if (motionServerMessage_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(MotionServerMessage);
    }
    if (homekitServerMessage_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(HomekitServerMessage);
    }
    if (projectServerMessage_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(ProjectServerMessage);
    }
    if (buildingServerMessage_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(BuildingServerMessage);
    }
    if (floorServerMessage_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(FloorServerMessage);
    }
    if (apartmentServerMessage_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(ApartmentServerMessage);
    }
    if (userHomeServerMessage_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(UserHomeServerMessage);
    }
    if (inboxServerMessage_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(InboxServerMessage);
    }
    if (settingServerMessage_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(SettingServerMessage);
    }
    if (buttonServerMessage_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(ButtonServerMessage);
    }
    if (groupControlServerMessage_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(GroupControlServerMessage);
    }
    if (ledDriverServerMessage_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(LedDriverServerMessage);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ServerMessage other) {
    if (other == null) {
      return;
    }
    if (other.authServerMessage_ != null) {
      if (authServerMessage_ == null) {
        AuthServerMessage = new global::AuthServerMessage();
      }
      AuthServerMessage.MergeFrom(other.AuthServerMessage);
    }
    if (other.userServerMessage_ != null) {
      if (userServerMessage_ == null) {
        UserServerMessage = new global::UserServerMessage();
      }
      UserServerMessage.MergeFrom(other.UserServerMessage);
    }
    if (other.homeServerMessage_ != null) {
      if (homeServerMessage_ == null) {
        HomeServerMessage = new global::HomeServerMessage();
      }
      HomeServerMessage.MergeFrom(other.HomeServerMessage);
    }
    if (other.roomServerMessage_ != null) {
      if (roomServerMessage_ == null) {
        RoomServerMessage = new global::RoomServerMessage();
      }
      RoomServerMessage.MergeFrom(other.RoomServerMessage);
    }
    if (other.deviceServerMessage_ != null) {
      if (deviceServerMessage_ == null) {
        DeviceServerMessage = new global::DeviceServerMessage();
      }
      DeviceServerMessage.MergeFrom(other.DeviceServerMessage);
    }
    if (other.switcherServerMessage_ != null) {
      if (switcherServerMessage_ == null) {
        SwitcherServerMessage = new global::SwitcherServerMessage();
      }
      SwitcherServerMessage.MergeFrom(other.SwitcherServerMessage);
    }
    if (other.curtainSwitcherServerMessage_ != null) {
      if (curtainSwitcherServerMessage_ == null) {
        CurtainSwitcherServerMessage = new global::CurtainSwitcherServerMessage();
      }
      CurtainSwitcherServerMessage.MergeFrom(other.CurtainSwitcherServerMessage);
    }
    if (other.meterServerMessage_ != null) {
      if (meterServerMessage_ == null) {
        MeterServerMessage = new global::MeterServerMessage();
      }
      MeterServerMessage.MergeFrom(other.MeterServerMessage);
    }
    if (other.airConditionerServerMessage_ != null) {
      if (airConditionerServerMessage_ == null) {
        AirConditionerServerMessage = new global::AirConditionerServerMessage();
      }
      AirConditionerServerMessage.MergeFrom(other.AirConditionerServerMessage);
    }
    if (other.remoteServerMessage_ != null) {
      if (remoteServerMessage_ == null) {
        RemoteServerMessage = new global::RemoteServerMessage();
      }
      RemoteServerMessage.MergeFrom(other.RemoteServerMessage);
    }
    if (other.sceneServerMessage_ != null) {
      if (sceneServerMessage_ == null) {
        SceneServerMessage = new global::SceneServerMessage();
      }
      SceneServerMessage.MergeFrom(other.SceneServerMessage);
    }
    if (other.generalTabServerMessage_ != null) {
      if (generalTabServerMessage_ == null) {
        GeneralTabServerMessage = new global::GeneralTabServerMessage();
      }
      GeneralTabServerMessage.MergeFrom(other.GeneralTabServerMessage);
    }
    if (other.onChangedServerMessage_ != null) {
      if (onChangedServerMessage_ == null) {
        OnChangedServerMessage = new global::OnChangedServerMessage();
      }
      OnChangedServerMessage.MergeFrom(other.OnChangedServerMessage);
    }
    if (other.simulatorServerMessage_ != null) {
      if (simulatorServerMessage_ == null) {
        SimulatorServerMessage = new global::SimulatorServerMessage();
      }
      SimulatorServerMessage.MergeFrom(other.SimulatorServerMessage);
    }
    if (other.motionServerMessage_ != null) {
      if (motionServerMessage_ == null) {
        MotionServerMessage = new global::MotionServerMessage();
      }
      MotionServerMessage.MergeFrom(other.MotionServerMessage);
    }
    if (other.homekitServerMessage_ != null) {
      if (homekitServerMessage_ == null) {
        HomekitServerMessage = new global::HomekitServerMessage();
      }
      HomekitServerMessage.MergeFrom(other.HomekitServerMessage);
    }
    if (other.projectServerMessage_ != null) {
      if (projectServerMessage_ == null) {
        ProjectServerMessage = new global::ProjectServerMessage();
      }
      ProjectServerMessage.MergeFrom(other.ProjectServerMessage);
    }
    if (other.buildingServerMessage_ != null) {
      if (buildingServerMessage_ == null) {
        BuildingServerMessage = new global::BuildingServerMessage();
      }
      BuildingServerMessage.MergeFrom(other.BuildingServerMessage);
    }
    if (other.floorServerMessage_ != null) {
      if (floorServerMessage_ == null) {
        FloorServerMessage = new global::FloorServerMessage();
      }
      FloorServerMessage.MergeFrom(other.FloorServerMessage);
    }
    if (other.apartmentServerMessage_ != null) {
      if (apartmentServerMessage_ == null) {
        ApartmentServerMessage = new global::ApartmentServerMessage();
      }
      ApartmentServerMessage.MergeFrom(other.ApartmentServerMessage);
    }
    if (other.userHomeServerMessage_ != null) {
      if (userHomeServerMessage_ == null) {
        UserHomeServerMessage = new global::UserHomeServerMessage();
      }
      UserHomeServerMessage.MergeFrom(other.UserHomeServerMessage);
    }
    if (other.inboxServerMessage_ != null) {
      if (inboxServerMessage_ == null) {
        InboxServerMessage = new global::InboxServerMessage();
      }
      InboxServerMessage.MergeFrom(other.InboxServerMessage);
    }
    if (other.settingServerMessage_ != null) {
      if (settingServerMessage_ == null) {
        SettingServerMessage = new global::SettingServerMessage();
      }
      SettingServerMessage.MergeFrom(other.SettingServerMessage);
    }
    if (other.buttonServerMessage_ != null) {
      if (buttonServerMessage_ == null) {
        ButtonServerMessage = new global::ButtonServerMessage();
      }
      ButtonServerMessage.MergeFrom(other.ButtonServerMessage);
    }
    if (other.groupControlServerMessage_ != null) {
      if (groupControlServerMessage_ == null) {
        GroupControlServerMessage = new global::GroupControlServerMessage();
      }
      GroupControlServerMessage.MergeFrom(other.GroupControlServerMessage);
    }
    if (other.ledDriverServerMessage_ != null) {
      if (ledDriverServerMessage_ == null) {
        LedDriverServerMessage = new global::LedDriverServerMessage();
      }
      LedDriverServerMessage.MergeFrom(other.LedDriverServerMessage);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (authServerMessage_ == null) {
            AuthServerMessage = new global::AuthServerMessage();
          }
          input.ReadMessage(AuthServerMessage);
          break;
        }
        case 18: {
          if (userServerMessage_ == null) {
            UserServerMessage = new global::UserServerMessage();
          }
          input.ReadMessage(UserServerMessage);
          break;
        }
        case 26: {
          if (homeServerMessage_ == null) {
            HomeServerMessage = new global::HomeServerMessage();
          }
          input.ReadMessage(HomeServerMessage);
          break;
        }
        case 34: {
          if (roomServerMessage_ == null) {
            RoomServerMessage = new global::RoomServerMessage();
          }
          input.ReadMessage(RoomServerMessage);
          break;
        }
        case 42: {
          if (deviceServerMessage_ == null) {
            DeviceServerMessage = new global::DeviceServerMessage();
          }
          input.ReadMessage(DeviceServerMessage);
          break;
        }
        case 50: {
          if (switcherServerMessage_ == null) {
            SwitcherServerMessage = new global::SwitcherServerMessage();
          }
          input.ReadMessage(SwitcherServerMessage);
          break;
        }
        case 58: {
          if (curtainSwitcherServerMessage_ == null) {
            CurtainSwitcherServerMessage = new global::CurtainSwitcherServerMessage();
          }
          input.ReadMessage(CurtainSwitcherServerMessage);
          break;
        }
        case 66: {
          if (meterServerMessage_ == null) {
            MeterServerMessage = new global::MeterServerMessage();
          }
          input.ReadMessage(MeterServerMessage);
          break;
        }
        case 74: {
          if (airConditionerServerMessage_ == null) {
            AirConditionerServerMessage = new global::AirConditionerServerMessage();
          }
          input.ReadMessage(AirConditionerServerMessage);
          break;
        }
        case 82: {
          if (remoteServerMessage_ == null) {
            RemoteServerMessage = new global::RemoteServerMessage();
          }
          input.ReadMessage(RemoteServerMessage);
          break;
        }
        case 90: {
          if (sceneServerMessage_ == null) {
            SceneServerMessage = new global::SceneServerMessage();
          }
          input.ReadMessage(SceneServerMessage);
          break;
        }
        case 98: {
          if (generalTabServerMessage_ == null) {
            GeneralTabServerMessage = new global::GeneralTabServerMessage();
          }
          input.ReadMessage(GeneralTabServerMessage);
          break;
        }
        case 106: {
          if (onChangedServerMessage_ == null) {
            OnChangedServerMessage = new global::OnChangedServerMessage();
          }
          input.ReadMessage(OnChangedServerMessage);
          break;
        }
        case 114: {
          if (simulatorServerMessage_ == null) {
            SimulatorServerMessage = new global::SimulatorServerMessage();
          }
          input.ReadMessage(SimulatorServerMessage);
          break;
        }
        case 122: {
          if (motionServerMessage_ == null) {
            MotionServerMessage = new global::MotionServerMessage();
          }
          input.ReadMessage(MotionServerMessage);
          break;
        }
        case 130: {
          if (homekitServerMessage_ == null) {
            HomekitServerMessage = new global::HomekitServerMessage();
          }
          input.ReadMessage(HomekitServerMessage);
          break;
        }
        case 138: {
          if (projectServerMessage_ == null) {
            ProjectServerMessage = new global::ProjectServerMessage();
          }
          input.ReadMessage(ProjectServerMessage);
          break;
        }
        case 146: {
          if (buildingServerMessage_ == null) {
            BuildingServerMessage = new global::BuildingServerMessage();
          }
          input.ReadMessage(BuildingServerMessage);
          break;
        }
        case 154: {
          if (floorServerMessage_ == null) {
            FloorServerMessage = new global::FloorServerMessage();
          }
          input.ReadMessage(FloorServerMessage);
          break;
        }
        case 162: {
          if (apartmentServerMessage_ == null) {
            ApartmentServerMessage = new global::ApartmentServerMessage();
          }
          input.ReadMessage(ApartmentServerMessage);
          break;
        }
        case 170: {
          if (userHomeServerMessage_ == null) {
            UserHomeServerMessage = new global::UserHomeServerMessage();
          }
          input.ReadMessage(UserHomeServerMessage);
          break;
        }
        case 178: {
          if (inboxServerMessage_ == null) {
            InboxServerMessage = new global::InboxServerMessage();
          }
          input.ReadMessage(InboxServerMessage);
          break;
        }
        case 186: {
          if (settingServerMessage_ == null) {
            SettingServerMessage = new global::SettingServerMessage();
          }
          input.ReadMessage(SettingServerMessage);
          break;
        }
        case 194: {
          if (buttonServerMessage_ == null) {
            ButtonServerMessage = new global::ButtonServerMessage();
          }
          input.ReadMessage(ButtonServerMessage);
          break;
        }
        case 202: {
          if (groupControlServerMessage_ == null) {
            GroupControlServerMessage = new global::GroupControlServerMessage();
          }
          input.ReadMessage(GroupControlServerMessage);
          break;
        }
        case 210: {
          if (ledDriverServerMessage_ == null) {
            LedDriverServerMessage = new global::LedDriverServerMessage();
          }
          input.ReadMessage(LedDriverServerMessage);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
